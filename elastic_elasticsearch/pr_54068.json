{"pr_number": 54068, "pr_title": "[Transform] Transform optmize date histogram", "pr_author": "hendrikmuhs", "pr_createdAt": "2020-03-24T10:49:53Z", "pr_url": "https://github.com/elastic/elasticsearch/pull/54068", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA2Nzc2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397067765", "body": "```suggestion\r\n```", "bodyText": "Suggested change", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-03-24T11:02:44Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzE5Ng==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397087196", "body": "Do we know if this rounding will always round down? I think we will want it to always round down. If it does not, then it might be prudent to do `synchronizationTimestamp - interval.getMilliseconds()` in the rounding.", "bodyText": "Do we know if this rounding will always round down? I think we will want it to always round down. If it does not, then it might be prudent to do synchronizationTimestamp - interval.getMilliseconds() in the rounding.", "bodyHTML": "<p dir=\"auto\">Do we know if this rounding will always round down? I think we will want it to always round down. If it does not, then it might be prudent to do <code>synchronizationTimestamp - interval.getMilliseconds()</code> in the rounding.</p>", "author": "benwtrent", "createdAt": "2020-03-24T11:38:12Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +345,13 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets, long synchronizationTimestamp) {\n+        if (synchronizationTimestamp > 0) {\n+\n+            return new RangeQueryBuilder(field).gte(rounding.round(synchronizationTimestamp)).format(\"epoch_millis\");", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQzNjAwMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397436001", "bodyText": "sorry, forgot to answer: yes it does, this method is used for all histogram aggregations. For getting the next bucket there is nextRoundingValue.", "author": "hendrikmuhs", "createdAt": "2020-03-24T20:21:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4NzE5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4OTA5MQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397089091", "body": "```suggestion\r\n        final Rounding.Builder roundingBuilder = timeUnit != null ? new Rounding.Builder(timeUnit) : new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final Rounding.Builder roundingBuilder;\n          \n          \n            \n                    if (timeUnit != null) {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(timeUnit);\n          \n          \n            \n            \n          \n          \n            \n                    } else {\n          \n          \n            \n                        roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    final Rounding.Builder roundingBuilder = timeUnit != null ? new Rounding.Builder(timeUnit) : new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"225\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Rounding</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Builder</span> roundingBuilder;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"226\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (timeUnit <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"227\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            roundingBuilder <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Rounding</span>.<span class=\"pl-smi\">Builder</span>(timeUnit);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"228\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"229\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"230\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            roundingBuilder <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Rounding</span>.<span class=\"pl-smi\">Builder</span>(<span class=\"pl-smi\">TimeValue</span><span class=\"pl-k\">.</span>parseTimeValue(interval<span class=\"pl-k\">.</span>toString(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>createRounding<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"231\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"225\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Rounding</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">Builder</span> roundingBuilder <span class=\"pl-k\">=</span> timeUnit <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">?</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Rounding</span>.<span class=\"pl-smi\">Builder</span>(timeUnit) <span class=\"pl-k\">:</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Rounding</span>.<span class=\"pl-smi\">Builder</span>(<span class=\"pl-smi\">TimeValue</span><span class=\"pl-k\">.</span>parseTimeValue(interval<span class=\"pl-k\">.</span>toString(), <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>createRounding<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-03-24T11:41:52Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -195,11 +208,27 @@ private void writeInterval(Interval interval, StreamOutput out) throws IOExcepti\n     private static final ConstructingObjectParser<DateHistogramGroupSource, Void> LENIENT_PARSER = createParser(true);\n \n     private final Interval interval;\n-    private ZoneId timeZone;\n+    private final ZoneId timeZone;\n+    private Rounding rounding;\n \n-    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval) {\n+    public DateHistogramGroupSource(String field, ScriptConfig scriptConfig, Interval interval, ZoneId timeZone) {\n         super(field, scriptConfig);\n         this.interval = interval;\n+        this.timeZone = timeZone;\n+\n+        Rounding.DateTimeUnit timeUnit = DateHistogramAggregationBuilder.DATE_FIELD_UNITS.get(interval.toString());\n+        final Rounding.Builder roundingBuilder;\n+        if (timeUnit != null) {\n+            roundingBuilder = new Rounding.Builder(timeUnit);\n+\n+        } else {\n+            roundingBuilder = new Rounding.Builder(TimeValue.parseTimeValue(interval.toString(), \"createRounding\"));\n+        }", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwNTUzMQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397105531", "body": "It seems we are needlessly adding an if branch. I think we should probably just supply both the `synchronizationField` and the `lastSynchronizationCheckpoint` to `getIncrementalBucketUpdateFilterQuery`. \r\n\r\n(similar comment for the more than one group source entry)", "bodyText": "It seems we are needlessly adding an if branch. I think we should probably just supply both the synchronizationField and the lastSynchronizationCheckpoint to getIncrementalBucketUpdateFilterQuery.\n(similar comment for the more than one group source entry)", "bodyHTML": "<p dir=\"auto\">It seems we are needlessly adding an if branch. I think we should probably just supply both the <code>synchronizationField</code> and the <code>lastSynchronizationCheckpoint</code> to <code>getIncrementalBucketUpdateFilterQuery</code>.</p>\n<p dir=\"auto\">(similar comment for the more than one group source entry)</p>", "author": "benwtrent", "createdAt": "2020-03-24T12:12:18Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +189,37 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n \n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n-            if (changedBuckets.containsKey(entry.getKey())) {\n-                return entry.getValue().getIncrementalBucketUpdateFilterQuery(changedBuckets.get(entry.getKey()));\n-            } else {\n-                // should never happen\n-                throw new RuntimeException(\"Could not find bucket value for key \" + entry.getKey());\n-            }\n+            Set<String> changedBucketsByGroup = changedBuckets.get(entry.getKey());\n+\n+            // important: the fields must match to apply this optimization\n+            long synchronizationTimestamp = entry.getKey().equals(synchronizationField) ? lastSynchronizationCheckpoint : 0;", "originalCommit": "95c551e2ca460a2de0123c26e29f22bc51ee8cbb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE0NDM3OQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r397144379", "bodyText": "\ud83d\udc4d This is a bug, entry.getKey() returns the name of the group, not the field that is used (entry.getValue().getField()), but I think I will follow your suggestion and pass it in and let the GroupSource decide what to do.", "author": "hendrikmuhs", "createdAt": "2020-03-24T13:19:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEwNTUzMQ=="}], "type": "inlineReview"}, {"oid": "9c2ed35927896e97d43c20c5b45802b21aa71b88", "url": "https://github.com/elastic/elasticsearch/commit/9c2ed35927896e97d43c20c5b45802b21aa71b88", "message": "move synchronizationField into group source", "committedDate": "2020-03-24T21:26:33Z", "type": "forcePushed"}, {"oid": "9690e8098f3a92af61840b0dfd2e219e812fe72e", "url": "https://github.com/elastic/elasticsearch/commit/9690e8098f3a92af61840b0dfd2e219e812fe72e", "message": "make date histogram group source immutable by moving timezone into the constructor", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "99fca93ab41b5e89baee244495b97c8e0619f56e", "url": "https://github.com/elastic/elasticsearch/commit/99fca93ab41b5e89baee244495b97c8e0619f56e", "message": "optimize date_histogram continuous transforms by limiting updates to\nrecent buckets according to sync configuration", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "url": "https://github.com/elastic/elasticsearch/commit/d7ebaf50d6d5f104090bc3a0e1a4a6e07cd56b38", "message": "remove dead code", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "5eddcdea8a7d82ac41ecb156b467d44a014fada0", "url": "https://github.com/elastic/elasticsearch/commit/5eddcdea8a7d82ac41ecb156b467d44a014fada0", "message": "move synchronizationField into group source", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "e10111b724490c3d3f7391a5ac8b895f50eaf294", "url": "https://github.com/elastic/elasticsearch/commit/e10111b724490c3d3f7391a5ac8b895f50eaf294", "message": "add some more date histogram rounding test cases", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "message": "revert methode rename", "committedDate": "2020-03-26T08:22:56Z", "type": "commit"}, {"oid": "80d94133ed508acde7634f710f0a03b38f4e168d", "url": "https://github.com/elastic/elasticsearch/commit/80d94133ed508acde7634f710f0a03b38f4e168d", "message": "revert methode rename", "committedDate": "2020-03-26T08:22:56Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNTY2NQ==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398505665", "body": "```suggestion\r\n        if (synchronizationField != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {\n          \n          \n            \n                    if (synchronizationField != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (synchronizationField <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"x x-first\">field </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span>synchronizationField<span class=\"pl-k\">.</span>equals(field) <span class=\"pl-k\">&amp;&amp;</span> synchronizationTimestamp <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (synchronizationField <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> synchronizationField<span class=\"pl-k\">.</span>equals(field) <span class=\"pl-k\">&amp;&amp;</span> synchronizationTimestamp <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">0</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "benwtrent", "createdAt": "2020-03-26T11:38:48Z", "path": "x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java", "diffHunk": "@@ -315,9 +344,16 @@ public int hashCode() {\n     }\n \n     @Override\n-    public QueryBuilder getIncrementalBucketUpdateFilterQuery(Set<String> changedBuckets) {\n-        // no need for an extra range filter as this is already done by checkpoints\n-        return null;\n+    public QueryBuilder getIncrementalBucketUpdateFilterQuery(\n+        Set<String> changedBuckets,\n+        String synchronizationField,\n+        long synchronizationTimestamp\n+    ) {\n+        if (synchronizationField != null && field != null && synchronizationField.equals(field) && synchronizationTimestamp > 0) {", "originalCommit": "80d94133ed508acde7634f710f0a03b38f4e168d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwODk3Mw==", "url": "https://github.com/elastic/elasticsearch/pull/54068#discussion_r398508973", "body": "```suggestion\r\n            logger.trace(() -> new ParameterizedMessage(\"filter by bucket: {}/{}\", entry.getKey(), entry.getValue().getField()));\r\n```\r\nnit", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());\n          \n          \n            \n                        logger.trace(() -> new ParameterizedMessage(\"filter by bucket: {}/{}\", entry.getKey(), entry.getValue().getField()));\n          \n      \n    \n    \n  \n\nnit", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            logger<span class=\"pl-k\">.</span>trace(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filter by bucket: <span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>entry<span class=\"pl-k\">.</span>getKey()<span class=\"x x-first\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">/</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>entry<span class=\"pl-k\">.</span>getValue()<span class=\"pl-k\">.</span>getField());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            logger<span class=\"pl-k\">.</span>trace(<span class=\"x x-first\">() </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-k x\">new</span><span class=\"x\"> </span><span class=\"pl-smi x\">ParameterizedMessage</span><span class=\"x x-last\">(</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>filter by bucket: <span class=\"x x-first\">{}/{}</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">, </span>entry<span class=\"pl-k\">.</span>getKey()<span class=\"x x-first x-last\">, </span>entry<span class=\"pl-k\">.</span>getValue()<span class=\"pl-k\">.</span>getField(<span class=\"x x-first x-last\">)</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">nit</p>", "author": "benwtrent", "createdAt": "2020-03-26T11:45:06Z", "path": "x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java", "diffHunk": "@@ -189,44 +188,31 @@ public boolean supportsIncrementalBucketUpdate() {\n         );\n     }\n \n-    public QueryBuilder filterBuckets(Map<String, Set<String>> changedBuckets) {\n-\n-        if (changedBuckets == null || changedBuckets.isEmpty()) {\n-            return null;\n-        }\n+    public QueryBuilder filterBuckets(\n+        Map<String, Set<String>> changedBuckets,\n+        String synchronizationField,\n+        long lastSynchronizationCheckpoint\n+    ) {\n+        assert changedBuckets != null;\n \n         if (config.getGroupConfig().getGroups().size() == 1) {\n             Entry<String, SingleGroupSource> entry = config.getGroupConfig().getGroups().entrySet().iterator().next();\n-            // it should not be possible to get into this code path\n-            assert (entry.getValue().supportsIncrementalBucketUpdate());\n-\n             logger.trace(\"filter by bucket: \" + entry.getKey() + \"/\" + entry.getValue().getField());", "originalCommit": "80d94133ed508acde7634f710f0a03b38f4e168d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "url": "https://github.com/elastic/elasticsearch/commit/e4389bf1a6d09ac5fb5d3bb3a61b33fbe52d5f74", "message": "Update x-pack/plugin/transform/src/main/java/org/elasticsearch/xpack/transform/transforms/pivot/Pivot.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-03-26T13:11:44Z", "type": "commit"}, {"oid": "f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "url": "https://github.com/elastic/elasticsearch/commit/f7cd216a0982afe3fa9cb0dd07343506b625ef9a", "message": "Update x-pack/plugin/core/src/main/java/org/elasticsearch/xpack/core/transform/transforms/pivot/DateHistogramGroupSource.java\n\nCo-Authored-By: Benjamin Trent <ben.w.trent@gmail.com>", "committedDate": "2020-03-26T13:11:57Z", "type": "commit"}, {"oid": "a3595e6c0155143a1dcd3ceca14c0a054e280a33", "url": "https://github.com/elastic/elasticsearch/commit/a3595e6c0155143a1dcd3ceca14c0a054e280a33", "message": "fix import", "committedDate": "2020-03-26T13:43:32Z", "type": "commit"}]}