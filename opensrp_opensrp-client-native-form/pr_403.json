{"pr_number": 403, "pr_title": "Adds a native form testing app", "pr_author": "rkodev", "pr_createdAt": "2020-04-06T08:01:23Z", "pr_url": "https://github.com/opensrp/opensrp-client-native-form/pull/403", "timeline": [{"oid": "c670dba5845da2666cf863f0076d965b81ea9ddd", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/c670dba5845da2666cf863f0076d965b81ea9ddd", "message": "Adds a native form testing app", "committedDate": "2020-04-06T08:00:55Z", "type": "commit"}, {"oid": "32daab0d84d3d6d6ea98e1705fb8b502f0ae88f9", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/32daab0d84d3d6d6ea98e1705fb8b502f0ae88f9", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-04-06T08:01:29Z", "type": "commit"}, {"oid": "0b8163277a8c08657bda53171cd23430945d15f7", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/0b8163277a8c08657bda53171cd23430945d15f7", "message": "Update sample form structure", "committedDate": "2020-04-06T10:52:25Z", "type": "commit"}, {"oid": "da0bf1c3ba1642cb33a8212f975293a47dc21288", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/da0bf1c3ba1642cb33a8212f975293a47dc21288", "message": "Update form data source", "committedDate": "2020-04-07T12:42:18Z", "type": "commit"}, {"oid": "7fab70629397ae47d6f6ff502ff1451fd2f444e4", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/7fab70629397ae47d6f6ff502ff1451fd2f444e4", "message": "Read 'Form' config object from disk", "committedDate": "2020-04-07T15:01:33Z", "type": "commit"}, {"oid": "b2327e548b5e7a01a8ed75e250e9e33145983deb", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/b2327e548b5e7a01a8ed75e250e9e33145983deb", "message": "Adds custom config forms", "committedDate": "2020-04-07T16:40:12Z", "type": "commit"}, {"oid": "df3b56e50d8a4730041a512908b52d8c8e2839f3", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/df3b56e50d8a4730041a512908b52d8c8e2839f3", "message": "Fix codacy strikes", "committedDate": "2020-04-07T16:44:46Z", "type": "commit"}, {"oid": "602e102d95601f333ab4a3151d5a11a82953add3", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/602e102d95601f333ab4a3151d5a11a82953add3", "message": "Run device read threads on executor", "committedDate": "2020-04-07T16:54:18Z", "type": "commit"}, {"oid": "ea90807def0185c1d12a2c25faba62bdea3f04bc", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/ea90807def0185c1d12a2c25faba62bdea3f04bc", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-04-07T16:54:38Z", "type": "commit"}, {"oid": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-04-20T10:12:19Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411399275", "body": "This class looks very similar to ` com.vijay.jsonwizard.domain.Form`.", "bodyText": "This class looks very similar to  com.vijay.jsonwizard.domain.Form.", "bodyHTML": "<p dir=\"auto\">This class looks very similar to <code> com.vijay.jsonwizard.domain.Form</code>.</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T13:57:29Z", "path": "sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java", "diffHunk": "@@ -0,0 +1,192 @@\n+package org.smartregister.nativeform.domain;\n+\n+import android.content.Context;\n+\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.smartregister.nativeform.util.FileReaderUtil;\n+import org.smartregister.nativeform.util.ResourceType;\n+\n+import java.util.Set;\n+\n+public class ConfigForm {", "originalCommit": "7fab70629397ae47d6f6ff502ff1451fd2f444e4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI3NzM5Mg==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r412277392", "bodyText": "This was by design, its a wrapper class to enable serialization and deserialization of the Form class. The shortcoming with the form class is it has links to dynamic referenced constants\nIt's converted back to form here\norg.smartregister.nativeform.domain.ConfigForm#toForm", "author": "rkodev", "createdAt": "2020-04-21T15:17:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyNTkxMw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r412725913", "bodyText": "Is there no way to share common fields using inheritance?", "author": "vincent-karuri", "createdAt": "2020-04-22T07:08:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5MDkzMQ==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r462290931", "bodyText": "Direct inheritance is not possible in this case. Unless the config object changes the names of the parameters, getters and setters will not work.  All these fields are changing types\n\n    private int homeAsUpIndicator;\n\n    private int actionBarBackground;\n    private int navigationBackground;\n\n    private int backIcon;\n\nto\n    private Integer homeAsUpIndicator;\n\n    private String actionBarBackground;\n    private String navigationBackground;\n\n    private String backIcon;", "author": "rkodev", "createdAt": "2020-07-29T13:18:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI5MjU1MA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r462292550", "bodyText": "Cool.", "author": "vincent-karuri", "createdAt": "2020-07-29T13:21:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTI3NQ=="}], "type": "inlineReview", "revised_code": {"commit": "69289264fa3c96141920da0631fb6a05b1098588", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java b/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java\nindex 86c0b19d..3fcf8d95 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java\n", "chunk": "@@ -3,9 +3,9 @@ package org.smartregister.nativeform.domain;\n import android.content.Context;\n \n import com.vijay.jsonwizard.domain.Form;\n+import com.vijay.jsonwizard.utils.FileReaderUtil;\n+import com.vijay.jsonwizard.utils.ResourceType;\n \n-import org.smartregister.nativeform.util.FileReaderUtil;\n-import org.smartregister.nativeform.util.ResourceType;\n \n import java.util.Set;\n \n", "next_change": {"commit": "5348ec346467b4aef3414100d8f2985e942f8656", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java b/form_tester/src/main/java/org/smartregister/nativeform_tester/domain/ConfigForm.java\nsimilarity index 90%\nrename from sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java\nrename to form_tester/src/main/java/org/smartregister/nativeform_tester/domain/ConfigForm.java\nindex 3fcf8d95..0eb8c541 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/domain/ConfigForm.java\n+++ b/form_tester/src/main/java/org/smartregister/nativeform_tester/domain/ConfigForm.java\n", "chunk": "@@ -1,10 +1,10 @@\n-package org.smartregister.nativeform.domain;\n+package org.smartregister.nativeform_tester.domain;\n \n import android.content.Context;\n \n import com.vijay.jsonwizard.domain.Form;\n-import com.vijay.jsonwizard.utils.FileReaderUtil;\n import com.vijay.jsonwizard.utils.ResourceType;\n+import com.vijay.jsonwizard.utils.Utils;\n \n \n import java.util.Set;\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyNjE5Mw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411426193", "body": "`json.form` this appears throughout the code, maybe use a constant in it's place?", "bodyText": "json.form this appears throughout the code, maybe use a constant in it's place?", "bodyHTML": "<p dir=\"auto\"><code>json.form</code> this appears throughout the code, maybe use a constant in it's place?</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T14:31:06Z", "path": "sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package org.smartregister.nativeform.interactor;\n+\n+import android.content.Context;\n+import android.content.res.AssetManager;\n+import android.os.Environment;\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.support.annotation.Nullable;\n+\n+import com.google.gson.Gson;\n+import com.vijay.jsonwizard.constants.JsonFormConstants;\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.smartregister.nativeform.contract.FormTesterContract;\n+import org.smartregister.nativeform.domain.ConfigForm;\n+import org.smartregister.nativeform.domain.JsonForm;\n+import org.smartregister.nativeform.util.FileReaderUtil;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+public class FormTesterInteractor implements FormTesterContract.Interactor {\n+    private Gson gson = null;\n+    private ExecutorService executorService = Executors.newFixedThreadPool(1);\n+\n+    @Override\n+    public void exportDefaultForms(Context context, FormTesterContract.Presenter presenter) {\n+        executorService.execute(() -> {\n+            AssetManager assetManager = context.getAssets();\n+            try {\n+                String root = verifyOrCreateDiskDirectory();\n+\n+                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};", "originalCommit": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0NTQxMg==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411445412", "bodyText": "Also, snake case? :)", "author": "vincent-karuri", "createdAt": "2020-04-20T14:55:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyNjE5Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI4NTA4Ng==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r412285086", "bodyText": "resolved", "author": "rkodev", "createdAt": "2020-04-21T15:26:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyNjE5Mw=="}], "type": "inlineReview", "revised_code": {"commit": "cefc53359d6e5af6847a2890b25faa44d7182131", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -38,8 +38,8 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n             try {\n                 String root = verifyOrCreateDiskDirectory();\n \n-                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};\n-                for (String sourceDir : image_source) {\n+                String[] imageSources = {JsonFormConstants.JSON_FORM_DIRECTORY, \"json.form.config\", \"img\", \"image\", \"rule\"};\n+                for (String sourceDir : imageSources) {\n                     exportDirectory(assetManager, sourceDir, context, root, true);\n                 }\n \n", "next_change": {"commit": "6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 6db305d5..564a6368 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -38,8 +38,8 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n             try {\n                 String root = verifyOrCreateDiskDirectory();\n \n-                String[] imageSources = {JsonFormConstants.JSON_FORM_DIRECTORY, \"json.form.config\", \"img\", \"image\", \"rule\"};\n-                for (String sourceDir : imageSources) {\n+                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};\n+                for (String sourceDir : image_source) {\n                     exportDirectory(assetManager, sourceDir, context, root, true);\n                 }\n \n", "next_change": {"commit": "cfd076f295f8ad28072e32dfa788d98fc45a0992", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -38,8 +38,8 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n             try {\n                 String root = verifyOrCreateDiskDirectory();\n \n-                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};\n-                for (String sourceDir : image_source) {\n+                String[] imageSources = {JsonFormConstants.JSON_FORM_DIRECTORY, \"json.form.config\", \"img\", \"image\", \"rule\"};\n+                for (String sourceDir : imageSources) {\n                     exportDirectory(assetManager, sourceDir, context, root, true);\n                 }\n \n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQyODM0NA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411428344", "body": "Snake case?", "bodyText": "Snake case?", "bodyHTML": "<p dir=\"auto\">Snake case?</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T14:33:47Z", "path": "sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package org.smartregister.nativeform.interactor;\n+\n+import android.content.Context;\n+import android.content.res.AssetManager;\n+import android.os.Environment;\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.support.annotation.Nullable;\n+\n+import com.google.gson.Gson;\n+import com.vijay.jsonwizard.constants.JsonFormConstants;\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.smartregister.nativeform.contract.FormTesterContract;\n+import org.smartregister.nativeform.domain.ConfigForm;\n+import org.smartregister.nativeform.domain.JsonForm;\n+import org.smartregister.nativeform.util.FileReaderUtil;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+public class FormTesterInteractor implements FormTesterContract.Interactor {\n+    private Gson gson = null;\n+    private ExecutorService executorService = Executors.newFixedThreadPool(1);\n+\n+    @Override\n+    public void exportDefaultForms(Context context, FormTesterContract.Presenter presenter) {\n+        executorService.execute(() -> {\n+            AssetManager assetManager = context.getAssets();\n+            try {\n+                String root = verifyOrCreateDiskDirectory();\n+\n+                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};\n+                for (String sourceDir : image_source) {\n+                    exportDirectory(assetManager, sourceDir, context, root, true);\n+                }\n+\n+                readForms(context, presenter);\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        });\n+    }\n+\n+    private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n+        String[] local_assets = assetManager.list(sourceDir);\n+        if (local_assets != null && local_assets.length > 0) {\n+            for (String assetName : local_assets) {\n+                // export all in\n+                try {\n+\n+                    // if the assetName is a folder extract this\n+                    String[] child_assets = assetManager.list(sourceDir + \"/\" + assetName);", "originalCommit": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cefc53359d6e5af6847a2890b25faa44d7182131", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] local_assets = assetManager.list(sourceDir);\n-        if (local_assets != null && local_assets.length > 0) {\n-            for (String assetName : local_assets) {\n+        String[] localAssets = assetManager.list(sourceDir);\n+        if (localAssets != null && localAssets.length > 0) {\n+            for (String assetName : localAssets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 6db305d5..564a6368 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] localAssets = assetManager.list(sourceDir);\n-        if (localAssets != null && localAssets.length > 0) {\n-            for (String assetName : localAssets) {\n+        String[] local_assets = assetManager.list(sourceDir);\n+        if (local_assets != null && local_assets.length > 0) {\n+            for (String assetName : local_assets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "cfd076f295f8ad28072e32dfa788d98fc45a0992", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] local_assets = assetManager.list(sourceDir);\n-        if (local_assets != null && local_assets.length > 0) {\n-            for (String assetName : local_assets) {\n+        String[] localAssets = assetManager.list(sourceDir);\n+        if (localAssets != null && localAssets.length > 0) {\n+            for (String assetName : localAssets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "66ddee69eba592a20da41d13b7a66488d45dd0f4", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\nsimilarity index 93%\nrename from sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nrename to form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\nindex 6db305d5..9f1f13ce 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\n", "chunk": "@@ -58,8 +58,8 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n                 try {\n \n                     // if the assetName is a folder extract this\n-                    String[] child_assets = assetManager.list(sourceDir + \"/\" + assetName);\n-                    if (child_assets != null && child_assets.length > 0) {\n+                    String[] childAssets = assetManager.list(sourceDir + \"/\" + assetName);\n+                    if (childAssets != null && childAssets.length > 0) {\n                         String destinationRoot = root + \"/\" + assetName;\n                         File myDir = new File(destinationRoot);\n                         if (!myDir.exists())\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzMTYxMg==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411431612", "body": "Why not use `convertStreamToString` here?", "bodyText": "Why not use convertStreamToString here?", "bodyHTML": "<p dir=\"auto\">Why not use <code>convertStreamToString</code> here?</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T14:38:05Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+\n+import com.vijay.jsonwizard.interfaces.FormFileSource;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.jeasy.rules.mvel.MVELRuleFactory;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+import timber.log.Timber;\n+\n+/***\n+ * used to read files stored on the APP's asset folder\n+ *\n+ */\n+public class AssetsFileSource implements FormFileSource {\n+\n+    public static AssetsFileSource INSTANCE = new AssetsFileSource();\n+\n+    private AssetsFileSource() {\n+    }\n+\n+    @Override\n+    public Rules getRulesFromFile(Context context, String fileName) throws Exception {\n+        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(context.getAssets().open(fileName)));\n+        return MVELRuleFactory.createRulesFrom(bufferedReader);\n+    }\n+\n+    @Override\n+    public JSONObject getFormFromFile(Context context, String fileName) {\n+        try {\n+            String newFileName = \"json.form/\" + fileName + \".json\";\n+\n+            InputStream inputStream = context.getAssets()\n+                    .open(newFileName);\n+\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream,\n+                    \"UTF-8\"));\n+            String jsonString;\n+            StringBuilder stringBuilder = new StringBuilder();\n+            while ((jsonString = reader.readLine()) != null) {", "originalCommit": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjI4ODc5OA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r412288798", "bodyText": "The file reader util resides in the sample directory but Asset File Reader exists in the native form directory", "author": "rkodev", "createdAt": "2020-04-21T15:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzMTYxMg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcyNzM4Mg==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r412727382", "bodyText": "Wouldn't it be easier to move the file reader utils to the native form library then?\nThese will be useful to other apps as well.", "author": "vincent-karuri", "createdAt": "2020-04-22T07:10:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzMTYxMg=="}], "type": "inlineReview", "revised_code": {"commit": "69289264fa3c96141920da0631fb6a05b1098588", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex 20fd9dcc..f446d751 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -36,21 +38,12 @@ public class AssetsFileSource implements FormFileSource {\n     @Override\n     public JSONObject getFormFromFile(Context context, String fileName) {\n         try {\n-            String newFileName = \"json.form/\" + fileName + \".json\";\n+            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n \n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n \n-            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream,\n-                    \"UTF-8\"));\n-            String jsonString;\n-            StringBuilder stringBuilder = new StringBuilder();\n-            while ((jsonString = reader.readLine()) != null) {\n-                stringBuilder.append(jsonString);\n-            }\n-            inputStream.close();\n-\n-            return new JSONObject(stringBuilder.toString());\n+            return new JSONObject(FileReaderUtil.convertStreamToString(inputStream));\n         } catch (IOException e) {\n             Timber.e(e);\n         } catch (JSONException e) {\n", "next_change": {"commit": "5348ec346467b4aef3414100d8f2985e942f8656", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex f446d751..a3781b38 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -43,7 +43,7 @@ public class AssetsFileSource implements FormFileSource {\n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n \n-            return new JSONObject(FileReaderUtil.convertStreamToString(inputStream));\n+            return new JSONObject(Utils.convertStreamToString(inputStream));\n         } catch (IOException e) {\n             Timber.e(e);\n         } catch (JSONException e) {\n", "next_change": {"commit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex a3781b38..95a31b74 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -36,20 +32,9 @@ public class AssetsFileSource implements FormFileSource {\n     }\n \n     @Override\n-    public JSONObject getFormFromFile(Context context, String fileName) {\n-        try {\n-            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n-\n-            InputStream inputStream = context.getAssets()\n-                    .open(newFileName);\n-\n-            return new JSONObject(Utils.convertStreamToString(inputStream));\n-        } catch (IOException e) {\n-            Timber.e(e);\n-        } catch (JSONException e) {\n-            Timber.e(e);\n-        }\n-        return null;\n+    public JSONObject getFormFromFile(Context context, String fileName) throws Exception {\n+        String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n+        return new JSONObject(Utils.convertStreamToString(getFileInputStream(context, newFileName)));\n     }\n \n     @Override\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzMjQwNw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411432407", "body": "Why not use `getFileInputStream` here?", "bodyText": "Why not use getFileInputStream here?", "bodyHTML": "<p dir=\"auto\">Why not use <code>getFileInputStream</code> here?</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T14:39:07Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+\n+import com.vijay.jsonwizard.interfaces.FormFileSource;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.jeasy.rules.mvel.MVELRuleFactory;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+import timber.log.Timber;\n+\n+/***\n+ * used to read files stored on the APP's asset folder\n+ *\n+ */\n+public class AssetsFileSource implements FormFileSource {\n+\n+    public static AssetsFileSource INSTANCE = new AssetsFileSource();\n+\n+    private AssetsFileSource() {\n+    }\n+\n+    @Override\n+    public Rules getRulesFromFile(Context context, String fileName) throws Exception {\n+        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(context.getAssets().open(fileName)));\n+        return MVELRuleFactory.createRulesFrom(bufferedReader);\n+    }\n+\n+    @Override\n+    public JSONObject getFormFromFile(Context context, String fileName) {\n+        try {\n+            String newFileName = \"json.form/\" + fileName + \".json\";\n+\n+            InputStream inputStream = context.getAssets()", "originalCommit": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cefc53359d6e5af6847a2890b25faa44d7182131", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex 20fd9dcc..831e2ab8 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -36,7 +37,7 @@ public class AssetsFileSource implements FormFileSource {\n     @Override\n     public JSONObject getFormFromFile(Context context, String fileName) {\n         try {\n-            String newFileName = \"json.form/\" + fileName + \".json\";\n+            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n \n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n", "next_change": {"commit": "6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex 831e2ab8..20fd9dcc 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -37,7 +36,7 @@ public class AssetsFileSource implements FormFileSource {\n     @Override\n     public JSONObject getFormFromFile(Context context, String fileName) {\n         try {\n-            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n+            String newFileName = \"json.form/\" + fileName + \".json\";\n \n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n", "next_change": {"commit": "cfd076f295f8ad28072e32dfa788d98fc45a0992", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex 20fd9dcc..831e2ab8 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -36,7 +37,7 @@ public class AssetsFileSource implements FormFileSource {\n     @Override\n     public JSONObject getFormFromFile(Context context, String fileName) {\n         try {\n-            String newFileName = \"json.form/\" + fileName + \".json\";\n+            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n \n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n", "next_change": {"commit": "69289264fa3c96141920da0631fb6a05b1098588", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex 831e2ab8..f446d751 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -42,16 +43,7 @@ public class AssetsFileSource implements FormFileSource {\n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n \n-            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream,\n-                    \"UTF-8\"));\n-            String jsonString;\n-            StringBuilder stringBuilder = new StringBuilder();\n-            while ((jsonString = reader.readLine()) != null) {\n-                stringBuilder.append(jsonString);\n-            }\n-            inputStream.close();\n-\n-            return new JSONObject(stringBuilder.toString());\n+            return new JSONObject(FileReaderUtil.convertStreamToString(inputStream));\n         } catch (IOException e) {\n             Timber.e(e);\n         } catch (JSONException e) {\n", "next_change": {"commit": "5348ec346467b4aef3414100d8f2985e942f8656", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex f446d751..a3781b38 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -43,7 +43,7 @@ public class AssetsFileSource implements FormFileSource {\n             InputStream inputStream = context.getAssets()\n                     .open(newFileName);\n \n-            return new JSONObject(FileReaderUtil.convertStreamToString(inputStream));\n+            return new JSONObject(Utils.convertStreamToString(inputStream));\n         } catch (IOException e) {\n             Timber.e(e);\n         } catch (JSONException e) {\n", "next_change": {"commit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\nindex a3781b38..95a31b74 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java\n", "chunk": "@@ -36,20 +32,9 @@ public class AssetsFileSource implements FormFileSource {\n     }\n \n     @Override\n-    public JSONObject getFormFromFile(Context context, String fileName) {\n-        try {\n-            String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n-\n-            InputStream inputStream = context.getAssets()\n-                    .open(newFileName);\n-\n-            return new JSONObject(Utils.convertStreamToString(inputStream));\n-        } catch (IOException e) {\n-            Timber.e(e);\n-        } catch (JSONException e) {\n-            Timber.e(e);\n-        }\n-        return null;\n+    public JSONObject getFormFromFile(Context context, String fileName) throws Exception {\n+        String newFileName = JsonFormConstants.JSON_FORM_DIRECTORY + \"/\" + fileName + \".json\";\n+        return new JSONObject(Utils.convertStreamToString(getFileInputStream(context, newFileName)));\n     }\n \n     @Override\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MzM1MA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r411443350", "body": "Snake case?", "bodyText": "Snake case?", "bodyHTML": "<p dir=\"auto\">Snake case?</p>", "author": "vincent-karuri", "createdAt": "2020-04-20T14:52:45Z", "path": "sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package org.smartregister.nativeform.interactor;\n+\n+import android.content.Context;\n+import android.content.res.AssetManager;\n+import android.os.Environment;\n+import android.os.Handler;\n+import android.os.Looper;\n+import android.support.annotation.Nullable;\n+\n+import com.google.gson.Gson;\n+import com.vijay.jsonwizard.constants.JsonFormConstants;\n+import com.vijay.jsonwizard.domain.Form;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.smartregister.nativeform.contract.FormTesterContract;\n+import org.smartregister.nativeform.domain.ConfigForm;\n+import org.smartregister.nativeform.domain.JsonForm;\n+import org.smartregister.nativeform.util.FileReaderUtil;\n+\n+import java.io.File;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+\n+public class FormTesterInteractor implements FormTesterContract.Interactor {\n+    private Gson gson = null;\n+    private ExecutorService executorService = Executors.newFixedThreadPool(1);\n+\n+    @Override\n+    public void exportDefaultForms(Context context, FormTesterContract.Presenter presenter) {\n+        executorService.execute(() -> {\n+            AssetManager assetManager = context.getAssets();\n+            try {\n+                String root = verifyOrCreateDiskDirectory();\n+\n+                String[] image_source = {\"json.form\", \"json.form.config\", \"img\", \"image\", \"rule\"};\n+                for (String sourceDir : image_source) {\n+                    exportDirectory(assetManager, sourceDir, context, root, true);\n+                }\n+\n+                readForms(context, presenter);\n+            } catch (IOException e) {\n+                e.printStackTrace();\n+            }\n+        });\n+    }\n+\n+    private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n+        String[] local_assets = assetManager.list(sourceDir);", "originalCommit": "9040cb1ee36ec10938b460948e8fc7a11e35a0c9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI4Nzk4Nw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r462287987", "bodyText": "Resolved", "author": "rkodev", "createdAt": "2020-07-29T13:14:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ0MzM1MA=="}], "type": "inlineReview", "revised_code": {"commit": "cefc53359d6e5af6847a2890b25faa44d7182131", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] local_assets = assetManager.list(sourceDir);\n-        if (local_assets != null && local_assets.length > 0) {\n-            for (String assetName : local_assets) {\n+        String[] localAssets = assetManager.list(sourceDir);\n+        if (localAssets != null && localAssets.length > 0) {\n+            for (String assetName : localAssets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 6db305d5..564a6368 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] localAssets = assetManager.list(sourceDir);\n-        if (localAssets != null && localAssets.length > 0) {\n-            for (String assetName : localAssets) {\n+        String[] local_assets = assetManager.list(sourceDir);\n+        if (local_assets != null && local_assets.length > 0) {\n+            for (String assetName : local_assets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "cfd076f295f8ad28072e32dfa788d98fc45a0992", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nindex 564a6368..6db305d5 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n", "chunk": "@@ -51,9 +51,9 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n     }\n \n     private void exportDirectory(AssetManager assetManager, String sourceDir, Context context, String root, boolean createRoot) throws IOException {\n-        String[] local_assets = assetManager.list(sourceDir);\n-        if (local_assets != null && local_assets.length > 0) {\n-            for (String assetName : local_assets) {\n+        String[] localAssets = assetManager.list(sourceDir);\n+        if (localAssets != null && localAssets.length > 0) {\n+            for (String assetName : localAssets) {\n                 // export all in\n                 try {\n \n", "next_change": {"commit": "66ddee69eba592a20da41d13b7a66488d45dd0f4", "changed_code": [{"header": "diff --git a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java b/form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\nsimilarity index 93%\nrename from sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\nrename to form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\nindex 6db305d5..9f1f13ce 100644\n--- a/sample/src/main/java/org/smartregister/nativeform/interactor/FormTesterInteractor.java\n+++ b/form_tester/src/main/java/org/smartregister/nativeform_tester/interactor/FormTesterInteractor.java\n", "chunk": "@@ -58,8 +58,8 @@ public class FormTesterInteractor implements FormTesterContract.Interactor {\n                 try {\n \n                     // if the assetName is a folder extract this\n-                    String[] child_assets = assetManager.list(sourceDir + \"/\" + assetName);\n-                    if (child_assets != null && child_assets.length > 0) {\n+                    String[] childAssets = assetManager.list(sourceDir + \"/\" + assetName);\n+                    if (childAssets != null && childAssets.length > 0) {\n                         String destinationRoot = root + \"/\" + assetName;\n                         File myDir = new File(destinationRoot);\n                         if (!myDir.exists())\n", "next_change": null}]}}]}}]}}]}}, {"oid": "cefc53359d6e5af6847a2890b25faa44d7182131", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/cefc53359d6e5af6847a2890b25faa44d7182131", "message": "Fix file name, Introduce form constants", "committedDate": "2020-04-21T15:33:23Z", "type": "commit"}, {"oid": "6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/6b7b8ec6bf8b0f284cc0cb362a83f0ef203760c5", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-04-21T15:42:21Z", "type": "commit"}, {"oid": "cfd076f295f8ad28072e32dfa788d98fc45a0992", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/cfd076f295f8ad28072e32dfa788d98fc45a0992", "message": "Merge branch 'native_form_tester' of github.com:OpenSRP/opensrp-client-native-form into native_form_tester", "committedDate": "2020-04-21T16:05:53Z", "type": "commit"}, {"oid": "2273fc8d82587b466100397c931c1d5c8e468693", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/2273fc8d82587b466100397c931c1d5c8e468693", "message": "Merge origin master to branch", "committedDate": "2020-07-29T13:06:20Z", "type": "commit"}, {"oid": "69289264fa3c96141920da0631fb6a05b1098588", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/69289264fa3c96141920da0631fb6a05b1098588", "message": "Refactor code", "committedDate": "2020-07-29T13:46:13Z", "type": "commit"}, {"oid": "5c9b5dbebfc9e9e65ec6c47bab682b92e271ec18", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/5c9b5dbebfc9e9e65ec6c47bab682b92e271ec18", "message": "Separate sample app and form tester app", "committedDate": "2020-07-29T14:09:09Z", "type": "commit"}, {"oid": "d35819007ab9b8614bb2873570de7c992c128b57", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d35819007ab9b8614bb2873570de7c992c128b57", "message": "Fix bug on rules engine", "committedDate": "2020-07-29T14:39:16Z", "type": "commit"}, {"oid": "66ddee69eba592a20da41d13b7a66488d45dd0f4", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/66ddee69eba592a20da41d13b7a66488d45dd0f4", "message": "Add tests", "committedDate": "2020-07-29T15:09:53Z", "type": "commit"}, {"oid": "5348ec346467b4aef3414100d8f2985e942f8656", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/5348ec346467b4aef3414100d8f2985e942f8656", "message": "Reuse Utils class", "committedDate": "2020-07-29T15:43:36Z", "type": "commit"}, {"oid": "31b5dc2ac1ffa2b2080c1261b30c72eb2d039db7", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/31b5dc2ac1ffa2b2080c1261b30c72eb2d039db7", "message": "Remove NPath on ConfigForm", "committedDate": "2020-07-29T15:55:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMzU3NQ==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r462803575", "body": "You can use Timber", "bodyText": "You can use Timber", "bodyHTML": "<p dir=\"auto\">You can use Timber</p>", "author": "vincent-karuri", "createdAt": "2020-07-30T07:30:41Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java", "diffHunk": "@@ -803,6 +808,16 @@ public static String formatDateToPattern(String date, String inputFormat, String\n         format = new SimpleDateFormat(outputFormat);\n         return format.format(newDate);\n     }\n+\n+    public static int getResourceId(Context context, String name, ResourceType resourceType)\n+    {\n+        try {\n+            return context.getResources().getIdentifier(name, resourceType.getType(), context.getPackageName());\n+        } catch (Exception e) {\n+            e.printStackTrace();", "originalCommit": "5348ec346467b4aef3414100d8f2985e942f8656", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\nindex 97f08372..c30dbd86 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n", "chunk": "@@ -803,18 +803,17 @@ public class Utils {\n         try {\n             newDate = format.parse(date);\n         } catch (ParseException e) {\n-            e.printStackTrace();\n+            Timber.e(e);\n         }\n         format = new SimpleDateFormat(outputFormat);\n         return format.format(newDate);\n     }\n \n-    public static int getResourceId(Context context, String name, ResourceType resourceType)\n-    {\n+    public static int getResourceId(Context context, String name, ResourceType resourceType) {\n         try {\n             return context.getResources().getIdentifier(name, resourceType.getType(), context.getPackageName());\n         } catch (Exception e) {\n-            e.printStackTrace();\n+            Timber.e(e);\n             return -1;\n         }\n     }\n", "next_change": {"commit": "deaf63a82c5f97df6521dc8fd53bf9addcc3c7ad", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\nindex c30dbd86..e6fe5f9f 100644\n--- a/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n+++ b/android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java\n", "chunk": "@@ -817,6 +818,10 @@ public class Utils {\n             return -1;\n         }\n     }\n+  \n+    public static boolean isEmptyJsonArray(JSONArray jsonArray) {\n+        return jsonArray == null || jsonArray.length() == 0;\n+    }\n }\n \n \n", "next_change": null}]}}]}}, {"oid": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "message": "Adds unit tests", "committedDate": "2020-07-30T09:37:49Z", "type": "commit"}, {"oid": "b93b62c08b63d425b9c4158318c31058f8397be9", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/b93b62c08b63d425b9c4158318c31058f8397be9", "message": "Fix builf", "committedDate": "2020-07-30T11:39:52Z", "type": "commit"}, {"oid": "deaf63a82c5f97df6521dc8fd53bf9addcc3c7ad", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/deaf63a82c5f97df6521dc8fd53bf9addcc3c7ad", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-07-30T11:48:26Z", "type": "commit"}, {"oid": "b5fffd6b1e65b485e2736ec3619bea96645af7fb", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/b5fffd6b1e65b485e2736ec3619bea96645af7fb", "message": "Remove unused imports  in AssetsFileSourceTest", "committedDate": "2020-07-30T11:49:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0NTEzMw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464445133", "body": "Why not call `getFileInputStream(Context context, String fileName)` here?", "bodyText": "Why not call getFileInputStream(Context context, String fileName) here?", "bodyHTML": "<p dir=\"auto\">Why not call <code>getFileInputStream(Context context, String fileName)</code> here?</p>", "author": "vincent-karuri", "createdAt": "2020-08-03T14:21:24Z", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/filesource/AssetsFileSource.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+\n+import com.vijay.jsonwizard.constants.JsonFormConstants;\n+import com.vijay.jsonwizard.interfaces.FormFileSource;\n+import com.vijay.jsonwizard.utils.Utils;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.jeasy.rules.mvel.MVELRuleFactory;\n+import org.json.JSONObject;\n+\n+import java.io.BufferedReader;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+\n+/***\n+ * used to read files stored on the APP's asset folder\n+ *\n+ */\n+public class AssetsFileSource implements FormFileSource {\n+\n+    public static AssetsFileSource INSTANCE = new AssetsFileSource();\n+\n+    private AssetsFileSource() {\n+    }\n+\n+    @Override\n+    public Rules getRulesFromFile(Context context, String fileName) throws Exception {\n+        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(context.getAssets().open(fileName)));", "originalCommit": "b5fffd6b1e65b485e2736ec3619bea96645af7fb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2NDQxMQ==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464464411", "bodyText": "The return type is different. InputStream vs InputStreamReader", "author": "rkodev", "createdAt": "2020-08-03T14:51:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0NTEzMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2NzA3Ng==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464467076", "bodyText": "cool", "author": "vincent-karuri", "createdAt": "2020-08-03T14:55:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ0NTEzMw=="}], "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjMyMw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464452323", "body": "Wouldn't it be better to verify that the content is as expected and not just that it's not empty?", "bodyText": "Wouldn't it be better to verify that the content is as expected and not just that it's not empty?", "bodyHTML": "<p dir=\"auto\">Wouldn't it be better to verify that the content is as expected and not just that it's not empty?</p>", "author": "vincent-karuri", "createdAt": "2020-08-03T14:32:26Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+import android.os.Environment;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.InputStream;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({Environment.class})\n+public class DiskFileSourceTest {\n+\n+    @Rule\n+    public TemporaryFolder storageDirectory = new TemporaryFolder();\n+\n+    @Mock\n+    private Context context;\n+\n+    private DiskFileSource diskFileSource = Mockito.spy(DiskFileSource.INSTANCE);\n+\n+    @Mock\n+    private File externalFile;\n+\n+    @Before\n+    public void setUp() {\n+        Mockito.doReturn(\"/tmp/downloads\").when(externalFile).toString();\n+\n+        PowerMockito.mockStatic(Environment.class);\n+        Mockito.when(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS)).thenReturn(externalFile);\n+    }\n+\n+    @Test\n+    public void testGetRulesFromFileConvertsFileToRules() throws Exception {\n+\n+        String specifiedString = \"1\";\n+        String relevance = \"---\\n\" +\n+                \"name: step1_last_name\\n\" +\n+                \"description: last_name\\n\" +\n+                \"priority: 1\\n\" +\n+                \"condition: \\\"step1_first_Name.equalsIgnoreCase('Doe')\\\"\\n\" +\n+                \"actions:\\n\" +\n+                \"    - \\\"calculation = \" + specifiedString + \"\\\"\";\n+\n+        InputStream inputStream = new ByteArrayInputStream(relevance.getBytes());\n+        Mockito.doReturn(inputStream).when(diskFileSource).getInputStream(Mockito.any(File.class));\n+\n+        Rules rules = diskFileSource.getRulesFromFile(context, \"test_rule\");\n+        Assert.assertFalse(rules.isEmpty());", "originalCommit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2Nzg0Mg==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464467842", "bodyText": "The responsibility of the interface is to return the Rules Object when given a rule but not to verify that the Rule object works.  i.e Given a syntactically correct input of type A, you expect an output or type B", "author": "rkodev", "createdAt": "2020-08-03T14:56:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjMyMw=="}], "type": "inlineReview", "revised_code": {"commit": "254ea1d8a8cf36ec6c9f74f7b241aa13056519bc", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\nindex a33ce045..163d78cf 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\n", "chunk": "@@ -54,13 +60,21 @@ public class DiskFileSourceTest {\n                 \"priority: 1\\n\" +\n                 \"condition: \\\"step1_first_Name.equalsIgnoreCase('Doe')\\\"\\n\" +\n                 \"actions:\\n\" +\n-                \"    - \\\"calculation = \" + specifiedString + \"\\\"\";\n+                \"    - \\\" calculation = \" + specifiedString + \"\\\"\";\n \n         InputStream inputStream = new ByteArrayInputStream(relevance.getBytes());\n         Mockito.doReturn(inputStream).when(diskFileSource).getInputStream(Mockito.any(File.class));\n \n         Rules rules = diskFileSource.getRulesFromFile(context, \"test_rule\");\n         Assert.assertFalse(rules.isEmpty());\n+\n+        RulesEngineParameters parameters = new RulesEngineParameters().skipOnFirstAppliedRule(true);\n+        RulesEngine defaultRulesEngine = new DefaultRulesEngine(parameters);\n+        Facts facts = new Facts();\n+        facts.put(\"step1_first_Name\", \"Doe\");\n+\n+        defaultRulesEngine.fire(rules, facts);\n+        Assert.assertEquals(specifiedString, (facts.get(RuleConstant.CALCULATION)).toString());\n     }\n \n \n", "next_change": {"commit": "1beb9891356c16c9426968b5638dfb2e4dfb4167", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\nindex 163d78cf..a5d44721 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java\n", "chunk": "@@ -68,13 +62,10 @@ public class DiskFileSourceTest {\n         Rules rules = diskFileSource.getRulesFromFile(context, \"test_rule\");\n         Assert.assertFalse(rules.isEmpty());\n \n-        RulesEngineParameters parameters = new RulesEngineParameters().skipOnFirstAppliedRule(true);\n-        RulesEngine defaultRulesEngine = new DefaultRulesEngine(parameters);\n-        Facts facts = new Facts();\n-        facts.put(\"step1_first_Name\", \"Doe\");\n-\n-        defaultRulesEngine.fire(rules, facts);\n-        Assert.assertEquals(specifiedString, (facts.get(RuleConstant.CALCULATION)).toString());\n+        org.jeasy.rules.api.Rule rule = rules.iterator().next();\n+        Assert.assertEquals(rule.getName(), \"step1_last_name\");\n+        Assert.assertEquals(rule.getDescription(), \"last_name\");\n+        Assert.assertEquals(rule.getPriority(), 1);\n     }\n \n \n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ2Mw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464452463", "body": "Wouldn't it be better to verify that the content is as expected and not just that it's not empty?", "bodyText": "Wouldn't it be better to verify that the content is as expected and not just that it's not empty?", "bodyHTML": "<p dir=\"auto\">Wouldn't it be better to verify that the content is as expected and not just that it's not empty?</p>", "author": "vincent-karuri", "createdAt": "2020-08-03T14:32:37Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+import android.content.res.AssetManager;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.mockito.junit.MockitoJUnitRunner;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class AssetsFileSourceTest {\n+    @Mock\n+    private Context context;\n+\n+    @Mock\n+    private AssetManager assetManager;\n+\n+    private AssetsFileSource assetsFileSource = AssetsFileSource.INSTANCE;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+    }\n+\n+    @Test\n+    public void testInstanceIsNoNull() {\n+        Assert.assertNotNull(AssetsFileSource.INSTANCE);\n+    }\n+\n+    @Test\n+    public void testGetRulesFromFileConvertsFileToRules() throws Exception {\n+        String specifiedString = \"1\";\n+        String relevance = \"---\\n\" +\n+                \"name: step1_last_name\\n\" +\n+                \"description: last_name\\n\" +\n+                \"priority: 1\\n\" +\n+                \"condition: \\\"step1_first_Name.equalsIgnoreCase('Doe')\\\"\\n\" +\n+                \"actions:\\n\" +\n+                \"    - \\\"calculation = \" + specifiedString + \"\\\"\";\n+\n+\n+        Mockito.when(context.getAssets()).thenReturn(assetManager);\n+        InputStream inputStream = new ByteArrayInputStream(relevance.getBytes());\n+        Mockito.when(assetManager.open(\"rule/test\")).thenReturn(inputStream);\n+\n+        Rules rules = assetsFileSource.getRulesFromFile(context, \"rule/test\");\n+        Assert.assertFalse(rules.isEmpty());", "originalCommit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ2Nzk2NA==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464467964", "bodyText": "The responsibility of the interface is to return the Rules Object when given a rule but not to verify that the Rule object works. i.e Given a syntactically correct input of type A, you expect an output or type B", "author": "rkodev", "createdAt": "2020-08-03T14:56:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MjQ2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "254ea1d8a8cf36ec6c9f74f7b241aa13056519bc", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\nindex 120ae1c4..4a401bac 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\n", "chunk": "@@ -41,26 +45,34 @@ public class AssetsFileSourceTest {\n \n     @Test\n     public void testGetRulesFromFileConvertsFileToRules() throws Exception {\n-        String specifiedString = \"1\";\n         String relevance = \"---\\n\" +\n                 \"name: step1_last_name\\n\" +\n                 \"description: last_name\\n\" +\n                 \"priority: 1\\n\" +\n-                \"condition: \\\"step1_first_Name.equalsIgnoreCase('Doe')\\\"\\n\" +\n+                \"condition: \\\"step1_first_name.equalsIgnoreCase('Linet')\\\"\\n\" +\n                 \"actions:\\n\" +\n-                \"    - \\\"calculation = \" + specifiedString + \"\\\"\";\n-\n+                \"    - \\\"isRelevant = true\\\"\";\n \n         Mockito.when(context.getAssets()).thenReturn(assetManager);\n         InputStream inputStream = new ByteArrayInputStream(relevance.getBytes());\n         Mockito.when(assetManager.open(\"rule/test\")).thenReturn(inputStream);\n \n+        // rules are returned\n         Rules rules = assetsFileSource.getRulesFromFile(context, \"rule/test\");\n         Assert.assertFalse(rules.isEmpty());\n+\n+\n+        RulesEngineParameters parameters = new RulesEngineParameters().skipOnFirstAppliedRule(true);\n+        RulesEngine defaultRulesEngine = new DefaultRulesEngine(parameters);\n+        Facts facts = new Facts();\n+        facts.put(\"step1_first_name\", \"Linet\");\n+\n+        defaultRulesEngine.fire(rules, facts);\n+        Assert.assertTrue((Boolean) facts.get(RuleConstant.IS_RELEVANT));\n     }\n \n     @Test\n-    public void testGetFormFromFileReadsFile() throws IOException, JSONException {\n+    public void testGetFormFromFileReadsFile() throws Exception {\n         String expected = \"{\\n\" +\n                 \"        \\\"key\\\": \\\"user_image\\\",\\n\" +\n                 \"        \\\"openmrs_entity_parent\\\": \\\"\\\",\\n\" +\n", "next_change": {"commit": "1beb9891356c16c9426968b5638dfb2e4dfb4167", "changed_code": [{"header": "diff --git a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\nindex 4a401bac..d8f0a264 100644\n--- a/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\n+++ b/android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/AssetsFileSourceTest.java\n", "chunk": "@@ -61,14 +56,10 @@ public class AssetsFileSourceTest {\n         Rules rules = assetsFileSource.getRulesFromFile(context, \"rule/test\");\n         Assert.assertFalse(rules.isEmpty());\n \n-\n-        RulesEngineParameters parameters = new RulesEngineParameters().skipOnFirstAppliedRule(true);\n-        RulesEngine defaultRulesEngine = new DefaultRulesEngine(parameters);\n-        Facts facts = new Facts();\n-        facts.put(\"step1_first_name\", \"Linet\");\n-\n-        defaultRulesEngine.fire(rules, facts);\n-        Assert.assertTrue((Boolean) facts.get(RuleConstant.IS_RELEVANT));\n+        Rule rule = rules.iterator().next();\n+        Assert.assertEquals(rule.getName(), \"step1_last_name\");\n+        Assert.assertEquals(rule.getDescription(), \"last_name\");\n+        Assert.assertEquals(rule.getPriority(), 1);\n     }\n \n     @Test\n", "next_change": null}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDQ1MzcwMw==", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/403#discussion_r464453703", "body": "Do you need to spy the SUT? Is there an alternative?", "bodyText": "Do you need to spy the SUT? Is there an alternative?", "bodyHTML": "<p dir=\"auto\">Do you need to spy the SUT? Is there an alternative?</p>", "author": "vincent-karuri", "createdAt": "2020-08-03T14:34:26Z", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/filesource/DiskFileSourceTest.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package com.vijay.jsonwizard.filesource;\n+\n+import android.content.Context;\n+import android.os.Environment;\n+\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.powermock.api.mockito.PowerMockito;\n+import org.powermock.core.classloader.annotations.PrepareForTest;\n+import org.powermock.modules.junit4.PowerMockRunner;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.File;\n+import java.io.InputStream;\n+\n+@RunWith(PowerMockRunner.class)\n+@PrepareForTest({Environment.class})\n+public class DiskFileSourceTest {\n+\n+    @Rule\n+    public TemporaryFolder storageDirectory = new TemporaryFolder();\n+\n+    @Mock\n+    private Context context;\n+\n+    private DiskFileSource diskFileSource = Mockito.spy(DiskFileSource.INSTANCE);", "originalCommit": "32a12cdfb2e6875ffb1f7163cf995f388a4d6584", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"oid": "254ea1d8a8cf36ec6c9f74f7b241aa13056519bc", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/254ea1d8a8cf36ec6c9f74f7b241aa13056519bc", "message": "Add returned rules values", "committedDate": "2020-08-03T15:34:36Z", "type": "commit"}, {"oid": "1beb9891356c16c9426968b5638dfb2e4dfb4167", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/1beb9891356c16c9426968b5638dfb2e4dfb4167", "message": "Check returned rules for DiskFileSource and AssetFileSource", "committedDate": "2020-08-03T15:46:24Z", "type": "commit"}, {"oid": "7134ee0cfae005cf1f74b19f43d18fad6d262457", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/7134ee0cfae005cf1f74b19f43d18fad6d262457", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-08-12T08:56:03Z", "type": "commit"}, {"oid": "ddf95b12462627202edd501d9761ce468adc83fd", "url": "https://github.com/opensrp/opensrp-client-native-form/commit/ddf95b12462627202edd501d9761ce468adc83fd", "message": "Merge branch 'master' into native_form_tester", "committedDate": "2020-08-12T11:15:33Z", "type": "commit"}]}