{"pr_number": 10041, "pr_title": "global table only if joinable", "pr_author": "clintropolis", "pr_createdAt": "2020-06-17T11:26:53Z", "pr_url": "https://github.com/apache/druid/pull/10041", "timeline": [{"oid": "72ccc08de10b096bf8e148e2a1fbb48ca48bf810", "url": "https://github.com/apache/druid/commit/72ccc08de10b096bf8e148e2a1fbb48ca48bf810", "message": "global table if only joinable", "committedDate": "2020-06-17T11:06:45Z", "type": "commit"}, {"oid": "01cb2df2999650c0a599d201e15023719fa01be9", "url": "https://github.com/apache/druid/commit/01cb2df2999650c0a599d201e15023719fa01be9", "message": "oops", "committedDate": "2020-06-17T11:53:48Z", "type": "commit"}, {"oid": "0f50b3ecfe89743cc23abf4bddbf981a0c2ff3af", "url": "https://github.com/apache/druid/commit/0f50b3ecfe89743cc23abf4bddbf981a0c2ff3af", "message": "fix style, add more tests", "committedDate": "2020-06-17T19:34:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgyNDU3Nw==", "url": "https://github.com/apache/druid/pull/10041#discussion_r441824577", "body": "```suggestion\r\n          DataSource dataSource,\r\n          JoinConditionAnalysis condition\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      DataSource dataSource, JoinConditionAnalysis condition\n          \n          \n            \n                      DataSource dataSource,\n          \n          \n            \n                      JoinConditionAnalysis condition", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">DataSource</span> dataSource,<span class=\"x x-first\"> </span><span class=\"pl-smi x\">JoinConditionAnalysis</span><span class=\"x x-last\"> condition</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-smi\">DataSource</span> dataSource,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-smi\">JoinConditionAnalysis</span> condition</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jihoonson", "createdAt": "2020-06-17T20:47:06Z", "path": "sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java", "diffHunk": "@@ -222,10 +228,29 @@ public void setUp() throws Exception\n     serverView = new TestServerInventoryView(walker.getSegments(), realtimeSegments);\n     druidServers = serverView.getDruidServers();\n \n+    final JoinableFactory globalTableJoinable = new JoinableFactory()\n+    {\n+      @Override\n+      public boolean isDirectlyJoinable(DataSource dataSource)\n+      {\n+        return dataSource instanceof GlobalTableDataSource &&\n+               segmentDataSourceNames.contains(((GlobalTableDataSource) dataSource).getName());\n+      }\n+\n+      @Override\n+      public Optional<Joinable> build(\n+          DataSource dataSource, JoinConditionAnalysis condition", "originalCommit": "0f50b3ecfe89743cc23abf4bddbf981a0c2ff3af", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2ad4ba4c56d2fcfc956dd13989f6c471e85bbe0b", "url": "https://github.com/apache/druid/commit/2ad4ba4c56d2fcfc956dd13989f6c471e85bbe0b", "message": "Update sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaTest.java", "committedDate": "2020-06-17T20:47:18Z", "type": "commit"}, {"oid": "cce3fcef864bdef2da9c3e219fbd57e5f98639ab", "url": "https://github.com/apache/druid/commit/cce3fcef864bdef2da9c3e219fbd57e5f98639ab", "message": "better information schema columns, distinguish broadcast from joinable", "committedDate": "2020-06-18T06:30:28Z", "type": "commit"}, {"oid": "836c797b507ae40fad757f53e45239a155944224", "url": "https://github.com/apache/druid/commit/836c797b507ae40fad757f53e45239a155944224", "message": "Merge remote-tracking branch 'upstream/master' into global-table-should-be-joinable", "committedDate": "2020-06-18T06:44:17Z", "type": "commit"}, {"oid": "1f7876560565e320c022e809bdcc047c457f1a05", "url": "https://github.com/apache/druid/commit/1f7876560565e320c022e809bdcc047c457f1a05", "message": "fix javadoc", "committedDate": "2020-06-18T07:15:02Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNDE2Mw==", "url": "https://github.com/apache/druid/pull/10041#discussion_r442534163", "body": "super nit: even though `query` is not used in `CachingClusteredClient.getQueryRunnerForSegments()`, it could be better to use `freeTradeQuery` instead of `query` for future proof for when someone changes the logic of `CachingClusteredClient.getQueryRunnerForSegments()`.", "bodyText": "super nit: even though query is not used in CachingClusteredClient.getQueryRunnerForSegments(), it could be better to use freeTradeQuery instead of query for future proof for when someone changes the logic of CachingClusteredClient.getQueryRunnerForSegments().", "bodyHTML": "<p dir=\"auto\">super nit: even though <code>query</code> is not used in <code>CachingClusteredClient.getQueryRunnerForSegments()</code>, it could be better to use <code>freeTradeQuery</code> instead of <code>query</code> for future proof for when someone changes the logic of <code>CachingClusteredClient.getQueryRunnerForSegments()</code>.</p>", "author": "jihoonson", "createdAt": "2020-06-18T22:24:01Z", "path": "server/src/main/java/org/apache/druid/server/ClientQuerySegmentWalker.java", "diffHunk": "@@ -187,10 +198,15 @@ public ClientQuerySegmentWalker(\n   @Override\n   public <T> QueryRunner<T> getQueryRunnerForSegments(Query<T> query, Iterable<SegmentDescriptor> specs)\n   {\n-    // Inlining isn't done for segments-based queries.\n+    // Inlining isn't done for segments-based queries, but we still globalify the table datasources if possible\n+    final Query<T> freeTradeQuery = query.withDataSource(globalizeIfPossible(query.getDataSource()));\n \n     if (canRunQueryUsingClusterWalker(query)) {\n-      return decorateClusterRunner(query, clusterClient.getQueryRunnerForSegments(query, specs));\n+      return new QuerySwappingQueryRunner<>(\n+          decorateClusterRunner(freeTradeQuery, clusterClient.getQueryRunnerForSegments(query, specs)),", "originalCommit": "1f7876560565e320c022e809bdcc047c457f1a05", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjU2MzY5Nw==", "url": "https://github.com/apache/druid/pull/10041#discussion_r442563697", "bodyText": "oops, good catch, fixed \ud83d\udc4d", "author": "clintropolis", "createdAt": "2020-06-19T00:04:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNDE2Mw=="}], "type": "inlineReview"}, {"oid": "33c65a2339dacd49dfc88930877a06df3312ab2c", "url": "https://github.com/apache/druid/commit/33c65a2339dacd49dfc88930877a06df3312ab2c", "message": "fix mistake", "committedDate": "2020-06-18T23:15:10Z", "type": "commit"}]}