{"pr_number": 10390, "pr_title": "Vectorized variance aggregators", "pr_author": "suneet-s", "pr_createdAt": "2020-09-13T07:01:10Z", "pr_url": "https://github.com/apache/druid/pull/10390", "timeline": [{"oid": "44887463e1ac810311916132d9cc547de495b19e", "url": "https://github.com/apache/druid/commit/44887463e1ac810311916132d9cc547de495b19e", "message": "wip vectorize", "committedDate": "2020-09-09T17:53:57Z", "type": "commit"}, {"oid": "bf554ae135f029a8290169188b69cc40cdc2b411", "url": "https://github.com/apache/druid/commit/bf554ae135f029a8290169188b69cc40cdc2b411", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance", "committedDate": "2020-09-12T00:35:30Z", "type": "commit"}, {"oid": "7aa4d77bfeb7f7b76e4df56dd533d1cca575a4b7", "url": "https://github.com/apache/druid/commit/7aa4d77bfeb7f7b76e4df56dd533d1cca575a4b7", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance", "committedDate": "2020-09-13T03:57:33Z", "type": "commit"}, {"oid": "bdd1ca15b9800183508963301ab361accce8ac37", "url": "https://github.com/apache/druid/commit/bdd1ca15b9800183508963301ab361accce8ac37", "message": "close but not quite", "committedDate": "2020-09-13T06:56:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNjc1Nw==", "url": "https://github.com/apache/druid/pull/10390#discussion_r487536757", "body": "It may be more informative to log `type` here instead since `inputType` could be null. ", "bodyText": "It may be more informative to log type here instead since inputType could be null.", "bodyHTML": "<p dir=\"auto\">It may be more informative to log <code>type</code> here instead since <code>inputType</code> could be null.</p>", "author": "abhishekagarwal87", "createdAt": "2020-09-13T14:31:44Z", "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactory.java", "diffHunk": "@@ -166,6 +169,32 @@ public BufferAggregator factorizeBuffered(ColumnSelectorFactory metricFactory)\n     );\n   }\n \n+  @Override\n+  public VectorAggregator factorizeVector(VectorColumnSelectorFactory selectorFactory)\n+  {\n+    final String type = getTypeString(selectorFactory);\n+    if (ValueType.FLOAT.name().equalsIgnoreCase(type)) {\n+      return new VarianceFloatVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (ValueType.DOUBLE.name().equalsIgnoreCase(type)) {\n+      return new VarianceDoubleVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (ValueType.LONG.name().equalsIgnoreCase(type)) {\n+      return new VarianceLongVectorAggregator(selectorFactory.makeValueSelector(fieldName));\n+    } else if (VARIANCE_TYPE_NAME.equalsIgnoreCase(type)) {\n+      return new VarianceObjectVectorAggregator(selectorFactory.makeObjectSelector(fieldName));\n+    }\n+    throw new IAE(\n+        \"Incompatible type for metric[%s], expected a float, double, long, or variance, but got a %s\",\n+        fieldName,\n+        inputType", "originalCommit": "bdd1ca15b9800183508963301ab361accce8ac37", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU2OTYxNA==", "url": "https://github.com/apache/druid/pull/10390#discussion_r487569614", "bodyText": "good point. I just copy pasted the exception from above.", "author": "suneet-s", "createdAt": "2020-09-13T19:47:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNjc1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzUzNzEyNw==", "url": "https://github.com/apache/druid/pull/10390#discussion_r487537127", "body": "nit: \r\n```suggestion\r\n      writeNVariance(buf, position, count, sum, nvariance);\r\n```", "bodyText": "nit:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  VarianceBufferAggregator.writeNVariance(buf, position, count, sum, nvariance);\n          \n          \n            \n                  writeNVariance(buf, position, count, sum, nvariance);", "bodyHTML": "<p dir=\"auto\">nit:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-smi x x-first\">VarianceBufferAggregator</span><span class=\"pl-k x x-last\">.</span>writeNVariance(buf, position, count, sum, nvariance);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      writeNVariance(buf, position, count, sum, nvariance);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "abhishekagarwal87", "createdAt": "2020-09-13T14:35:19Z", "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceBufferAggregator.java", "diffHunk": "@@ -213,9 +250,7 @@ public void aggregate(ByteBuffer buf, int position)\n       count += holder2.count;\n       sum += holder2.sum;\n \n-      buf.putLong(position, count);\n-      buf.putDouble(position + SUM_OFFSET, sum);\n-      buf.putDouble(position + NVARIANCE_OFFSET, nvariance);\n+      VarianceBufferAggregator.writeNVariance(buf, position, count, sum, nvariance);", "originalCommit": "bdd1ca15b9800183508963301ab361accce8ac37", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "033436b253ad6fe03e684b069b0791889f65b1ae", "url": "https://github.com/apache/druid/commit/033436b253ad6fe03e684b069b0791889f65b1ae", "message": "faster", "committedDate": "2020-09-13T20:49:57Z", "type": "commit"}, {"oid": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f", "url": "https://github.com/apache/druid/commit/496f5f8431d0353706eb73a8b9ecf6b2a83c197f", "message": "unit tests", "committedDate": "2020-09-13T23:00:10Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTUyNw==", "url": "https://github.com/apache/druid/pull/10390#discussion_r488175527", "body": "Oh, this isn't actually correct. This method is backed by `getType`, which means `VARIANCE_TYPE_NAME.equalsIgnoreCase(type)` will never be true.  I suggest instead of using `getTypeString` to get the column capabilities, and then this enum can switch on `getType` directly instead of converting them to and from strings, and if type is `ValueType.COMPLEX` then to treat it as the object aggregator factory.\r\n\r\nAfter #10277 goes in, then we can check `getComplexTypeName` matches `VARIANCE_TYPE_NAME`.", "bodyText": "Oh, this isn't actually correct. This method is backed by getType, which means VARIANCE_TYPE_NAME.equalsIgnoreCase(type) will never be true.  I suggest instead of using getTypeString to get the column capabilities, and then this enum can switch on getType directly instead of converting them to and from strings, and if type is ValueType.COMPLEX then to treat it as the object aggregator factory.\nAfter #10277 goes in, then we can check getComplexTypeName matches VARIANCE_TYPE_NAME.", "bodyHTML": "<p dir=\"auto\">Oh, this isn't actually correct. This method is backed by <code>getType</code>, which means <code>VARIANCE_TYPE_NAME.equalsIgnoreCase(type)</code> will never be true.  I suggest instead of using <code>getTypeString</code> to get the column capabilities, and then this enum can switch on <code>getType</code> directly instead of converting them to and from strings, and if type is <code>ValueType.COMPLEX</code> then to treat it as the object aggregator factory.</p>\n<p dir=\"auto\">After <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"678751795\" data-permission-text=\"Title is private\" data-url=\"https://github.com/apache/druid/issues/10277\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/apache/druid/pull/10277/hovercard\" href=\"https://github.com/apache/druid/pull/10277\">#10277</a> goes in, then we can check <code>getComplexTypeName</code> matches <code>VARIANCE_TYPE_NAME</code>.</p>", "author": "clintropolis", "createdAt": "2020-09-14T19:39:34Z", "path": "extensions-core/stats/src/main/java/org/apache/druid/query/aggregation/variance/VarianceAggregatorFactory.java", "diffHunk": "@@ -162,10 +167,36 @@ public BufferAggregator factorizeBuffered(ColumnSelectorFactory metricFactory)\n     throw new IAE(\n         \"Incompatible type for metric[%s], expected a float, double, long, or variance, but got a %s\",\n         fieldName,\n-        inputType\n+        type\n     );\n   }\n \n+  @Override\n+  public VectorAggregator factorizeVector(VectorColumnSelectorFactory selectorFactory)\n+  {\n+    final String type = getTypeString(selectorFactory);\n+    if (ValueType.FLOAT.name().equalsIgnoreCase(type)) {", "originalCommit": "496f5f8431d0353706eb73a8b9ecf6b2a83c197f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI5Mjc5Nw==", "url": "https://github.com/apache/druid/pull/10390#discussion_r488292797", "bodyText": "Can I file a separate bug for this issue since it appears to be a bug independent of the vectorization code path? I can look at fixing that issue after #10277 goes in", "author": "suneet-s", "createdAt": "2020-09-14T23:27:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNTAyNQ==", "url": "https://github.com/apache/druid/pull/10390#discussion_r488305025", "bodyText": "Ah, this is actually only true if inputType isn't specified, so it's not never true, just will never be true if the input type isn't explicitly specified as \"variance\", and cant autodetect from its inputs.\nI think it would be nice if you fix it up at least for the vectorized codepath, but would also probably be nice to just fix it up for all of them if it isn't too much trouble, and I don't think waiting on #10277 is necessary since there are a handful of aggregator factories which could be improved to have a stronger check on their complex input type.", "author": "clintropolis", "createdAt": "2020-09-15T00:08:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTUyNw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxOTQzNg==", "url": "https://github.com/apache/druid/pull/10390#discussion_r488319436", "bodyText": "Fix was easy for everything. Done with some tests. Waiting on a full review, and I'll push up a new patch.", "author": "suneet-s", "createdAt": "2020-09-15T00:58:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE3NTUyNw=="}], "type": "inlineReview"}, {"oid": "e1cbdd4acdcb71316b92f431bbf6738d0da8a7b3", "url": "https://github.com/apache/druid/commit/e1cbdd4acdcb71316b92f431bbf6738d0da8a7b3", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance", "committedDate": "2020-09-15T00:33:09Z", "type": "commit"}, {"oid": "92ea649242cb5109299c28f0a47ebc797bed39b8", "url": "https://github.com/apache/druid/commit/92ea649242cb5109299c28f0a47ebc797bed39b8", "message": "fix complex types for variance", "committedDate": "2020-09-15T00:33:52Z", "type": "commit"}, {"oid": "d22795d6ffdd4a7ef3b921baf024173fec278b00", "url": "https://github.com/apache/druid/commit/d22795d6ffdd4a7ef3b921baf024173fec278b00", "message": "Merge remote-tracking branch 'upstream/master' into vector-variance", "committedDate": "2020-09-17T13:37:02Z", "type": "commit"}]}