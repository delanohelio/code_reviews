{"pr_number": 9573, "pr_title": "Fix some flaws of KafkaEmitter", "pr_author": "yuanlihan", "pr_createdAt": "2020-03-27T09:50:38Z", "pr_url": "https://github.com/apache/druid/pull/9573", "timeline": [{"oid": "19537d2af69f987a9cf45367774abd8b07db51be", "url": "https://github.com/apache/druid/commit/19537d2af69f987a9cf45367774abd8b07db51be", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T09:35:28Z", "type": "commit"}, {"oid": "c17052e6898318d71225fad003453cc054d9228b", "url": "https://github.com/apache/druid/commit/c17052e6898318d71225fad003453cc054d9228b", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T09:35:39Z", "type": "commit"}, {"oid": "047635bd13a858211499c85662452ca6b4d9c4d2", "url": "https://github.com/apache/druid/commit/047635bd13a858211499c85662452ca6b4d9c4d2", "message": "fix flaws of KafkaEmitter", "committedDate": "2020-03-27T13:16:03Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg1NDEwNg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r403854106", "body": "```suggestion\r\n    catch (Throwable e) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                catch (InterruptedException e) {\n          \n          \n            \n                catch (Throwable e) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">catch</span> (<span class=\"pl-smi x x-first x-last\">InterruptedException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">catch</span> (<span class=\"pl-smi x x-first x-last\">Throwable</span> e) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "himanshug", "createdAt": "2020-04-06T06:25:25Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,21 +120,21 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n     catch (InterruptedException e) {", "originalCommit": "047635bd13a858211499c85662452ca6b4d9c4d2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0f493e70581ec5f9230864b9e606496f26968773", "url": "https://github.com/apache/druid/commit/0f493e70581ec5f9230864b9e606496f26968773", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>", "committedDate": "2020-04-08T06:15:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405729389", "body": "on any  exception  from the block inside `while(true) { ... }` would lead to event emission getting stopped. Does it make sense to have a try-catch inside there to ignore exceptions except for `InterruptedException` so that emitting stops only on thread interrupt which would happen when druid is shutting down.", "bodyText": "on any  exception  from the block inside while(true) { ... } would lead to event emission getting stopped. Does it make sense to have a try-catch inside there to ignore exceptions except for InterruptedException so that emitting stops only on thread interrupt which would happen when druid is shutting down.", "bodyHTML": "<p dir=\"auto\">on any  exception  from the block inside <code>while(true) { ... }</code> would lead to event emission getting stopped. Does it make sense to have a try-catch inside there to ignore exceptions except for <code>InterruptedException</code> so that emitting stops only on thread interrupt which would happen when druid is shutting down.</p>", "author": "himanshug", "createdAt": "2020-04-08T18:30:51Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "originalCommit": "0f493e70581ec5f9230864b9e606496f26968773", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwMzQwMQ==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405903401", "bodyText": "@himanshug, thanks for the review. As the potential exceptions from the producer are handled in the callback, so in my opinion, currently the while(true) { ... } block is already supposed to raised the InterruptedException only.", "author": "yuanlihan", "createdAt": "2020-04-09T01:19:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjY0Mg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405966642", "bodyText": "sounds reasonable, however I would still make slight log messaage change just in case.", "author": "himanshug", "createdAt": "2020-04-09T05:38:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU2NTE3Mg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r406565172", "bodyText": "thanks @himanshug, it's more clear now.", "author": "yuanlihan", "createdAt": "2020-04-10T01:51:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTM4OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTk2NjYyMg==", "url": "https://github.com/apache/druid/pull/9573#discussion_r405966622", "body": "```suggestion\r\n      log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  log.warn(e, \"Failed to take record from queue!\");\n          \n          \n            \n                  log.warn(e, \"Exception while getting record from queue or producer send, Events would not be emitted anymore.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      log<span class=\"pl-k\">.</span>warn(e, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Failed to take</span> record from queue<span class=\"x x-first x-last\">!</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      log<span class=\"pl-k\">.</span>warn(e, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Exception while getting</span> record from queue<span class=\"x x-first x-last\"> or producer send, Events would not be emitted anymore.</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "himanshug", "createdAt": "2020-04-09T05:37:57Z", "path": "extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java", "diffHunk": "@@ -130,24 +120,24 @@ public void start()\n \n   private void sendMetricToKafka()\n   {\n-    sendToKafka(config.getMetricTopic(), metricQueue);\n+    sendToKafka(config.getMetricTopic(), metricQueue, setProducerCallback(metricLost));\n   }\n \n   private void sendAlertToKafka()\n   {\n-    sendToKafka(config.getAlertTopic(), alertQueue);\n+    sendToKafka(config.getAlertTopic(), alertQueue, setProducerCallback(alertLost));\n   }\n \n-  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue)\n+  private void sendToKafka(final String topic, MemoryBoundLinkedBlockingQueue<String> recordQueue, Callback callback)\n   {\n     ObjectContainer<String> objectToSend;\n     try {\n       while (true) {\n         objectToSend = recordQueue.take();\n-        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), producerCallback);\n+        producer.send(new ProducerRecord<>(topic, objectToSend.getData()), callback);\n       }\n     }\n-    catch (InterruptedException e) {\n+    catch (Throwable e) {\n       log.warn(e, \"Failed to take record from queue!\");", "originalCommit": "0f493e70581ec5f9230864b9e606496f26968773", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "url": "https://github.com/apache/druid/commit/89c50ba7fadfc7634b4297a1e8fde277195bd3e9", "message": "Update extensions-contrib/kafka-emitter/src/main/java/org/apache/druid/emitter/kafka/KafkaEmitter.java\n\nCo-Authored-By: Himanshu <g.himanshu@gmail.com>", "committedDate": "2020-04-10T01:39:32Z", "type": "commit"}]}