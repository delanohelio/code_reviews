{"pr_number": 347, "pr_title": "chore: update DirectPath tests", "pr_createdAt": "2020-06-16T19:06:36Z", "pr_url": "https://github.com/googleapis/java-bigtable/pull/347", "merge_commit": "b4edbd5cf420c652dec71ecccc236dbe823cfa4c", "timeline": [{"oid": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "url": "https://github.com/googleapis/java-bigtable/commit/eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "message": "Update DirectPath tests to use the new opt-in method instead of env var; Change fallback tests to blackhole all ipv4 and ipv6 DP addresses", "committedDate": "2020-06-15T17:50:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNTkxNQ==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441135915", "body": "Please remove this println", "bodyText": "Please remove this println", "bodyHTML": "<p dir=\"auto\">Please remove this println</p>", "author": "igorbernstein2", "createdAt": "2020-06-16T20:54:27Z", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java", "diffHunk": "@@ -225,23 +230,30 @@ public void connect(\n         ChannelPromise promise)\n         throws Exception {\n \n-      this.isIPv6 =\n-          (remoteAddress instanceof InetSocketAddress)\n-              && ((InetSocketAddress) remoteAddress).getAddress() instanceof Inet6Address;\n+      if (remoteAddress instanceof InetSocketAddress) {\n+        InetAddress inetAddress = ((InetSocketAddress) remoteAddress).getAddress();\n+        String addr = inetAddress.getHostAddress();\n+        if ((inetAddress instanceof Inet6Address && addr.startsWith(DP_IPV6_PREFIX))\n+          || (inetAddress instanceof Inet4Address && addr.startsWith(DP_IPV4_PREFIX))) {\n+          isDpAddr = true;\n+        }\n+      }\n \n-      if (!(isIPv6 && blackholeIPv6.get())) {\n+      if (!(isDpAddr && blackholeDpAddr.get())) {\n         super.connect(ctx, remoteAddress, localAddress, promise);\n       } else {\n         // Fail the connection fast\n+        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>>>>>> Failing connection\");", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE4ODUzOQ==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441188539", "bodyText": "done", "author": "WeiranFang", "createdAt": "2020-06-16T23:00:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNTkxNQ=="}], "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\nindex e688d150..b62089bc 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n", "chunk": "@@ -233,17 +233,13 @@ public class DirectPathFallbackIT {\n       if (remoteAddress instanceof InetSocketAddress) {\n         InetAddress inetAddress = ((InetSocketAddress) remoteAddress).getAddress();\n         String addr = inetAddress.getHostAddress();\n-        if ((inetAddress instanceof Inet6Address && addr.startsWith(DP_IPV6_PREFIX))\n-          || (inetAddress instanceof Inet4Address && addr.startsWith(DP_IPV4_PREFIX))) {\n-          isDpAddr = true;\n-        }\n+        isDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX);\n       }\n \n       if (!(isDpAddr && blackholeDpAddr.get())) {\n         super.connect(ctx, remoteAddress, localAddress, promise);\n       } else {\n         // Fail the connection fast\n-        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>>>>>> Failing connection\");\n         promise.setFailure(new IOException(\"fake error\"));\n       }\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNzYwNA==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441137604", "body": "```java\r\nreturn BigtableStubSettings.defaultGrpcTransportProviderBuilder()\r\n  //...\r\n  // TODO(weiranf): Remove this once DirectPath goes to public beta\r\n  .setAttemptDirectPath(isDirectPathEnabled())\r\n```", "bodyText": "return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n  //...\n  // TODO(weiranf): Remove this once DirectPath goes to public beta\n  .setAttemptDirectPath(isDirectPathEnabled())", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n  //...\n  // TODO(weiranf): Remove this once DirectPath goes to public beta\n  .setAttemptDirectPath(isDirectPathEnabled())\"><pre><span class=\"pl-k\">return</span> <span class=\"pl-smi\">BigtableStubSettings</span><span class=\"pl-k\">.</span>defaultGrpcTransportProviderBuilder()\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span>...</span>\n  <span class=\"pl-c\"><span class=\"pl-c\">//</span> TODO(weiranf): Remove this once DirectPath goes to public beta</span>\n  .setAttemptDirectPath(isDirectPathEnabled())</pre></div>", "author": "igorbernstein2", "createdAt": "2020-06-16T20:57:32Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java", "diffHunk": "@@ -229,9 +229,20 @@ public boolean isRefreshingChannel() {\n \n   /** Returns a builder for the default ChannelProvider for this service. */\n   public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {\n-    return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n+    InstantiatingGrpcChannelProvider.Builder builder =\n+        BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n         .setPoolSize(getDefaultChannelPoolSize())\n         .setMaxInboundMessageSize(MAX_MESSAGE_SIZE);\n+    // TODO(weiranf): Remove this once DirectPath goes to public beta\n+    if (isDirectPathEnabled()) {\n+      builder.setAttemptDirectPath(true);\n+    }", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE4ODYyMg==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441188622", "bodyText": "done", "author": "WeiranFang", "createdAt": "2020-06-16T23:01:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzNzYwNA=="}], "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java b/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\nindex 9b6f7e69..7b4b5323 100644\n--- a/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\n+++ b/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\n", "chunk": "@@ -229,15 +227,11 @@ public class EnhancedBigtableStubSettings extends StubSettings<EnhancedBigtableS\n \n   /** Returns a builder for the default ChannelProvider for this service. */\n   public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {\n-    InstantiatingGrpcChannelProvider.Builder builder =\n-        BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n+    return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n         .setPoolSize(getDefaultChannelPoolSize())\n-        .setMaxInboundMessageSize(MAX_MESSAGE_SIZE);\n-    // TODO(weiranf): Remove this once DirectPath goes to public beta\n-    if (isDirectPathEnabled()) {\n-      builder.setAttemptDirectPath(true);\n-    }\n-    return builder;\n+        .setMaxInboundMessageSize(MAX_MESSAGE_SIZE)\n+        // TODO(weiranf): Set this to true by default once DirectPath goes to public beta\n+        .setAttemptDirectPath(isDirectPathEnabled());\n   }\n \n   // TODO(weiranf): Remove this once DirectPath goes to public beta\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzODg0NA==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441138844", "body": "Please cleanup the constants as well:\r\n- remove DIRECT_PATH_ENV_VAR\r\n- update comment for DIRECT_PATH_ENDPOINT", "bodyText": "Please cleanup the constants as well:\n\nremove DIRECT_PATH_ENV_VAR\nupdate comment for DIRECT_PATH_ENDPOINT", "bodyHTML": "<p dir=\"auto\">Please cleanup the constants as well:</p>\n<ul dir=\"auto\">\n<li>remove DIRECT_PATH_ENV_VAR</li>\n<li>update comment for DIRECT_PATH_ENDPOINT</li>\n</ul>", "author": "igorbernstein2", "createdAt": "2020-06-16T21:00:07Z", "path": "google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java", "diffHunk": "@@ -229,9 +229,20 @@ public boolean isRefreshingChannel() {\n \n   /** Returns a builder for the default ChannelProvider for this service. */\n   public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {\n-    return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n+    InstantiatingGrpcChannelProvider.Builder builder =\n+        BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n         .setPoolSize(getDefaultChannelPoolSize())\n         .setMaxInboundMessageSize(MAX_MESSAGE_SIZE);\n+    // TODO(weiranf): Remove this once DirectPath goes to public beta\n+    if (isDirectPathEnabled()) {\n+      builder.setAttemptDirectPath(true);\n+    }\n+    return builder;\n+  }\n+\n+  // TODO(weiranf): Remove this once DirectPath goes to public beta\n+  private static boolean isDirectPathEnabled() {\n+    return Boolean.getBoolean(\"bigtable.attempt-directpath\");", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java b/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\nindex 9b6f7e69..7b4b5323 100644\n--- a/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\n+++ b/google-cloud-bigtable/src/main/java/com/google/cloud/bigtable/data/v2/stub/EnhancedBigtableStubSettings.java\n", "chunk": "@@ -229,15 +227,11 @@ public class EnhancedBigtableStubSettings extends StubSettings<EnhancedBigtableS\n \n   /** Returns a builder for the default ChannelProvider for this service. */\n   public static InstantiatingGrpcChannelProvider.Builder defaultGrpcTransportProviderBuilder() {\n-    InstantiatingGrpcChannelProvider.Builder builder =\n-        BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n+    return BigtableStubSettings.defaultGrpcTransportProviderBuilder()\n         .setPoolSize(getDefaultChannelPoolSize())\n-        .setMaxInboundMessageSize(MAX_MESSAGE_SIZE);\n-    // TODO(weiranf): Remove this once DirectPath goes to public beta\n-    if (isDirectPathEnabled()) {\n-      builder.setAttemptDirectPath(true);\n-    }\n-    return builder;\n+        .setMaxInboundMessageSize(MAX_MESSAGE_SIZE)\n+        // TODO(weiranf): Set this to true by default once DirectPath goes to public beta\n+        .setAttemptDirectPath(isDirectPathEnabled());\n   }\n \n   // TODO(weiranf): Remove this once DirectPath goes to public beta\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MDM2OQ==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441140369", "body": "Please add a comment explaining where these magic subnets came from.\r\n", "bodyText": "Please add a comment explaining where these magic subnets came from.", "bodyHTML": "<p dir=\"auto\">Please add a comment explaining where these magic subnets came from.</p>", "author": "igorbernstein2", "createdAt": "2020-06-16T21:03:08Z", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java", "diffHunk": "@@ -66,12 +68,14 @@\n   // This was determined experimentally to account for both gRPC-LB RPCs and Bigtable api RPCs.\n   private static final int MIN_COMPLETE_READ_CALLS = 40;\n   private static final int NUM_RPCS_TO_SEND = 20;\n+  private static final String DP_IPV6_PREFIX = \"2001:4860:8040\";", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\nindex e688d150..b62089bc 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n", "chunk": "@@ -68,6 +66,8 @@ public class DirectPathFallbackIT {\n   // This was determined experimentally to account for both gRPC-LB RPCs and Bigtable api RPCs.\n   private static final int MIN_COMPLETE_READ_CALLS = 40;\n   private static final int NUM_RPCS_TO_SEND = 20;\n+\n+  // IP address prefixes allocated for DirectPath backends.\n   private static final String DP_IPV6_PREFIX = \"2001:4860:8040\";\n   private static final String DP_IPV4_PREFIX = \"34.126\";\n \n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0MjY5NQ==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441142695", "body": "Maybe simplify to:\r\n```\r\nisDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX));\r\n```", "bodyText": "Maybe simplify to:\nisDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX));", "bodyHTML": "<p dir=\"auto\">Maybe simplify to:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"isDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX));\"><pre><code>isDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX));\n</code></pre></div>", "author": "igorbernstein2", "createdAt": "2020-06-16T21:07:48Z", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java", "diffHunk": "@@ -225,23 +230,30 @@ public void connect(\n         ChannelPromise promise)\n         throws Exception {\n \n-      this.isIPv6 =\n-          (remoteAddress instanceof InetSocketAddress)\n-              && ((InetSocketAddress) remoteAddress).getAddress() instanceof Inet6Address;\n+      if (remoteAddress instanceof InetSocketAddress) {\n+        InetAddress inetAddress = ((InetSocketAddress) remoteAddress).getAddress();\n+        String addr = inetAddress.getHostAddress();\n+        if ((inetAddress instanceof Inet6Address && addr.startsWith(DP_IPV6_PREFIX))\n+          || (inetAddress instanceof Inet4Address && addr.startsWith(DP_IPV4_PREFIX))) {\n+          isDpAddr = true;", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\nindex e688d150..b62089bc 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n", "chunk": "@@ -233,17 +233,13 @@ public class DirectPathFallbackIT {\n       if (remoteAddress instanceof InetSocketAddress) {\n         InetAddress inetAddress = ((InetSocketAddress) remoteAddress).getAddress();\n         String addr = inetAddress.getHostAddress();\n-        if ((inetAddress instanceof Inet6Address && addr.startsWith(DP_IPV6_PREFIX))\n-          || (inetAddress instanceof Inet4Address && addr.startsWith(DP_IPV4_PREFIX))) {\n-          isDpAddr = true;\n-        }\n+        isDpAddr = addr.startsWith(DP_IPV6_PREFIX) ||  addr.startsWith(DP_IPV4_PREFIX);\n       }\n \n       if (!(isDpAddr && blackholeDpAddr.get())) {\n         super.connect(ctx, remoteAddress, localAddress, promise);\n       } else {\n         // Fail the connection fast\n-        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>>>>>> Failing connection\");\n         promise.setFailure(new IOException(\"fake error\"));\n       }\n     }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDIyOA==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441144228", "body": "Please remove the printlns.\r\n\r\nIf they are needed then maybe convert them into log.trace() or debug()", "bodyText": "Please remove the printlns.\nIf they are needed then maybe convert them into log.trace() or debug()", "bodyHTML": "<p dir=\"auto\">Please remove the printlns.</p>\n<p dir=\"auto\">If they are needed then maybe convert them into log.trace() or debug()</p>", "author": "igorbernstein2", "createdAt": "2020-06-16T21:10:44Z", "path": "google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java", "diffHunk": "@@ -225,23 +230,30 @@ public void connect(\n         ChannelPromise promise)\n         throws Exception {\n \n-      this.isIPv6 =\n-          (remoteAddress instanceof InetSocketAddress)\n-              && ((InetSocketAddress) remoteAddress).getAddress() instanceof Inet6Address;\n+      if (remoteAddress instanceof InetSocketAddress) {\n+        InetAddress inetAddress = ((InetSocketAddress) remoteAddress).getAddress();\n+        String addr = inetAddress.getHostAddress();\n+        if ((inetAddress instanceof Inet6Address && addr.startsWith(DP_IPV6_PREFIX))\n+          || (inetAddress instanceof Inet4Address && addr.startsWith(DP_IPV4_PREFIX))) {\n+          isDpAddr = true;\n+        }\n+      }\n \n-      if (!(isIPv6 && blackholeIPv6.get())) {\n+      if (!(isDpAddr && blackholeDpAddr.get())) {\n         super.connect(ctx, remoteAddress, localAddress, promise);\n       } else {\n         // Fail the connection fast\n+        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>>>>>> Failing connection\");\n         promise.setFailure(new IOException(\"fake error\"));\n       }\n     }\n \n     @Override\n     public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n-      boolean dropCall = isIPv6 && blackholeIPv6.get();\n+      boolean dropCall = isDpAddr && blackholeDpAddr.get();\n \n       if (dropCall) {\n+        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>> Dropping call.\");", "originalCommit": "eaf17be375067d4e6578cd6828bfe60d4b03b4a5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE4OTgyMw==", "url": "https://github.com/googleapis/java-bigtable/pull/347#discussion_r441189823", "bodyText": "Those were for my local debugging. Removed.", "author": "WeiranFang", "createdAt": "2020-06-16T23:05:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTE0NDIyOA=="}], "type": "inlineReview", "revised_code": {"commit": "a895aee086fd074326c093150de333153cbb7966", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\nindex e688d150..b62089bc 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n", "chunk": "@@ -253,7 +249,6 @@ public class DirectPathFallbackIT {\n       boolean dropCall = isDpAddr && blackholeDpAddr.get();\n \n       if (dropCall) {\n-        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>> Dropping call.\");\n         // Don't notify the next handler and increment counter\n         numBlocked.incrementAndGet();\n         ReferenceCountUtil.release(msg);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "b4edbd5cf420c652dec71ecccc236dbe823cfa4c", "changed_code": [{"header": "diff --git a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\nindex e688d150..6e48c121 100644\n--- a/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n+++ b/google-cloud-bigtable/src/test/java/com/google/cloud/bigtable/data/v2/it/DirectPathFallbackIT.java\n", "chunk": "@@ -253,7 +249,6 @@ public class DirectPathFallbackIT {\n       boolean dropCall = isDpAddr && blackholeDpAddr.get();\n \n       if (dropCall) {\n-        System.out.println(\">>>>>>>>>>>>>>>>>>>>>>> Dropping call.\");\n         // Don't notify the next handler and increment counter\n         numBlocked.incrementAndGet();\n         ReferenceCountUtil.release(msg);\n", "next_change": null}]}, "commits_in_main": [{"oid": "b4edbd5cf420c652dec71ecccc236dbe823cfa4c", "message": "Merge commit", "committedDate": null}, {"oid": "04433433b4f3c6f1a17105f85bb5c2d3372fc4e2", "committedDate": "2021-04-08 15:30:42 -0400", "message": "chore: update DirectPath profiles (#709)"}, {"oid": "5fa00c87fa774aafb9de328529df3a8f6c51f15c", "committedDate": "2022-02-07 22:40:47 +0000", "message": "chore(test): fix api breakage in DirectPath integration tests (#1157)"}]}, {"oid": "a895aee086fd074326c093150de333153cbb7966", "url": "https://github.com/googleapis/java-bigtable/commit/a895aee086fd074326c093150de333153cbb7966", "message": "Resolve comments", "committedDate": "2020-06-16T23:24:37Z", "type": "commit"}, {"oid": "a895aee086fd074326c093150de333153cbb7966", "url": "https://github.com/googleapis/java-bigtable/commit/a895aee086fd074326c093150de333153cbb7966", "message": "Resolve comments", "committedDate": "2020-06-16T23:24:37Z", "type": "forcePushed"}, {"oid": "0ec0b60abbf6caed28ff833a4839ca3c5178bac2", "url": "https://github.com/googleapis/java-bigtable/commit/0ec0b60abbf6caed28ff833a4839ca3c5178bac2", "message": "Merge branch 'master' into directpath", "committedDate": "2020-06-16T23:30:40Z", "type": "commit"}, {"oid": "6327736cd7ef852a3a949288702f131730c58a15", "url": "https://github.com/googleapis/java-bigtable/commit/6327736cd7ef852a3a949288702f131730c58a15", "message": "fix lint error", "committedDate": "2020-06-23T06:26:01Z", "type": "commit"}, {"oid": "364118f79581402a7867cc92a49ff2b4106b02d2", "url": "https://github.com/googleapis/java-bigtable/commit/364118f79581402a7867cc92a49ff2b4106b02d2", "message": "update directpath test endpoint", "committedDate": "2020-06-23T21:50:41Z", "type": "commit"}]}