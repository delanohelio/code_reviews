{"pr_number": 2270, "pr_title": "Execute explicitly selected classes regardless of class name filters", "pr_author": "juliette-derancourt", "pr_createdAt": "2020-04-23T18:31:42Z", "pr_url": "https://github.com/junit-team/junit5/pull/2270", "timeline": [{"oid": "687306d4bf032468ce3d4bf4ceb8e408809015a2", "url": "https://github.com/junit-team/junit5/commit/687306d4bf032468ce3d4bf4ceb8e408809015a2", "message": "Add explicitly selected classes from --select-class and --select-method to the include patterns", "committedDate": "2020-04-23T18:25:22Z", "type": "commit"}, {"oid": "e351b32e64fdd449491d3e4c110cca526b3c7b13", "url": "https://github.com/junit-team/junit5/commit/e351b32e64fdd449491d3e4c110cca526b3c7b13", "message": "Use `ReflectionUtils.parseFullyQualifiedMethodName()` for readability", "committedDate": "2020-04-23T18:35:10Z", "type": "commit"}, {"oid": "ea95ec2ba8b27c42052613315d9177520631cd94", "url": "https://github.com/junit-team/junit5/commit/ea95ec2ba8b27c42052613315d9177520631cd94", "message": "Extract recurring filter assertion", "committedDate": "2020-04-23T18:35:10Z", "type": "commit"}, {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01", "url": "https://github.com/junit-team/junit5/commit/eb41e46206a1447b0e0f0e3db21ff128b1862d01", "message": "Update release notes", "committedDate": "2020-04-23T18:35:10Z", "type": "commit"}, {"oid": "eb41e46206a1447b0e0f0e3db21ff128b1862d01", "url": "https://github.com/junit-team/junit5/commit/eb41e46206a1447b0e0f0e3db21ff128b1862d01", "message": "Update release notes", "committedDate": "2020-04-23T18:35:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ==", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r414032435", "body": "Not sure if this is a good idea... Might need a better name \ud83e\udd14 ", "bodyText": "Not sure if this is a good idea... Might need a better name \ud83e\udd14", "bodyHTML": "<p dir=\"auto\">Not sure if this is a good idea... Might need a better name <g-emoji class=\"g-emoji\" alias=\"thinking\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f914.png\">\ud83e\udd14</g-emoji></p>", "author": "juliette-derancourt", "createdAt": "2020-04-23T18:36:36Z", "path": "platform-tests/src/test/java/org/junit/platform/console/tasks/DiscoveryRequestCreatorTests.java", "diffHunk": "@@ -282,6 +298,10 @@ private LauncherDiscoveryRequest convert() {\n \t\treturn creator.toDiscoveryRequest(options);\n \t}\n \n+\tprivate void assertFilters(Filter<?> filter, String filteredElement) {", "originalCommit": "eb41e46206a1447b0e0f0e3db21ff128b1862d01", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjkyNQ==", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415036925", "bodyText": "assertFilterDescriptionContains?\nShould we rather call the filter and check it includes/excludes the expected names?", "author": "marcphilipp", "createdAt": "2020-04-25T10:49:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMzNzI4Mw==", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415337283", "bodyText": "Indeed!", "author": "juliette-derancourt", "createdAt": "2020-04-26T15:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMjQzNQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjUzOA==", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415036538", "body": "We should quote the literal class names using `Pattern.quote`, e.g. like this:\r\n\r\n```suggestion\r\n\tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions options) {\r\n\t\tStream<Stream<String>> patternStreams = Stream.of( //\r\n\t\t\toptions.getIncludedClassNamePatterns().stream(), //\r\n\t\t\toptions.getSelectedClasses().stream() //\r\n\t\t\t\t\t.map(Pattern::quote), //\r\n\t\t\toptions.getSelectedMethods().stream() //\r\n\t\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\r\n\t\t\t\t\t.map(Pattern::quote));\r\n\t\treturn includeClassNamePatterns(patternStreams //\r\n\t\t\t\t.flatMap(Function.identity()) //\r\n\t\t\t\t.toArray(String[]::new));\r\n\t}\r\n```", "bodyText": "We should quote the literal class names using Pattern.quote, e.g. like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions patterns) {\n          \n          \n            \n            \t\tList<String> classNamePatterns = new ArrayList<>();\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getIncludedClassNamePatterns());\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getSelectedClasses());\n          \n          \n            \n            \t\tclassNamePatterns.addAll(patterns.getSelectedMethods().stream() //\n          \n          \n            \n            \t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n          \n          \n            \n            \t\t\t\t.collect(Collectors.toList()));\n          \n          \n            \n            \t\treturn includeClassNamePatterns(classNamePatterns.toArray(new String[0]));\n          \n          \n            \n            \t}\n          \n          \n            \n            \tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions options) {\n          \n          \n            \n            \t\tStream<Stream<String>> patternStreams = Stream.of( //\n          \n          \n            \n            \t\t\toptions.getIncludedClassNamePatterns().stream(), //\n          \n          \n            \n            \t\t\toptions.getSelectedClasses().stream() //\n          \n          \n            \n            \t\t\t\t\t.map(Pattern::quote), //\n          \n          \n            \n            \t\t\toptions.getSelectedMethods().stream() //\n          \n          \n            \n            \t\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n          \n          \n            \n            \t\t\t\t\t.map(Pattern::quote));\n          \n          \n            \n            \t\treturn includeClassNamePatterns(patternStreams //\n          \n          \n            \n            \t\t\t\t.flatMap(Function.identity()) //\n          \n          \n            \n            \t\t\t\t.toArray(String[]::new));\n          \n          \n            \n            \t}", "bodyHTML": "<p dir=\"auto\">We should quote the literal class names using <code>Pattern.quote</code>, e.g. like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">ClassNameFilter</span> includedClassNamePatterns(<span class=\"pl-smi\">CommandLineOptions</span> patterns) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"146\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">String</span>&gt;</span> classNamePatterns <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"147\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tclassNamePatterns<span class=\"pl-k\">.</span>addAll(patterns<span class=\"pl-k\">.</span>getIncludedClassNamePatterns());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"148\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tclassNamePatterns<span class=\"pl-k\">.</span>addAll(patterns<span class=\"pl-k\">.</span>getSelectedClasses());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"149\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\tclassNamePatterns<span class=\"pl-k\">.</span>addAll(patterns<span class=\"pl-k\">.</span>getSelectedMethods()<span class=\"pl-k\">.</span>stream() <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"150\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t.map(name <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">ReflectionUtils</span><span class=\"pl-k\">.</span>parseFullyQualifiedMethodName(name)[<span class=\"pl-c1\">0</span>]) <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"151\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t.collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toList()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"152\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">return</span> includeClassNamePatterns(classNamePatterns<span class=\"pl-k\">.</span>toArray(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">String</span>[<span class=\"pl-c1\">0</span>]));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"153\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"145\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">ClassNameFilter</span> includedClassNamePatterns(<span class=\"pl-smi\">CommandLineOptions</span> options) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"146\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">Stream&lt;<span class=\"pl-k\">Stream&lt;<span class=\"pl-smi\">String</span>&gt;</span>&gt;</span> patternStreams <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Stream</span><span class=\"pl-k\">.</span>of( <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"147\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\toptions<span class=\"pl-k\">.</span>getIncludedClassNamePatterns()<span class=\"pl-k\">.</span>stream(), <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"148\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\toptions<span class=\"pl-k\">.</span>getSelectedClasses()<span class=\"pl-k\">.</span>stream() <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"149\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t.map(<span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">::</span>quote), <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"150\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\toptions<span class=\"pl-k\">.</span>getSelectedMethods()<span class=\"pl-k\">.</span>stream() <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"151\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t.map(name <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">ReflectionUtils</span><span class=\"pl-k\">.</span>parseFullyQualifiedMethodName(name)[<span class=\"pl-c1\">0</span>]) <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"152\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t.map(<span class=\"pl-smi\">Pattern</span><span class=\"pl-k\">::</span>quote));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"153\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">return</span> includeClassNamePatterns(patternStreams <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"154\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t.flatMap(<span class=\"pl-smi\">Function</span><span class=\"pl-k\">.</span>identity()) <span class=\"pl-c\"><span class=\"pl-c\">//</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"155\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t.toArray(<span class=\"pl-k\">String</span>[]<span class=\"pl-k\">::</span><span class=\"pl-k\">new</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"156\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t}</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "marcphilipp", "createdAt": "2020-04-25T10:46:33Z", "path": "junit-platform-console/src/main/java/org/junit/platform/console/tasks/DiscoveryRequestCreator.java", "diffHunk": "@@ -127,4 +129,14 @@ private void addFilters(LauncherDiscoveryRequestBuilder requestBuilder, CommandL\n \t\t}\n \t}\n \n+\tprivate ClassNameFilter includedClassNamePatterns(CommandLineOptions patterns) {\n+\t\tList<String> classNamePatterns = new ArrayList<>();\n+\t\tclassNamePatterns.addAll(patterns.getIncludedClassNamePatterns());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedClasses());\n+\t\tclassNamePatterns.addAll(patterns.getSelectedMethods().stream() //\n+\t\t\t\t.map(name -> ReflectionUtils.parseFullyQualifiedMethodName(name)[0]) //\n+\t\t\t\t.collect(Collectors.toList()));\n+\t\treturn includeClassNamePatterns(classNamePatterns.toArray(new String[0]));\n+\t}", "originalCommit": "eb41e46206a1447b0e0f0e3db21ff128b1862d01", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTMzNzA5NQ==", "url": "https://github.com/junit-team/junit5/pull/2270#discussion_r415337095", "bodyText": "Haven't thought of that, thanks! \ud83d\udc4d", "author": "juliette-derancourt", "createdAt": "2020-04-26T15:37:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTAzNjUzOA=="}], "type": "inlineReview"}, {"oid": "41aa3a2b07e45ec083407e2aa267d75777f0a74c", "url": "https://github.com/junit-team/junit5/commit/41aa3a2b07e45ec083407e2aa267d75777f0a74c", "message": "Improvements", "committedDate": "2020-04-26T15:49:08Z", "type": "commit"}]}