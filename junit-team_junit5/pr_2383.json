{"pr_number": 2383, "pr_title": "Add tests for whitespace within CsvSource columns", "pr_author": "hosuaby", "pr_createdAt": "2020-08-16T11:59:03Z", "pr_url": "https://github.com/junit-team/junit5/pull/2383", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwNDI3NQ==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471104275", "body": "This method does not exist", "bodyText": "This method does not exist", "bodyHTML": "<p dir=\"auto\">This method does not exist</p>", "author": "hosuaby", "createdAt": "2020-08-16T11:59:41Z", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/MethodSource.java", "diffHunk": "@@ -109,7 +109,7 @@\n \t *\n \t * <p>Factory methods in external classes must be referenced by <em>fully\n \t * qualified method name</em> &mdash; for example,\n-\t * {@code com.example.StringsProviders#blankStrings}.", "originalCommit": "868325aeb2e1d9084903fd05417f9f042c40d5a4", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwNTUzNg==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471105536", "bodyText": "This was merely meant as an example for the syntax of \"fully qualified method names\".", "author": "marcphilipp", "createdAt": "2020-08-16T12:11:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwNDI3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwNTQ2MQ==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471105461", "body": "I think we should keep this as-is, but add a paragraph below this one that explains that the delimiter can be customized.", "bodyText": "I think we should keep this as-is, but add a paragraph below this one that explains that the delimiter can be customized.", "bodyHTML": "<p dir=\"auto\">I think we should keep this as-is, but add a paragraph below this one that explains that the delimiter can be customized.</p>", "author": "marcphilipp", "createdAt": "2020-08-16T12:10:53Z", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvSource.java", "diffHunk": "@@ -22,7 +22,7 @@\n \n /**\n  * {@code @CsvSource} is an {@link ArgumentsSource} which reads\n- * comma-separated values (CSV) from one or more supplied\n+ * delimiter-separated (by default with coma) values (CSV) from one or more supplied", "originalCommit": "868325aeb2e1d9084903fd05417f9f042c40d5a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwNTU3Nw==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471105577", "body": "```suggestion\r\n\tvoid doesNotTrimSpacesInsideQuotes() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tvoid doNotTrimsSpacesInsideQuotes() {\n          \n          \n            \n            \tvoid doesNotTrimSpacesInsideQuotes() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">doNotTrimsSpacesInsideQuotes</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">doesNotTrimSpacesInsideQuotes</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "marcphilipp", "createdAt": "2020-08-16T12:11:56Z", "path": "junit-jupiter-params/src/test/java/org/junit/jupiter/params/provider/CsvArgumentsProviderTests.java", "diffHunk": "@@ -97,6 +97,15 @@ void understandsEscapeCharacters() {\n \t\tassertThat(arguments).containsExactly(array(\"foo or 'bar'\", \"baz\"));\n \t}\n \n+\t@Test\n+\tvoid doNotTrimsSpacesInsideQuotes() {", "originalCommit": "868325aeb2e1d9084903fd05417f9f042c40d5a4", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwOTI5OQ==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471109299", "body": "```suggestion\r\n * <p>The column delimiter (defaults to comma) can be customized with either\r\n   {@link #delimiter()} or {@link #delimiterString()}.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * <p>Fields delimiter can be specified with {@link #delimiter()} or\n          \n          \n            \n             * {@link #delimiterString()}. By default it is coma.\n          \n          \n            \n             * <p>The column delimiter (defaults to comma) can be customized with either\n          \n          \n            \n               {@link #delimiter()} or {@link #delimiterString()}.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi x x-first\">Fields</span><span class=\"x x-last\"> </span>delimiter can be <span class=\"x x-first x-last\">specified</span> with <span class=\"x x-first\">{</span><span class=\"pl-k x\">@link</span><span class=\"x x-last\"> #delimiter()} or</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k x x-first\">*</span><span class=\"x x-last\"> </span>{<span class=\"pl-k\">@link</span> #<span class=\"x x-first x-last\">delimiterString</span>()}<span class=\"pl-c1 x x-first\">.</span><span class=\"x\"> </span><span class=\"pl-smi x\">By</span><span class=\"x\"> </span><span class=\"pl-k x\">default</span><span class=\"x x-last\"> it is coma</span>.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">&lt;</span>p<span class=\"pl-k\">&gt;</span><span class=\"pl-smi x x-first\">The</span><span class=\"x x-last\"> column </span>delimiter <span class=\"x x-first x-last\">(defaults to comma) </span>can be <span class=\"x x-first x-last\">customized</span> with <span class=\"x x-first x-last\">either</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"x x-first x-last\">  </span>{<span class=\"pl-k\">@link</span> #<span class=\"x x-first x-last\">delimiter</span>()}<span class=\"x x-first\"> or {</span><span class=\"pl-k x\">@link</span><span class=\"x x-last\"> #delimiterString()}</span><span class=\"pl-c1\">.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "marcphilipp", "createdAt": "2020-08-16T12:49:23Z", "path": "junit-jupiter-params/src/main/java/org/junit/jupiter/params/provider/CsvSource.java", "diffHunk": "@@ -25,6 +25,9 @@\n  * comma-separated values (CSV) from one or more supplied\n  * {@linkplain #value CSV lines}.\n  *\n+ * <p>Fields delimiter can be specified with {@link #delimiter()} or\n+ * {@link #delimiterString()}. By default it is coma.", "originalCommit": "2e6ff408ad29014e3f7555c53ccd850802e7f2ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwOTkyMA==", "url": "https://github.com/junit-team/junit5/pull/2383#discussion_r471109920", "bodyText": "Done", "author": "hosuaby", "createdAt": "2020-08-16T12:56:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTEwOTI5OQ=="}], "type": "inlineReview"}, {"oid": "b6ef00a4d27b259e8b4702abf4387502ecf31bec", "url": "https://github.com/junit-team/junit5/commit/b6ef00a4d27b259e8b4702abf4387502ecf31bec", "message": "TESTS: add test of CsvSource with blank strings", "committedDate": "2020-08-16T12:55:38Z", "type": "commit"}]}