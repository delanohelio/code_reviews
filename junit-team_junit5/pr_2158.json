{"pr_number": 2158, "pr_title": "Fix stack overflow error in assertIterableEquals", "pr_author": "sormuras", "pr_createdAt": "2020-01-20T12:17:46Z", "pr_url": "https://github.com/junit-team/junit5/pull/2158", "timeline": [{"oid": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "url": "https://github.com/junit-team/junit5/commit/990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "message": "Fix stack overflow error in assertIterableEquals\n\nPrior to this commit an iterable of iterables (here instances\nof java.nio.file.Path) passed to method `assertIterableEquals`\nin class `Assertions` of the JUnit Jupiter API yielded a\n`StackOverflowError`.\n\nThis commit prevent the eternal while-loop by leveraging the\n`equals()`-implementation of the non-null expected element.\n\nFixes #2157", "committedDate": "2020-01-20T12:16:35Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4MzQ2Nw==", "url": "https://github.com/junit-team/junit5/pull/2158#discussion_r368683467", "body": "```suggestion\r\n\t\t\tif (Objects.equals(expectedElement, actualElement)) {\r\n```\r\n\r\nYou can then also merge the two `if`s into one because `Objects.equals()` already checks for `==`.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {\n          \n          \n            \n            \t\t\tif (Objects.equals(expectedElement, actualElement)) {\n          \n      \n    \n    \n  \n\nYou can then also merge the two ifs into one because Objects.equals() already checks for ==.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">if</span> (<span class=\"x x-first\">expectedElement </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> expectedElement</span><span class=\"pl-k\">.</span>equals(actualElement)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-smi x x-first x-last\">Objects</span><span class=\"pl-k\">.</span>equals(<span class=\"x x-first x-last\">expectedElement, </span>actualElement)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">You can then also merge the two <code>if</code>s into one because <code>Objects.equals()</code> already checks for <code>==</code>.</p>", "author": "marcphilipp", "createdAt": "2020-01-20T18:38:14Z", "path": "junit-jupiter-api/src/main/java/org/junit/jupiter/api/AssertIterableEquals.java", "diffHunk": "@@ -67,6 +67,11 @@ private static void assertIterableEquals(Iterable<?> expected, Iterable<?> actua\n \t\t\tif (expectedElement == actualElement) {\n \t\t\t\tcontinue;\n \t\t\t}\n+\t\t\t// Prevent stack overflow error.\n+\t\t\t// See https://github.com/junit-team/junit5/issues/2157 for details.\n+\t\t\tif (expectedElement != null && expectedElement.equals(actualElement)) {", "originalCommit": "990d84fd62d0579e64f76b8b6cb54256ea81c4e0", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4NDk3MQ==", "url": "https://github.com/junit-team/junit5/pull/2158#discussion_r368684971", "bodyText": "Neat improvement.", "author": "sormuras", "createdAt": "2020-01-20T18:43:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY4MzQ2Nw=="}], "type": "inlineReview"}, {"oid": "cb715e95d3c9c1d37e75a617af939f0f68208182", "url": "https://github.com/junit-team/junit5/commit/cb715e95d3c9c1d37e75a617af939f0f68208182", "message": "Use Objects.equals()\n\nCo-Authored-By: Marc Philipp <mail@marcphilipp.de>", "committedDate": "2020-01-20T18:42:30Z", "type": "commit"}, {"oid": "052637b1ef33cac18a737a57fa5c31c862a0613d", "url": "https://github.com/junit-team/junit5/commit/052637b1ef33cac18a737a57fa5c31c862a0613d", "message": "Add test for interlocked recursive structures", "committedDate": "2020-01-20T18:57:01Z", "type": "commit"}, {"oid": "9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "url": "https://github.com/junit-team/junit5/commit/9cd5a40587dd5a27a8cd1c2f87e6575194f3892d", "message": "Simplify code", "committedDate": "2020-01-20T18:58:06Z", "type": "commit"}]}