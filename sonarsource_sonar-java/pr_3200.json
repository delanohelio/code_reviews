{"pr_number": 3200, "pr_title": "SONARJAVA-3476 Improve issue location for S5843", "pr_author": "sebastian-hungerecker-sonarsource", "pr_createdAt": "2020-09-21T14:47:16Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3200", "timeline": [{"oid": "2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "url": "https://github.com/SonarSource/sonar-java/commit/2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "message": "SONARJAVA-3476 Improve issue location for S5843", "committedDate": "2020-09-21T15:05:31Z", "type": "commit"}, {"oid": "2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "url": "https://github.com/SonarSource/sonar-java/commit/2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "message": "SONARJAVA-3476 Improve issue location for S5843", "committedDate": "2020-09-21T15:05:31Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwODY3NA==", "url": "https://github.com/SonarSource/sonar-java/pull/3200#discussion_r492508674", "body": "Why not simply return directly `\"`? It does not hurt and will not make anything fail in the worst-case scenario!", "bodyText": "Why not simply return directly \"? It does not hurt and will not make anything fail in the worst-case scenario!", "bodyHTML": "<p dir=\"auto\">Why not simply return directly <code>\"</code>? It does not hurt and will not make anything fail in the worst-case scenario!</p>", "author": "m-g-sonar", "createdAt": "2020-09-22T06:52:29Z", "path": "java-frontend/src/main/java/org/sonar/java/regex/ast/OpeningQuote.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * SonarQube Java\n+ * Copyright (C) 2012-2020 SonarSource SA\n+ * mailto:info AT sonarsource DOT com\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU Lesser General Public\n+ * License as published by the Free Software Foundation; either\n+ * version 3 of the License, or (at your option) any later version.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public License\n+ * along with this program; if not, write to the Free Software Foundation,\n+ * Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n+ */\n+package org.sonar.java.regex.ast;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * This class should only be instantiated by RegexParseResult.openingQuote() and only used when using\n+ * the opening quote of a regex as an issue location. It should never appear within a regex AST.\n+ */\n+public class OpeningQuote extends RegexSyntaxElement {\n+\n+  public OpeningQuote(RegexSource source) {\n+    super(source, new IndexRange(-1, 0));\n+  }\n+\n+  @Override\n+  public String getText() {\n+    throw new UnsupportedOperationException(\"getText should not be called on OpeningQuote objects.\");", "originalCommit": "2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwOTcwMw==", "url": "https://github.com/SonarSource/sonar-java/pull/3200#discussion_r492509703", "body": "I'm not sure it's good to have its visibility increased. I would prefer to have a getter which would return an unmodifiable list, such as:\r\n```java\r\nList<LiteralTree> stringLiterals() {\r\n  return Collections.unmodifiableList(stringLiterals);\r\n}\r\n```\r\nIt would prevent any accidental modification of the list.", "bodyText": "I'm not sure it's good to have its visibility increased. I would prefer to have a getter which would return an unmodifiable list, such as:\nList<LiteralTree> stringLiterals() {\n  return Collections.unmodifiableList(stringLiterals);\n}\nIt would prevent any accidental modification of the list.", "bodyHTML": "<p dir=\"auto\">I'm not sure it's good to have its visibility increased. I would prefer to have a getter which would return an unmodifiable list, such as:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"List&lt;LiteralTree&gt; stringLiterals() {\n  return Collections.unmodifiableList(stringLiterals);\n}\"><pre><span class=\"pl-k\">List&lt;<span class=\"pl-smi\">LiteralTree</span>&gt;</span> stringLiterals() {\n  <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>unmodifiableList(stringLiterals);\n}</pre></div>\n<p dir=\"auto\">It would prevent any accidental modification of the list.</p>", "author": "m-g-sonar", "createdAt": "2020-09-22T06:54:46Z", "path": "java-frontend/src/main/java/org/sonar/java/regex/ast/RegexSource.java", "diffHunk": "@@ -31,7 +31,7 @@\n  */\n public class RegexSource {\n \n-  private final List<LiteralTree> stringLiterals;\n+  final List<LiteralTree> stringLiterals;", "originalCommit": "2f5b9c0e44ef4f70506fdbdfccffd94b1efba3ca", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "75c3074a99915df77fbe959e73a0cd6a8fafc93d", "url": "https://github.com/SonarSource/sonar-java/commit/75c3074a99915df77fbe959e73a0cd6a8fafc93d", "message": "Add getter for string literals", "committedDate": "2020-09-23T09:15:24Z", "type": "commit"}]}