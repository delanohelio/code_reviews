{"pr_number": 2931, "pr_title": "SONARJAVA-2549 Improve S2293 to handle cases where constructor is used in argument", "pr_author": "m-g-sonar", "pr_createdAt": "2020-05-01T11:42:14Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/2931", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODUyODQ4Ng==", "url": "https://github.com/SonarSource/sonar-java/pull/2931#discussion_r418528486", "body": "```suggestion\r\n  private static boolean usedAsArgumentShouldUseDiamond(NewClassTree newClassTree) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static boolean usedAsArgumentShouldUseDiamon(NewClassTree newClassTree) {\n          \n          \n            \n              private static boolean usedAsArgumentShouldUseDiamond(NewClassTree newClassTree) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">usedAsArgumentShouldUseDiamon</span>(<span class=\"pl-smi\">NewClassTree</span> newClassTree) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">usedAsArgumentShouldUseDiamond</span>(<span class=\"pl-smi\">NewClassTree</span> newClassTree) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-05-01T12:52:47Z", "path": "java-checks/src/main/java/org/sonar/java/checks/DiamondOperatorCheck.java", "diffHunk": "@@ -79,15 +82,63 @@ public boolean isCompatibleWithJavaVersion(JavaVersion version) {\n   public void visitNode(Tree tree) {\n     NewClassTree newClassTree = (NewClassTree) tree;\n     TypeTree newTypeTree = newClassTree.identifier();\n-    if (newClassTree.classBody() == null && isParameterizedType(newTypeTree)) {\n-      TypeTree type = getTypeFromExpression(tree.parent(), expressionKindsToCheck);\n-      if (type != null && isParameterizedType(type)) {\n-        reportIssue(\n-          ((ParameterizedTypeTree) newTypeTree).typeArguments(),\n-          \"Replace the type specification in this constructor call with the diamond operator (\\\"<>\\\").\" +\n-            context.getJavaVersion().java7CompatibilityMessage());\n-      }\n+    if (!isParameterizedType(newTypeTree) || newClassTree.classBody() != null) {\n+      return;\n+    }\n+    TypeTree type = getTypeFromExpression(tree.parent(), expressionKindsToCheck);\n+    if ((type != null && isParameterizedType(type))\n+      || usedAsArgumentShouldUseDiamon(newClassTree)) {\n+      reportIssue(\n+        ((ParameterizedTypeTree) newTypeTree).typeArguments(),\n+        \"Replace the type specification in this constructor call with the diamond operator (\\\"<>\\\").\" +\n+          context.getJavaVersion().java7CompatibilityMessage());\n+    }\n+  }\n+\n+  private static boolean usedAsArgumentShouldUseDiamon(NewClassTree newClassTree) {", "originalCommit": "72e814ba7533bb5e318a51dd3fe7537ac08ed8ba", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b206c71b83a858701afaab637e9e47eddbb40267", "url": "https://github.com/SonarSource/sonar-java/commit/b206c71b83a858701afaab637e9e47eddbb40267", "message": "SONARJAVA-2549 Move S2293 test files", "committedDate": "2020-05-04T07:47:13Z", "type": "commit"}, {"oid": "30f8f8b1ad9e67b893f63e314267c5a5f2c84bd0", "url": "https://github.com/SonarSource/sonar-java/commit/30f8f8b1ad9e67b893f63e314267c5a5f2c84bd0", "message": "SONARJAVA-2549 Improve S2293 to handle cases where constructor is used in argument", "committedDate": "2020-05-04T07:49:58Z", "type": "commit"}, {"oid": "30f8f8b1ad9e67b893f63e314267c5a5f2c84bd0", "url": "https://github.com/SonarSource/sonar-java/commit/30f8f8b1ad9e67b893f63e314267c5a5f2c84bd0", "message": "SONARJAVA-2549 Improve S2293 to handle cases where constructor is used in argument", "committedDate": "2020-05-04T07:49:58Z", "type": "forcePushed"}]}