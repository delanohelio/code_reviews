{"pr_number": 3267, "pr_title": "SONARJAVA-3545 Rule S4973 shouldn't report an issue if \"==\" is used to compare Boolean constants", "pr_author": "margarita-nedzelska-sonarsource", "pr_createdAt": "2020-11-13T16:51:39Z", "pr_url": "https://github.com/SonarSource/sonar-java/pull/3267", "timeline": [{"oid": "b34210f0af5df355c0c434a0f190fd2cf61fbda2", "url": "https://github.com/SonarSource/sonar-java/commit/b34210f0af5df355c0c434a0f190fd2cf61fbda2", "message": "SONARJAVA-3545 Rule S4973 shouldn't report an issue if \"==\" is used to compare Boolean constants", "committedDate": "2020-11-16T08:28:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA1ODMzNA==", "url": "https://github.com/SonarSource/sonar-java/pull/3267#discussion_r524058334", "body": "```suggestion\r\n  private static boolean isCompareWithBooleanConstant(ExpressionTree left, ExpressionTree right) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private static boolean isCompareWithBoleanConstant(ExpressionTree left, ExpressionTree right) {\n          \n          \n            \n              private static boolean isCompareWithBooleanConstant(ExpressionTree left, ExpressionTree right) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isCompareWithBoleanConstant</span>(<span class=\"pl-smi\">ExpressionTree</span> left, <span class=\"pl-smi\">ExpressionTree</span> right) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isCompareWithBooleanConstant</span>(<span class=\"pl-smi\">ExpressionTree</span> left, <span class=\"pl-smi\">ExpressionTree</span> right) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "quentin-jaquier-sonarsource", "createdAt": "2020-11-16T10:01:02Z", "path": "java-checks/src/main/java/org/sonar/java/checks/CompareStringsBoxedTypesWithEqualsCheck.java", "diffHunk": "@@ -31,9 +33,15 @@ protected void checkEqualityExpression(BinaryExpressionTree tree) {\n     Type leftOpType = tree.leftOperand().symbolType();\n     Type rightOpType = tree.rightOperand().symbolType();\n     if (!isNullComparison(leftOpType, rightOpType)\n+      && !isCompareWithBoleanConstant(tree.leftOperand(), tree.rightOperand())\n       && (isStringType(leftOpType, rightOpType) || isBoxedType(leftOpType, rightOpType))) {\n       reportIssue(tree.operatorToken());\n     }\n   }\n+  \n+  private static boolean isCompareWithBoleanConstant(ExpressionTree left, ExpressionTree right) {", "originalCommit": "b34210f0af5df355c0c434a0f190fd2cf61fbda2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7bc9f990f4144c651f780de377d2fec5b45e747e", "url": "https://github.com/SonarSource/sonar-java/commit/7bc9f990f4144c651f780de377d2fec5b45e747e", "message": "SONARJAVA-3545 Rule S4973 shouldn't report an issue if \"==\" is used to compare Boolean constants", "committedDate": "2020-11-16T11:08:29Z", "type": "commit"}, {"oid": "7bc9f990f4144c651f780de377d2fec5b45e747e", "url": "https://github.com/SonarSource/sonar-java/commit/7bc9f990f4144c651f780de377d2fec5b45e747e", "message": "SONARJAVA-3545 Rule S4973 shouldn't report an issue if \"==\" is used to compare Boolean constants", "committedDate": "2020-11-16T11:08:29Z", "type": "forcePushed"}]}