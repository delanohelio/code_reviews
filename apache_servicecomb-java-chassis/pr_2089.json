{"pr_number": 2089, "pr_title": "fix typo and test case assert not correct in higher version of JDK", "pr_author": "liubao68", "pr_createdAt": "2020-11-27T06:20:17Z", "pr_url": "https://github.com/apache/servicecomb-java-chassis/pull/2089", "timeline": [{"oid": "a34530e3628c89648865977a598b4143b7743e16", "url": "https://github.com/apache/servicecomb-java-chassis/commit/a34530e3628c89648865977a598b4143b7743e16", "message": "fix typo and test case assert not correct in higher version of JDK", "committedDate": "2020-11-27T06:18:01Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQwNDY0Nw==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2089#discussion_r531404647", "body": "```java\r\nThrowable throwable = Assertions.catchThrowable(()->SSLManager.createSSLContext(option, custom));\r\nassertThat(throwable).isInstanceOf(IllegalArgumentException.class);\r\n```\r\n\r\n\u5f02\u5e38\u7684assert\u573a\u666f\uff0c\u7528assertJ\u4f1a\u7b80\u5355\u6e05\u6670\u5f97\u591a", "bodyText": "Throwable throwable = Assertions.catchThrowable(()->SSLManager.createSSLContext(option, custom));\nassertThat(throwable).isInstanceOf(IllegalArgumentException.class);\n\u5f02\u5e38\u7684assert\u573a\u666f\uff0c\u7528assertJ\u4f1a\u7b80\u5355\u6e05\u6670\u5f97\u591a", "bodyHTML": "<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Throwable throwable = Assertions.catchThrowable(()-&gt;SSLManager.createSSLContext(option, custom));\nassertThat(throwable).isInstanceOf(IllegalArgumentException.class);\n\"><pre><span class=\"pl-smi\">Throwable</span> throwable <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Assertions</span><span class=\"pl-k\">.</span>catchThrowable(()<span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span><span class=\"pl-smi\">SSLManager</span><span class=\"pl-k\">.</span>createSSLContext(option, custom));\nassertThat(throwable)<span class=\"pl-k\">.</span>isInstanceOf(<span class=\"pl-smi\">IllegalArgumentException</span><span class=\"pl-k\">.</span>class);</pre></div>\n<p dir=\"auto\">\u5f02\u5e38\u7684assert\u573a\u666f\uff0c\u7528assertJ\u4f1a\u7b80\u5355\u6e05\u6670\u5f97\u591a</p>", "author": "wujimin", "createdAt": "2020-11-27T06:28:59Z", "path": "foundations/foundation-ssl/src/test/java/org/apache/servicecomb/foundation/ssl/SSLManagerTest.java", "diffHunk": "@@ -249,8 +250,8 @@ public final SSLContext getInstance(String type) throws NoSuchAlgorithmException\n     };\n \n     try {\n-      SSLContext context = SSLManager.createSSLContext(option, custom);\n-      Assert.assertNotNull(context);\n+      SSLManager.createSSLContext(option, custom);\n+      Assert.assertNotNull(null);\n     } catch (Exception e) {\n       Assert.assertEquals(\"java.lang.IllegalArgumentException\", e.getClass().getName());\n     }", "originalCommit": "a34530e3628c89648865977a598b4143b7743e16", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQxMjc0Mg==", "url": "https://github.com/apache/servicecomb-java-chassis/pull/2089#discussion_r531412742", "bodyText": "OK . Will try that in the future.", "author": "liubao68", "createdAt": "2020-11-27T06:56:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQwNDY0Nw=="}], "type": "inlineReview"}]}