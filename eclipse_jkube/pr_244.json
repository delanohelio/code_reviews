{"pr_number": 244, "pr_title": "Fix #218: Remove RuntimeMode mode parameter from Plugins", "pr_author": "rohanKanojia", "pr_createdAt": "2020-06-15T12:10:24Z", "pr_url": "https://github.com/eclipse/jkube/pull/244", "timeline": [{"oid": "67c99e9e623576f9e78e9014899b8960c3818b56", "url": "https://github.com/eclipse/jkube/commit/67c99e9e623576f9e78e9014899b8960c3818b56", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-16T10:47:44Z", "type": "forcePushed"}, {"oid": "a4f017663d0c901b86a879cc4c2017eb2180add3", "url": "https://github.com/eclipse/jkube/commit/a4f017663d0c901b86a879cc4c2017eb2180add3", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-16T11:20:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzODc3MQ==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442638771", "body": "Plexus deserialization is not configurable for enums (this is the reason why this values were still in lower-case).\r\nMake sure that this value is never deserialized from a Maven property (i.e. `jkube.mode`), if it still is deserialized somewhere, it will fail).\r\n\r\n", "bodyText": "Plexus deserialization is not configurable for enums (this is the reason why this values were still in lower-case).\nMake sure that this value is never deserialized from a Maven property (i.e. jkube.mode), if it still is deserialized somewhere, it will fail).", "bodyHTML": "<p dir=\"auto\">Plexus deserialization is not configurable for enums (this is the reason why this values were still in lower-case).<br>\nMake sure that this value is never deserialized from a Maven property (i.e. <code>jkube.mode</code>), if it still is deserialized somewhere, it will fail).</p>", "author": "manusa", "createdAt": "2020-06-19T05:31:27Z", "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "diffHunk": "@@ -33,36 +33,23 @@\n      * onto cluster. It can be used both on vanilla Kubernetes and\n      * OpenShift.\n      */\n-    kubernetes(false, \"Kubernetes\"),\n+    KUBERNETES(\"Kubernetes\"),", "originalCommit": "a4f017663d0c901b86a879cc4c2017eb2180add3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzODg4Nw==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442638887", "body": "Maybe it's time to rename this constant", "bodyText": "Maybe it's time to rename this constant", "bodyHTML": "<p dir=\"auto\">Maybe it's time to rename this constant</p>", "author": "manusa", "createdAt": "2020-06-19T05:31:56Z", "path": "jkube-kit/config/resource/src/main/java/org/eclipse/jkube/kit/config/resource/RuntimeMode.java", "diffHunk": "@@ -33,36 +33,23 @@\n      * onto cluster. It can be used both on vanilla Kubernetes and\n      * OpenShift.\n      */\n-    kubernetes(false, \"Kubernetes\"),\n+    KUBERNETES(\"Kubernetes\"),\n \n     /**\n      * Use special OpenShift features like BuildConfigs, DeploymentConfigs\n      * ImageStreams and S2I builds while deploying onto cluster. It can be\n      * used only when on OpenShift.\n      */\n-    openshift(false, \"OpenShift\"),\n+    OPENSHIFT(\"OpenShift\");\n \n-    /**\n-     * Detect automatically whether running cluster is OpenShift or Kuberentes.\n-     * This is done by contacting cluster API server.\n-     */\n-    auto(true, \"Auto\");\n-\n-    public static final RuntimeMode DEFAULT = RuntimeMode.auto;\n     public static final String FABRIC8_EFFECTIVE_PLATFORM_MODE = \"jkube.internal.effective.platform.mode\";", "originalCommit": "a4f017663d0c901b86a879cc4c2017eb2180add3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTUyMQ==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442639521", "body": "If platformMode is now required, add the nullcheck:\r\n`Objects.requireNonNull(platformMode, \"platformMode is a required parameter\");`", "bodyText": "If platformMode is now required, add the nullcheck:\nObjects.requireNonNull(platformMode, \"platformMode is a required parameter\");", "bodyHTML": "<p dir=\"auto\">If platformMode is now required, add the nullcheck:<br>\n<code>Objects.requireNonNull(platformMode, \"platformMode is a required parameter\");</code></p>", "author": "manusa", "createdAt": "2020-06-19T05:34:23Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/JKubeServiceHub.java", "diffHunk": "@@ -71,16 +70,9 @@ public JKubeServiceHub(\n     private void init() {\n         Objects.requireNonNull(configuration, \"JKubeKitConfiguration is required\");\n         Objects.requireNonNull(log, \"log is a required parameter\");\n-        if (platformMode == null) {", "originalCommit": "a4f017663d0c901b86a879cc4c2017eb2180add3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442639763", "body": "```suggestion\r\n            TreeMap<String, String> configMap = new TreeMap<>() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        TreeMap<String, String> configMap = new TreeMap<String, String>() {\n          \n          \n            \n                        TreeMap<String, String> configMap = new TreeMap<>() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">TreeMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> configMap <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">TreeMap&lt;<span class=\"pl-smi x x-first\">String</span><span class=\"x\">, </span><span class=\"pl-smi x x-last\">String</span>&gt;</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">TreeMap&lt;<span class=\"pl-smi\">String</span>, <span class=\"pl-smi\">String</span>&gt;</span> configMap <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">TreeMap&lt;&gt;</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "manusa", "createdAt": "2020-06-19T05:35:19Z", "path": "jkube-kit/enricher/generic/src/test/java/org/eclipse/jkube/enricher/generic/openshift/AutoTLSEnricherTest.java", "diffHunk": "@@ -91,18 +91,18 @@ private AdaptTestConfig(PlatformMode mode, String initContainerNameConfig, Strin\n     @Test\n     public void testAdapt() throws Exception {\n         final AdaptTestConfig[] data = new AdaptTestConfig[] {\n-                new AdaptTestConfig(PlatformMode.kubernetes, null, null, null, null, null, null, null, null),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.KUBERNETES, null, null, null, null, null, null, null, null),\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", \"tls-a\", \"tls-a\", null, \"tls-jks\"),\n-                new AdaptTestConfig(PlatformMode.openshift, null, \"tls-jks-converter\", null,\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, null, \"tls-jks-converter\", null,\n                         \"jimmidyson/pemtokeystore:v0.1.0\", null, \"tls-pem\", \"jks-b\", \"jks-b\"),\n-                new AdaptTestConfig(PlatformMode.openshift, \"test-container-name\", \"test-container-name\", \"image/123\",\n+                new AdaptTestConfig(RuntimeMode.OPENSHIFT, \"test-container-name\", \"test-container-name\", \"image/123\",\n                         \"image/123\", \"tls-a\", \"tls-a\", \"jks-b\", \"jks-b\") };\n \n         for (final AdaptTestConfig tc : data) {\n-            TreeMap configMap = new TreeMap() {\n+            TreeMap<String, String> configMap = new TreeMap<String, String>() {", "originalCommit": "a4f017663d0c901b86a879cc4c2017eb2180add3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQyMzEzNA==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445423134", "bodyText": "I tried doing this but I couldn't use <> with anonymous inner classes. Our project is at JDK8 right now, maybe we should upgrade to JDK11? WDYT?", "author": "rohanKanojia", "createdAt": "2020-06-25T09:19:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ3MzMzMQ==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445473331", "bodyText": "We should not be doing this, this is really bad.\nCreating an inner class extending a TreeMap is something I don't see really the purpose here, and is really a bad practice.\nJust instantiate the Map and put the entries after.", "author": "manusa", "createdAt": "2020-06-25T10:53:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjYzOTc2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r442663382", "body": "Are these properties dead? Could you open an issue providing details (if you know about them)?\r\nIt seems that at least some of them are used on Enrichers, but are not read from the Mojo.", "bodyText": "Are these properties dead? Could you open an issue providing details (if you know about them)?\nIt seems that at least some of them are used on Enrichers, but are not read from the Mojo.", "bodyHTML": "<p dir=\"auto\">Are these properties dead? Could you open an issue providing details (if you know about them)?<br>\nIt seems that at least some of them are used on Enrichers, but are not read from the Mojo.</p>", "author": "manusa", "createdAt": "2020-06-19T06:53:14Z", "path": "openshift-maven-plugin/plugin/src/main/java/org/eclipse/jkube/maven/plugin/mojo/build/OpenshiftResourceMojo.java", "diffHunk": "@@ -28,6 +30,48 @@\n @Mojo(name = \"resource\", defaultPhase = LifecyclePhase.PROCESS_RESOURCES, requiresDependencyResolution = ResolutionScope.COMPILE)\n public class OpenshiftResourceMojo extends ResourceMojo {\n \n+    /**\n+     * The OpenShift deploy timeout in seconds:\n+     * See this issue for background of why for end users on slow wifi on their laptops\n+     * DeploymentConfigs usually barf: https://github.com/openshift/origin/issues/10531\n+     *\n+     * Please follow also the discussion at\n+     * <ul>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/944#discussion_r116962969</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/pull/794</li>\n+     * </ul>\n+     * and the references within it for the reason of this ridiculous long default timeout\n+     * (in short: Its because Docker image download times are added to the deployment time, making\n+     * the default of 10 minutes quite unusable if multiple images are included in the deployment).\n+     */\n+    @Parameter(property = \"jkube.openshift.deployTimeoutSeconds\", defaultValue = \"3600\")\n+    private Long openshiftDeployTimeoutSeconds;\n+\n+    /**\n+     * If set to true it would set the container image reference to \"\", this is done to handle weird\n+     * behavior of OpenShift 3.7 in which subsequent rollouts lead to ImagePullErr\n+     *\n+     * Please see discussion at\n+     * <ul>\n+     *     <li>https://github.com/openshift/origin/issues/18406</li>\n+     *     <li>https://github.com/fabric8io/fabric8-maven-plugin/issues/1130</li>\n+     * </ul>\n+     */\n+    @Parameter(property = \"jkube.openshift.trimImageInContainerSpec\", defaultValue = \"false\")\n+    private Boolean trimImageInContainerSpec;\n+\n+    @Parameter(property = \"jkube.openshift.generateRoute\", defaultValue = \"true\")\n+    private Boolean generateRoute;\n+\n+    @Parameter(property = \"jkube.openshift.enableAutomaticTrigger\", defaultValue = \"true\")\n+    private Boolean enableAutomaticTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.imageChangeTrigger\", defaultValue = \"true\")\n+    private Boolean enableImageChangeTrigger;\n+\n+    @Parameter(property = \"jkube.openshift.enrichAllWithImageChangeTrigger\", defaultValue = \"false\")\n+    private Boolean erichAllWithImageChangeTrigger;", "originalCommit": "a4f017663d0c901b86a879cc4c2017eb2180add3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NDM3MA==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445344370", "bodyText": "Umm, you mean add javadocs? I see these are covered in plugin documentation: https://www.eclipse.org/jkube/docs/openshift-maven-plugin#Supported-Properties-Resource", "author": "rohanKanojia", "createdAt": "2020-06-25T06:55:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM0NzE3Mg==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445347172", "bodyText": "Ok, let me rephrase. These properties are dead in the Mojo, they are directly computed/retrieved in the Enricher, meaning these fields can be deleted (fields are ignored, same as provided defaults).\nSo what we need is an issue providing details about what these properties do (link to docs is good), and what should we do with them. Basically, we need an answer to why are they in the Mojo if they are ignored > this seems like the result of an abandoned work in progress. And what we want, complete their movement to the Mojo (properties no longer retrieved from Enricher) or complete their movement to the Enricher (delete them from the Mojo).", "author": "manusa", "createdAt": "2020-06-25T07:02:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM1MDc0Ng==", "url": "https://github.com/eclipse/jkube/pull/244#discussion_r445350746", "bodyText": "Thanks for explanation. I've filed #259 for this", "author": "rohanKanojia", "createdAt": "2020-06-25T07:10:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2MzM4Mg=="}], "type": "inlineReview"}, {"oid": "b2e25f66df900beede673ad4d236f1f8e900eb0e", "url": "https://github.com/eclipse/jkube/commit/b2e25f66df900beede673ad4d236f1f8e900eb0e", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-25T07:22:01Z", "type": "forcePushed"}, {"oid": "e74ab82a1e6e32b68027e1761278780cbd297c03", "url": "https://github.com/eclipse/jkube/commit/e74ab82a1e6e32b68027e1761278780cbd297c03", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-25T08:15:47Z", "type": "forcePushed"}, {"oid": "b04245ec3347b7bd5763fff1d68dbbcb7c105f70", "url": "https://github.com/eclipse/jkube/commit/b04245ec3347b7bd5763fff1d68dbbcb7c105f70", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-25T09:19:40Z", "type": "forcePushed"}, {"oid": "a2638e48fa5a39b24f751fd70d0a52731c72b2f3", "url": "https://github.com/eclipse/jkube/commit/a2638e48fa5a39b24f751fd70d0a52731c72b2f3", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-25T10:55:30Z", "type": "commit"}, {"oid": "a2638e48fa5a39b24f751fd70d0a52731c72b2f3", "url": "https://github.com/eclipse/jkube/commit/a2638e48fa5a39b24f751fd70d0a52731c72b2f3", "message": "Fix #218: Remove RuntimeMode mode parametere from Plugins", "committedDate": "2020-06-25T10:55:30Z", "type": "forcePushed"}]}