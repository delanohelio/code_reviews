{"pr_number": 398, "pr_title": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR", "pr_author": "jfdenise", "pr_createdAt": "2020-09-23T13:07:02Z", "pr_url": "https://github.com/eclipse/jkube/pull/398", "timeline": [{"oid": "aef2329c0fe8eaadedad283ca4e152caa07c3d44", "url": "https://github.com/eclipse/jkube/commit/aef2329c0fe8eaadedad283ca4e152caa07c3d44", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-23T13:50:43Z", "type": "forcePushed"}, {"oid": "4cc272db82eaa310f33bae8f1104a671379dc0cc", "url": "https://github.com/eclipse/jkube/commit/4cc272db82eaa310f33bae8f1104a671379dc0cc", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-23T13:57:26Z", "type": "forcePushed"}, {"oid": "0b75508e54d85a2447072cc8195997830fc24d4d", "url": "https://github.com/eclipse/jkube/commit/0b75508e54d85a2447072cc8195997830fc24d4d", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-23T14:39:52Z", "type": "forcePushed"}, {"oid": "d5b2aad2e1d875d5fe70fe5455d85a3cbd381c6b", "url": "https://github.com/eclipse/jkube/commit/d5b2aad2e1d875d5fe70fe5455d85a3cbd381c6b", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-23T14:56:16Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNTUyNQ==", "url": "https://github.com/eclipse/jkube/pull/398#discussion_r495815525", "body": "Usually you'd want to assert exceptions like this:\r\n```suggestion\r\n            /* Exception result = */assertThrows(Exception.class, () -> {\r\n              generator.addAdditionalFiles();\r\n              fail(\"Test should have failed, no directory for maven repo\");\r\n            });\r\n            // Optionally assert exception e.g. assertEquals(\"Expected Message\", result.getMessage());\r\n```", "bodyText": "Usually you'd want to assert exceptions like this:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        boolean failed = true;\n          \n          \n            \n                        try {\n          \n          \n            \n                            List<AssemblyFileSet> files = generator.addAdditionalFiles();\n          \n          \n            \n                            failed = false;\n          \n          \n            \n                        } catch(Exception ex) {\n          \n          \n            \n                            // XXX Expected\n          \n          \n            \n                        }\n          \n          \n            \n                        if (!failed) {\n          \n          \n            \n                            throw new Exception(\"Test should have failed, no directory for maven repo\");\n          \n          \n            \n                        }\n          \n          \n            \n                        /* Exception result = */assertThrows(Exception.class, () -> {\n          \n          \n            \n                          generator.addAdditionalFiles();\n          \n          \n            \n                          fail(\"Test should have failed, no directory for maven repo\");\n          \n          \n            \n                        });\n          \n          \n            \n                        // Optionally assert exception e.g. assertEquals(\"Expected Message\", result.getMessage());", "bodyHTML": "<p dir=\"auto\">Usually you'd want to assert exceptions like this:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">boolean</span> failed <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">List&lt;<span class=\"pl-smi\">AssemblyFileSet</span>&gt;</span> files <span class=\"pl-k\">=</span> generator<span class=\"pl-k\">.</span>addAdditionalFiles();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                failed <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            } <span class=\"pl-k\">catch</span>(<span class=\"pl-smi\">Exception</span> ex) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-c\"><span class=\"pl-c\">//</span> XXX Expected</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>failed) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">Exception</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test should have failed, no directory for maven repo<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">/*</span> Exception result = <span class=\"pl-c\">*/</span></span>assertThrows(<span class=\"pl-smi\">Exception</span><span class=\"pl-k\">.</span>class, () <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              generator<span class=\"pl-k\">.</span>addAdditionalFiles();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              fail(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Test should have failed, no directory for maven repo<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            });</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Optionally assert exception e.g. assertEquals(\"Expected Message\", result.getMessage());</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "manusa", "createdAt": "2020-09-28T09:43:43Z", "path": "jkube-kit/jkube-kit-wildfly-jar/src/test/java/org/eclipse/jkube/wildfly/jar/generator/WildflyJARGeneratorTest.java", "diffHunk": "@@ -53,7 +64,204 @@ public void getEnv() throws IOException {\n         WildflyJARGenerator generator = new WildflyJARGenerator(createGeneratorContext());\n         Map<String, String> extraEnv = generator.getEnv(true);\n         assertNotNull(extraEnv);\n-        assertEquals(3, extraEnv.size());\n+        assertEquals(4, extraEnv.size());\n+    }\n+    \n+    @Test\n+    public void getExtraOptions() throws IOException {\n+        WildflyJARGenerator generator = new WildflyJARGenerator(createGeneratorContext());\n+        List<String> extraOptions = generator.getExtraJavaOptions();\n+        assertNotNull(extraOptions);\n+        assertEquals(1, extraOptions.size());\n+        assertEquals(\"-Djava.net.preferIPv4Stack=true\", extraOptions.get(0));\n+    }\n+    \n+    @Test\n+    public void slimServer(@Mocked final JavaProject project) throws IOException {\n+        Map<String, Object> options = new HashMap<>();\n+        Map<String, String> pluginOptions = new HashMap();\n+        options.put(PLUGIN_OPTIONS, pluginOptions);\n+        pluginOptions.put(JBOSS_MAVEN_DIST, null);\n+        pluginOptions.put(JBOSS_MAVEN_REPO, \"target\" + File.separator + \"myrepo\");\n+        //\n+        Path tmpDir = Files.createTempDirectory(\"bootable-jar-test-project\");\n+        Path targetDir = tmpDir.resolve(\"target\");\n+        Path repoDir = targetDir.resolve(\"myrepo\");\n+        Files.createDirectories(repoDir);\n+        try {\n+            GeneratorContext ctx = contextForSlimServer(project, options, tmpDir);\n+            WildflyJARGenerator generator = new WildflyJARGenerator(ctx);\n+            List<String> extraOptions = generator.getExtraJavaOptions();\n+            assertNotNull(extraOptions);\n+            assertEquals(2, extraOptions.size());\n+            assertEquals(\"-Djava.net.preferIPv4Stack=true\", extraOptions.get(0));\n+            assertEquals(\"-Dmaven.repo.local=/deployments/myrepo\", extraOptions.get(1));\n+            List<AssemblyFileSet> files = generator.addAdditionalFiles();\n+            assertFalse(files.isEmpty());\n+            AssemblyFileSet set = files.get(files.size() - 1);\n+            assertEquals(targetDir.toFile(), set.getDirectory());\n+            assertEquals(1, set.getIncludes().size());\n+            assertEquals(\"myrepo\", set.getIncludes().get(0));\n+        } finally {\n+            Files.delete(repoDir);\n+            Files.delete(targetDir);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+    \n+    @Test\n+    public void slimServerAbsoluteDir(@Mocked final JavaProject project) throws IOException {\n+        Map<String, Object> options = new HashMap<>();\n+        Map<String, String> pluginOptions = new HashMap();\n+        Path tmpDir = Files.createTempDirectory(\"bootable-jar-test-project2\");\n+        Path targetDir = tmpDir.resolve(\"target\");\n+        Path repoDir = targetDir.resolve(\"myrepo\");\n+        Files.createDirectories(repoDir);\n+        options.put(PLUGIN_OPTIONS, pluginOptions);\n+        pluginOptions.put(JBOSS_MAVEN_DIST, null);\n+        pluginOptions.put(JBOSS_MAVEN_REPO, repoDir.toString());\n+        try {\n+            GeneratorContext ctx = contextForSlimServer(project, options, null);\n+            WildflyJARGenerator generator = new WildflyJARGenerator(ctx);\n+            List<String> extraOptions = generator.getExtraJavaOptions();\n+            assertNotNull(extraOptions);\n+            assertEquals(2, extraOptions.size());\n+            assertEquals(\"-Djava.net.preferIPv4Stack=true\", extraOptions.get(0));\n+            assertEquals(\"-Dmaven.repo.local=/deployments/myrepo\", extraOptions.get(1));\n+            List<AssemblyFileSet> files = generator.addAdditionalFiles();\n+            assertFalse(files.isEmpty());\n+            AssemblyFileSet set = files.get(files.size() - 1);\n+            assertEquals(targetDir.toFile(), set.getDirectory());\n+            assertEquals(1, set.getIncludes().size());\n+            assertEquals(\"myrepo\", set.getIncludes().get(0));\n+        } finally {\n+            Files.delete(repoDir);\n+            Files.delete(targetDir);\n+            Files.delete(tmpDir);\n+        }\n+    }\n+    \n+    @Test\n+    public void slimServerNoDir(@Mocked final JavaProject project) throws Exception {\n+        Map<String, Object> options = new HashMap<>();\n+        Map<String, String> pluginOptions = new HashMap();\n+        Path tmpDir = Files.createTempDirectory(\"bootable-jar-test-project2\");\n+        Path targetDir = tmpDir.resolve(\"target\");\n+        Path repoDir = targetDir.resolve(\"myrepo\");\n+        options.put(PLUGIN_OPTIONS, pluginOptions);\n+        pluginOptions.put(JBOSS_MAVEN_DIST, null);\n+        pluginOptions.put(JBOSS_MAVEN_REPO, repoDir.toString());\n+        try {\n+            GeneratorContext ctx = contextForSlimServer(project, options, null);\n+            WildflyJARGenerator generator = new WildflyJARGenerator(ctx);\n+            List<String> extraOptions = generator.getExtraJavaOptions();\n+            assertNotNull(extraOptions);\n+            assertEquals(2, extraOptions.size());\n+            assertEquals(\"-Djava.net.preferIPv4Stack=true\", extraOptions.get(0));\n+            assertEquals(\"-Dmaven.repo.local=/deployments/myrepo\", extraOptions.get(1));\n+            boolean failed = true;\n+            try {\n+                List<AssemblyFileSet> files = generator.addAdditionalFiles();\n+                failed = false;\n+            } catch(Exception ex) {\n+                // XXX Expected\n+            }\n+            if (!failed) {\n+                throw new Exception(\"Test should have failed, no directory for maven repo\");\n+            }", "originalCommit": "d5b2aad2e1d875d5fe70fe5455d85a3cbd381c6b", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgzMTIyNg==", "url": "https://github.com/eclipse/jkube/pull/398#discussion_r495831226", "bodyText": "@manusa , thank-you, I integrated your suggestion.", "author": "jfdenise", "createdAt": "2020-09-28T10:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNTUyNQ=="}], "type": "inlineReview"}, {"oid": "ab40cd12c949fb2eb0a3060d1532ec378dfbb292", "url": "https://github.com/eclipse/jkube/commit/ab40cd12c949fb2eb0a3060d1532ec378dfbb292", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-28T10:09:35Z", "type": "commit"}, {"oid": "ab40cd12c949fb2eb0a3060d1532ec378dfbb292", "url": "https://github.com/eclipse/jkube/commit/ab40cd12c949fb2eb0a3060d1532ec378dfbb292", "message": "Fix for issue #385, WildFly Bootable JAR - Add native support for slim Bootable JAR\nSigned-off-by: JF Denise <jdenise@redhat.com>", "committedDate": "2020-09-28T10:09:35Z", "type": "forcePushed"}]}