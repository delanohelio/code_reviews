{"pr_number": 279, "pr_title": "Fix #267: openshift-maven-plugin does not update Routes", "pr_author": "mtrejo", "pr_createdAt": "2020-07-06T03:36:12Z", "pr_url": "https://github.com/eclipse/jkube/pull/279", "timeline": [{"oid": "578e1a17e0f592e62696173fdc111c8444f9b280", "url": "https://github.com/eclipse/jkube/commit/578e1a17e0f592e62696173fdc111c8444f9b280", "message": "Fix #267: openshift-maven-plugin does not update Routes\n\nSigned-off-by: Marcos Trejo <marcos.trejo@gmail.com>", "committedDate": "2020-07-05T09:45:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTQ2Mw==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299463", "body": "```suggestion\r\n                .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-c1 x x-first x-last\">404</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-smi x x-first\">HttpURLConnection</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">HTTP_NOT_FOUND</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rohanKanojia", "createdAt": "2020-07-08T05:54:13Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MTQ1MQ==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452581451", "bodyText": "Updated", "author": "mtrejo", "createdAt": "2020-07-10T01:56:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTQ2Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTU4NA==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299584", "body": "```suggestion\r\n                .andReply(collector.record(\"new-route\").andReturn(HttpURLConnection.HTTP_CREATED, route))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"new-route\").andReturn(201, route))\n          \n          \n            \n                            .andReply(collector.record(\"new-route\").andReturn(HttpURLConnection.HTTP_CREATED, route))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-c1 x x-first x-last\">201</span>, route))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>new-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-smi x x-first\">HttpURLConnection</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">HTTP_CREATED</span></span>, route))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rohanKanojia", "createdAt": "2020-07-08T05:54:35Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MTU5Mw==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452581593", "bodyText": "Updated", "author": "mtrejo", "createdAt": "2020-07-10T01:57:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTU4NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTc2Mg==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299762", "body": "```suggestion\r\n                .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-c1 x x-first x-last\">404</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-smi x x-first\">HttpURLConnection</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">HTTP_NOT_FOUND</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rohanKanojia", "createdAt": "2020-07-08T05:55:06Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))\n+                .once();\n+\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsRecordedInOrder(\"get-route\", \"new-route\");\n+    }\n+\n+    @Test\n+    public void testCreateRouteInServiceOnlyMode() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MTcyMg==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452581722", "bodyText": "Updated", "author": "mtrejo", "createdAt": "2020-07-10T01:58:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTc2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTg2NQ==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451299865", "body": "```suggestion\r\n                .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n          \n          \n            \n                            .andReply(collector.record(\"get-route\").andReturn(HttpURLConnection.HTTP_NOT_FOUND, \"\"))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-c1 x x-first x-last\">404</span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                .andReply(collector<span class=\"pl-k\">.</span>record(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>get-route<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>andReturn(<span class=\"pl-smi x x-first\">HttpURLConnection</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x x-last\">HTTP_NOT_FOUND</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>))</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "rohanKanojia", "createdAt": "2020-07-08T05:55:21Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;\n+\n+import io.fabric8.openshift.api.model.Route;\n+import io.fabric8.openshift.api.model.RouteBuilder;\n+import io.fabric8.openshift.client.server.mock.OpenShiftMockServer;\n+import mockit.Mocked;\n+import org.eclipse.jkube.kit.common.KitLogger;\n+import org.eclipse.jkube.kit.config.service.openshift.WebServerEventCollector;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class ApplyServiceTest {\n+\n+    @Mocked\n+    private KitLogger log;\n+\n+    private OpenShiftMockServer mockServer = new OpenShiftMockServer(false);\n+\n+    private ApplyService applyService;\n+\n+    @Before\n+    public void setUp() {\n+        applyService = new ApplyService(mockServer.createOpenShiftClient(), log);\n+    }\n+\n+    @Test\n+    public void testCreateRoute() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+        mockServer.expect().post()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes\")\n+                .andReply(collector.record(\"new-route\").andReturn(201, route))\n+                .once();\n+\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsRecordedInOrder(\"get-route\", \"new-route\");\n+    }\n+\n+    @Test\n+    public void testCreateRouteInServiceOnlyMode() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))\n+                .always();\n+\n+        applyService.setServicesOnlyMode(true);\n+        applyService.apply(route, \"route.yml\");\n+\n+        collector.assertEventsNotRecorded(\"get-route\");\n+        assertEquals(1, mockServer.getRequestCount());\n+    }\n+\n+    @Test\n+    public void testCreateRouteNotAllowed() throws Exception {\n+        Route route = buildRoute();\n+\n+        WebServerEventCollector<OpenShiftMockServer> collector = new WebServerEventCollector<>(mockServer);\n+        mockServer.expect().get()\n+                .withPath(\"/apis/route.openshift.io/v1/namespaces/default/routes/route\")\n+                .andReply(collector.record(\"get-route\").andReturn(404, \"\"))", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MTc1Nw==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452581757", "bodyText": "Updated", "author": "mtrejo", "createdAt": "2020-07-10T01:58:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI5OTg2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDE1NA==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451300154", "body": "Could you please add license header here?", "bodyText": "Could you please add license header here?", "bodyHTML": "<p dir=\"auto\">Could you please add license header here?</p>", "author": "rohanKanojia", "createdAt": "2020-07-08T05:56:18Z", "path": "jkube-kit/config/service/src/test/java/org/eclipse/jkube/kit/config/service/ApplyServiceTest.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.eclipse.jkube.kit.config.service;", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MTg0NQ==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452581845", "bodyText": "Updated", "author": "mtrejo", "createdAt": "2020-07-10T01:58:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMDE1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMTU2NA==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451301564", "body": "I'm not sure `KitLogger` supports format specifiers", "bodyText": "I'm not sure KitLogger supports format specifiers", "bodyHTML": "<p dir=\"auto\">I'm not sure <code>KitLogger</code> supports format specifiers</p>", "author": "rohanKanojia", "createdAt": "2020-07-08T06:00:41Z", "path": "jkube-kit/config/service/src/main/java/org/eclipse/jkube/kit/config/service/ApplyService.java", "diffHunk": "@@ -939,6 +926,17 @@ public void applyService(Service service, String sourceName) throws Exception {\n         }\n     }\n \n+    private <T extends HasMetadata> void doPatchEntity(T oldEntity, T newEntity, String namespace, String sourceName) {\n+        String kind = newEntity.getKind();\n+        log.info(\"Updating {} from {}\", kind, sourceName);", "originalCommit": "578e1a17e0f592e62696173fdc111c8444f9b280", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzOTU1MA==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r451339550", "bodyText": "It does, but using String Formatter placeholders, use following log.info(\"Updating %s from %s\", kind, sourceName);", "author": "manusa", "createdAt": "2020-07-08T07:31:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMTU2NA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4MjIyMA==", "url": "https://github.com/eclipse/jkube/pull/279#discussion_r452582220", "bodyText": "Thanks for your suggestions, I implemented them all.", "author": "mtrejo", "createdAt": "2020-07-10T01:59:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMwMTU2NA=="}], "type": "inlineReview"}, {"oid": "3c2bb1e14c804950fbb68d069ba1df1aaab867e8", "url": "https://github.com/eclipse/jkube/commit/3c2bb1e14c804950fbb68d069ba1df1aaab867e8", "message": "Fix #267: openshift-maven-plugin does not update Routes\n\nSigned-off-by: Marcos Trejo <marcos.trejo@gmail.com>", "committedDate": "2020-07-10T01:55:16Z", "type": "commit"}]}