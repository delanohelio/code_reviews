{"pr_number": 978, "pr_title": "RDM-8669: Assign a default value for a nested complex subfield", "pr_author": "kiran-yenigala-hmcts", "pr_createdAt": "2020-06-16T12:49:41Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/978", "timeline": [{"oid": "5fabec92fa24fc43dcdf186090089067eba5c9e2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/5fabec92fa24fc43dcdf186090089067eba5c9e2", "message": "RDM-8669: Assign a default value for a nested complex subfield", "committedDate": "2020-06-11T19:19:59Z", "type": "commit"}, {"oid": "8b1b655fabd7b5848ec99121682448b31205db8a", "url": "https://github.com/hmcts/ccd-data-store-api/commit/8b1b655fabd7b5848ec99121682448b31205db8a", "message": "RDM-8669: Assign a default value for a nested complex subfield", "committedDate": "2020-06-16T12:46:48Z", "type": "commit"}, {"oid": "b6e074a41f3dc2732a9f4c265bc432649de13f7b", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b6e074a41f3dc2732a9f4c265bc432649de13f7b", "message": "Merge branch 'develop' into RDM-8669", "committedDate": "2020-06-16T17:32:41Z", "type": "commit"}, {"oid": "15ffe0961f9f0950f82dbacaca2476eeffad25cb", "url": "https://github.com/hmcts/ccd-data-store-api/commit/15ffe0961f9f0950f82dbacaca2476eeffad25cb", "message": "Merge branch 'develop' into RDM-8669", "committedDate": "2020-06-16T18:23:39Z", "type": "commit"}, {"oid": "47595e55a6199c526dd2d1ef597f74180dcf7c7c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/47595e55a6199c526dd2d1ef597f74180dcf7c7c", "message": "Merge branch 'develop' into RDM-8669", "committedDate": "2020-06-16T22:42:04Z", "type": "commit"}, {"oid": "dd27f1b814e2b71b79b8510d7085c98083333271", "url": "https://github.com/hmcts/ccd-data-store-api/commit/dd27f1b814e2b71b79b8510d7085c98083333271", "message": "RDM-8669: fix code coverage issues", "committedDate": "2020-06-17T11:30:00Z", "type": "commit"}, {"oid": "3fdeb79c224de07646d18fc7525f680f88b0736c", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3fdeb79c224de07646d18fc7525f680f88b0736c", "message": "RDM-8669: fix checkstyle issues", "committedDate": "2020-06-17T12:07:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NTgwMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443455801", "body": "may be it would be better adding other cases complex to complex 3 levels aa.aaa.aaa  and see how the  componet .  componet . componet works  ", "bodyText": "may be it would be better adding other cases complex to complex 3 levels aa.aaa.aaa  and see how the  componet .  componet . componet works", "bodyHTML": "<p dir=\"auto\">may be it would be better adding other cases complex to complex 3 levels aa.aaa.aaa  and see how the  componet .  componet . componet works</p>", "author": "Thor-tech-of-metal", "createdAt": "2020-06-22T10:12:15Z", "path": "src/test/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperationTest.java", "diffHunk": "@@ -107,6 +110,37 @@ void shouldValidate_when_organisation_has_correct_roles() throws Exception {\n         );\n     }\n \n+    @Test\n+    void shouldValidate_when_organisation_has_correct_roles_complex() throws Exception {\n+\n+        String orgPolicyReference1 = ORGANISATIONPOLICYFIELD_1 + \".\" + ORGANISATION_POLICY_ROLE;", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2NjcxNg==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443466716", "bodyText": "this logic we have tested from UI, it is fine!!", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T10:33:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NTgwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3NDczNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443474734", "bodyText": "cut and paste , change values of the test . ok,  \ud83d\udc4d   For me is the same . small comments :)", "author": "Thor-tech-of-metal", "createdAt": "2020-06-22T10:50:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1NTgwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1ODU4MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443458580", "body": "Do we always execute ORGANISATION_POLICY_ROLE validations. There could be submit cases  where there is  ORGANISATION_POLICY_ROLE logic is not present .  It is easier just return it .", "bodyText": "Do we always execute ORGANISATION_POLICY_ROLE validations. There could be submit cases  where there is  ORGANISATION_POLICY_ROLE logic is not present .  It is easier just return it .", "bodyHTML": "<p dir=\"auto\">Do we always execute ORGANISATION_POLICY_ROLE validations. There could be submit cases  where there is  ORGANISATION_POLICY_ROLE logic is not present .  It is easier just return it .</p>", "author": "Thor-tech-of-metal", "createdAt": "2020-06-22T10:17:45Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2OTM2MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443469360", "bodyText": "we are checking in isOrgPolicyCaseAssignedRole(...)", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T10:39:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1ODU4MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ3NTU0Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443475547", "bodyText": "but it is always checking for ORGANISATION_POLICY when we could do it before executing all logic if needed . one if statement.   For me is the same just and small comment .", "author": "Thor-tech-of-metal", "createdAt": "2020-06-22T10:51:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ1ODU4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NTI1Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443485257", "body": "`CaseTypeDefinition` has a `findCaseEvent()` method returning `Optional<CaseEventDefinition>`.\r\n\r\n```suggestion\r\n        caseDefinitionRepository.getCaseType(caseTypeId).findCaseEvent(content.getEventId())\r\n            .ifPresent(caseEventDefinition -> caseEventDefinition.getCaseFields()\r\n```", "bodyText": "CaseTypeDefinition has a findCaseEvent() method returning Optional<CaseEventDefinition>.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n          \n          \n            \n                        .filter(event -> event.getId().equals(content.getEventId()))\n          \n          \n            \n                        .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()\n          \n          \n            \n                    caseDefinitionRepository.getCaseType(caseTypeId).findCaseEvent(content.getEventId())\n          \n          \n            \n                        .ifPresent(caseEventDefinition -> caseEventDefinition.getCaseFields()", "bodyHTML": "<p dir=\"auto\"><code>CaseTypeDefinition</code> has a <code>findCaseEvent()</code> method returning <code>Optional&lt;CaseEventDefinition&gt;</code>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        caseDefinitionRepository<span class=\"pl-k\">.</span>getCaseType(caseTypeId)<span class=\"pl-k\">.</span>getEvents()<span class=\"pl-k\">.</span>stream()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .filter(event <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> event<span class=\"pl-k\">.</span>getId()<span class=\"pl-k\">.</span>equals(content<span class=\"pl-k\">.</span>getEventId()))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .forEach(caseEventDefinition <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> caseEventDefinition<span class=\"pl-k\">.</span>getCaseFields()</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        caseDefinitionRepository<span class=\"pl-k\">.</span>getCaseType(caseTypeId)<span class=\"pl-k\">.</span>findCaseEvent(content<span class=\"pl-k\">.</span>getEventId())</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .ifPresent(caseEventDefinition <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> caseEventDefinition<span class=\"pl-k\">.</span>getCaseFields()</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danlysiak", "createdAt": "2020-06-22T11:12:01Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();\n-        // if there is not a default value. it means that there will not be organisation policy validation.\n-        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n-        if (!isOrganisationPolicyLogicInTheContent(content)) {\n-            return;\n-        }\n-        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n-            event -> event.getId().equals(content.getEventId())\n-        ).forEach(\n-            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n-                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n-                    caseEventFieldComplexDefinition -> {\n-                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            //get extract the default value  from the content for the current caseField\n-                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n-                            validateOrgPolicyCaseAssignedRole(\n-                                caseEventFieldComplexDefinition,\n-                                caseFieldDefaultValue,\n-                                caseField.getCaseFieldId(),\n-                                errorList);\n-                            return true;\n-                        } else {\n-                            return false;\n-                        }\n-                    }\n-                ).collect(Collectors.toList()))\n-        );\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n+            .filter(event -> event.getId().equals(content.getEventId()))\n+            .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjY3OQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443522679", "bodyText": "changed to the suggested", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T12:29:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4NTI1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4ODEyOQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443488129", "body": "This comment doesn't seem to match with what is happening next? `validateContent`", "bodyText": "This comment doesn't seem to match with what is happening next? validateContent", "bodyHTML": "<p dir=\"auto\">This comment doesn't seem to match with what is happening next? <code>validateContent</code></p>", "author": "danlysiak", "createdAt": "2020-06-22T11:18:14Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();\n-        // if there is not a default value. it means that there will not be organisation policy validation.\n-        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n-        if (!isOrganisationPolicyLogicInTheContent(content)) {\n-            return;\n-        }\n-        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n-            event -> event.getId().equals(content.getEventId())\n-        ).forEach(\n-            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n-                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n-                    caseEventFieldComplexDefinition -> {\n-                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            //get extract the default value  from the content for the current caseField\n-                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n-                            validateOrgPolicyCaseAssignedRole(\n-                                caseEventFieldComplexDefinition,\n-                                caseFieldDefaultValue,\n-                                caseField.getCaseFieldId(),\n-                                errorList);\n-                            return true;\n-                        } else {\n-                            return false;\n-                        }\n-                    }\n-                ).collect(Collectors.toList()))\n-        );\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n+            .filter(event -> event.getId().equals(content.getEventId()))\n+            .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()\n+                .stream()\n+                .forEach(eventFieldDefinition -> eventFieldDefinition.getCaseEventFieldComplexDefinitions().stream()\n+                    .filter(cefcDefinition -> isOrgPolicyCaseAssignedRole(cefcDefinition.getReference()))\n+                    .forEach(cefcDefinition -> {\n+                        //get extract the default value  from the content for the current eventFieldDefinition", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjUyOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443522528", "bodyText": "removed comment", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T12:28:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ4ODEyOQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MDAyMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443490021", "body": "Overcomplicating by wrapping in an `Optional` rather than just checking not `null`?", "bodyText": "Overcomplicating by wrapping in an Optional rather than just checking not null?", "bodyHTML": "<p dir=\"auto\">Overcomplicating by wrapping in an <code>Optional</code> rather than just checking not <code>null</code>?</p>", "author": "danlysiak", "createdAt": "2020-06-22T11:22:20Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();\n-        // if there is not a default value. it means that there will not be organisation policy validation.\n-        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n-        if (!isOrganisationPolicyLogicInTheContent(content)) {\n-            return;\n-        }\n-        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n-            event -> event.getId().equals(content.getEventId())\n-        ).forEach(\n-            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n-                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n-                    caseEventFieldComplexDefinition -> {\n-                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            //get extract the default value  from the content for the current caseField\n-                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n-                            validateOrgPolicyCaseAssignedRole(\n-                                caseEventFieldComplexDefinition,\n-                                caseFieldDefaultValue,\n-                                caseField.getCaseFieldId(),\n-                                errorList);\n-                            return true;\n-                        } else {\n-                            return false;\n-                        }\n-                    }\n-                ).collect(Collectors.toList()))\n-        );\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n+            .filter(event -> event.getId().equals(content.getEventId()))\n+            .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()\n+                .stream()\n+                .forEach(eventFieldDefinition -> eventFieldDefinition.getCaseEventFieldComplexDefinitions().stream()\n+                    .filter(cefcDefinition -> isOrgPolicyCaseAssignedRole(cefcDefinition.getReference()))\n+                    .forEach(cefcDefinition -> {\n+                        //get extract the default value  from the content for the current eventFieldDefinition\n+                        String reference = cefcDefinition.getReference();\n+                        validateContent(content, eventFieldDefinition.getCaseFieldId(),\n+                            reference,\n+                            cefcDefinition.getDefaultValue(),\n+                            errorList);\n+                    })));\n         if (errorList.size() != 0) {\n             throw new ValidationException(\"Roles validation error: \" + String.join(\", \", errorList));\n         }\n     }\n \n-    private boolean isOrganisationPolicyLogicInTheContent(final CaseDataContent content) {\n-        final JsonNode existingData = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n-        final List<JsonNode> jsonNode = existingData.findParents(ORGANISATION_POLICY_ROLE);\n-        final Optional<JsonNode> node = jsonNode.stream().findFirst();\n-        return  node.isPresent();\n+    private boolean isOrgPolicyCaseAssignedRole(String reference) {\n+        String[] referenceArray = reference.split(Pattern.quote(\".\"));\n+        return ORGANISATION_POLICY_ROLE.equals(referenceArray[referenceArray.length - 1]);\n     }\n \n-    private Optional<String> getDefaultValueFromContentByCaseFieldID(final CaseDataContent content, final String caseFiledID) {\n+    private void validateContent(final CaseDataContent content,\n+                                 final String caseFiledID,\n+                                 final String reference,\n+                                 final String defaultValue,\n+                                 final List<String> errorList) {\n         final JsonNode existingData = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n-        final Optional<JsonNode> caseFieldNode = Optional.ofNullable(existingData.get(caseFiledID));\n-\n+        Optional<JsonNode> caseFieldNode = Optional.of(existingData.findPath(caseFiledID));\n         if (caseFieldNode.isPresent()) {", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjQzNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443522434", "bodyText": "removed optional", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T12:28:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MDAyMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MDgwMA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443490800", "body": "Could extract since used elsewhere (e.g. L#82).", "bodyText": "Could extract since used elsewhere (e.g. L#82).", "bodyHTML": "<p dir=\"auto\">Could extract since used elsewhere (e.g. L#82).</p>", "author": "danlysiak", "createdAt": "2020-06-22T11:24:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();\n-        // if there is not a default value. it means that there will not be organisation policy validation.\n-        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n-        if (!isOrganisationPolicyLogicInTheContent(content)) {\n-            return;\n-        }\n-        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n-            event -> event.getId().equals(content.getEventId())\n-        ).forEach(\n-            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n-                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n-                    caseEventFieldComplexDefinition -> {\n-                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            //get extract the default value  from the content for the current caseField\n-                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n-                            validateOrgPolicyCaseAssignedRole(\n-                                caseEventFieldComplexDefinition,\n-                                caseFieldDefaultValue,\n-                                caseField.getCaseFieldId(),\n-                                errorList);\n-                            return true;\n-                        } else {\n-                            return false;\n-                        }\n-                    }\n-                ).collect(Collectors.toList()))\n-        );\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n+            .filter(event -> event.getId().equals(content.getEventId()))\n+            .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()\n+                .stream()\n+                .forEach(eventFieldDefinition -> eventFieldDefinition.getCaseEventFieldComplexDefinitions().stream()\n+                    .filter(cefcDefinition -> isOrgPolicyCaseAssignedRole(cefcDefinition.getReference()))\n+                    .forEach(cefcDefinition -> {\n+                        //get extract the default value  from the content for the current eventFieldDefinition\n+                        String reference = cefcDefinition.getReference();\n+                        validateContent(content, eventFieldDefinition.getCaseFieldId(),\n+                            reference,\n+                            cefcDefinition.getDefaultValue(),\n+                            errorList);\n+                    })));\n         if (errorList.size() != 0) {\n             throw new ValidationException(\"Roles validation error: \" + String.join(\", \", errorList));\n         }\n     }\n \n-    private boolean isOrganisationPolicyLogicInTheContent(final CaseDataContent content) {\n-        final JsonNode existingData = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n-        final List<JsonNode> jsonNode = existingData.findParents(ORGANISATION_POLICY_ROLE);\n-        final Optional<JsonNode> node = jsonNode.stream().findFirst();\n-        return  node.isPresent();\n+    private boolean isOrgPolicyCaseAssignedRole(String reference) {\n+        String[] referenceArray = reference.split(Pattern.quote(\".\"));\n+        return ORGANISATION_POLICY_ROLE.equals(referenceArray[referenceArray.length - 1]);\n     }\n \n-    private Optional<String> getDefaultValueFromContentByCaseFieldID(final CaseDataContent content, final String caseFiledID) {\n+    private void validateContent(final CaseDataContent content,\n+                                 final String caseFiledID,\n+                                 final String reference,\n+                                 final String defaultValue,\n+                                 final List<String> errorList) {\n         final JsonNode existingData = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n-        final Optional<JsonNode> caseFieldNode = Optional.ofNullable(existingData.get(caseFiledID));\n-\n+        Optional<JsonNode> caseFieldNode = Optional.of(existingData.findPath(caseFiledID));\n         if (caseFieldNode.isPresent()) {\n-            if (caseFieldNode.get().get(ORGANISATION_POLICY_ROLE).isNull()) {\n-                return Optional.ofNullable(null);\n-            }\n-            return Optional.of(caseFieldNode.get().get(ORGANISATION_POLICY_ROLE).textValue());\n+            String[] referenceArray = reference.split(Pattern.quote(\".\"));", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjMzNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443522334", "bodyText": "extracted to a method", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T12:28:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MDgwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MTMyOA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443491328", "body": "```suggestion\r\n                                 final String caseFieldId,\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                             final String caseFiledID,\n          \n          \n            \n                                             final String caseFieldId,", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                                 <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">caseFiledID</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                                 <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">caseFieldId</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "danlysiak", "createdAt": "2020-06-22T11:25:14Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/validate/DefaultValidateCaseFieldsOperation.java", "diffHunk": "@@ -61,68 +59,64 @@\n \n     private void validateOrganisationPolicy(String caseTypeId, CaseDataContent content) {\n         final List<String> errorList = new ArrayList<>();\n-        // if there is not a default value. it means that there will not be organisation policy validation.\n-        // hence if there is at least one ORGANISATION_POLICY_ROLE all default value logic will be executed.\n-        if (!isOrganisationPolicyLogicInTheContent(content)) {\n-            return;\n-        }\n-        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream().filter(\n-            event -> event.getId().equals(content.getEventId())\n-        ).forEach(\n-            caseEventDefinition -> caseEventDefinition.getCaseFields().stream().forEach(\n-                caseField -> caseField.getCaseEventFieldComplexDefinitions().stream().filter(\n-                    caseEventFieldComplexDefinition -> {\n-                        if (caseEventFieldComplexDefinition.getReference().equals(ORGANISATION_POLICY_ROLE)) {\n-                            //get extract the default value  from the content for the current caseField\n-                            final Optional<String> caseFieldDefaultValue = getDefaultValueFromContentByCaseFieldID(content, caseField.getCaseFieldId());\n-                            validateOrgPolicyCaseAssignedRole(\n-                                caseEventFieldComplexDefinition,\n-                                caseFieldDefaultValue,\n-                                caseField.getCaseFieldId(),\n-                                errorList);\n-                            return true;\n-                        } else {\n-                            return false;\n-                        }\n-                    }\n-                ).collect(Collectors.toList()))\n-        );\n+        caseDefinitionRepository.getCaseType(caseTypeId).getEvents().stream()\n+            .filter(event -> event.getId().equals(content.getEventId()))\n+            .forEach(caseEventDefinition -> caseEventDefinition.getCaseFields()\n+                .stream()\n+                .forEach(eventFieldDefinition -> eventFieldDefinition.getCaseEventFieldComplexDefinitions().stream()\n+                    .filter(cefcDefinition -> isOrgPolicyCaseAssignedRole(cefcDefinition.getReference()))\n+                    .forEach(cefcDefinition -> {\n+                        //get extract the default value  from the content for the current eventFieldDefinition\n+                        String reference = cefcDefinition.getReference();\n+                        validateContent(content, eventFieldDefinition.getCaseFieldId(),\n+                            reference,\n+                            cefcDefinition.getDefaultValue(),\n+                            errorList);\n+                    })));\n         if (errorList.size() != 0) {\n             throw new ValidationException(\"Roles validation error: \" + String.join(\", \", errorList));\n         }\n     }\n \n-    private boolean isOrganisationPolicyLogicInTheContent(final CaseDataContent content) {\n-        final JsonNode existingData = new ObjectMapper().convertValue(content.getData(), JsonNode.class);\n-        final List<JsonNode> jsonNode = existingData.findParents(ORGANISATION_POLICY_ROLE);\n-        final Optional<JsonNode> node = jsonNode.stream().findFirst();\n-        return  node.isPresent();\n+    private boolean isOrgPolicyCaseAssignedRole(String reference) {\n+        String[] referenceArray = reference.split(Pattern.quote(\".\"));\n+        return ORGANISATION_POLICY_ROLE.equals(referenceArray[referenceArray.length - 1]);\n     }\n \n-    private Optional<String> getDefaultValueFromContentByCaseFieldID(final CaseDataContent content, final String caseFiledID) {\n+    private void validateContent(final CaseDataContent content,\n+                                 final String caseFiledID,", "originalCommit": "3fdeb79c224de07646d18fc7525f680f88b0736c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUyMjI1Nw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/978#discussion_r443522257", "bodyText": "Done", "author": "kiran-yenigala-hmcts", "createdAt": "2020-06-22T12:28:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ5MTMyOA=="}], "type": "inlineReview"}, {"oid": "672a4a627cbb6f7da3e01dc501e7ff049d34fa75", "url": "https://github.com/hmcts/ccd-data-store-api/commit/672a4a627cbb6f7da3e01dc501e7ff049d34fa75", "message": "RDM-8669: fix code review comments", "committedDate": "2020-06-22T12:34:18Z", "type": "commit"}, {"oid": "49b8a325426d6797a3d03d011a6f601c97c2f7e8", "url": "https://github.com/hmcts/ccd-data-store-api/commit/49b8a325426d6797a3d03d011a6f601c97c2f7e8", "message": "RDM-8669: fix code review comments", "committedDate": "2020-06-22T12:56:01Z", "type": "commit"}, {"oid": "2e3fc9d14b0c5787bfd79173325278089b840186", "url": "https://github.com/hmcts/ccd-data-store-api/commit/2e3fc9d14b0c5787bfd79173325278089b840186", "message": "Merge branch 'develop' into RDM-8669", "committedDate": "2020-06-22T16:05:35Z", "type": "commit"}]}