{"pr_number": 1157, "pr_title": "RDM-9556: Data Store Changes for Conditional Event Post State", "pr_author": "kiran-yenigala-hmcts", "pr_createdAt": "2020-10-07T16:51:40Z", "pr_url": "https://github.com/hmcts/ccd-data-store-api/pull/1157", "timeline": [{"oid": "d3006a99af18a6156778b4d615bfce582e6e4895", "url": "https://github.com/hmcts/ccd-data-store-api/commit/d3006a99af18a6156778b4d615bfce582e6e4895", "message": "RDM-9556: code review comments addressed", "committedDate": "2020-10-07T16:48:04Z", "type": "commit"}, {"oid": "3226487a3cbbe9be0c52064613c5f570db811da2", "url": "https://github.com/hmcts/ccd-data-store-api/commit/3226487a3cbbe9be0c52064613c5f570db811da2", "message": "RDM-9556: code review comments addressed", "committedDate": "2020-10-07T16:48:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDAzMw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501550033", "body": "```suggestion\r\npublic class CasePostStateService {\r\n```\r\nthis class is not really doing any case update itself right? ", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class CaseStateUpdateService {\n          \n          \n            \n            public class CasePostStateService {\n          \n      \n    \n    \n  \n\nthis class is not really doing any case update itself right?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">CaseStateUpdateService</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en x x-first x-last\">CasePostStateService</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">this class is not really doing any case update itself right?</p>", "author": "mario-paniccia", "createdAt": "2020-10-08T08:46:05Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "diffHunk": "@@ -3,34 +3,43 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.inject.Inject;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.ccd.domain.casestate.EnablingConditionSorter;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.PrioritiseEnablingCondition;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.definition.EventPostStateDefinition;\n \n @Service\n public class CaseStateUpdateService {", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDQ4Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501550486", "body": "```suggestion\r\n    public String determineCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\n          \n          \n            \n                public String determineCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">retrieveCaseState</span>(<span class=\"pl-smi\">CaseEventDefinition</span> caseEventDefinition, <span class=\"pl-smi\">CaseDetails</span> caseDetails) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-smi\">String</span> <span class=\"x x-first x-last\">determineCaseState</span>(<span class=\"pl-smi\">CaseEventDefinition</span> caseEventDefinition, <span class=\"pl-smi\">CaseDetails</span> caseDetails) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mario-paniccia", "createdAt": "2020-10-08T08:46:49Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/common/CaseStateUpdateService.java", "diffHunk": "@@ -3,34 +3,43 @@\n import com.fasterxml.jackson.databind.JsonNode;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n import javax.inject.Inject;\n import org.springframework.stereotype.Service;\n-import uk.gov.hmcts.ccd.domain.casestate.EnablingConditionSorter;\n+import uk.gov.hmcts.ccd.domain.enablingcondition.PrioritiseEnablingCondition;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseDetails;\n import uk.gov.hmcts.ccd.domain.model.definition.CaseEventDefinition;\n import uk.gov.hmcts.ccd.domain.model.definition.EventPostStateDefinition;\n \n @Service\n public class CaseStateUpdateService {\n \n-    private final EnablingConditionSorter enablingConditionSorter;\n-    private StateReferenceService stateReferenceService;\n+    private final PrioritiseEnablingCondition prioritiseEnablingCondition;\n+    private CasePostStateEvaluationService casePostStateEvaluationService;\n \n     @Inject\n-    public CaseStateUpdateService(EnablingConditionSorter enablingConditionSorter,\n-                                  StateReferenceService stateReferenceService) {\n-        this.enablingConditionSorter = enablingConditionSorter;\n-        this.stateReferenceService = stateReferenceService;\n+    public CaseStateUpdateService(PrioritiseEnablingCondition prioritiseEnablingCondition,\n+                                  CasePostStateEvaluationService casePostStateEvaluationService) {\n+        this.prioritiseEnablingCondition = prioritiseEnablingCondition;\n+        this.casePostStateEvaluationService = casePostStateEvaluationService;\n     }\n \n-    public Optional<String> retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {\n-        List<EventPostStateDefinition> eventPostStateDefinitions = caseEventDefinition.getPostStates();\n-        this.enablingConditionSorter.sortEventPostStates(eventPostStateDefinitions);\n-        Map<String, JsonNode> caseEventData = caseDetails.getCaseEventData(caseEventDefinition);\n-        Optional<String> postStateReference = this.stateReferenceService\n+    public String retrieveCaseState(CaseEventDefinition caseEventDefinition, CaseDetails caseDetails) {", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NDMxNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501554315", "bodyText": "or evaluateCaseState?", "author": "mario-paniccia", "createdAt": "2020-10-08T08:52:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1MDQ4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NjQ5Ng==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501556496", "body": "if(!shouldRemainOnCurrentState(postState)){\r\n\r\nwhere `shouldRemainOnCurrentState(String state)` is a private method containing `equalsIgnoreCase(CaseStateDefinition.ANY, postState)`", "bodyText": "if(!shouldRemainOnCurrentState(postState)){\nwhere shouldRemainOnCurrentState(String state) is a private method containing equalsIgnoreCase(CaseStateDefinition.ANY, postState)", "bodyHTML": "<p dir=\"auto\">if(!shouldRemainOnCurrentState(postState)){</p>\n<p dir=\"auto\">where <code>shouldRemainOnCurrentState(String state)</code> is a private method containing <code>equalsIgnoreCase(CaseStateDefinition.ANY, postState)</code></p>", "author": "mario-paniccia", "createdAt": "2020-10-08T08:56:12Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/service/createevent/CreateCaseEventService.java", "diffHunk": "@@ -234,9 +234,9 @@ private void mergeUpdatedFieldsToCaseDetails(final Map<String, JsonNode> data,\n     }\n \n     private void updateCaseState(CaseDetails caseDetails, CaseEventDefinition caseEventDefinition) {\n-        Optional<String> postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n-        if (postState.isPresent() && !equalsIgnoreCase(CaseStateDefinition.ANY, postState.get())) {\n-            caseDetails.setState(postState.get());\n+        String postState = caseStateUpdateService.retrieveCaseState(caseEventDefinition, caseDetails);\n+        if (!equalsIgnoreCase(CaseStateDefinition.ANY, postState)) {", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU2MjQwNw==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501562407", "bodyText": "suggesting also the same refactor on CreateCaseEventService", "author": "mario-paniccia", "createdAt": "2020-10-08T09:05:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NjQ5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501558531", "body": "are we able to support enabling condition on null fields? And on blank String fields? what is the notation that we need to use? same for both?\r\nfor example something like this what would match:\r\n`claimantIndType.claimant_title1 =\"\"`", "bodyText": "are we able to support enabling condition on null fields? And on blank String fields? what is the notation that we need to use? same for both?\nfor example something like this what would match:\nclaimantIndType.claimant_title1 =\"\"", "bodyHTML": "<p dir=\"auto\">are we able to support enabling condition on null fields? And on blank String fields? what is the notation that we need to use? same for both?<br>\nfor example something like this what would match:<br>\n<code>claimantIndType.claimant_title1 =\"\"</code></p>", "author": "mario-paniccia", "createdAt": "2020-10-08T08:59:13Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionParser.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NjM5MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501586390", "bodyText": "actually can we have a unit test for the scenarios above?", "author": "mario-paniccia", "createdAt": "2020-10-08T09:43:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgzMTM3MA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501831370", "bodyText": "Null we can't check, as this is not supported in field_show_condition parsing right now... Need to change the regular expression to make it work.. it is going to cause regression on field_show_condition", "author": "kiran-yenigala-hmcts", "createdAt": "2020-10-08T15:54:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1ODUzMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501570871", "body": "```suggestion\r\npublic interface EnablingConditionConverter {\r\n```\r\nalso can you add a small Javadoc explaining this is converting our internal enabling condition syntax to the Jexl one?", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface EnablingConditionFormatter {\n          \n          \n            \n            public interface EnablingConditionConverter {\n          \n      \n    \n    \n  \n\nalso can you add a small Javadoc explaining this is converting our internal enabling condition syntax to the Jexl one?", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en x x-first x-last\">EnablingConditionFormatter</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">interface</span> <span class=\"pl-en x x-first x-last\">EnablingConditionConverter</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">also can you add a small Javadoc explaining this is converting our internal enabling condition syntax to the Jexl one?</p>", "author": "mario-paniccia", "createdAt": "2020-10-08T09:18:40Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/EnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate;\n+package uk.gov.hmcts.ccd.domain.enablingcondition;\n \n public interface EnablingConditionFormatter {", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjMwNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501572305", "bodyText": "and change the method:\nString format(String enablingCondition);\nString convert(String enablingCondition);", "author": "mario-paniccia", "createdAt": "2020-10-08T09:21:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3NDQyNA==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501574424", "bodyText": "sorry the javadoc should be on the JexlConverter subclass not on the interface. On the interface we can add a more generic description of the class withouth mentioning Jexl", "author": "mario-paniccia", "createdAt": "2020-10-08T09:24:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgxNjcyNQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501816725", "bodyText": "done", "author": "kiran-yenigala-hmcts", "createdAt": "2020-10-08T15:34:14Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MDg3MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU4NDQ1NQ==", "url": "https://github.com/hmcts/ccd-data-store-api/pull/1157#discussion_r501584455", "body": "shall we rename to JexlEnablingConditionConverter ?\r\nand add a small Javadoc describing what the class is doing", "bodyText": "shall we rename to JexlEnablingConditionConverter ?\nand add a small Javadoc describing what the class is doing", "bodyHTML": "<p dir=\"auto\">shall we rename to JexlEnablingConditionConverter ?<br>\nand add a small Javadoc describing what the class is doing</p>", "author": "mario-paniccia", "createdAt": "2020-10-08T09:40:08Z", "path": "src/main/java/uk/gov/hmcts/ccd/domain/enablingcondition/jexl/JexlEnablingConditionFormatter.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package uk.gov.hmcts.ccd.domain.casestate.jexl;\n+package uk.gov.hmcts.ccd.domain.enablingcondition.jexl;", "originalCommit": "3226487a3cbbe9be0c52064613c5f570db811da2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b2093dff6ea2ecf4638b7a8c435f117b9e0404a4", "url": "https://github.com/hmcts/ccd-data-store-api/commit/b2093dff6ea2ecf4638b7a8c435f117b9e0404a4", "message": "RDM-9556: code review comments addressed", "committedDate": "2020-10-08T19:36:01Z", "type": "commit"}]}