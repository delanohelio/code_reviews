{"pr_number": 142, "pr_title": "DEV-1194: Use SAGE as somatic caller in HG38", "pr_author": "jonbaber", "pr_createdAt": "2020-04-08T06:13:21Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/142", "merge_commit": "d2c93349df92c39141e7ec8fe98c2ac2c67d6739", "timeline": [{"oid": "91cf1657a48780ae1de7b738cbdf2b36af8dd4ad", "url": "https://github.com/hartwigmedical/pipeline5/commit/91cf1657a48780ae1de7b738cbdf2b36af8dd4ad", "message": "DEV-1194: Use SAGE as somatic caller in HG38", "committedDate": "2020-04-08T06:12:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1OTEwNQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/142#discussion_r405659105", "body": "Thinking a better place for this would be in the shouldRun method of the somatic caller. Just that we don't have any other logic in this class and its also hard to unit test it.", "bodyText": "Thinking a better place for this would be in the shouldRun method of the somatic caller. Just that we don't have any other logic in this class and its also hard to unit test it.", "bodyHTML": "<p dir=\"auto\">Thinking a better place for this would be in the shouldRun method of the somatic caller. Just that we don't have any other logic in this class and its also hard to unit test it.</p>", "author": "pauldwolfe", "createdAt": "2020-04-08T16:35:13Z", "path": "cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java", "diffHunk": "@@ -290,7 +292,7 @@ public static Arguments from(String[] args) throws ParseException {\n                     .runAligner(booleanOptionWithDefault(commandLine, RUN_ALIGNER_FLAG, defaults.runAligner()))\n                     .runSnpGenotyper(booleanOptionWithDefault(commandLine, RUN_SNP_GENOTYPER_FLAG, defaults.runSnpGenotyper()))\n                     .runGermlineCaller(booleanOptionWithDefault(commandLine, RUN_GERMLINE_CALLER_FLAG, defaults.runGermlineCaller()))\n-                    .runSomaticCaller(booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))\n+                    .runSomaticCaller(refGenomeVersion.equals(RefGenomeVersion.HG37) && booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))", "originalCommit": "91cf1657a48780ae1de7b738cbdf2b36af8dd4ad", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTgxNzkzNA==", "url": "https://github.com/hartwigmedical/pipeline5/pull/142#discussion_r405817934", "bodyText": "Good idea.", "author": "jonbaber", "createdAt": "2020-04-08T21:12:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY1OTEwNQ=="}], "type": "inlineReview", "revised_code": {"commit": "0bc14976629197ddd13f125051d2cccfd54b5c43", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex b8f25df3..628b5cc1 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -292,7 +291,7 @@ public class CommandLineOptions {\n                     .runAligner(booleanOptionWithDefault(commandLine, RUN_ALIGNER_FLAG, defaults.runAligner()))\n                     .runSnpGenotyper(booleanOptionWithDefault(commandLine, RUN_SNP_GENOTYPER_FLAG, defaults.runSnpGenotyper()))\n                     .runGermlineCaller(booleanOptionWithDefault(commandLine, RUN_GERMLINE_CALLER_FLAG, defaults.runGermlineCaller()))\n-                    .runSomaticCaller(refGenomeVersion.equals(RefGenomeVersion.HG37) && booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))\n+                    .runSomaticCaller(booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))\n                     .runSageCaller(booleanOptionWithDefault(commandLine, RUN_SAGE_CALLER_FLAG, defaults.runSageCaller()))\n                     .runStructuralCaller(booleanOptionWithDefault(commandLine, RUN_STRUCTURAL_CALLER_FLAG, defaults.runStructuralCaller()))\n                     .runTertiary(booleanOptionWithDefault(commandLine, RUN_TERTIARY_FLAG, defaults.runTertiary()))\n", "next_change": null}]}, "revised_code_in_main": {"commit": "d2c93349df92c39141e7ec8fe98c2ac2c67d6739", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex b8f25df3..628b5cc1 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -292,7 +291,7 @@ public class CommandLineOptions {\n                     .runAligner(booleanOptionWithDefault(commandLine, RUN_ALIGNER_FLAG, defaults.runAligner()))\n                     .runSnpGenotyper(booleanOptionWithDefault(commandLine, RUN_SNP_GENOTYPER_FLAG, defaults.runSnpGenotyper()))\n                     .runGermlineCaller(booleanOptionWithDefault(commandLine, RUN_GERMLINE_CALLER_FLAG, defaults.runGermlineCaller()))\n-                    .runSomaticCaller(refGenomeVersion.equals(RefGenomeVersion.HG37) && booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))\n+                    .runSomaticCaller(booleanOptionWithDefault(commandLine, RUN_SOMATIC_CALLER_FLAG, defaults.runSomaticCaller()))\n                     .runSageCaller(booleanOptionWithDefault(commandLine, RUN_SAGE_CALLER_FLAG, defaults.runSageCaller()))\n                     .runStructuralCaller(booleanOptionWithDefault(commandLine, RUN_STRUCTURAL_CALLER_FLAG, defaults.runStructuralCaller()))\n                     .runTertiary(booleanOptionWithDefault(commandLine, RUN_TERTIARY_FLAG, defaults.runTertiary()))\n", "next_change": {"commit": "803a5aadc42e88a66153ad75989d630373114b20", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 628b5cc1..b6fbf9ba 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -296,20 +278,24 @@ public class CommandLineOptions {\n                     .runStructuralCaller(booleanOptionWithDefault(commandLine, RUN_STRUCTURAL_CALLER_FLAG, defaults.runStructuralCaller()))\n                     .runTertiary(booleanOptionWithDefault(commandLine, RUN_TERTIARY_FLAG, defaults.runTertiary()))\n                     .serviceAccountEmail(commandLine.getOptionValue(SERVICE_ACCOUNT_EMAIL_FLAG, defaults.serviceAccountEmail()))\n-                    .patientReportBucket(commandLine.getOptionValue(PATIENT_REPORT_BUCKET_FLAG, defaults.patientReportBucket()))\n+                    .outputBucket(commandLine.getOptionValue(OUTPUT_BUCKET_FLAG, defaults.outputBucket()))\n                     .archiveBucket(commandLine.getOptionValue(ARCHIVE_BUCKET_FLAG, defaults.archiveBucket()))\n                     .archiveProject(commandLine.getOptionValue(ARCHIVE_PROJECT_FLAG, defaults.archiveProject()))\n                     .archivePrivateKeyPath(commandLine.getOptionValue(ARCHIVE_PRIVATE_KEY_FLAG, defaults.archivePrivateKeyPath()))\n-                    .privateNetwork(commandLine.getOptionValue(PRIVATE_NETWORK_FLAG, defaults.privateNetwork()))\n+                    .network(commandLine.getOptionValue(NETWORK_FLAG, defaults.network()))\n+                    .uploadPrivateKeyPath(commandLine.getOptionValue(UPLOAD_PRIVATE_KEY_FLAG, defaults.uploadPrivateKeyPath()))\n                     .cmek(cmek(commandLine, defaults))\n                     .shallow(booleanOptionWithDefault(commandLine, SHALLOW_FLAG, defaults.shallow()))\n                     .outputCram(booleanOptionWithDefault(commandLine, OUTPUT_CRAM_FLAG, defaults.outputCram()))\n+                    .publishToTurquoise(booleanOptionWithDefault(commandLine, PUBLISH_TO_TURQUOISE_FLAG, defaults.publishToTurquoise()))\n                     .pollInterval(Integer.parseInt(commandLine.getOptionValue(CommonArguments.POLL_INTERVAL,\n                             defaults.pollInterval().toString())))\n                     .zone(zone(commandLine, defaults))\n                     .maxConcurrentLanes(maxConcurrentLanes(commandLine, defaults.maxConcurrentLanes()))\n                     .profile(defaults.profile())\n+                    .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n+                    .sampleJson(sampleJson(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex b6fbf9ba..03acfd57 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -296,6 +302,7 @@ public class CommandLineOptions {\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n+                    .imageName(imageName(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "3ee1038842e7e7c00bca9cd8269fe124e69f5d67", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 03acfd57..05609ecf 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -302,7 +296,7 @@ public class CommandLineOptions {\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n-                    .imageName(imageName(commandLine, defaults))\n+                    .runFrom(runFrom(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "3b08fd573247b18841320aae83f84d9c367070fa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 05609ecf..1ba8747e 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -296,7 +301,7 @@ public class CommandLineOptions {\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n-                    .runFrom(runFrom(commandLine, defaults))\n+                    .imageName(imageName(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "b616cea925aa60e9f1b7bb1749a4b2bf48db0ace", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 1ba8747e..21468d1a 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -301,7 +298,7 @@ public class CommandLineOptions {\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n-                    .imageName(imageName(commandLine, defaults))\n+                    .startingPoint(startingPoint(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "b96732c458dca3ae7ab64c4c74a7ee548dcbfa12", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 21468d1a..6b99ce13 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -299,6 +307,7 @@ public class CommandLineOptions {\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n                     .startingPoint(startingPoint(commandLine, defaults))\n+                    .imageName(imageName(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "5aff0816ca4e326f7e021876eda7ef7c6119b104", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 6b99ce13..8c9b1936 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -305,6 +312,7 @@ public class CommandLineOptions {\n                     .profile(defaults.profile())\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n+                    .refGenomePath(refGenomePath(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n                     .startingPoint(startingPoint(commandLine, defaults))\n                     .imageName(imageName(commandLine, defaults))\n", "next_change": {"commit": "e830516989b6e36f339893e19563a17f21ccaa09", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 8c9b1936..b5c57e8c 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -312,7 +312,7 @@ public class CommandLineOptions {\n                     .profile(defaults.profile())\n                     .uploadPrivateKeyPath(defaults.uploadPrivateKeyPath())\n                     .refGenomeVersion(refGenomeVersion(commandLine, defaults))\n-                    .refGenomePath(refGenomePath(commandLine, defaults))\n+                    .refGenomeUrl(refGenomeUrl(commandLine, defaults))\n                     .sampleJson(sampleJson(commandLine, defaults))\n                     .startingPoint(startingPoint(commandLine, defaults))\n                     .imageName(imageName(commandLine, defaults))\n", "next_change": {"commit": "efede528a5279505798aa14b61ca227e5308813d", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex b5c57e8c..21d7fc29 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -316,6 +336,7 @@ public class CommandLineOptions {\n                     .sampleJson(sampleJson(commandLine, defaults))\n                     .startingPoint(startingPoint(commandLine, defaults))\n                     .imageName(imageName(commandLine, defaults))\n+                    .biopsy(biopsy(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "a997f89b808bcb2d4e90f656193d9be7668fe36b", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 21d7fc29..7e620f15 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -337,6 +343,7 @@ public class CommandLineOptions {\n                     .startingPoint(startingPoint(commandLine, defaults))\n                     .imageName(imageName(commandLine, defaults))\n                     .biopsy(biopsy(commandLine, defaults))\n+                    .imageProject(imageProject(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "46921c40bfadcdb31ce0c04efeb1ec079493989b", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 7e620f15..e15be320 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -344,6 +362,8 @@ public class CommandLineOptions {\n                     .imageName(imageName(commandLine, defaults))\n                     .biopsy(biopsy(commandLine, defaults))\n                     .imageProject(imageProject(commandLine, defaults))\n+                    .useCrams(booleanOptionWithDefault(commandLine, USE_CRAMS_FLAG, defaults.useCrams()))\n+                    .pubsubProject(pubsubProject(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "41d92a8816b4f27eaf3b26cfba30ab5e1c3e16f5", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex e15be320..45c7143a 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -364,6 +349,7 @@ public class CommandLineOptions {\n                     .imageProject(imageProject(commandLine, defaults))\n                     .useCrams(booleanOptionWithDefault(commandLine, USE_CRAMS_FLAG, defaults.useCrams()))\n                     .pubsubProject(pubsubProject(commandLine, defaults))\n+                    .anonymize(booleanOptionWithDefault(commandLine, ANONYMIZE_FLAG, defaults.anonymize()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "c2618f18d94f35f986f6cc3051ce7e542c1cafcf", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 45c7143a..038acbcc 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -350,6 +361,7 @@ public class CommandLineOptions {\n                     .useCrams(booleanOptionWithDefault(commandLine, USE_CRAMS_FLAG, defaults.useCrams()))\n                     .pubsubProject(pubsubProject(commandLine, defaults))\n                     .anonymize(booleanOptionWithDefault(commandLine, ANONYMIZE_FLAG, defaults.anonymize()))\n+                    .analysisContext(analysisContext(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "da1c830755e1fcbdb9c769a1a55a69c2d8d3a6a6", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 038acbcc..f3fdc0ec 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -361,7 +362,7 @@ public class CommandLineOptions {\n                     .useCrams(booleanOptionWithDefault(commandLine, USE_CRAMS_FLAG, defaults.useCrams()))\n                     .pubsubProject(pubsubProject(commandLine, defaults))\n                     .anonymize(booleanOptionWithDefault(commandLine, ANONYMIZE_FLAG, defaults.anonymize()))\n-                    .analysisContext(analysisContext(commandLine, defaults))\n+                    .context(analysisContext(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "ac8d1176c99bd2245ffb855e9de803a2e76b044d", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex f3fdc0ec..94bc5737 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -362,7 +362,7 @@ public class CommandLineOptions {\n                     .useCrams(booleanOptionWithDefault(commandLine, USE_CRAMS_FLAG, defaults.useCrams()))\n                     .pubsubProject(pubsubProject(commandLine, defaults))\n                     .anonymize(booleanOptionWithDefault(commandLine, ANONYMIZE_FLAG, defaults.anonymize()))\n-                    .context(analysisContext(commandLine, defaults))\n+                    .context(context(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "5de9b5cc4e3056cd25041e65ab8da80cabd246fa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 94bc5737..deecba1f 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -363,6 +377,8 @@ public class CommandLineOptions {\n                     .pubsubProject(pubsubProject(commandLine, defaults))\n                     .anonymize(booleanOptionWithDefault(commandLine, ANONYMIZE_FLAG, defaults.anonymize()))\n                     .context(context(commandLine, defaults))\n+                    .costCenterLabel(costCenterLabel(commandLine, defaults))\n+                    .userLabel(userLabel(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "c76ca6f4aad1fbc5104190003261dd1b73045cf8", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex deecba1f..c170e543 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -379,6 +386,7 @@ public class CommandLineOptions {\n                     .context(context(commandLine, defaults))\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n+                    .panelBedLocation(panelBedLocation(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "fdae0b6a411e99624f5cbfbd541c889871f89892", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex c170e543..c01dcbc5 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -387,6 +394,7 @@ public class CommandLineOptions {\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n                     .panelBedLocation(panelBedLocation(commandLine, defaults))\n+                    .publishLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_LOAD_EVENT_FLAG, defaults.publishLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "09e9268d32130bd93d6da917e19b23db7955308b", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex c01dcbc5..858975a7 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -394,7 +394,7 @@ public class CommandLineOptions {\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n                     .panelBedLocation(panelBedLocation(commandLine, defaults))\n-                    .publishLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_LOAD_EVENT_FLAG, defaults.publishLoadEvent()))\n+                    .publishLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "1d707717153982bc41a5e94738a5c45e77212657", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 858975a7..9e748a9b 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -394,7 +394,7 @@ public class CommandLineOptions {\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n                     .panelBedLocation(panelBedLocation(commandLine, defaults))\n-                    .publishLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n+                    .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "622df6966ebbced5d26674e9339b8e3cdea3d415", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 9e748a9b..d290931b 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -393,7 +385,7 @@ public class CommandLineOptions {\n                     .context(context(commandLine, defaults))\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n-                    .panelBedLocation(panelBedLocation(commandLine, defaults))\n+                    .targetRegionsBedLocation(targetRegionsBedLocation(commandLine, defaults))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n", "next_change": {"commit": "4ed3597cc3f75c3eeaab5683812dec24e1cd6758", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex d290931b..4189c548 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -385,7 +386,8 @@ public class CommandLineOptions {\n                     .context(context(commandLine, defaults))\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n-                    .targetRegionsBedLocation(targetRegionsBedLocation(commandLine, defaults))\n+                    .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n+                    .targetRegionsDir(targetRegionsDir(commandLine, defaults))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n", "next_change": {"commit": "53940193f1eb64812edcfcba3cc1d3c6fcc916bf", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 4189c548..45017efc 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -387,7 +380,6 @@ public class CommandLineOptions {\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n                     .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n-                    .targetRegionsDir(targetRegionsDir(commandLine, defaults))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .build();\n         } catch (ParseException e) {\n", "next_change": {"commit": "3aaef6953a123ae14ddc516a8118caad91b6b259", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 45017efc..80e646d9 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -381,6 +359,7 @@ public class CommandLineOptions {\n                     .userLabel(userLabel(commandLine, defaults))\n                     .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n+                    .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "cdb30a321618eac138de9a51959e3a868999383c", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 80e646d9..4440d684 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -360,6 +363,7 @@ public class CommandLineOptions {\n                     .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n+                    .publishEventsOnly(booleanOptionWithDefault(commandLine, PUBLISH_EVENTS_ONLY_FLAG, defaults.publishEventsOnly()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "3a6996a572a0eadeab72de210c9a92d096a4bc7e", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 4440d684..4dfebc97 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -363,7 +360,7 @@ public class CommandLineOptions {\n                     .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n-                    .publishEventsOnly(booleanOptionWithDefault(commandLine, PUBLISH_EVENTS_ONLY_FLAG, defaults.publishEventsOnly()))\n+                    .pubsubTopicEnvironment(pubsubTopicEnvironment(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "1b023c3a450d8dade882f395fe36cb9e4a107ea8", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 4dfebc97..6088e97e 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -361,6 +364,7 @@ public class CommandLineOptions {\n                     .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n                     .pubsubTopicEnvironment(pubsubTopicEnvironment(commandLine, defaults))\n+                    .publishEventsOnly(booleanOptionWithDefault(commandLine, PUBLISH_EVENTS_ONLY_FLAG, defaults.publishEventsOnly()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "4b5615ea52c04a54cb25198572720d7e9c2c8ac9", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 6088e97e..f67a9168 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -360,11 +359,17 @@ public class CommandLineOptions {\n                     .context(context(commandLine, defaults))\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n-                    .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n-                    .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n+                    .useTargetRegions(booleanOptionWithDefault(commandLine,\n+                            USE_TARGET_REGIONS,\n+                            defaults.useTargetRegions()))\n+                    .publishDbLoadEvent(booleanOptionWithDefault(commandLine,\n+                            PUBLISH_DB_LOAD_EVENT_FLAG,\n+                            defaults.publishDbLoadEvent()))\n                     .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n                     .pubsubTopicEnvironment(pubsubTopicEnvironment(commandLine, defaults))\n-                    .publishEventsOnly(booleanOptionWithDefault(commandLine, PUBLISH_EVENTS_ONLY_FLAG, defaults.publishEventsOnly()))\n+                    .publishEventsOnly(booleanOptionWithDefault(commandLine,\n+                            PUBLISH_EVENTS_ONLY_FLAG,\n+                            defaults.publishEventsOnly()))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": {"commit": "466bce9ea115bd5a72f0a4aa6e972e407eff7faa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex f67a9168..28e711e4 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -359,17 +343,12 @@ public class CommandLineOptions {\n                     .context(context(commandLine, defaults))\n                     .costCenterLabel(costCenterLabel(commandLine, defaults))\n                     .userLabel(userLabel(commandLine, defaults))\n-                    .useTargetRegions(booleanOptionWithDefault(commandLine,\n-                            USE_TARGET_REGIONS,\n-                            defaults.useTargetRegions()))\n-                    .publishDbLoadEvent(booleanOptionWithDefault(commandLine,\n-                            PUBLISH_DB_LOAD_EVENT_FLAG,\n-                            defaults.publishDbLoadEvent()))\n+                    .useTargetRegions(booleanOptionWithDefault(commandLine, USE_TARGET_REGIONS, defaults.useTargetRegions()))\n+                    .publishDbLoadEvent(booleanOptionWithDefault(commandLine, PUBLISH_DB_LOAD_EVENT_FLAG, defaults.publishDbLoadEvent()))\n                     .pubsubTopicWorkflow(pubsubTopicWorkflow(commandLine, defaults))\n                     .pubsubTopicEnvironment(pubsubTopicEnvironment(commandLine, defaults))\n-                    .publishEventsOnly(booleanOptionWithDefault(commandLine,\n-                            PUBLISH_EVENTS_ONLY_FLAG,\n-                            defaults.publishEventsOnly()))\n+                    .publishEventsOnly(booleanOptionWithDefault(commandLine, PUBLISH_EVENTS_ONLY_FLAG, defaults.publishEventsOnly()))\n+                    .hmfApiUrl(hmfApiUrl(commandLine, defaults))\n                     .build();\n         } catch (ParseException e) {\n             LOGGER.error(\"Could not parse command line args\", e);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "d2c93349df92c39141e7ec8fe98c2ac2c67d6739", "message": "Merge commit", "committedDate": null}, {"oid": "59d02f3ad591930bfa9fc030ca5bb1a5b1ad27ba", "committedDate": "2020-04-24 15:03:09 -0400", "message": "DEV-1245 Create a JSON sample source"}, {"oid": "38cb2d89f519c3ca5a0492db391c917f155fe498", "committedDate": "2020-04-24 15:41:41 -0400", "message": "Add a new argument to use a separate account to upload FASTQ from another GCP project."}, {"oid": "b80d830feae41eba11079734e59c88254b911566", "committedDate": "2020-04-24 15:42:10 -0400", "message": "Add command line arg for upload private key"}, {"oid": "cf5ad75b5a24c698b8984b360b736ed0db114531", "committedDate": "2020-04-27 11:27:09 -0400", "message": "DEV-1245 Rename field to sample json as per review comments."}, {"oid": "3d9d619d05df99e483e590823effcdd72beb731c", "committedDate": "2020-04-27 11:30:14 -0400", "message": "Merge branch 'master' into DEV-1245"}, {"oid": "b504fed79515cfd457a803657a6717c372ac9b24", "committedDate": "2020-06-18 16:41:27 -0400", "message": "DEV-1342 Add turquoise event publishing"}, {"oid": "92dc968036747ad59f6b01718d21435abf2acb7c", "committedDate": "2020-07-30 00:47:12 -0400", "message": "DEV-1423 Make CRAM respect ref genome flag"}, {"oid": "803a5aadc42e88a66153ad75989d630373114b20", "committedDate": "2020-08-06 12:59:23 -0400", "message": "DEV-1443 Create a profile for platinum Arguments"}, {"oid": "c5cb5306c2c461757b43f52cc195b35da4c90f68", "committedDate": "2020-08-07 08:29:01 +1000", "message": "DEV-1432: Change GRIDSS namespace"}, {"oid": "70727645cfe6a7f6fcfed63465878a7d7e0b11c5", "committedDate": "2020-08-07 09:24:15 +1000", "message": "DEV-1432: Review feedback"}, {"oid": "3461980d11d1da848a262cb0609226fff7528b39", "committedDate": "2020-08-11 07:02:22 +1000", "message": "Merge pull request #182 from hartwigmedical/DEV-1432"}, {"oid": "5c94443240e8b91e65939a2d49b76ce5736c34d8", "committedDate": "2020-08-11 15:07:04 -0400", "message": "DEV-1278 Big cleanup of resources"}, {"oid": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "committedDate": "2020-09-02 10:14:43 -0400", "message": "DEV-1481 Specify image from CLI"}, {"oid": "3ee1038842e7e7c00bca9cd8269fe124e69f5d67", "committedDate": "2020-09-02 16:02:16 -0400", "message": "DEV-1478 Run from persisted alignment data (WIP)"}, {"oid": "3b08fd573247b18841320aae83f84d9c367070fa", "committedDate": "2020-09-02 19:18:27 -0400", "message": "DEV-1481 Cleanup per review comments"}, {"oid": "b616cea925aa60e9f1b7bb1749a4b2bf48db0ace", "committedDate": "2020-09-04 13:42:21 -0400", "message": "DEV-1478 Run from various starting points"}, {"oid": "b96732c458dca3ae7ab64c4c74a7ee548dcbfa12", "committedDate": "2020-09-08 13:33:13 -0400", "message": "DEV-1478 Merge with master"}, {"oid": "5aff0816ca4e326f7e021876eda7ef7c6119b104", "committedDate": "2020-10-06 15:50:56 -0400", "message": "DEV-1547 Add ability to override the reference genome"}, {"oid": "e830516989b6e36f339893e19563a17f21ccaa09", "committedDate": "2020-10-07 16:25:15 -0400", "message": "DEV-1547 Run from bam files specified in JSON and allow overriding of ref genome"}, {"oid": "ca23a565b25935a8b07c1cb28ea2ed3bf93443a0", "committedDate": "2020-10-17 14:05:04 -0400", "message": "DEV-1575 Add command line options for subnet and network tags"}, {"oid": "efede528a5279505798aa14b61ca227e5308813d", "committedDate": "2020-10-27 12:00:35 -0400", "message": "DEV-1593 Add biopsy, new metadata api, and new dataset"}, {"oid": "a997f89b808bcb2d4e90f656193d9be7668fe36b", "committedDate": "2020-11-15 18:20:13 -0500", "message": "DEV-1656 Add argument to override the image project"}, {"oid": "67f2d1bee536905664ef3c0d8eb59d69263f7108", "committedDate": "2020-12-06 06:37:58 +1100", "message": "Rename of HG19 to HG37"}, {"oid": "babd8531af8b9c4f6d49ebb7e6e2b87dc2db2d44", "committedDate": "2020-12-07 12:11:11 -0500", "message": "Revert \"Rename of HG19 to HG37\""}, {"oid": "08772db85bb2a8a8d124a61329d50a251714c0f0", "committedDate": "2020-12-08 06:26:18 +1100", "message": "Renamed HG19 to HG37 as used for resource files"}, {"oid": "84ad6943c96f7383ec4dcd01775fda3c13991361", "committedDate": "2020-12-09 20:07:18 +1100", "message": "Dropping 'hg' from ref genome versioning and resource file directories"}, {"oid": "9103d6a5de825bd4c9361ea4e76735dbc7d45a45", "committedDate": "2020-12-18 13:43:39 +1000", "message": "DEV-1723: Review Feedback - Keep existing sage namespace - Seperate flag to disable sage germline"}, {"oid": "8415e1525aa14f1263f910e12c756dcf1a5ad219", "committedDate": "2020-12-21 12:42:19 -0500", "message": "DEV-1731 Add fields to ref genome enum for different representations"}, {"oid": "46921c40bfadcdb31ce0c04efeb1ec079493989b", "committedDate": "2021-03-24 17:33:37 -0400", "message": "5.21 Rerun modifications"}, {"oid": "5dcdfebee2e8b4664292a90012f949b495a67bae", "committedDate": "2021-04-20 22:01:59 -0400", "message": "DEV-1932 Cuppa main program and chart generation"}, {"oid": "a460006f0360f91c7dade0934b3d734ade35efb8", "committedDate": "2021-04-22 15:07:42 -0400", "message": "DEV-1947 Publish staged event on complete clinical runs"}, {"oid": "f66f83b6aee2f909a5c45e746ed6b9c821e5d2c4", "committedDate": "2021-04-23 23:11:06 -0400", "message": "Merge branch 'master' into DEV-1932"}, {"oid": "18f09615ab5953252babd3bc5eccd8838d3d319a", "committedDate": "2021-04-24 09:46:46 -0400", "message": "DEV-1932 Update Cuppa to use new Python framework"}, {"oid": "41d92a8816b4f27eaf3b26cfba30ab5e1c3e16f5", "committedDate": "2021-04-26 15:57:08 -0400", "message": "DEV-1966 Add option to anonymize with barcodes"}, {"oid": "aa762c820a2dd0c6bf331a8cfef713d66df90978", "committedDate": "2021-04-26 20:34:53 -0400", "message": "Merge branch 'master' into DEV-1932"}, {"oid": "c2618f18d94f35f986f6cc3051ce7e542c1cafcf", "committedDate": "2021-05-19 11:14:48 -0400", "message": "DEV-2019 Add argument to specify context"}, {"oid": "e787a7bd0a31d8d0100d7f8bfd12659cd06ca96d", "committedDate": "2021-11-10 13:57:19 -0500", "message": "DEV-2347 Integrating the new events API"}, {"oid": "da1c830755e1fcbdb9c769a1a55a69c2d8d3a6a6", "committedDate": "2021-11-12 11:40:28 -0500", "message": "DEV-2347 Review comments and latest events api"}, {"oid": "ac8d1176c99bd2245ffb855e9de803a2e76b044d", "committedDate": "2021-11-12 11:55:32 -0500", "message": "DEV-2347 Remove last refs to analysis context"}, {"oid": "5de9b5cc4e3056cd25041e65ab8da80cabd246fa", "committedDate": "2022-01-17 17:58:44 -0500", "message": "DEV-2492 Add new labels and labelling for disks and buckets (#355)"}, {"oid": "c76ca6f4aad1fbc5104190003261dd1b73045cf8", "committedDate": "2022-02-28 14:25:55 -0500", "message": "DEV-2573 Add panel bed to common resources (#368)"}, {"oid": "21de336f0822a466154887781e83c66750202dcc", "committedDate": "2022-03-03 14:14:27 -0500", "message": "DEV-2546 Complete refactoring of SAGE"}, {"oid": "fdae0b6a411e99624f5cbfbd541c889871f89892", "committedDate": "2022-03-04 17:24:52 -0500", "message": "DEV-2564 Publish event for verification"}, {"oid": "09e9268d32130bd93d6da917e19b23db7955308b", "committedDate": "2022-03-07 19:39:31 -0500", "message": "DEV-2564 Cleanup and improve argument naming"}, {"oid": "1d707717153982bc41a5e94738a5c45e77212657", "committedDate": "2022-03-07 19:44:02 -0500", "message": "DEV-2564 Cleanup and improve argument naming"}, {"oid": "a50e457b24b631bc0b8b0d5494c110043ae75d13", "committedDate": "2022-03-08 12:51:01 -0500", "message": "Merge pull request #374 from hartwigmedical/DEV-2564"}, {"oid": "622df6966ebbced5d26674e9339b8e3cdea3d415", "committedDate": "2022-03-10 13:29:40 -0500", "message": "DEV-2608 Rename \"panel\" to \"target regions\""}, {"oid": "0b3d04e4cade9ca39e4e1fe8130254042f4684b2", "committedDate": "2022-03-15 13:12:24 -0400", "message": "DEV-2613 Remove caller specific toggles from arguments"}, {"oid": "4ed3597cc3f75c3eeaab5683812dec24e1cd6758", "committedDate": "2022-04-11 11:15:15 -0400", "message": "DEV-2593 Support tumor-only, germline-only and target-region modes"}, {"oid": "53940193f1eb64812edcfcba3cc1d3c6fcc916bf", "committedDate": "2022-04-11 17:51:31 -0400", "message": "DEV-2687 Remove option to override or specify target regions (#399)"}, {"oid": "88b2ca78c96d577df8dd3d883b2e6bc91d97cc1c", "committedDate": "2022-04-26 12:47:11 -0400", "message": "DEV-2601 Run automated code cleanup"}, {"oid": "88181897e23ee0423db072086d435fd1c0601835", "committedDate": "2022-06-09 14:20:33 -0400", "message": "DEV-2767 Reduce the options in RefGenomeVersion"}, {"oid": "5aff8486355ff70b24930173b6a41cd5b74178fa", "committedDate": "2022-07-01 09:45:41 -0400", "message": "DEV-2787 Remove rclone from code"}, {"oid": "3aaef6953a123ae14ddc516a8118caad91b6b259", "committedDate": "2022-08-26 14:40:50 -0400", "message": "DEV-2845 Optional topic workflow argument"}, {"oid": "fcb8b1d52006e338958deb58ac271c99c4555050", "committedDate": "2022-09-05 10:47:46 -0400", "message": "DEV-2845 Fix CLI argument for pubsub topic"}, {"oid": "e046f2733027443d6925bfdaed03795a1fcac6dd", "committedDate": "2022-09-13 21:37:13 +0200", "message": "DEV-2885: updated Cuppa to 1.7.1 to use latest R PDF report script (#441)"}, {"oid": "fd3fe841aec10c953414da7261e488a04ea3d816", "committedDate": "2022-09-28 13:45:58 -0400", "message": "DEV-2846 Upgrade of AUS stack for 5.31"}, {"oid": "924b6f1a8e2789d2e3c21781e1f9c8dcacabfe04", "committedDate": "2022-11-03 15:57:12 -0400", "message": "DEV-2873 Make keys optional, remove defaults"}, {"oid": "cdb30a321618eac138de9a51959e3a868999383c", "committedDate": "2022-11-04 12:52:53 -0400", "message": "DEV-2974 Add \"publish events only\" mode/argument"}, {"oid": "3a6996a572a0eadeab72de210c9a92d096a4bc7e", "committedDate": "2022-11-21 14:25:59 -0500", "message": "DEV-2988 Port pipeline to new events api and module (#455)"}, {"oid": "3fe64f7b6050cd2bdb5e2ee567a1766d995a9f17", "committedDate": "2022-12-02 16:29:07 -0500", "message": "DEV-2988 Rename arguments for environment and workflow"}, {"oid": "1b023c3a450d8dade882f395fe36cb9e4a107ea8", "committedDate": "2022-12-21 13:14:22 -0500", "message": "Merge 5.30-hotfix"}, {"oid": "253042ddf3971af13ef1df3458f05919d8263feb", "committedDate": "2022-12-21 13:17:26 -0500", "message": "5.31 hotfix (#462)"}, {"oid": "6deefa7d12ccd858280b9f4cd3d2d3e19824ad01", "committedDate": "2023-01-16 14:27:34 -0500", "message": "DEV-3052 5.31 rerun starting point"}, {"oid": "b6c20b02d458a97251f3e55dd881f961f2c2de6e", "committedDate": "2023-01-24 10:33:13 -0500", "message": "DEV-3036 Remove the dependency HMF API (#465)"}, {"oid": "4b5615ea52c04a54cb25198572720d7e9c2c8ac9", "committedDate": "2023-02-01 15:17:12 -0500", "message": "DEV-3068 Port pipeline to use shared PDL interfaces (#468)"}, {"oid": "466bce9ea115bd5a72f0a4aa6e972e407eff7faa", "committedDate": "2023-02-13 16:14:18 +0100", "message": "DEV-3070 Add back hmf-api interaction (#469)"}, {"oid": "e182f7819c5ace8cb5087143e8b08a66010d292e", "committedDate": "2023-02-28 19:30:43 -0500", "message": "Merge 5.31-hotfix"}, {"oid": "54e819d74ccd665efc067d83709f15e34dbcdd0f", "committedDate": "2023-03-23 18:04:31 -0400", "message": "DEV-3144 Pull in set name from PDL"}, {"oid": "7eef5b75ba0a4f74bff592c6fd725422d7eeb229", "committedDate": "2023-03-24 17:31:04 -0400", "message": "DEV-3144 Update constant name"}]}, {"oid": "0bc14976629197ddd13f125051d2cccfd54b5c43", "url": "https://github.com/hartwigmedical/pipeline5/commit/0bc14976629197ddd13f125051d2cccfd54b5c43", "message": "DEV-1194: Disable strelka for HG38 in SomaticCaller", "committedDate": "2020-04-08T21:11:30Z", "type": "commit"}]}