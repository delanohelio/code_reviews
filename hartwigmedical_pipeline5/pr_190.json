{"pr_number": 190, "pr_title": "DEV-1481 Specify image from CLI", "pr_author": "nedleitch", "pr_createdAt": "2020-09-02T14:15:45Z", "pr_url": "https://github.com/hartwigmedical/pipeline5/pull/190", "timeline": [{"oid": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "url": "https://github.com/hartwigmedical/pipeline5/commit/fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "message": "DEV-1481 Specify image from CLI", "committedDate": "2020-09-02T14:14:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MDI4Nw==", "url": "https://github.com/hartwigmedical/pipeline5/pull/190#discussion_r482170287", "body": "I think we should keep all flags used in the CLI in this class for now or do a larger refactor. Prefer the consistency to the small duplication between CommonArguments and this list. ", "bodyText": "I think we should keep all flags used in the CLI in this class for now or do a larger refactor. Prefer the consistency to the small duplication between CommonArguments and this list.", "bodyHTML": "<p dir=\"auto\">I think we should keep all flags used in the CLI in this class for now or do a larger refactor. Prefer the consistency to the small duplication between CommonArguments and this list.</p>", "author": "pauldwolfe", "createdAt": "2020-09-02T15:38:54Z", "path": "cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java", "diffHunk": "@@ -59,7 +63,7 @@\n     private static final String SET_ID_FLAG = \"set_id\";\n     private static final String SBP_RUN_ID_FLAG = \"sbp_run_id\";\n     private static final String NETWORK_FLAG = \"network\";\n-    private static final String CMEK_FLAG = \"cmek\";\n+//    private static final String CMEK_FLAG = \"cmek\";", "originalCommit": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b08fd573247b18841320aae83f84d9c367070fa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 03acfd57..1ba8747e 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -63,11 +61,12 @@ public class CommandLineOptions {\n     private static final String SET_ID_FLAG = \"set_id\";\n     private static final String SBP_RUN_ID_FLAG = \"sbp_run_id\";\n     private static final String NETWORK_FLAG = \"network\";\n-//    private static final String CMEK_FLAG = \"cmek\";\n+    private static final String CMEK_FLAG = \"cmek\";\n     private static final String SHALLOW_FLAG = \"shallow\";\n     private static final String ZONE_FLAG = \"zone\";\n     private static final String REF_GENOME_VERSION_FLAG = \"ref_genome_version\";\n     private static final String SAMPLE_JSON_FLAG = \"sample_json\";\n+    private static final String IMAGE_NAME_FLAG = \"image_name\";\n \n     private static Options options() {\n         return new Options().addOption(profile())\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MTQ2Nw==", "url": "https://github.com/hartwigmedical/pipeline5/pull/190#discussion_r482171467", "body": "lets make this a bit more descriptive", "bodyText": "lets make this a bit more descriptive", "bodyHTML": "<p dir=\"auto\">lets make this a bit more descriptive</p>", "author": "pauldwolfe", "createdAt": "2020-09-02T15:40:30Z", "path": "cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java", "diffHunk": "@@ -118,21 +122,26 @@ private static Options options() {\n                 .addOption(zone())\n                 .addOption(refGenomeVersion())\n                 .addOption(maxConcurrentLanes())\n-                .addOption(json());\n+                .addOption(json())\n+                .addOption(imageName());\n     }\n \n     private static Option json() {\n         return optionWithArg(SAMPLE_JSON_FLAG, \"JSON file defining the location of FASTQ inputs in GCP.\");\n     }\n \n+    private static Option imageName() {\n+        return optionWithArg(IMAGE_NAME, \"Image to use instead of the default\");", "originalCommit": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b08fd573247b18841320aae83f84d9c367070fa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\nindex 03acfd57..1ba8747e 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/CommandLineOptions.java\n", "chunk": "@@ -131,7 +130,7 @@ public class CommandLineOptions {\n     }\n \n     private static Option imageName() {\n-        return optionWithArg(IMAGE_NAME, \"Image to use instead of the default\");\n+        return optionWithArg(IMAGE_NAME_FLAG, String.format(\"Image to use instead of the latest %s image\", Versions.imageVersion()));\n     }\n \n     private static Option maxConcurrentLanes() {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MjQyOA==", "url": "https://github.com/hartwigmedical/pipeline5/pull/190#discussion_r482172428", "body": "As the argument is optional, we should use the features of Optional and not have another \"empty\" case of an empty string. You can either just not specify the image name in the builder or use Optional.empty(). I think the former is most consistent with what's already here.", "bodyText": "As the argument is optional, we should use the features of Optional and not have another \"empty\" case of an empty string. You can either just not specify the image name in the builder or use Optional.empty(). I think the former is most consistent with what's already here.", "bodyHTML": "<p dir=\"auto\">As the argument is optional, we should use the features of Optional and not have another \"empty\" case of an empty string. You can either just not specify the image name in the builder or use Optional.empty(). I think the former is most consistent with what's already here.</p>", "author": "pauldwolfe", "createdAt": "2020-09-02T15:41:45Z", "path": "cluster/src/main/java/com/hartwig/pipeline/Arguments.java", "diffHunk": "@@ -161,11 +161,11 @@ static String workingDir() {\n                     .publishToTurquoise(false)\n                     .pollInterval(DEFAULT_POLL_INTERVAL)\n                     .refGenomeVersion(DEFAULT_REF_GENOME_VERSION)\n-                    .maxConcurrentLanes(DEFAULT_MAX_CONCURRENT_LANES);\n+                    .maxConcurrentLanes(DEFAULT_MAX_CONCURRENT_LANES)\n+                    .imageName(EMPTY);", "originalCommit": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b08fd573247b18841320aae83f84d9c367070fa", "changed_code": [{"header": "diff --git a/cluster/src/main/java/com/hartwig/pipeline/Arguments.java b/cluster/src/main/java/com/hartwig/pipeline/Arguments.java\nindex cd24a435..c372fdac 100644\n--- a/cluster/src/main/java/com/hartwig/pipeline/Arguments.java\n+++ b/cluster/src/main/java/com/hartwig/pipeline/Arguments.java\n", "chunk": "@@ -161,8 +160,7 @@ public interface Arguments extends CommonArguments {\n                     .publishToTurquoise(false)\n                     .pollInterval(DEFAULT_POLL_INTERVAL)\n                     .refGenomeVersion(DEFAULT_REF_GENOME_VERSION)\n-                    .maxConcurrentLanes(DEFAULT_MAX_CONCURRENT_LANES)\n-                    .imageName(EMPTY);\n+                    .maxConcurrentLanes(DEFAULT_MAX_CONCURRENT_LANES);\n         } else if (profile.equals(DefaultsProfile.DEVELOPMENT)) {\n             return ImmutableArguments.builder()\n                     .profile(profile)\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MzM4Nw==", "url": "https://github.com/hartwigmedical/pipeline5/pull/190#discussion_r482173387", "body": "I think better to just not expose the image name argument to batch, then you can also remove the check for empty string in the compute engine.", "bodyText": "I think better to just not expose the image name argument to batch, then you can also remove the check for empty string in the compute engine.", "bodyHTML": "<p dir=\"auto\">I think better to just not expose the image name argument to batch, then you can also remove the check for empty string in the compute engine.</p>", "author": "pauldwolfe", "createdAt": "2020-09-02T15:43:09Z", "path": "batch/src/main/java/com/hartwig/batch/BatchArguments.java", "diffHunk": "@@ -45,7 +47,7 @@ static BatchArguments from(String[] args) {\n                     .outputBucket(commandLine.getOptionValue(OUTPUT_BUCKET))\n                     .cmek(commandLine.getOptionValue(CMEK, CommonArguments.DEFAULT_DEVELOPMENT_CMEK))\n                     .network(commandLine.getOptionValue(PRIVATE_NETWORK, DEFAULT_NETWORK))\n-                    .usePublicImage(false)\n+                    .imageName(commandLine.getOptionValue(IMAGE_NAME, EMPTY))", "originalCommit": "fa097ca4ee33bb148fd5c4dd72b3e399dee51544", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "3b08fd573247b18841320aae83f84d9c367070fa", "changed_code": [{"header": "diff --git a/batch/src/main/java/com/hartwig/batch/BatchArguments.java b/batch/src/main/java/com/hartwig/batch/BatchArguments.java\nindex 3ea241dc..fb83d360 100644\n--- a/batch/src/main/java/com/hartwig/batch/BatchArguments.java\n+++ b/batch/src/main/java/com/hartwig/batch/BatchArguments.java\n", "chunk": "@@ -47,7 +47,6 @@ public interface BatchArguments extends CommonArguments {\n                     .outputBucket(commandLine.getOptionValue(OUTPUT_BUCKET))\n                     .cmek(commandLine.getOptionValue(CMEK, CommonArguments.DEFAULT_DEVELOPMENT_CMEK))\n                     .network(commandLine.getOptionValue(PRIVATE_NETWORK, DEFAULT_NETWORK))\n-                    .imageName(commandLine.getOptionValue(IMAGE_NAME, EMPTY))\n                     .build();\n         } catch (ParseException e) {\n             String message = \"Failed to parse arguments\";\n", "next_change": null}]}}, {"oid": "3b08fd573247b18841320aae83f84d9c367070fa", "url": "https://github.com/hartwigmedical/pipeline5/commit/3b08fd573247b18841320aae83f84d9c367070fa", "message": "DEV-1481 Cleanup per review comments", "committedDate": "2020-09-02T23:18:27Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzY4MTg1NQ==", "url": "https://github.com/hartwigmedical/pipeline5/pull/190#discussion_r483681855", "body": "How is this related?", "bodyText": "How is this related?", "bodyHTML": "<p dir=\"auto\">How is this related?</p>", "author": "pauldwolfe", "createdAt": "2020-09-04T15:14:23Z", "path": "batch/src/test/java/com/hartwig/batch/input/InputParserProviderTest.java", "diffHunk": "@@ -16,17 +15,23 @@\n     public void shouldReturnJsonParserWhenOperationSpecifiesIt() {\n         InputParserProvider victim = new InputParserProvider();\n         BatchOperation operation = mock(BatchOperation.class);\n-        BatchArguments arguments = TestingArguments.defaultArgs(\"someOp\");\n \n         OperationDescriptor descriptor = mock(OperationDescriptor.class);\n         when(operation.descriptor()).thenReturn(descriptor);\n         when(descriptor.inputType()).thenReturn(OperationDescriptor.InputType.JSON);\n-        victim.from(operation);\n-        assertThat(1).isEqualTo(1);\n+        InputParser parser = victim.from(operation);\n+        assertThat(parser.getClass()).isEqualTo(JsonInputParser.class);\n     }\n \n     @Test\n     public void shouldReturnFlatParserWhenOperationSpecifiesIt() {\n+        InputParserProvider victim = new InputParserProvider();", "originalCommit": "3b08fd573247b18841320aae83f84d9c367070fa", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}]}