{"pr_number": 3189, "pr_title": "NMS-12955: sFlow Ingress / Egress", "pr_author": "dino2gnt", "pr_createdAt": "2020-10-19T15:44:58Z", "pr_url": "https://github.com/OpenNMS/opennms/pull/3189", "timeline": [{"oid": "52264d5963affc44d83720d3aa3b1ef680907d2e", "url": "https://github.com/OpenNMS/opennms/commit/52264d5963affc44d83720d3aa3b1ef680907d2e", "message": "add support for detecting direction of sflow packets", "committedDate": "2020-10-19T15:36:27Z", "type": "commit"}, {"oid": "24d18d6e71b11526d9f88157a7be38c9dfb21771", "url": "https://github.com/OpenNMS/opennms/commit/24d18d6e71b11526d9f88157a7be38c9dfb21771", "message": "Forgot the import", "committedDate": "2020-10-19T16:29:52Z", "type": "commit"}, {"oid": "c71b5926dc9d5175045d563c3d9891df66117527", "url": "https://github.com/OpenNMS/opennms/commit/c71b5926dc9d5175045d563c3d9891df66117527", "message": "Fix tests?", "committedDate": "2020-10-19T19:05:02Z", "type": "commit"}, {"oid": "0a2a7c7a8503034757001e16bb25bd399e081879", "url": "https://github.com/OpenNMS/opennms/commit/0a2a7c7a8503034757001e16bb25bd399e081879", "message": "Oops, remove these prints", "committedDate": "2020-10-19T19:07:51Z", "type": "commit"}, {"oid": "fd957c786a442737a958bdd2443a398b6af8bd2f", "url": "https://github.com/OpenNMS/opennms/commit/fd957c786a442737a958bdd2443a398b6af8bd2f", "message": "fix indentation", "committedDate": "2020-10-19T21:28:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515823772", "body": "```suggestion\r\n        if (getInt64(document, \"source_id\").equals(getInt64(document, \"input\"))) {\r\n            return Direction.INGRESS;\r\n        } else {\r\n            return Direction.EGRESS;\r\n        }\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (!getInt64(document, \"source_id\").equals(getInt64(document, \"input\")) &&\n          \n          \n            \n                        !getInt64(document, \"source_id\").equals(Optional.empty())) {\n          \n          \n            \n                        return Direction.EGRESS;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return Direction.INGRESS;\n          \n          \n            \n                    }\n          \n          \n            \n                    if (getInt64(document, \"source_id\").equals(getInt64(document, \"input\"))) {\n          \n          \n            \n                        return Direction.INGRESS;\n          \n          \n            \n                    } else {\n          \n          \n            \n                        return Direction.EGRESS;\n          \n          \n            \n                    }", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>getInt64(document, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>source_id<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>equals(getInt64(document, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>input<span class=\"pl-pds\">\"</span></span>)) <span class=\"pl-k\">&amp;&amp;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">!</span>getInt64(document, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>source_id<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>equals(<span class=\"pl-smi\">Optional</span><span class=\"pl-k\">.</span>empty())) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Direction</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>EGRESS</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"109\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Direction</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INGRESS</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"111\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (getInt64(document, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>source_id<span class=\"pl-pds\">\"</span></span>)<span class=\"pl-k\">.</span>equals(getInt64(document, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>input<span class=\"pl-pds\">\"</span></span>))) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Direction</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>INGRESS</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"109\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Direction</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>EGRESS</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "fooker", "createdAt": "2020-11-02T09:00:32Z", "path": "features/telemetry/protocols/sflow/adapter/src/main/java/org/opennms/netmgt/telemetry/protocols/sflow/adapter/SFlow.java", "diffHunk": "@@ -92,7 +93,12 @@ public Long getBytes() {\n \n     @Override\n     public Direction getDirection() {\n-        return Direction.INGRESS;\n+        if (!getInt64(document, \"source_id\").equals(getInt64(document, \"input\")) &&\n+            !getInt64(document, \"source_id\").equals(Optional.empty())) {\n+            return Direction.EGRESS;\n+        } else {\n+            return Direction.INGRESS;\n+        }", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NDU4Mw==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516044583", "bodyText": "I did it this way because I only wanted to set egress on packets that specifically met the criteria, and let everything else be ingress (egress as the exception, ingress as the rule, i suppose).  I felt that better aligned with the current behavior of unconditionally marking everything as ingress.  I don't have a problem flipping the logic if that's what's preferred.", "author": "dino2gnt", "createdAt": "2020-11-02T15:19:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMwNTIyMA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516305220", "bodyText": "There are two things that came to my mind:\n\nswitching the then and the else branches to get rid of some boolean inverts. But your explaination makes sens - if ingress is the default, keep it in the else branch.\nlooks like source_id is never empty (if there is a chance, using getInt64(...).isPresent() is a more appropriate way to check, btw.)", "author": "fooker", "createdAt": "2020-11-02T22:48:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNDA5Nw==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515824097", "body": "Indention", "bodyText": "Indention", "bodyHTML": "<p dir=\"auto\">Indention</p>", "author": "fooker", "createdAt": "2020-11-02T09:01:07Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -382,6 +406,20 @@ public void testSFlowHeader() {\n         Assert.assertEquals(null, sFlow.getTimestamp());\n     }\n \n+    @Test\n+    public void testIngress() {\n+        final BsonDocument bsonDocument = createDirectionIngress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNDEyOA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515824128", "body": "Indention", "bodyText": "Indention", "bodyHTML": "<p dir=\"auto\">Indention</p>", "author": "fooker", "createdAt": "2020-11-02T09:01:12Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -382,6 +406,20 @@ public void testSFlowHeader() {\n         Assert.assertEquals(null, sFlow.getTimestamp());\n     }\n \n+    @Test\n+    public void testIngress() {\n+        final BsonDocument bsonDocument = createDirectionIngress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.INGRESS, sFlow.getDirection());\n+    }\n+\n+    @Test\n+    public void testEgress() {\n+        final BsonDocument bsonDocument = createDirectionEgress();\n+        final SFlow sFlow = new SFlow(SFLOW_HEADER, bsonDocument);\n+\tAssert.assertEquals(Flow.Direction.EGRESS, sFlow.getDirection());", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r515825155", "body": "If only called once, just inline these methods", "bodyText": "If only called once, just inline these methods", "bodyHTML": "<p dir=\"auto\">If only called once, just inline these methods</p>", "author": "fooker", "createdAt": "2020-11-02T09:03:00Z", "path": "features/telemetry/protocols/sflow/parser/src/test/java/org/opennms/netmgt/telemetry/protocols/sflow/parser/proto/flows/BsonDocumentTest.java", "diffHunk": "@@ -198,6 +198,30 @@ private BsonDocument createExtendedGateway() {\n         return bsonDocument;\n     }\n \n+    private BsonDocument createDirectionIngress() {", "originalCommit": "fd957c786a442737a958bdd2443a398b6af8bd2f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjA0NzAwNA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516047004", "bodyText": "I don't actually know what that means :)  I am not a Java developer in any sense.", "author": "dino2gnt", "createdAt": "2020-11-02T15:23:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjIzMjEwMA==", "url": "https://github.com/OpenNMS/opennms/pull/3189#discussion_r516232100", "bodyText": "don't bother making a little function to return the thing, just use the thing", "author": "RangerRick", "createdAt": "2020-11-02T20:21:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNTE1NQ=="}], "type": "inlineReview"}, {"oid": "42fa018403f3e05502e0d12b20831f9d3e248afb", "url": "https://github.com/OpenNMS/opennms/commit/42fa018403f3e05502e0d12b20831f9d3e248afb", "message": "fix indentation", "committedDate": "2020-11-02T15:39:59Z", "type": "commit"}, {"oid": "e3fe0405441701eacb92083ce254dfb25fe8d66f", "url": "https://github.com/OpenNMS/opennms/commit/e3fe0405441701eacb92083ce254dfb25fe8d66f", "message": "inlining per PR feedback", "committedDate": "2020-11-02T21:30:41Z", "type": "commit"}, {"oid": "80539d2f6df5818fd670f489005ea0c075ed7674", "url": "https://github.com/OpenNMS/opennms/commit/80539d2f6df5818fd670f489005ea0c075ed7674", "message": "further refinement after discussion with Dustin", "committedDate": "2020-11-03T21:51:36Z", "type": "commit"}, {"oid": "fe15173190a14b7b3bc9d4dd5deb6412c8e2c396", "url": "https://github.com/OpenNMS/opennms/commit/fe15173190a14b7b3bc9d4dd5deb6412c8e2c396", "message": "this import is no longer needed", "committedDate": "2020-11-03T21:54:39Z", "type": "commit"}]}