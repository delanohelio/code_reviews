{"pr_number": 1701, "pr_title": "Add method to get properties with a prefix", "pr_author": "jkosh44", "pr_createdAt": "2020-09-06T19:57:09Z", "pr_url": "https://github.com/apache/accumulo/pull/1701", "timeline": [{"oid": "3378be19cc9416ee39cf1100d4f69d44738fc8d5", "url": "https://github.com/apache/accumulo/commit/3378be19cc9416ee39cf1100d4f69d44738fc8d5", "message": "Add method to get properties with a prefix\n\nCloses #1627", "committedDate": "2020-09-06T19:53:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484108048", "body": "I know this should probably have a `@since` tag, I'm just not sure what version to put. Please let me know and I'll add it.", "bodyText": "I know this should probably have a @since tag, I'm just not sure what version to put. Please let me know and I'll add it.", "bodyHTML": "<p dir=\"auto\">I know this should probably have a <code>@since</code> tag, I'm just not sure what version to put. Please let me know and I'll add it.</p>", "author": "jkosh44", "createdAt": "2020-09-06T19:58:29Z", "path": "core/src/main/java/org/apache/accumulo/core/client/PluginEnvironment.java", "diffHunk": "@@ -55,6 +55,15 @@\n      */\n     String get(String key);\n \n+    /**\n+     * Returns all properties with a given prefix\n+     *\n+     * @param prefix\n+     *          prefix of properties to be returned\n+     * @return all properties with a given prefix\n+     */", "originalCommit": "3378be19cc9416ee39cf1100d4f69d44738fc8d5", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMTA3NA==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484111074", "bodyText": "2.1.0 would be the version we would add this kind of thing to.", "author": "ctubbsii", "createdAt": "2020-09-06T20:32:37Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExMTg1Ng==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484111856", "bodyText": "Thanks, added", "author": "jkosh44", "createdAt": "2020-09-06T20:41:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEwODA0OA=="}], "type": "inlineReview"}, {"oid": "78637d0f9e76d3249ab918bf54171e1ac8a711d6", "url": "https://github.com/apache/accumulo/commit/78637d0f9e76d3249ab918bf54171e1ac8a711d6", "message": "Add since tag to getWithPrefix", "committedDate": "2020-09-06T20:36:40Z", "type": "commit"}, {"oid": "78637d0f9e76d3249ab918bf54171e1ac8a711d6", "url": "https://github.com/apache/accumulo/commit/78637d0f9e76d3249ab918bf54171e1ac8a711d6", "message": "Add since tag to getWithPrefix", "committedDate": "2020-09-06T20:36:40Z", "type": "forcePushed"}, {"oid": "f4e3c51efed22f9c17185bf023883ecb1962e6e9", "url": "https://github.com/apache/accumulo/commit/f4e3c51efed22f9c17185bf023883ecb1962e6e9", "message": "Optimize isValidPropertyPrefix", "committedDate": "2020-09-06T21:16:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTI0Mg==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119242", "body": "This method isn't necessary, since this loop can be avoided.\r\n```suggestion\r\n```", "bodyText": "This method isn't necessary, since this loop can be avoided.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n              /**\n          \n          \n            \n               * Checks if the given property prefix is valid. A valid property prefix is equal to some prefix\n          \n          \n            \n               * defined in this class.\n          \n          \n            \n               *\n          \n          \n            \n               * @param prefix\n          \n          \n            \n               *          property prefix\n          \n          \n            \n               * @return true if prefix is valid (recognized)\n          \n          \n            \n               */\n          \n          \n            \n              public static boolean isValidPropertyPrefix(String prefix) {\n          \n          \n            \n                return validPrefixes.contains(prefix);\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">This method isn't necessary, since this loop can be avoided.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Checks</span> <span class=\"pl-k\">if</span> the given property prefix is valid. <span class=\"pl-smi\">A</span> valid property prefix is equal to some prefix</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> defined in <span class=\"pl-c1\">this</span> class.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> prefix</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span>          property prefix</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-c1\">true</span> <span class=\"pl-k\">if</span> prefix is valid (recognized)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> isValidPropertyPrefix(<span class=\"pl-smi\">String</span> prefix) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> validPrefixes<span class=\"pl-k\">.</span>contains(prefix);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ctubbsii", "createdAt": "2020-09-06T22:07:59Z", "path": "core/src/main/java/org/apache/accumulo/core/conf/Property.java", "diffHunk": "@@ -1233,6 +1233,18 @@ public static boolean isValidPropertyKey(String key) {\n     return validProperties.contains(key) || isKeyValidlyPrefixed(key);\n   }\n \n+  /**\n+   * Checks if the given property prefix is valid. A valid property prefix is equal to some prefix\n+   * defined in this class.\n+   *\n+   * @param prefix\n+   *          property prefix\n+   * @return true if prefix is valid (recognized)\n+   */\n+  public static boolean isValidPropertyPrefix(String prefix) {\n+    return validPrefixes.contains(prefix);\n+  }\n+", "originalCommit": "f4e3c51efed22f9c17185bf023883ecb1962e6e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTgzMw==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121833", "bodyText": "Removed", "author": "jkosh44", "createdAt": "2020-09-06T22:36:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTI0Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTM4MA==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119380", "body": "This check for valid prefix property can be avoided, by checking the returned object from `Property.getPropertyByKey(prefix)`:\r\n\r\n```suggestion\r\n      Property propertyPrefix = Property.getPropertyByKey(prefix);\r\n      if (propertyPrefix != null && propertyPrefix.getType() == PropertyType.PREFIX) {\r\n```", "bodyText": "This check for valid prefix property can be avoided, by checking the returned object from Property.getPropertyByKey(prefix):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (Property.isValidPropertyPrefix(prefix)) {\n          \n          \n            \n                    Property propertyPrefix = Property.getPropertyByKey(prefix);\n          \n          \n            \n                  Property propertyPrefix = Property.getPropertyByKey(prefix);\n          \n          \n            \n                  if (propertyPrefix != null && propertyPrefix.getType() == PropertyType.PREFIX) {", "bodyHTML": "<p dir=\"auto\">This check for valid prefix property can be avoided, by checking the returned object from <code>Property.getPropertyByKey(prefix)</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k x x-first\">if</span><span class=\"x x-last\"> (</span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isValidPropertyPrefix</span>(prefix)<span class=\"x x-first x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"x x-first\">  </span><span class=\"pl-smi x\">Property</span><span class=\"x x-last\"> </span>propertyPrefix<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">Property</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getPropertyByKey(prefix);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi x x-first\">Property</span><span class=\"x\"> propertyPrefix </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">Property</span><span class=\"pl-k\">.</span><span class=\"x x-first x-last\">getPropertyByKey</span>(prefix)<span class=\"x x-first x-last\">;</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (propertyPrefix </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x x-last\"> </span>propertyPrefix<span class=\"pl-k x x-first\">.</span><span class=\"x\">getType() </span><span class=\"pl-k x\">==</span><span class=\"x\"> </span><span class=\"pl-smi x\">PropertyType</span><span class=\"pl-c1\"><span class=\"pl-k x\">.</span><span class=\"x\">PREFIX</span></span><span class=\"x x-last\">) {</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ctubbsii", "createdAt": "2020-09-06T22:09:54Z", "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);", "originalCommit": "f4e3c51efed22f9c17185bf023883ecb1962e6e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTgzOQ==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121839", "bodyText": "Fixed", "author": "jkosh44", "createdAt": "2020-09-06T22:36:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTM4MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTU0MQ==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484119541", "body": "This can be more succinctly written with streams:\r\n```suggestion\r\n        return StreamSupport.stream(acfg.spliterator(), false)\r\n            .filter(prop -> prop.getKey().startsWith(prefix))\r\n            .collect(Collectors.toMap(Entry::getKey, Entry::getValue));\r\n```", "bodyText": "This can be more succinctly written with streams:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String,String> properties = new HashMap<>();\n          \n          \n            \n                    for (Entry<String,String> prop : acfg) {\n          \n          \n            \n                      if (prop.getKey().startsWith(prefix)) {\n          \n          \n            \n                        properties.put(prop.getKey(), prop.getValue());\n          \n          \n            \n                      }\n          \n          \n            \n                    }\n          \n          \n            \n                    return properties;\n          \n          \n            \n                  }\n          \n          \n            \n                    return StreamSupport.stream(acfg.spliterator(), false)\n          \n          \n            \n                        .filter(prop -> prop.getKey().startsWith(prefix))\n          \n          \n            \n                        .collect(Collectors.toMap(Entry::getKey, Entry::getValue));", "bodyHTML": "<p dir=\"auto\">This can be more succinctly written with streams:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">Map&lt;<span class=\"pl-smi\">String</span>,<span class=\"pl-smi\">String</span>&gt;</span> properties <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">HashMap&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-k\">Entry&lt;<span class=\"pl-smi\">String</span>,<span class=\"pl-smi\">String</span>&gt;</span> prop <span class=\"pl-k\">:</span> acfg) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">if</span> (prop<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k\">.</span>startsWith(prefix)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"95\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            properties<span class=\"pl-k\">.</span>put(prop<span class=\"pl-k\">.</span>getKey(), prop<span class=\"pl-k\">.</span>getValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"96\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> properties;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"99\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"92\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">StreamSupport</span><span class=\"pl-k\">.</span>stream(acfg<span class=\"pl-k\">.</span>spliterator(), <span class=\"pl-c1\">false</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"93\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .filter(prop <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> prop<span class=\"pl-k\">.</span>getKey()<span class=\"pl-k\">.</span>startsWith(prefix))</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"94\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toMap(<span class=\"pl-smi\">Entry</span><span class=\"pl-k\">::</span>getKey, <span class=\"pl-smi\">Entry</span><span class=\"pl-k\">::</span>getValue));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ctubbsii", "createdAt": "2020-09-06T22:11:25Z", "path": "server/base/src/main/java/org/apache/accumulo/server/ServiceEnvironmentImpl.java", "diffHunk": "@@ -78,6 +79,22 @@ public String get(String key) {\n       }\n     }\n \n+    @Override\n+    public Map<String,String> getWithPrefix(String prefix) {\n+      if (Property.isValidPropertyPrefix(prefix)) {\n+        Property propertyPrefix = Property.getPropertyByKey(prefix);\n+        return acfg.getAllPropertiesWithPrefix(propertyPrefix);\n+      } else {\n+        Map<String,String> properties = new HashMap<>();\n+        for (Entry<String,String> prop : acfg) {\n+          if (prop.getKey().startsWith(prefix)) {\n+            properties.put(prop.getKey(), prop.getValue());\n+          }\n+        }\n+        return properties;\n+      }", "originalCommit": "f4e3c51efed22f9c17185bf023883ecb1962e6e9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDEyMTg0OA==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484121848", "bodyText": "Fixed", "author": "jkosh44", "createdAt": "2020-09-06T22:37:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDExOTU0MQ=="}], "type": "inlineReview"}, {"oid": "83ec2e85fda4ebbd9f8e175182cbb9d6cd52f4d0", "url": "https://github.com/apache/accumulo/commit/83ec2e85fda4ebbd9f8e175182cbb9d6cd52f4d0", "message": "Simplify getWithPrefix", "committedDate": "2020-09-06T22:36:18Z", "type": "commit"}, {"oid": "89d7e17b1c8713a174191fa5fcf68cc62e695ace", "url": "https://github.com/apache/accumulo/commit/89d7e17b1c8713a174191fa5fcf68cc62e695ace", "message": "Format code and add docs", "committedDate": "2020-09-07T00:02:17Z", "type": "commit"}, {"oid": "21058512dfc954b66233dd4c474c6822000f3c71", "url": "https://github.com/apache/accumulo/commit/21058512dfc954b66233dd4c474c6822000f3c71", "message": "Add tests", "committedDate": "2020-09-07T00:06:45Z", "type": "commit"}, {"oid": "21058512dfc954b66233dd4c474c6822000f3c71", "url": "https://github.com/apache/accumulo/commit/21058512dfc954b66233dd4c474c6822000f3c71", "message": "Add tests", "committedDate": "2020-09-07T00:06:45Z", "type": "forcePushed"}, {"oid": "25382ca456ec0791c93b65dfbec32581fd5571bb", "url": "https://github.com/apache/accumulo/commit/25382ca456ec0791c93b65dfbec32581fd5571bb", "message": "Verify mocks in tests", "committedDate": "2020-09-07T02:16:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MTczOA==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484151738", "body": "The verify method is actually a varargs, so you can pass both in one:\r\n\r\n```suggestion\r\n  @After\r\n  public void verifyMocks() {\r\n    verify(srvCtx, acfg);\r\n  }\r\n\r\n```", "bodyText": "The verify method is actually a varargs, so you can pass both in one:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @After\n          \n          \n            \n              public void verifyMocks() {\n          \n          \n            \n                verify(srvCtx);\n          \n          \n            \n                verify(acfg);\n          \n          \n            \n              }\n          \n          \n            \n              @After\n          \n          \n            \n              public void verifyMocks() {\n          \n          \n            \n                verify(srvCtx, acfg);\n          \n          \n            \n              }", "bodyHTML": "<p dir=\"auto\">The verify method is actually a varargs, so you can pass both in one:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">@After</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> verifyMocks() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    verify(srvCtx);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"x x-first x-last\">  verify(acfg);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"x x-first x-last\">  }</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"53\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">@After</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"54\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> verifyMocks() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"55\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    verify(srvCtx<span class=\"x x-first x-last\">, acfg</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"56\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"x x-first x-last\">}</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ctubbsii", "createdAt": "2020-09-07T02:18:15Z", "path": "server/base/src/test/java/org/apache/accumulo/server/ServiceEnvironmentImplTest.java", "diffHunk": "@@ -44,6 +46,12 @@ public void setUp() {\n     serviceEnvironment = new ServiceEnvironmentImpl(srvCtx);\n   }\n \n+  @After\n+  public void verifyMocks() {\n+    verify(srvCtx);\n+    verify(acfg);\n+  }\n+", "originalCommit": "25382ca456ec0791c93b65dfbec32581fd5571bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MjQ4Mw==", "url": "https://github.com/apache/accumulo/pull/1701#discussion_r484152483", "bodyText": "Fixed", "author": "jkosh44", "createdAt": "2020-09-07T02:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE1MTczOA=="}], "type": "inlineReview"}, {"oid": "f43ce3660eeee4f4ec30e6d7253e034bbcd3426e", "url": "https://github.com/apache/accumulo/commit/f43ce3660eeee4f4ec30e6d7253e034bbcd3426e", "message": "Clean up verify", "committedDate": "2020-09-07T02:20:08Z", "type": "commit"}]}