{"pr_number": 1537, "pr_title": "Add PrintInfo options to dump full keys, apply formatter", "pr_author": "drewfarris", "pr_createdAt": "2020-02-28T00:44:05Z", "pr_url": "https://github.com/apache/accumulo/pull/1537", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3NTAyMA==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385475020", "body": "This is a general question - would this reflection code need to change for jdk-11+ (for when this is merged forward)? Specifically, is this still the standard way to use reflection, or has the \"standard\" changed?  From what I've read it looks okay, but thought it warranted checking.", "bodyText": "This is a general question - would this reflection code need to change for jdk-11+ (for when this is merged forward)? Specifically, is this still the standard way to use reflection, or has the \"standard\" changed?  From what I've read it looks okay, but thought it warranted checking.", "bodyHTML": "<p dir=\"auto\">This is a general question - would this reflection code need to change for jdk-11+ (for when this is merged forward)? Specifically, is this still the standard way to use reflection, or has the \"standard\" changed?  From what I've read it looks okay, but thought it warranted checking.</p>", "author": "EdColeman", "createdAt": "2020-02-28T02:12:44Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -119,6 +182,18 @@ public String keyword() {\n     return \"rfile-info\";\n   }\n \n+  protected Class<? extends Formatter> getFormater(String formatterClazz) {\n+    try {\n+      if (formatterClazz != null) {\n+        return this.getClass().getClassLoader().loadClass(formatterClazz)\n+            .asSubclass(Formatter.class);\n+      }\n+    } catch (ClassNotFoundException e) {\n+      System.err.println(\"Could not find formatter class: \" + formatterClazz);\n+    }\n+    return null;\n+  }\n+", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3NzQyMw==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385477423", "bodyText": "I think this will work fine in Java 11, since it uses the class loader of the current class, and not the system class loader.", "author": "ctubbsii", "createdAt": "2020-02-28T02:23:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ3NTAyMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxODc3OA==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385918778", "body": "The formatter class is a bit of a mess.  What do you think about accepting any class that implements `BiFunction<Key, Value, String>`?  If you have a strong need specifically for the formatter, please ignore the comments related to BiFunction", "bodyText": "The formatter class is a bit of a mess.  What do you think about accepting any class that implements BiFunction<Key, Value, String>?  If you have a strong need specifically for the formatter, please ignore the comments related to BiFunction", "bodyHTML": "<p dir=\"auto\">The formatter class is a bit of a mess.  What do you think about accepting any class that implements <code>BiFunction&lt;Key, Value, String&gt;</code>?  If you have a strong need specifically for the formatter, please ignore the comments related to BiFunction</p>", "author": "keith-turner", "createdAt": "2020-02-28T20:57:45Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -49,6 +59,12 @@\n   static class Opts extends Help {\n     @Parameter(names = {\"-d\", \"--dump\"}, description = \"dump the key/value pairs\")\n     boolean dump = false;\n+    @Parameter(names = {\"--fullKeys\"},\n+        description = \"dump full keys regardless of length, do no truncate, implies --dump\")\n+    boolean fullKeys = false;\n+    @Parameter(names = {\"--formatter\"},\n+        description = \"specify a formatter class to apply to rfile contents, implies --dump\")", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2NzkyMQ==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r386467921", "bodyText": "Let me give this a shot. I can't recall whether Formatter implements BiFunction<Key, Value String> - I suspect it does not", "author": "drewfarris", "createdAt": "2020-03-02T15:38:30Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxODc3OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMTU4Ng==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385921586", "body": "If using BiFunction could possibly do\r\n\r\n```suggestion\r\n        BiFunction<Key,Value,String> formatter = null;\r\n        if (opts.formatterClazz != null) {\r\n          final Class<? extends BiFunction<Key,Value,String>> formatterClass = getFormater(opts.formatterClazz);\r\n          formatter = formatterClass.newInstance();\r\n        } else if (opts.fullKeys) {\r\n          formatter = (key, value) - > {key.toStringNoTruncate() + \" -> \" + value};\r\n        } else if(opts.dump){\r\n           formatter = (key, value) - > {key + \" -> \" + value};\r\n        }\r\n```", "bodyText": "If using BiFunction could possibly do\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Formatter formatter = null;\n          \n          \n            \n                    if (opts.formatterClazz != null) {\n          \n          \n            \n                      final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n          \n          \n            \n                      FormatterConfig config = new FormatterConfig();\n          \n          \n            \n                      config.setPrintTimestamps(true);\n          \n          \n            \n                      formatter =\n          \n          \n            \n                          FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n          \n          \n            \n                    }\n          \n          \n            \n                    BiFunction<Key,Value,String> formatter = null;\n          \n          \n            \n                    if (opts.formatterClazz != null) {\n          \n          \n            \n                      final Class<? extends BiFunction<Key,Value,String>> formatterClass = getFormater(opts.formatterClazz);\n          \n          \n            \n                      formatter = formatterClass.newInstance();\n          \n          \n            \n                    } else if (opts.fullKeys) {\n          \n          \n            \n                      formatter = (key, value) - > {key.toStringNoTruncate() + \" -> \" + value};\n          \n          \n            \n                    } else if(opts.dump){\n          \n          \n            \n                       formatter = (key, value) - > {key + \" -> \" + value};\n          \n          \n            \n                    }", "bodyHTML": "<p dir=\"auto\">If using BiFunction could possibly do</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Formatter</span> formatter <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">if</span> (opts<span class=\"pl-k\">.</span>formatterClazz <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">final</span> <span class=\"pl-k\">Class&lt;? extends <span class=\"pl-smi\">Formatter</span>&gt;</span> formatterClass <span class=\"pl-k\">=</span> getFormater(opts<span class=\"pl-k\">.</span>formatterClazz);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-smi\">FormatterConfig</span> config <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FormatterConfig</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          config<span class=\"pl-k\">.</span>setPrintTimestamps(<span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"262\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          formatter <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"263\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi\">FormatterFactory</span><span class=\"pl-k\">.</span>getFormatter(formatterClass, <span class=\"pl-k\">new</span> <span class=\"pl-smi\">FormatterAdapter</span>(dataIter), config);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"264\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"257\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">BiFunction&lt;<span class=\"pl-smi\">Key</span>,<span class=\"pl-smi\">Value</span>,<span class=\"pl-smi\">String</span>&gt;</span> formatter <span class=\"pl-k\">=</span> <span class=\"pl-c1\">null</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"258\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (opts<span class=\"pl-k\">.</span>formatterClazz <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"259\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          <span class=\"pl-k\">final</span> <span class=\"pl-k\">Class&lt;? extends <span class=\"pl-k\">BiFunction&lt;<span class=\"pl-smi\">Key</span>,<span class=\"pl-smi\">Value</span>,<span class=\"pl-smi\">String</span>&gt;</span>&gt;</span> formatterClass <span class=\"pl-k\">=</span> getFormater(opts<span class=\"pl-k\">.</span>formatterClazz);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"260\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          formatter <span class=\"pl-k\">=</span> formatterClass<span class=\"pl-k\">.</span>newInstance();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"261\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (opts<span class=\"pl-k\">.</span>fullKeys) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"262\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">          formatter <span class=\"pl-k\">=</span> (key, value) <span class=\"pl-k\">-</span> <span class=\"pl-k\">&gt;</span> {key<span class=\"pl-k\">.</span>toStringNoTruncate() <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> -&gt; <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> value};</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"263\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span>(opts<span class=\"pl-k\">.</span>dump){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"264\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">           formatter <span class=\"pl-k\">=</span> (key, value) <span class=\"pl-k\">-</span> <span class=\"pl-k\">&gt;</span> {key <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span> -&gt; <span class=\"pl-pds\">\"</span></span> <span class=\"pl-k\">+</span> value};</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"265\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "keith-turner", "createdAt": "2020-02-28T21:05:06Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMTgwMg==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385921802", "body": "If using BiFunction this could go away.\r\n\r\n```suggestion\r\n\r\n```", "bodyText": "If using BiFunction this could go away.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        while (formatter.hasNext()) {\n          \n          \n            \n                          System.out.print(formatter.next());\n          \n          \n            \n                          if (System.out.checkError()) {\n          \n          \n            \n                            return;\n          \n          \n            \n                          }\n          \n          \n            \n                        }", "bodyHTML": "<p dir=\"auto\">If using BiFunction this could go away.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"269\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">while</span> (formatter<span class=\"pl-k\">.</span>hasNext()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"270\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>print(formatter<span class=\"pl-k\">.</span>next());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"271\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out<span class=\"pl-k\">.</span>checkError()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"272\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-k\">return</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"273\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"274\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "keith-turner", "createdAt": "2020-02-28T21:05:41Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {\n+              System.out.print(formatter.next());\n+              if (System.out.checkError()) {\n                 return;\n+              }\n             }", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjI4Nw==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922287", "body": "```suggestion\r\n              if (formatter != null) {\r\n                System.out\r\n                    .println(formatter.apply(key,value));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          if (opts.dump || opts.fullKeys) {\n          \n          \n            \n                            System.out\n          \n          \n            \n                                .println((opts.fullKeys ? key.toStringNoTruncate() : key) + \" -> \" + value);\n          \n          \n            \n                          if (formatter != null) {\n          \n          \n            \n                            System.out\n          \n          \n            \n                                .println(formatter.apply(key,value));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-k\">if</span> (<span class=\"x x-first\">opts</span><span class=\"pl-k x\">.</span><span class=\"x\">dump </span><span class=\"pl-k x\">||</span><span class=\"x\"> opts</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">fullKeys</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                    .println(<span class=\"x x-first\">(opts</span><span class=\"pl-k x\">.</span><span class=\"x\">fullKeys </span><span class=\"pl-k x\">?</span><span class=\"x\"> key</span><span class=\"pl-k x\">.</span><span class=\"x\">toStringNoTruncate() </span><span class=\"pl-k x\">:</span><span class=\"x x-last\"> </span>key<span class=\"x x-first\">) </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\"> -&gt; </span><span class=\"pl-pds x\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x x-last\"> </span>value);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-k\">if</span> (<span class=\"x x-first\">formatter </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">System</span><span class=\"pl-k\">.</span>out</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                    .println(<span class=\"x x-first\">formatter</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">apply(</span>key<span class=\"x x-first x-last\">,</span>value<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "keith-turner", "createdAt": "2020-02-28T21:06:53Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {\n+              System.out.print(formatter.next());\n+              if (System.out.checkError()) {\n                 return;\n+              }\n             }\n-            if (opts.histogram) {\n-              kvHistogram.add(key.getSize() + value.getSize());\n-            }\n-            if (opts.keyStats) {\n-              dataKeyStats.add(key);\n+          } else {\n+            while (dataIter.hasTop()) {\n+              Key key = dataIter.getTopKey();\n+              Value value = dataIter.getTopValue();\n+              if (opts.dump || opts.fullKeys) {\n+                System.out\n+                    .println((opts.fullKeys ? key.toStringNoTruncate() : key) + \" -> \" + value);", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjU4Nw==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922587", "body": "If using BiFunction, would not need this class.", "bodyText": "If using BiFunction, would not need this class.", "bodyHTML": "<p dir=\"auto\">If using BiFunction, would not need this class.</p>", "author": "keith-turner", "createdAt": "2020-02-28T21:07:45Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -110,6 +126,53 @@ public void print(String indent) {\n     }\n   }\n \n+  static class FormatterAdapter implements Iterable<Entry<Key,Value>> {", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjk3NQ==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r385922975", "body": "This seems a bit dicey.  The underlying iterator is reset under the formatter for each locality group.  If formatter were stateful with hasNext() this may cause problems.", "bodyText": "This seems a bit dicey.  The underlying iterator is reset under the formatter for each locality group.  If formatter were stateful with hasNext() this may cause problems.", "bodyHTML": "<p dir=\"auto\">This seems a bit dicey.  The underlying iterator is reset under the formatter for each locality group.  If formatter were stateful with hasNext() this may cause problems.</p>", "author": "keith-turner", "createdAt": "2020-02-28T21:08:55Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -192,23 +268,43 @@ public void execute(final String[] args) throws Exception {\n           }\n         }\n \n+        Formatter formatter = null;\n+        if (opts.formatterClazz != null) {\n+          final Class<? extends Formatter> formatterClass = getFormater(opts.formatterClazz);\n+          FormatterConfig config = new FormatterConfig();\n+          config.setPrintTimestamps(true);\n+          formatter =\n+              FormatterFactory.getFormatter(formatterClass, new FormatterAdapter(dataIter), config);\n+        }\n+\n         for (String lgName : localityGroupCF.keySet()) {\n           LocalityGroupUtil.seek(dataIter, new Range(), lgName, localityGroupCF);\n-          while (dataIter.hasTop()) {\n-            Key key = dataIter.getTopKey();\n-            Value value = dataIter.getTopValue();\n-            if (opts.dump) {\n-              System.out.println(key + \" -> \" + value);\n-              if (System.out.checkError())\n+\n+          if (formatter != null) {\n+            while (formatter.hasNext()) {", "originalCommit": "403dfe12dc2b953b06f909094c60cd536b79d3bb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2OTM5Mg==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r386469392", "bodyText": "Yeah, I wasn't too happy about this one either. I suspect one approach would be to create a new instance of the formatter for each locality group.", "author": "drewfarris", "createdAt": "2020-03-02T15:40:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkyMjk3NQ=="}], "type": "inlineReview"}, {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "url": "https://github.com/apache/accumulo/commit/5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "message": "Add PrintInfo options to dump full keys, apply formatter", "committedDate": "2020-03-06T22:22:41Z", "type": "commit"}, {"oid": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "url": "https://github.com/apache/accumulo/commit/5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "message": "Add PrintInfo options to dump full keys, apply formatter", "committedDate": "2020-03-06T22:22:41Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4OTAxNA==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r389189014", "body": "If you assign the unchecked code to a variable, you can add this suppression on just that assignment, so it doesn't mask other (fixable, avoidable) problems in the method.", "bodyText": "If you assign the unchecked code to a variable, you can add this suppression on just that assignment, so it doesn't mask other (fixable, avoidable) problems in the method.", "bodyHTML": "<p dir=\"auto\">If you assign the unchecked code to a variable, you can add this suppression on just that assignment, so it doesn't mask other (fixable, avoidable) problems in the method.</p>", "author": "ctubbsii", "createdAt": "2020-03-06T23:16:03Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -138,6 +146,19 @@ public String description() {\n     return \"Prints rfile info\";\n   }\n \n+  @SuppressWarnings(\"unchecked\")", "originalCommit": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE4OTI3OA==", "url": "https://github.com/apache/accumulo/pull/1537#discussion_r389189278", "body": "If the user's command-line cannot be satisfied (probably a typo in their class name), we should probably hard-fail by letting this exception fall through, rather than returning null and by effetively wasting time dumping a file in a format the user doesn't want.", "bodyText": "If the user's command-line cannot be satisfied (probably a typo in their class name), we should probably hard-fail by letting this exception fall through, rather than returning null and by effetively wasting time dumping a file in a format the user doesn't want.", "bodyHTML": "<p dir=\"auto\">If the user's command-line cannot be satisfied (probably a typo in their class name), we should probably hard-fail by letting this exception fall through, rather than returning null and by effetively wasting time dumping a file in a format the user doesn't want.</p>", "author": "ctubbsii", "createdAt": "2020-03-06T23:17:13Z", "path": "core/src/main/java/org/apache/accumulo/core/file/rfile/PrintInfo.java", "diffHunk": "@@ -138,6 +146,19 @@ public String description() {\n     return \"Prints rfile info\";\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n+  protected Class<? extends BiFunction<Key,Value,String>> getFormatter(String formatterClazz) {\n+    try {\n+      if (formatterClazz != null) {\n+        return (Class<? extends BiFunction<Key,Value,String>>) this.getClass().getClassLoader()\n+            .loadClass(formatterClazz).asSubclass(BiFunction.class);\n+      }\n+    } catch (ClassNotFoundException e) {\n+      System.err.println(\"Could not find formatter class: \" + formatterClazz);", "originalCommit": "5b5976fd2ac14896fadaeb7bc1fbe359facf55fa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0ede311a3ea5b85a1952457c25d8b619be3b3a73", "url": "https://github.com/apache/accumulo/commit/0ede311a3ea5b85a1952457c25d8b619be3b3a73", "message": "Updates per code review", "committedDate": "2020-03-10T13:02:22Z", "type": "commit"}]}