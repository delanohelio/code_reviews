{"pr_number": 1172, "pr_title": "Keep spans active during AsyncHandler methods in AsyncHttpClient", "pr_author": "milanvdm", "pr_createdAt": "2020-05-04T18:07:07Z", "pr_url": "https://github.com/elastic/apm-agent-java/pull/1172", "timeline": [{"oid": "c2cd89e9b8e8dbfe1eb26b122862eeece99b1e79", "url": "https://github.com/elastic/apm-agent-java/commit/c2cd89e9b8e8dbfe1eb26b122862eeece99b1e79", "message": "Keep span active in AsyncHandler methods", "committedDate": "2020-05-04T18:03:10Z", "type": "commit"}, {"oid": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "url": "https://github.com/elastic/apm-agent-java/commit/355f20c82c1619ab38d7ab6a7defef1ed3e14986", "message": "Add initial attempt for testing custom AsyncHandler", "committedDate": "2020-05-04T18:03:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYyNzAxOA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419627018", "body": "Not sure how to add a proper test making sure the context in the methods are active or not.", "bodyText": "Not sure how to add a proper test making sure the context in the methods are active or not.", "bodyHTML": "<p dir=\"auto\">Not sure how to add a proper test making sure the context in the methods are active or not.</p>", "author": "milanvdm", "createdAt": "2020-05-04T18:07:50Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +46,32 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assert(tracer.currentTransaction() != null);", "originalCommit": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjIyOA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882228", "body": "remove from the map and assign to the span paramenter", "bodyText": "remove from the map and assign to the span paramenter", "bodyHTML": "<p dir=\"auto\">remove from the map and assign to the span paramenter</p>", "author": "felixbarny", "createdAt": "2020-05-05T06:09:36Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n+            final Span span = handlerSpanMap.getIfPresent(asyncHandler);", "originalCommit": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjM5OA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882398", "body": "Making sure that wrapped `AsyncHandler`s work as expected (activate and deactivate only in outer-most `AsyncHandler`\r\n```suggestion\r\n        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {\r\n```", "bodyText": "Making sure that wrapped AsyncHandlers work as expected (activate and deactivate only in outer-most AsyncHandler\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n          \n          \n            \n                    private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {", "bodyHTML": "<p dir=\"auto\">Making sure that wrapped <code>AsyncHandler</code>s work as expected (activate and deactivate only in outer-most <code>AsyncHandler</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> onMethodEnter(<span class=\"pl-k\">@Advice</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">This</span> <span class=\"pl-k\">AsyncHandler&lt;?&gt;</span> asyncHandler) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> onMethodEnter(<span class=\"pl-k\">@Advice</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">This</span> <span class=\"pl-k\">AsyncHandler&lt;?&gt;</span> asyncHandler<span class=\"x x-first\">, </span><span class=\"pl-k x\">@Advice.Local</span><span class=\"x\">(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">span</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">) </span><span class=\"pl-smi x\">Span</span><span class=\"x x-last\"> span</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "felixbarny", "createdAt": "2020-05-05T06:10:12Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {", "originalCommit": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5ODI5Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419898292", "bodyText": "Bit unsure on what you mean with activate and deactive in the outer-most AsyncHandler?", "author": "milanvdm", "createdAt": "2020-05-05T06:52:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjM5OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMTk2Nw==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419911967", "bodyText": "Following the decorator pattern, calling AsyncHandler#onComplete may result in the handler calling another, wrapped/nested AsyncHandler#onComplete. We want to make sure that only the first AsyncHandler activates and deactivates the span.\nIn your first draft, the first AsyncHandler would activate the span but the last AsyncHandler in the chain would deactivate it. This would result in the span not being active in the first AsyncHandler after it called onComplete on its delegate handler.\n    private final AsyncHandler<Response> delegate;\n\n    @Override\n    public Response onCompleted(Response response) {\n        try {\n            return delegate.onCompleted(response);\n        } finally {\n             tracer.getActive() // returns null\n        }\n    }\n\nBy propagating the active span via a @Advice.Local, we have fixed that problem.", "author": "felixbarny", "createdAt": "2020-05-05T07:25:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjM5OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4MjYzMA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419882630", "body": "```suggestion\r\n        private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler, @Nullable @Advice.Local(\"span\") Span span) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler) {\n          \n          \n            \n                        final Span span = handlerSpanMap.remove(asyncHandler);\n          \n          \n            \n                    private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler, @Nullable @Advice.Local(\"span\") Span span) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> onMethodExit(<span class=\"pl-k\">@Advice</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">This</span> <span class=\"pl-k\">AsyncHandler&lt;?&gt;</span> asyncHandler) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Span</span> span <span class=\"pl-k\">=</span> handlerSpanMap<span class=\"pl-k\">.</span>remove(asyncHandler);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">void</span> onMethodExit(<span class=\"pl-k\">@Advice</span><span class=\"pl-k\">.</span><span class=\"pl-smi\">This</span> <span class=\"pl-k\">AsyncHandler&lt;?&gt;</span> asyncHandler, <span class=\"pl-k\">@Nullable</span> <span class=\"pl-k\">@Advice.Local</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>span<span class=\"pl-pds\">\"</span></span>) <span class=\"pl-smi\">Span</span> span) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "felixbarny", "createdAt": "2020-05-05T06:10:56Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -179,6 +179,14 @@ public AsyncHandlerOnCompletedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n+            final Span span = handlerSpanMap.getIfPresent(asyncHandler);\n+            if (span != null) {\n+                span.activate();\n+            }\n+        }\n+\n+        @Advice.OnMethodExit(suppress = Throwable.class)\n+        private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler) {\n             final Span span = handlerSpanMap.remove(asyncHandler);", "originalCommit": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4Mzg1Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419883853", "body": "Use AssertJ, for consistency\r\n\r\nAdd static import for `org.assertj.core.api.Assertions.assertThat`\r\n\r\n```suggestion\r\n            assertThat(tracer.activeSpan()).isNotNull();\r\n            assertThat(tracer.isExit()).isTrue();\r\n```", "bodyText": "Use AssertJ, for consistency\nAdd static import for org.assertj.core.api.Assertions.assertThat\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assert(tracer.currentTransaction() != null);\n          \n          \n            \n                        assertThat(tracer.activeSpan()).isNotNull();\n          \n          \n            \n                        assertThat(tracer.isExit()).isTrue();", "bodyHTML": "<p dir=\"auto\">Use AssertJ, for consistency</p>\n<p dir=\"auto\">Add static import for <code>org.assertj.core.api.Assertions.assertThat</code></p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first x-last\">assert</span>(tracer<span class=\"pl-k\">.</span><span class=\"x x-first\">currentTransaction() </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">null</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"x x-first x-last\">assertThat</span>(tracer<span class=\"pl-k\">.</span><span class=\"x x-first\">activeSpan())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isNotNull(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            assertThat(tracer<span class=\"pl-k\">.</span>isExit())<span class=\"pl-k\">.</span>isTrue();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "felixbarny", "createdAt": "2020-05-05T06:14:46Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +46,32 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assert(tracer.currentTransaction() != null);", "originalCommit": "355f20c82c1619ab38d7ab6a7defef1ed3e14986", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "8463d41e94ec236f685068dfe295196925f8fe04", "url": "https://github.com/elastic/apm-agent-java/commit/8463d41e94ec236f685068dfe295196925f8fe04", "message": "Optimize passing span values", "committedDate": "2020-05-05T06:50:43Z", "type": "commit"}, {"oid": "b2eb4e5a7626d8e373c651de335e574d48d40d4b", "url": "https://github.com/elastic/apm-agent-java/commit/b2eb4e5a7626d8e373c651de335e574d48d40d4b", "message": "Use assertj", "committedDate": "2020-05-05T06:50:55Z", "type": "commit"}, {"oid": "09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a", "url": "https://github.com/elastic/apm-agent-java/commit/09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a", "message": "Add extra assertion", "committedDate": "2020-05-05T06:53:52Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419912543", "body": "To double-check, do the tests fail when doing `isNull()`?", "bodyText": "To double-check, do the tests fail when doing isNull()?", "bodyHTML": "<p dir=\"auto\">To double-check, do the tests fail when doing <code>isNull()</code>?</p>", "author": "felixbarny", "createdAt": "2020-05-05T07:26:53Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/test/java/co/elastic/apm/agent/asynchttpclient/AsyncHttpClientInstrumentationTest.java", "diffHunk": "@@ -49,11 +47,35 @@ public AsyncHttpClientInstrumentationTest(RequestExecutor requestExecutor) {\n         this.requestExecutor = requestExecutor;\n     }\n \n+    public static AsyncHandler<Response> customAsyncHandler = new AsyncCompletionHandler<Response>() {\n+        @Override\n+        public State onStatusReceived(HttpResponseStatus responseStatus) {\n+            assertThat(tracer.currentTransaction()).isNotNull();\n+            assertThat(tracer.currentTransaction().isExit()).isTrue();\n+            return State.CONTINUE;\n+        }\n+\n+        @Override\n+        public void onThrowable(Throwable t) {\n+            assertThat(tracer.currentTransaction()).isNotNull();\n+            assertThat(tracer.currentTransaction().isExit()).isTrue();\n+        }\n+\n+        @Override\n+        public Response onCompleted(Response response) {\n+            assertThat(tracer.currentTransaction()).isNotNull();", "originalCommit": "09b0479f2e0b9232a3cc4cb454b56dcc14cdb43a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyNjE0NQ==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419926145", "bodyText": "Ill double-check all PR requirements now and make sure the tests make sense :)", "author": "milanvdm", "createdAt": "2020-05-05T07:54:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk1NzQ4MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419957480", "bodyText": "Mmm, the changes make the existing tests fail (even when I remove the newly added customAsyncHandler.\ntestHttpCall[3]  Time elapsed: 0.519 sec  <<< ERROR!\norg.awaitility.core.ConditionTimeoutException:\nAssertion condition defined as a lambda expression in co.elastic.apm.agent.MockReporter\nExpecting actual not to be empty within 500 milliseconds.\n\nSeems to me that is a local problem linked to my laptop. Will try to figure out why it is doing that. Any chance you have a docker-image able to run the tests?", "author": "milanvdm", "createdAt": "2020-05-05T08:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk1OTUzMg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419959532", "bodyText": "The tests are failing on CI for the same reason. Not sure what causes that \ud83e\udd14", "author": "felixbarny", "createdAt": "2020-05-05T08:56:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk2ODc4MA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419968780", "bodyText": "Oh wow, interesting. Very strange that the new instrumentations make the current tests time-out. Will have a look later today when I have a bit more time :)", "author": "milanvdm", "createdAt": "2020-05-05T09:12:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4OTA3Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419989072", "bodyText": "Fixed it :)\nTrying to get the new tests to work now as they currently only pass on the assertion of isNull().\nCould it be that activating the span is not enough and that the tracer needs to set the transaction to active instead?", "author": "milanvdm", "createdAt": "2020-05-05T09:49:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NDIwOA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419994208", "bodyText": "hm, strange.. No, activating the span is enough. You don't have to activate the transaction on this thread.", "author": "felixbarny", "createdAt": "2020-05-05T09:58:36Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0NTA5NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r420045094", "bodyText": "I tried to figure it out but tbh, I have no idea.\nOnly thing I could think of was that Im using a new AsyncCompletionHandler<Response> in the test and somehow the methods of this subclass don't get matched properly.", "author": "milanvdm", "createdAt": "2020-05-05T11:41:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ2MTc1Ng==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r421461756", "bodyText": "@felixbarny I've played around with it a bit more:\n@Advice.OnMethodEnter(suppress = Throwable.class)\n        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {\n            span = handlerSpanMap.remove(asyncHandler);\n            if (span != null) {\n                span.activate();\n                System.out.println(tracer.currentTransaction());\n                System.out.println(\"=======================\");\n            }\n        }\n\nThis prints out:\nnull\n=======================\n\nSo it seems that activating the span does not mean I can do assertThat(tracer.currentTransaction()).isNotNull(); in the test.", "author": "milanvdm", "createdAt": "2020-05-07T12:23:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUyNjAwNw==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r421526007", "bodyText": "Yes, that's true. You should assert that tracer.getActive() is not null instead. I agree that if tracer.getActive() returns non-null, tracer.getTranaction() should do, too. I have an idea how to accomplish that. In the meantime, please assert on tracer.getActive().", "author": "felixbarny", "createdAt": "2020-05-07T13:58:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUzMTIyNg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r421531226", "bodyText": "See also #1174", "author": "felixbarny", "createdAt": "2020-05-07T14:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1Njg0Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r421556842", "bodyText": "Cool, thanks :)\nIve applied the changes and the tests now pass correctly!", "author": "milanvdm", "createdAt": "2020-05-07T14:38:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkxMjU0Mw=="}], "type": "inlineReview"}, {"oid": "2e577d021e99458eadd574187b7e779a8d2fa4d4", "url": "https://github.com/elastic/apm-agent-java/commit/2e577d021e99458eadd574187b7e779a8d2fa4d4", "message": "Update changelog", "committedDate": "2020-05-05T08:07:25Z", "type": "commit"}, {"oid": "3d088819d431fa254c434defabf23b30860938cf", "url": "https://github.com/elastic/apm-agent-java/commit/3d088819d431fa254c434defabf23b30860938cf", "message": "Fix failing tests", "committedDate": "2020-05-05T09:42:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4ODI1OA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419988258", "body": "\ud83d\udc4d ", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "felixbarny", "createdAt": "2020-05-05T09:47:42Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -223,7 +223,7 @@ public AsyncHandlerOnStatusReceivedInstrumentation() {\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n         private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span, @Advice.Argument(0) HttpResponseStatus status) {\n-            span = handlerSpanMap.remove(asyncHandler);\n+            span = handlerSpanMap.get(asyncHandler);", "originalCommit": "3d088819d431fa254c434defabf23b30860938cf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4OTMyMw==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419989323", "body": "Don't forget to deactivate it in all exit advices.", "bodyText": "Don't forget to deactivate it in all exit advices.", "bodyHTML": "<p dir=\"auto\">Don't forget to deactivate it in all exit advices.</p>", "author": "felixbarny", "createdAt": "2020-05-05T09:49:39Z", "path": "apm-agent-plugins/apm-asynchttpclient-plugin/src/main/java/co/elastic/apm/agent/asynchttpclient/AbstractAsyncHttpClientInstrumentation.java", "diffHunk": "@@ -178,8 +178,15 @@ public AsyncHandlerOnCompletedInstrumentation() {\n         }\n \n         @Advice.OnMethodEnter(suppress = Throwable.class)\n-        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler) {\n-            final Span span = handlerSpanMap.remove(asyncHandler);\n+        private static void onMethodEnter(@Advice.This AsyncHandler<?> asyncHandler, @Advice.Local(\"span\") Span span) {\n+            span = handlerSpanMap.remove(asyncHandler);\n+            if (span != null) {\n+                span.activate();\n+            }\n+        }\n+\n+        @Advice.OnMethodExit(suppress = Throwable.class)\n+        private static void onMethodExit(@Advice.This AsyncHandler<?> asyncHandler, @Nullable @Advice.Local(\"span\") Span span) {\n             if (span != null) {", "originalCommit": "3d088819d431fa254c434defabf23b30860938cf", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MDk1Mg==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419990952", "bodyText": "What is the difference between end and deactivate?", "author": "milanvdm", "createdAt": "2020-05-05T09:52:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4OTMyMw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5Mzc3NA==", "url": "https://github.com/elastic/apm-agent-java/pull/1172#discussion_r419993774", "bodyText": "end sets the end timestamp and schedules the span to be reported. deactivate removes the span from the thread local which avoids the span from being leaked into different executions.", "author": "felixbarny", "createdAt": "2020-05-05T09:57:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk4OTMyMw=="}], "type": "inlineReview"}, {"oid": "766688ba75b4e66e685b7a26fbda536c7d4c1c5e", "url": "https://github.com/elastic/apm-agent-java/commit/766688ba75b4e66e685b7a26fbda536c7d4c1c5e", "message": "Deactivate spans on exit", "committedDate": "2020-05-05T10:00:46Z", "type": "commit"}, {"oid": "a8fa295d0fb29f2ecc716f606c83602d87cdd1fb", "url": "https://github.com/elastic/apm-agent-java/commit/a8fa295d0fb29f2ecc716f606c83602d87cdd1fb", "message": "Use getActive instead of currentTransaction", "committedDate": "2020-05-07T14:35:20Z", "type": "commit"}, {"oid": "4cf8353ccd144b16652a18e759562b5b5e70c795", "url": "https://github.com/elastic/apm-agent-java/commit/4cf8353ccd144b16652a18e759562b5b5e70c795", "message": "Merge remote-tracking branch 'upstream/master' into instrument-on-complete-async-http", "committedDate": "2020-05-07T14:36:20Z", "type": "commit"}]}