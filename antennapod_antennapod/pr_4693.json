{"pr_number": 4693, "pr_title": "Added new cleanup option: when not favorited", "pr_author": "spacecowboy", "pr_createdAt": "2020-11-16T10:33:39Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4693", "timeline": [{"oid": "6fd3fa2e98a6bd0cdae01ab1b3919d9e8f4dd957", "url": "https://github.com/AntennaPod/AntennaPod/commit/6fd3fa2e98a6bd0cdae01ab1b3919d9e8f4dd957", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2020-11-17T09:10:30Z", "type": "forcePushed"}, {"oid": "fd2d89de331caa6f831a6ad9220ed60be32562e0", "url": "https://github.com/AntennaPod/AntennaPod/commit/fd2d89de331caa6f831a6ad9220ed60be32562e0", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2020-11-17T09:12:39Z", "type": "forcePushed"}, {"oid": "668cba7b57900e0e5b81703a760c395b9d005fd7", "url": "https://github.com/AntennaPod/AntennaPod/commit/668cba7b57900e0e5b81703a760c395b9d005fd7", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2020-11-25T08:40:50Z", "type": "forcePushed"}, {"oid": "a57687080dbd9fb963ca72143ac4f5212e9261bb", "url": "https://github.com/AntennaPod/AntennaPod/commit/a57687080dbd9fb963ca72143ac4f5212e9261bb", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2020-11-25T08:50:02Z", "type": "forcePushed"}, {"oid": "ec764a9ff7b6824ba2ac9a7d35fd050abdc6f9bb", "url": "https://github.com/AntennaPod/AntennaPod/commit/ec764a9ff7b6824ba2ac9a7d35fd050abdc6f9bb", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2020-11-25T08:53:17Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDU1NTA3NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4693#discussion_r570555075", "body": "Could you please rebase the PR and migrate this to Roboelectric? See #4820 for details.", "bodyText": "Could you please rebase the PR and migrate this to Roboelectric? See #4820 for details.", "bodyHTML": "<p dir=\"auto\">Could you please rebase the PR and migrate this to Roboelectric? See <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"777136933\" data-permission-text=\"Title is private\" data-url=\"https://github.com/AntennaPod/AntennaPod/issues/4820\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/AntennaPod/AntennaPod/pull/4820/hovercard\" href=\"https://github.com/AntennaPod/AntennaPod/pull/4820\">#4820</a> for details.</p>", "author": "ByteHamster", "createdAt": "2021-02-04T21:27:52Z", "path": "app/src/androidTest/java/de/test/antennapod/storage/ExceptFavoriteCleanupAlgorithmTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package de.test.antennapod.storage;\n+\n+import androidx.test.filters.SmallTest;\n+\n+import org.junit.Test;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import de.danoeh.antennapod.core.feed.Feed;\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+import de.danoeh.antennapod.core.storage.DBTasks;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+/**\n+ * Tests that the APFavoriteCleanupAlgorithm is working correctly.\n+ */\n+@SmallTest", "originalCommit": "ec764a9ff7b6824ba2ac9a7d35fd050abdc6f9bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDU1ODc3Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4693#discussion_r570558773", "body": "I think this might lead to problems when both do not have a date and then some time passes during the algorithm. (something like `Comparison method violates its general contract`). So for consistency, I would just use the IDs as tie breaker.", "bodyText": "I think this might lead to problems when both do not have a date and then some time passes during the algorithm. (something like Comparison method violates its general contract). So for consistency, I would just use the IDs as tie breaker.", "bodyHTML": "<p dir=\"auto\">I think this might lead to problems when both do not have a date and then some time passes during the algorithm. (something like <code>Comparison method violates its general contract</code>). So for consistency, I would just use the IDs as tie breaker.</p>", "author": "ByteHamster", "createdAt": "2021-02-04T21:34:36Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java", "diffHunk": "@@ -0,0 +1,94 @@\n+package de.danoeh.antennapod.core.storage;\n+\n+import android.content.Context;\n+import android.util.Log;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.concurrent.ExecutionException;\n+\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+\n+/**\n+ * A cleanup algorithm that removes any item that isn't a favorite but only if space is needed.\n+ */\n+public class ExceptFavoriteCleanupAlgorithm extends EpisodeCleanupAlgorithm {\n+\n+    private static final String TAG = \"ExceptFavCleanupAlgo\";\n+\n+    /**\n+     * The maximum number of episodes that could be cleaned up.\n+     *\n+     * @return the number of episodes that *could* be cleaned up, if needed\n+     */\n+    public int getReclaimableItems() {\n+        return getCandidates().size();\n+    }\n+\n+    @Override\n+    public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n+        List<FeedItem> candidates = getCandidates();\n+        List<FeedItem> delete;\n+\n+        // in the absence of better data, we'll sort by item publication date\n+        Collections.sort(candidates, (lhs, rhs) -> {\n+            Date l = lhs.getPubDate();\n+            Date r = rhs.getPubDate();\n+\n+            if (l == null) {\n+                l = new Date();", "originalCommit": "ec764a9ff7b6824ba2ac9a7d35fd050abdc6f9bb", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "08edd151f9bc01873128fa97c948841b65b6455c", "url": "https://github.com/AntennaPod/AntennaPod/commit/08edd151f9bc01873128fa97c948841b65b6455c", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2021-02-05T10:15:22Z", "type": "commit"}, {"oid": "08edd151f9bc01873128fa97c948841b65b6455c", "url": "https://github.com/AntennaPod/AntennaPod/commit/08edd151f9bc01873128fa97c948841b65b6455c", "message": "Added new cleanup option: when not favorited\n\nThis is another way of solving #2077.\n\nThe root issue is that queued episodes are never auto-deleted\ncurrently which means that if you automatically add episodes to the\nqueue you will eventually end up with AntennaPod refusing to auto\ndownload more episodes because the cache is full and it can't make\nspace.\n\nThis option will only refuse to delete favorited items. Otherwise it\nwill simply delete the oldest episodes.", "committedDate": "2021-02-05T10:15:22Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTAwMzk2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4693#discussion_r571003965", "body": "This is the same as writing `return 0;` here. I don't really understand what this is for, to be honest...\r\n\r\n```suggestion\r\n        return 0;\r\n```", "bodyText": "This is the same as writing return 0; here. I don't really understand what this is for, to be honest...\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getNumEpisodesToCleanup(0);\n          \n          \n            \n                    return 0;", "bodyHTML": "<p dir=\"auto\">This is the same as writing <code>return 0;</code> here. I don't really understand what this is for, to be honest...</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"x x-first\">getNumEpisodesToCleanup(</span><span class=\"pl-c1 x\">0</span><span class=\"x x-last\">)</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-c1 x x-first x-last\">0</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ByteHamster", "createdAt": "2021-02-05T14:27:27Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package de.danoeh.antennapod.core.storage;\n+\n+import android.content.Context;\n+import android.util.Log;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.concurrent.ExecutionException;\n+\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+\n+/**\n+ * A cleanup algorithm that removes any item that isn't a favorite but only if space is needed.\n+ */\n+public class ExceptFavoriteCleanupAlgorithm extends EpisodeCleanupAlgorithm {\n+\n+    private static final String TAG = \"ExceptFavCleanupAlgo\";\n+\n+    /**\n+     * The maximum number of episodes that could be cleaned up.\n+     *\n+     * @return the number of episodes that *could* be cleaned up, if needed\n+     */\n+    public int getReclaimableItems() {\n+        return getCandidates().size();\n+    }\n+\n+    @Override\n+    public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n+        List<FeedItem> candidates = getCandidates();\n+        List<FeedItem> delete;\n+\n+        // in the absence of better data, we'll sort by item publication date\n+        Collections.sort(candidates, (lhs, rhs) -> {\n+            Date l = lhs.getPubDate();\n+            Date r = rhs.getPubDate();\n+\n+            if (l != null && r != null) {\n+                return l.compareTo(r);\n+            } else {\n+                // No date - compare by id which should be always incremented\n+                return Long.compare(lhs.getId(), rhs.getId());\n+            }\n+        });\n+\n+        if (candidates.size() > numberOfEpisodesToDelete) {\n+            delete = candidates.subList(0, numberOfEpisodesToDelete);\n+        } else {\n+            delete = candidates;\n+        }\n+\n+        for (FeedItem item : delete) {\n+            try {\n+                DBWriter.deleteFeedMediaOfItem(context, item.getMedia().getId()).get();\n+            } catch (InterruptedException | ExecutionException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        int counter = delete.size();\n+\n+\n+        Log.i(TAG, String.format(Locale.US,\n+                \"Auto-delete deleted %d episodes (%d requested)\", counter,\n+                numberOfEpisodesToDelete));\n+\n+        return counter;\n+    }\n+\n+    @NonNull\n+    private List<FeedItem> getCandidates() {\n+        List<FeedItem> candidates = new ArrayList<>();\n+        List<FeedItem> downloadedItems = DBReader.getDownloadedItems();\n+        for (FeedItem item : downloadedItems) {\n+            if (item.hasMedia()\n+                    && item.getMedia().isDownloaded()\n+                    && !item.isTagged(FeedItem.TAG_FAVORITE)) {\n+                candidates.add(item);\n+            }\n+        }\n+        return candidates;\n+    }\n+\n+    @Override\n+    public int getDefaultCleanupParameter() {\n+        return getNumEpisodesToCleanup(0);", "originalCommit": "08edd151f9bc01873128fa97c948841b65b6455c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTAwNDYxOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4693#discussion_r571004618", "body": "Please remove the newlines\r\n\r\n```suggestion\r\n        int counter = delete.size();\r\n        Log.i(TAG, String.format(Locale.US,\r\n```", "bodyText": "Please remove the newlines\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    int counter = delete.size();\n          \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n                    Log.i(TAG, String.format(Locale.US,\n          \n          \n            \n                    int counter = delete.size();\n          \n          \n            \n                    Log.i(TAG, String.format(Locale.US,", "bodyHTML": "<p dir=\"auto\">Please remove the newlines</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">int</span> counter <span class=\"pl-k\">=</span> delete<span class=\"pl-k\">.</span>size();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"69\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"70\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>i(<span class=\"pl-c1\">TAG</span>, <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-smi\">Locale</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>US</span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"67\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">int</span> counter <span class=\"pl-k\">=</span> delete<span class=\"pl-k\">.</span>size();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"68\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Log</span><span class=\"pl-k\">.</span>i(<span class=\"pl-c1\">TAG</span>, <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-smi\">Locale</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>US</span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ByteHamster", "createdAt": "2021-02-05T14:28:15Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/ExceptFavoriteCleanupAlgorithm.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package de.danoeh.antennapod.core.storage;\n+\n+import android.content.Context;\n+import android.util.Log;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.concurrent.ExecutionException;\n+\n+import de.danoeh.antennapod.core.feed.FeedItem;\n+\n+/**\n+ * A cleanup algorithm that removes any item that isn't a favorite but only if space is needed.\n+ */\n+public class ExceptFavoriteCleanupAlgorithm extends EpisodeCleanupAlgorithm {\n+\n+    private static final String TAG = \"ExceptFavCleanupAlgo\";\n+\n+    /**\n+     * The maximum number of episodes that could be cleaned up.\n+     *\n+     * @return the number of episodes that *could* be cleaned up, if needed\n+     */\n+    public int getReclaimableItems() {\n+        return getCandidates().size();\n+    }\n+\n+    @Override\n+    public int performCleanup(Context context, int numberOfEpisodesToDelete) {\n+        List<FeedItem> candidates = getCandidates();\n+        List<FeedItem> delete;\n+\n+        // in the absence of better data, we'll sort by item publication date\n+        Collections.sort(candidates, (lhs, rhs) -> {\n+            Date l = lhs.getPubDate();\n+            Date r = rhs.getPubDate();\n+\n+            if (l != null && r != null) {\n+                return l.compareTo(r);\n+            } else {\n+                // No date - compare by id which should be always incremented\n+                return Long.compare(lhs.getId(), rhs.getId());\n+            }\n+        });\n+\n+        if (candidates.size() > numberOfEpisodesToDelete) {\n+            delete = candidates.subList(0, numberOfEpisodesToDelete);\n+        } else {\n+            delete = candidates;\n+        }\n+\n+        for (FeedItem item : delete) {\n+            try {\n+                DBWriter.deleteFeedMediaOfItem(context, item.getMedia().getId()).get();\n+            } catch (InterruptedException | ExecutionException e) {\n+                e.printStackTrace();\n+            }\n+        }\n+\n+        int counter = delete.size();\n+\n+\n+        Log.i(TAG, String.format(Locale.US,", "originalCommit": "08edd151f9bc01873128fa97c948841b65b6455c", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3a9e1fc2dd1cb80a568bdcc05e4cdd31ca1c4ca3", "url": "https://github.com/AntennaPod/AntennaPod/commit/3a9e1fc2dd1cb80a568bdcc05e4cdd31ca1c4ca3", "message": "Applied code review suggestions\n\nCo-authored-by: ByteHamster <ByteHamster@users.noreply.github.com>", "committedDate": "2021-02-06T14:54:25Z", "type": "commit"}, {"oid": "ae8759869dad5feb134aa4d5d598d9e58ee2287a", "url": "https://github.com/AntennaPod/AntennaPod/commit/ae8759869dad5feb134aa4d5d598d9e58ee2287a", "message": "Fixed default number of items to clean up\n\nNot sure why this worked before TBH - but default value should\nnaturally be to reduce to desired cache size.\n\nProbably makes no difference in actual use - but it is how the tests\nare constructed.", "committedDate": "2021-02-06T20:43:34Z", "type": "commit"}]}