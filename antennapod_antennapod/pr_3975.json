{"pr_number": 3975, "pr_title": "Skip intro and ending per feed", "pr_author": "tonytamsf", "pr_createdAt": "2020-03-29T06:15:23Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/3975", "merge_commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "timeline": [{"oid": "2fbdcd3719e06fdd5faedc1cafe1cd4d3fb1a908", "url": "https://github.com/AntennaPod/AntennaPod/commit/2fbdcd3719e06fdd5faedc1cafe1cd4d3fb1a908", "message": "setting", "committedDate": "2020-03-29T04:52:26Z", "type": "commit"}, {"oid": "08d286af06ebb9eecbeb49335fb05cb290671313", "url": "https://github.com/AntennaPod/AntennaPod/commit/08d286af06ebb9eecbeb49335fb05cb290671313", "message": "skip ending", "committedDate": "2020-03-29T06:00:42Z", "type": "commit"}, {"oid": "5894083c48bf9d89871ae801520eb373eaae0ecb", "url": "https://github.com/AntennaPod/AntennaPod/commit/5894083c48bf9d89871ae801520eb373eaae0ecb", "message": "indent", "committedDate": "2020-03-29T06:22:16Z", "type": "commit"}, {"oid": "0dc1b522ce09eb3a92090ed9f549df50c50d187c", "url": "https://github.com/AntennaPod/AntennaPod/commit/0dc1b522ce09eb3a92090ed9f549df50c50d187c", "message": "db upgrade", "committedDate": "2020-03-29T06:50:36Z", "type": "commit"}, {"oid": "b93bce74012b31980fe3a1e19a49df82901e1978", "url": "https://github.com/AntennaPod/AntennaPod/commit/b93bce74012b31980fe3a1e19a49df82901e1978", "message": "db upgrade", "committedDate": "2020-03-29T07:25:39Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NDc5Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399794792", "body": "Building Strings like this can break in other languages. I think an additional string `Skipped %1$d seconds of intro` would be better.", "bodyText": "Building Strings like this can break in other languages. I think an additional string Skipped %1$d seconds of intro would be better.", "bodyHTML": "<p dir=\"auto\">Building Strings like this can break in other languages. I think an additional string <code>Skipped %1$d seconds of intro</code> would be better.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:02:22Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java", "diffHunk": "@@ -317,12 +320,53 @@ private void resumeSync() {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n+                int skipIntro = 0;\n+                int skipEnd = 0;\n+                if (media instanceof FeedMedia) {\n+                    FeedMedia feedMedia = (FeedMedia) media;\n+                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+                    skipIntro = preferences.getFeedSkipIntro();\n+                    skipEnd = preferences.getFeedSkipEnding();\n+                }\n+\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n+                String skipMesg = \"\";\n+                String skipIntroMesg = \"\";\n+                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n+                    if (skipIntro > 0) {\n+                        int duration = getDuration();\n+                        if (skipIntro * 1000 < duration) {\n+                            seekToSync(skipIntro * 1000);\n+                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MDk1Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399890953", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-03-30T01:55:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NDc5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "70e1bff3aab2330aa5cb25f190258f0383552f45", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..019893778 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +317,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..fbdc9a52b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +318,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": {"commit": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex fbdc9a52b..4ff4472ba 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -313,16 +213,13 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 acquireWifiLockIfNecessary();\n \n                 setPlaybackParams(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());\n-\n-                float leftVolume = UserPreferences.getLeftVolume();\n-                float rightVolume = UserPreferences.getRightVolume();\n-                setVolume(leftVolume, rightVolume);\n+                setVolume(1.0f, 1.0f);\n \n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "a08f387c56aabe24250f0f932c7839e0677582a5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 4ff4472ba..6c803d33a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -219,7 +336,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekTo(newPosition);\n+                    seekToSync(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "f8be7d596d098e534039908ade8270e13168fd23", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 6c803d33a..9dc846cc2 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -336,7 +219,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "f536774f2e96d3e3001bb13b4776bb6ed7ad76ff", "committedDate": "2020-10-24 23:59:21 +0200", "message": "Reuse audiofocus request object"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "5be6f5febaa95e9752fa874f18a89e14a12fbad9", "committedDate": "2021-01-13 18:51:58 +0100", "message": "Send Authorization header to be able to stream password protected media (#4843)"}, {"oid": "4ff6ff4fb73614de6498f9562bbbf392f69a6fae", "committedDate": "2021-01-31 23:17:33 +0100", "message": "Fix Android Auto next episode (#4895)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "b8e8a940d0e4b03fdb1915a233ae68b8a92fbd1e", "committedDate": "2021-11-06 17:14:12 +0100", "message": "Remove all media listeners and end audio focus when shutting down playback service"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "9c01712276658728278f9ce965522855d6b74309", "committedDate": "2022-01-15 12:57:23 +0100", "message": "Move more checkstyle checks from 'new code' style to main style"}, {"oid": "3393bcdf350f60d006ce0de61d769f513490db82", "committedDate": "2022-01-22 19:46:08 +0100", "message": "Make emulator tests a bit more stable"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "f91d536ab9429bab54c592210e9bde134c24007a", "committedDate": "2022-11-30 20:28:14 +0100", "message": "Fixed bug that causes \"skip\" button to be unresponsive (#6170)"}, {"oid": "670f26bb0e5a8621033b68b4ce28c52e9340362c", "committedDate": "2022-12-18 21:36:40 +0100", "message": "Rework audio focus handling"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "a08f387c56aabe24250f0f932c7839e0677582a5", "committedDate": "2023-04-06 20:00:46 +0200", "message": "Support longer transient pause (#6416)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NDg4NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399794884", "body": "Why do you display both numbers? I think we should not display more information than necessary.", "bodyText": "Why do you display both numbers? I think we should not display more information than necessary.", "bodyHTML": "<p dir=\"auto\">Why do you display both numbers? I think we should not display more information than necessary.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:03:05Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java", "diffHunk": "@@ -317,12 +320,53 @@ private void resumeSync() {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n+                int skipIntro = 0;\n+                int skipEnd = 0;\n+                if (media instanceof FeedMedia) {\n+                    FeedMedia feedMedia = (FeedMedia) media;\n+                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+                    skipIntro = preferences.getFeedSkipIntro();\n+                    skipEnd = preferences.getFeedSkipEnding();\n+                }\n+\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n+                String skipMesg = \"\";\n+                String skipIntroMesg = \"\";\n+                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n+                    if (skipIntro > 0) {\n+                        int duration = getDuration();\n+                        if (skipIntro * 1000 < duration) {\n+                            seekToSync(skipIntro * 1000);\n+                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n+                                    skipIntro + \" \" +\n+                                    context.getString(R.string.time_seconds);\n+                        }\n+                    }\n+                    if (skipEnd > 0) {\n+                        int duration = getDuration();\n+                        if (skipEnd * 1000 < duration) {\n+                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n+                                    skipEnd + \" \" +\n+                                    context.getString(R.string.time_seconds);\n+                        }\n+                    }\n+                    if (skipMesg != \"\") {\n+                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MTExNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399891115", "bodyText": "removed dup", "author": "tonytamsf", "createdAt": "2020-03-30T01:56:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NDg4NA=="}], "type": "inlineReview", "revised_code": {"commit": "70e1bff3aab2330aa5cb25f190258f0383552f45", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..019893778 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +317,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..fbdc9a52b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +318,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": {"commit": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex fbdc9a52b..4ff4472ba 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -313,16 +213,13 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 acquireWifiLockIfNecessary();\n \n                 setPlaybackParams(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());\n-\n-                float leftVolume = UserPreferences.getLeftVolume();\n-                float rightVolume = UserPreferences.getRightVolume();\n-                setVolume(leftVolume, rightVolume);\n+                setVolume(1.0f, 1.0f);\n \n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "a08f387c56aabe24250f0f932c7839e0677582a5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 4ff4472ba..6c803d33a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -219,7 +336,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekTo(newPosition);\n+                    seekToSync(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "f8be7d596d098e534039908ade8270e13168fd23", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 6c803d33a..9dc846cc2 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -336,7 +219,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "f536774f2e96d3e3001bb13b4776bb6ed7ad76ff", "committedDate": "2020-10-24 23:59:21 +0200", "message": "Reuse audiofocus request object"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "5be6f5febaa95e9752fa874f18a89e14a12fbad9", "committedDate": "2021-01-13 18:51:58 +0100", "message": "Send Authorization header to be able to stream password protected media (#4843)"}, {"oid": "4ff6ff4fb73614de6498f9562bbbf392f69a6fae", "committedDate": "2021-01-31 23:17:33 +0100", "message": "Fix Android Auto next episode (#4895)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "b8e8a940d0e4b03fdb1915a233ae68b8a92fbd1e", "committedDate": "2021-11-06 17:14:12 +0100", "message": "Remove all media listeners and end audio focus when shutting down playback service"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "9c01712276658728278f9ce965522855d6b74309", "committedDate": "2022-01-15 12:57:23 +0100", "message": "Move more checkstyle checks from 'new code' style to main style"}, {"oid": "3393bcdf350f60d006ce0de61d769f513490db82", "committedDate": "2022-01-22 19:46:08 +0100", "message": "Make emulator tests a bit more stable"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "f91d536ab9429bab54c592210e9bde134c24007a", "committedDate": "2022-11-30 20:28:14 +0100", "message": "Fixed bug that causes \"skip\" button to be unresponsive (#6170)"}, {"oid": "670f26bb0e5a8621033b68b4ce28c52e9340362c", "committedDate": "2022-12-18 21:36:40 +0100", "message": "Rework audio focus handling"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "a08f387c56aabe24250f0f932c7839e0677582a5", "committedDate": "2023-04-06 20:00:46 +0200", "message": "Support longer transient pause (#6416)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTE1NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399795155", "body": "Please move this to `DBUpgrader`. Also, use `oldVersion < 1090001`. Users might skip AntennaPod versions. When checking for equality, this skips the migration when coming from, say `1080100` instead of exactly `1090000`.", "bodyText": "Please move this to DBUpgrader. Also, use oldVersion < 1090001. Users might skip AntennaPod versions. When checking for equality, this skips the migration when coming from, say 1080100 instead of exactly 1090000.", "bodyHTML": "<p dir=\"auto\">Please move this to <code>DBUpgrader</code>. Also, use <code>oldVersion &lt; 1090001</code>. Users might skip AntennaPod versions. When checking for equality, this skips the migration when coming from, say <code>1080100</code> instead of exactly <code>1090000</code>.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:05:25Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java", "diffHunk": "@@ -1381,6 +1389,12 @@ public void onCreate(final SQLiteDatabase db) {\n         public void onUpgrade(final SQLiteDatabase db, final int oldVersion, final int newVersion) {\n             Log.w(\"DBAdapter\", \"Upgrading from version \" + oldVersion + \" to \" + newVersion + \".\");\n             DBUpgrader.upgrade(db, oldVersion, newVersion);\n+            if (oldVersion == 1090000) {", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd2b8c203cf8f84498da16bfc5a601b37405c5ea", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 440ce864e..a0e220ba9 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -1389,12 +1389,6 @@ public class PodDBAdapter {\n         public void onUpgrade(final SQLiteDatabase db, final int oldVersion, final int newVersion) {\n             Log.w(\"DBAdapter\", \"Upgrading from version \" + oldVersion + \" to \" + newVersion + \".\");\n             DBUpgrader.upgrade(db, oldVersion, newVersion);\n-            if (oldVersion == 1090000) {\n-                db.execSQL(\"ALTER TABLE \" + TABLE_NAME_FEEDS +\n-                        \" ADD COLUMN \" + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0;\");\n-                db.execSQL(\"ALTER TABLE \" + TABLE_NAME_FEEDS +\n-                        \" ADD COLUMN \" + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0;\");\n-            }\n         }\n     }\n }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 440ce864e..e6d47b32a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -1389,12 +1331,6 @@ public class PodDBAdapter {\n         public void onUpgrade(final SQLiteDatabase db, final int oldVersion, final int newVersion) {\n             Log.w(\"DBAdapter\", \"Upgrading from version \" + oldVersion + \" to \" + newVersion + \".\");\n             DBUpgrader.upgrade(db, oldVersion, newVersion);\n-            if (oldVersion == 1090000) {\n-                db.execSQL(\"ALTER TABLE \" + TABLE_NAME_FEEDS +\n-                        \" ADD COLUMN \" + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0;\");\n-                db.execSQL(\"ALTER TABLE \" + TABLE_NAME_FEEDS +\n-                        \" ADD COLUMN \" + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0;\");\n-            }\n         }\n     }\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "984233d1d0c5950330b860446c75fa374d5cc139", "committedDate": "2020-07-08 21:07:51 +0200", "message": "Delete removed files in local feeds"}, {"oid": "24f734f1b60e29d28c03f245e4db26867c2d1a64", "committedDate": "2020-07-11 20:05:47 -0400", "message": "Fix redundant initializers"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "ff116ccd8c3f47de709d207008d9c38ff3ee2d75", "committedDate": "2020-09-20 12:29:49 +0200", "message": "Fixed items without pubdate getting assigned the current date on every single refresh"}, {"oid": "923be5bfdd8168325079968df8fb14de4f7b59b4", "committedDate": "2020-10-01 23:49:34 +0200", "message": "Improve search feature by using keywords instead of full match (#4478)"}, {"oid": "cd100aae15538415dbc896d59732e4b9710c89d1", "committedDate": "2020-10-24 11:49:55 +0200", "message": "Improve performance and memory usage of 'recent pubdate' feed sort option"}, {"oid": "28ebbedbdf34b72b31c536a118bcf5108b3ea7e5", "committedDate": "2020-10-25 17:22:36 +0100", "message": "Local feeds: Unit tests for LocalFeedUpdater (#4551)"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a3a5a936a2c1cc9d9a7b6580be15ed2c19e912f7", "committedDate": "2020-11-02 18:01:32 -0500", "message": "Remove IF NOT EXISTS from index create statements"}, {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "committedDate": "2020-11-06 02:03:20 +0100", "message": "Filter the All Episodes tab via SQL Query"}, {"oid": "8f25f5830a4620218996dcabb73a4ca923b1750a", "committedDate": "2020-11-08 09:36:13 +0100", "message": "Use lazy singleton instead of Bill Pugh singleton"}, {"oid": "4b252250c0df856a63c801c03191e64f4909c239", "committedDate": "2020-11-19 11:24:31 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "committedDate": "2021-01-22 11:07:40 +0100", "message": "Merge branch 'develop' into fix_episodes_list_item_loading_b"}, {"oid": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "committedDate": "2021-01-22 15:09:43 +0100", "message": "Split up filter model and database handling"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "47a0336c3e5cb4c370ad2612de3e8ba6605f6871", "committedDate": "2021-02-28 14:16:07 +0100", "message": "Refactoring: Remove Cursor related code from Feed class (#4968)"}, {"oid": "dd8341a858f560f045f0d90c8c32f27d6a0891d4", "committedDate": "2021-03-03 18:23:29 +0100", "message": "Replace Java-based feed filtering with SQL-based"}, {"oid": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "committedDate": "2021-03-04 19:47:48 +0100", "message": "Only store content_encoded or description"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "998535515bae8ec5bcd2bd95bc0cf4f34416dff7", "committedDate": "2021-03-28 22:32:40 +0200", "message": "Make AntennaPod pass the medium SpotBugs findings"}, {"oid": "79c79efce588b446cf9816a01e0056e7e3dfd9db", "committedDate": "2021-04-06 18:15:14 +0200", "message": "Parsing podcast:funding tag, showing payment, funding links on the show info screen (#4933)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "4f5449a0d3c8540b32a8d54c3c770d5fe91e554e", "committedDate": "2021-07-11 18:52:11 +0200", "message": "No longer show item-specific auto-download property to users"}, {"oid": "db391867608fa37f6568eca02678b3b376e52fa8", "committedDate": "2021-08-20 20:17:23 +0200", "message": "Identify episodes by guid (#5326)"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "345aad4148f133477e40c232a8e855dfd28e0654", "committedDate": "2021-10-28 19:59:50 +0200", "message": "Add 'Duration' to Episode Filter for podcast Auto Download Settings (#5396)"}, {"oid": "524e5c95fc20e9cc25bbe1012a287920fc6030bd", "committedDate": "2021-11-02 21:38:59 +0100", "message": "Fix auto-download retry backoff"}, {"oid": "607b1fdbeb22f605473f2592813e41eb6f3bdc54", "committedDate": "2021-12-01 23:10:32 +0100", "message": "Make feed deletions faster"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "7ab6d08ea589aae7db2f7bdf1b28833f45ba9943", "committedDate": "2022-02-21 22:54:40 +0100", "message": "Add line graph to statistics screen"}, {"oid": "ff3258c34a1797e75538b83baa1e867d0ea07ceb", "committedDate": "2022-02-27 19:47:41 +0100", "message": "Move database to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTIyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399795221", "body": "Please only increment by 1.", "bodyText": "Please only increment by 1.", "bodyHTML": "<p dir=\"auto\">Please only increment by 1.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:06:02Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java", "diffHunk": "@@ -48,7 +48,7 @@\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 1090000;\n+    public static final int VERSION = 1091000;", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MjI5NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399862294", "bodyText": "done 1090000 + 1 -> 1090001", "author": "tonytamsf", "createdAt": "2020-03-29T22:21:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd2b8c203cf8f84498da16bfc5a601b37405c5ea", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 440ce864e..a0e220ba9 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -48,7 +48,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 1091000;\n+    public static final int VERSION = 1090001;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 440ce864e..e6d47b32a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -48,7 +47,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 1091000;\n+    public static final int VERSION = 1090001;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex e6d47b32a..3f29b7822 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -47,7 +49,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 1090001;\n+    public static final int VERSION = 2020000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": {"commit": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 3f29b7822..7eae8b9f0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -49,7 +50,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 2020000;\n+    public static final int VERSION = 1090001;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 7eae8b9f0..8d1352a10 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -50,7 +51,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 1090001;\n+    public static final int VERSION = 2020000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": {"commit": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 8d1352a10..54f5f3fa4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -51,7 +52,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 2020000;\n+    public static final int VERSION = 2030000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": {"commit": "345aad4148f133477e40c232a8e855dfd28e0654", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 54f5f3fa4..f1364255d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -52,7 +53,7 @@ public class PodDBAdapter {\n \n     private static final String TAG = \"PodDBAdapter\";\n     public static final String DATABASE_NAME = \"Antennapod.db\";\n-    public static final int VERSION = 2030000;\n+    public static final int VERSION = 2050000;\n \n     /**\n      * Maximum number of arguments for IN-operator.\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "984233d1d0c5950330b860446c75fa374d5cc139", "committedDate": "2020-07-08 21:07:51 +0200", "message": "Delete removed files in local feeds"}, {"oid": "24f734f1b60e29d28c03f245e4db26867c2d1a64", "committedDate": "2020-07-11 20:05:47 -0400", "message": "Fix redundant initializers"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "ff116ccd8c3f47de709d207008d9c38ff3ee2d75", "committedDate": "2020-09-20 12:29:49 +0200", "message": "Fixed items without pubdate getting assigned the current date on every single refresh"}, {"oid": "923be5bfdd8168325079968df8fb14de4f7b59b4", "committedDate": "2020-10-01 23:49:34 +0200", "message": "Improve search feature by using keywords instead of full match (#4478)"}, {"oid": "cd100aae15538415dbc896d59732e4b9710c89d1", "committedDate": "2020-10-24 11:49:55 +0200", "message": "Improve performance and memory usage of 'recent pubdate' feed sort option"}, {"oid": "28ebbedbdf34b72b31c536a118bcf5108b3ea7e5", "committedDate": "2020-10-25 17:22:36 +0100", "message": "Local feeds: Unit tests for LocalFeedUpdater (#4551)"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a3a5a936a2c1cc9d9a7b6580be15ed2c19e912f7", "committedDate": "2020-11-02 18:01:32 -0500", "message": "Remove IF NOT EXISTS from index create statements"}, {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "committedDate": "2020-11-06 02:03:20 +0100", "message": "Filter the All Episodes tab via SQL Query"}, {"oid": "8f25f5830a4620218996dcabb73a4ca923b1750a", "committedDate": "2020-11-08 09:36:13 +0100", "message": "Use lazy singleton instead of Bill Pugh singleton"}, {"oid": "4b252250c0df856a63c801c03191e64f4909c239", "committedDate": "2020-11-19 11:24:31 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "committedDate": "2021-01-22 11:07:40 +0100", "message": "Merge branch 'develop' into fix_episodes_list_item_loading_b"}, {"oid": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "committedDate": "2021-01-22 15:09:43 +0100", "message": "Split up filter model and database handling"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "47a0336c3e5cb4c370ad2612de3e8ba6605f6871", "committedDate": "2021-02-28 14:16:07 +0100", "message": "Refactoring: Remove Cursor related code from Feed class (#4968)"}, {"oid": "dd8341a858f560f045f0d90c8c32f27d6a0891d4", "committedDate": "2021-03-03 18:23:29 +0100", "message": "Replace Java-based feed filtering with SQL-based"}, {"oid": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "committedDate": "2021-03-04 19:47:48 +0100", "message": "Only store content_encoded or description"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "998535515bae8ec5bcd2bd95bc0cf4f34416dff7", "committedDate": "2021-03-28 22:32:40 +0200", "message": "Make AntennaPod pass the medium SpotBugs findings"}, {"oid": "79c79efce588b446cf9816a01e0056e7e3dfd9db", "committedDate": "2021-04-06 18:15:14 +0200", "message": "Parsing podcast:funding tag, showing payment, funding links on the show info screen (#4933)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "4f5449a0d3c8540b32a8d54c3c770d5fe91e554e", "committedDate": "2021-07-11 18:52:11 +0200", "message": "No longer show item-specific auto-download property to users"}, {"oid": "db391867608fa37f6568eca02678b3b376e52fa8", "committedDate": "2021-08-20 20:17:23 +0200", "message": "Identify episodes by guid (#5326)"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "345aad4148f133477e40c232a8e855dfd28e0654", "committedDate": "2021-10-28 19:59:50 +0200", "message": "Add 'Duration' to Episode Filter for podcast Auto Download Settings (#5396)"}, {"oid": "524e5c95fc20e9cc25bbe1012a287920fc6030bd", "committedDate": "2021-11-02 21:38:59 +0100", "message": "Fix auto-download retry backoff"}, {"oid": "607b1fdbeb22f605473f2592813e41eb6f3bdc54", "committedDate": "2021-12-01 23:10:32 +0100", "message": "Make feed deletions faster"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "7ab6d08ea589aae7db2f7bdf1b28833f45ba9943", "committedDate": "2022-02-21 22:54:40 +0100", "message": "Add line graph to statistics screen"}, {"oid": "ff3258c34a1797e75538b83baa1e867d0ea07ceb", "committedDate": "2022-02-27 19:47:41 +0100", "message": "Move database to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTQ0Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399795447", "body": "Not sure if `LocalPSMP` is the right place to do this. What about Chromecast (`RemotePSMP`) or other media players that might get added in the future? I think this fits better into `PlaybackService` (but I am not sure where exactly).", "bodyText": "Not sure if LocalPSMP is the right place to do this. What about Chromecast (RemotePSMP) or other media players that might get added in the future? I think this fits better into PlaybackService (but I am not sure where exactly).", "bodyHTML": "<p dir=\"auto\">Not sure if <code>LocalPSMP</code> is the right place to do this. What about Chromecast (<code>RemotePSMP</code>) or other media players that might get added in the future? I think this fits better into <code>PlaybackService</code> (but I am not sure where exactly).</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:07:51Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java", "diffHunk": "@@ -317,12 +320,53 @@ private void resumeSync() {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n+                int skipIntro = 0;\n+                int skipEnd = 0;\n+                if (media instanceof FeedMedia) {\n+                    FeedMedia feedMedia = (FeedMedia) media;\n+                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+                    skipIntro = preferences.getFeedSkipIntro();\n+                    skipEnd = preferences.getFeedSkipEnding();\n+                }\n+\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n+                String skipMesg = \"\";\n+                String skipIntroMesg = \"\";\n+                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n+                    if (skipIntro > 0) {\n+                        int duration = getDuration();\n+                        if (skipIntro * 1000 < duration) {\n+                            seekToSync(skipIntro * 1000);", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MTAxMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399891012", "bodyText": "fixed in Playbackservice", "author": "tonytamsf", "createdAt": "2020-03-30T01:55:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTQ0Nw=="}], "type": "inlineReview", "revised_code": {"commit": "70e1bff3aab2330aa5cb25f190258f0383552f45", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..019893778 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +317,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 3179911e4..fbdc9a52b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -320,53 +318,12 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 float rightVolume = UserPreferences.getRightVolume();\n                 setVolume(leftVolume, rightVolume);\n \n-                int skipIntro = 0;\n-                int skipEnd = 0;\n-                if (media instanceof FeedMedia) {\n-                    FeedMedia feedMedia = (FeedMedia) media;\n-                    FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-                    skipIntro = preferences.getFeedSkipIntro();\n-                    skipEnd = preferences.getFeedSkipEnding();\n-                }\n-\n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n                     seekToSync(newPosition);\n                 }\n-                String skipMesg = \"\";\n-                String skipIntroMesg = \"\";\n-                if (playerStatus == PlayerStatus.PREPARED && media.getPosition() == 0) {\n-                    if (skipIntro > 0) {\n-                        int duration = getDuration();\n-                        if (skipIntro * 1000 < duration) {\n-                            seekToSync(skipIntro * 1000);\n-                            skipIntroMesg = context.getString(R.string.pref_feed_skip_intro) + \" \" +\n-                                    skipIntro + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipEnd > 0) {\n-                        int duration = getDuration();\n-                        if (skipEnd * 1000 < duration) {\n-                            skipMesg = context.getString(R.string.pref_feed_skip_ending) + \" \" +\n-                                    skipEnd + \" \" +\n-                                    context.getString(R.string.time_seconds);\n-                        }\n-                    }\n-                    if (skipMesg != \"\") {\n-                        skipMesg = skipIntroMesg + \"\\n\" + skipMesg;\n-                    } else {\n-                        skipMesg = skipIntroMesg;\n-                    }\n-                    if (skipMesg != \"\") {\n-                        Toast toast = Toast.makeText(context, skipMesg,\n-                                Toast.LENGTH_LONG);\n-                        toast.show();\n-                    }\n-                }\n-\n                 mediaPlayer.start();\n \n                 setPlayerStatus(PlayerStatus.PLAYING, media);\n", "next_change": {"commit": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex fbdc9a52b..4ff4472ba 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -313,16 +213,13 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                 acquireWifiLockIfNecessary();\n \n                 setPlaybackParams(PlaybackSpeedUtils.getCurrentPlaybackSpeed(media), UserPreferences.isSkipSilence());\n-\n-                float leftVolume = UserPreferences.getLeftVolume();\n-                float rightVolume = UserPreferences.getRightVolume();\n-                setVolume(leftVolume, rightVolume);\n+                setVolume(1.0f, 1.0f);\n \n                 if (playerStatus == PlayerStatus.PREPARED && media.getPosition() > 0) {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "a08f387c56aabe24250f0f932c7839e0677582a5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 4ff4472ba..6c803d33a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -219,7 +336,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekTo(newPosition);\n+                    seekToSync(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": {"commit": "f8be7d596d098e534039908ade8270e13168fd23", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\nindex 6c803d33a..9dc846cc2 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/LocalPSMP.java\n", "chunk": "@@ -336,7 +219,7 @@ public class LocalPSMP extends PlaybackServiceMediaPlayer {\n                     int newPosition = RewindAfterPauseUtils.calculatePositionWithRewind(\n                         media.getPosition(),\n                         media.getLastPlayedTime());\n-                    seekToSync(newPosition);\n+                    seekTo(newPosition);\n                 }\n                 mediaPlayer.start();\n \n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "f536774f2e96d3e3001bb13b4776bb6ed7ad76ff", "committedDate": "2020-10-24 23:59:21 +0200", "message": "Reuse audiofocus request object"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "5be6f5febaa95e9752fa874f18a89e14a12fbad9", "committedDate": "2021-01-13 18:51:58 +0100", "message": "Send Authorization header to be able to stream password protected media (#4843)"}, {"oid": "4ff6ff4fb73614de6498f9562bbbf392f69a6fae", "committedDate": "2021-01-31 23:17:33 +0100", "message": "Fix Android Auto next episode (#4895)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "b8e8a940d0e4b03fdb1915a233ae68b8a92fbd1e", "committedDate": "2021-11-06 17:14:12 +0100", "message": "Remove all media listeners and end audio focus when shutting down playback service"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "9c01712276658728278f9ce965522855d6b74309", "committedDate": "2022-01-15 12:57:23 +0100", "message": "Move more checkstyle checks from 'new code' style to main style"}, {"oid": "3393bcdf350f60d006ce0de61d769f513490db82", "committedDate": "2022-01-22 19:46:08 +0100", "message": "Make emulator tests a bit more stable"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "f91d536ab9429bab54c592210e9bde134c24007a", "committedDate": "2022-11-30 20:28:14 +0100", "message": "Fixed bug that causes \"skip\" button to be unresponsive (#6170)"}, {"oid": "670f26bb0e5a8621033b68b4ce28c52e9340362c", "committedDate": "2022-12-18 21:36:40 +0100", "message": "Rework audio focus handling"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "a08f387c56aabe24250f0f932c7839e0677582a5", "committedDate": "2023-04-06 20:00:46 +0200", "message": "Support longer transient pause (#6416)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTcyNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399795725", "body": "The UI should not be responsible for doing playback actions. If the user closes the UI, episodes should still get skipped. When adding the skipping code like this and swiping out the player during playback, this is no longer the case.\r\n\r\nAdditionally, this introduces code duplication. This should be done centrally, somewhere in the PlaybackService.", "bodyText": "The UI should not be responsible for doing playback actions. If the user closes the UI, episodes should still get skipped. When adding the skipping code like this and swiping out the player during playback, this is no longer the case.\nAdditionally, this introduces code duplication. This should be done centrally, somewhere in the PlaybackService.", "bodyHTML": "<p dir=\"auto\">The UI should not be responsible for doing playback actions. If the user closes the UI, episodes should still get skipped. When adding the skipping code like this and swiping out the player during playback, this is no longer the case.</p>\n<p dir=\"auto\">Additionally, this introduces code duplication. This should be done centrally, somewhere in the PlaybackService.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:10:04Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java", "diffHunk": "@@ -386,6 +390,24 @@ public void updatePosition(PlaybackPositionEvent event) {\n         }\n         float progress = ((float) event.getPosition()) / event.getDuration();\n         sbPosition.setProgress((int) (progress * sbPosition.getMax()));\n+        Playable media = controller.getMedia();\n+        if (media instanceof FeedMedia)  {\n+            FeedMedia feedMedia = (FeedMedia) media;\n+            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+            int skipEnd = preferences.getFeedSkipEnding();\n+            if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n+                Log.d(TAG, \"Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+                String skipMesg = getActivity().getString(de.danoeh.antennapod.core.R.string.pref_feed_skip_ending) + \" \" +\n+                        skipEnd + \" \" +\n+                        getActivity().getString(de.danoeh.antennapod.core.R.string.time_seconds);\n+                Toast toast = Toast.makeText(getActivity(), skipMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+                IntentUtils.sendLocalBroadcast(getActivity(), PlaybackService.ACTION_SKIP_CURRENT_EPISODE);", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg5MTA4Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399891083", "bodyText": "done.", "author": "tonytamsf", "createdAt": "2020-03-30T01:55:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTcyNQ=="}], "type": "inlineReview", "revised_code": {"commit": "73ba128fcd10c3b55749242a56fca53ad071d0b5", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\nindex 823d82a6e..430968549 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n", "chunk": "@@ -390,24 +386,6 @@ public class AudioPlayerFragment extends Fragment implements\n         }\n         float progress = ((float) event.getPosition()) / event.getDuration();\n         sbPosition.setProgress((int) (progress * sbPosition.getMax()));\n-        Playable media = controller.getMedia();\n-        if (media instanceof FeedMedia)  {\n-            FeedMedia feedMedia = (FeedMedia) media;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            int skipEnd = preferences.getFeedSkipEnding();\n-            if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-                Log.d(TAG, \"Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-                String skipMesg = getActivity().getString(de.danoeh.antennapod.core.R.string.pref_feed_skip_ending) + \" \" +\n-                        skipEnd + \" \" +\n-                        getActivity().getString(de.danoeh.antennapod.core.R.string.time_seconds);\n-                Toast toast = Toast.makeText(getActivity(), skipMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-                IntentUtils.sendLocalBroadcast(getActivity(), PlaybackService.ACTION_SKIP_CURRENT_EPISODE);\n-            } else {\n-                Log.d(TAG, \"Not Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-            }\n-        }\n     }\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\nindex 823d82a6e..7f0326019 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n", "chunk": "@@ -390,29 +410,11 @@ public class AudioPlayerFragment extends Fragment implements\n         }\n         float progress = ((float) event.getPosition()) / event.getDuration();\n         sbPosition.setProgress((int) (progress * sbPosition.getMax()));\n-        Playable media = controller.getMedia();\n-        if (media instanceof FeedMedia)  {\n-            FeedMedia feedMedia = (FeedMedia) media;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            int skipEnd = preferences.getFeedSkipEnding();\n-            if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-                Log.d(TAG, \"Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-                String skipMesg = getActivity().getString(de.danoeh.antennapod.core.R.string.pref_feed_skip_ending) + \" \" +\n-                        skipEnd + \" \" +\n-                        getActivity().getString(de.danoeh.antennapod.core.R.string.time_seconds);\n-                Toast toast = Toast.makeText(getActivity(), skipMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-                IntentUtils.sendLocalBroadcast(getActivity(), PlaybackService.ACTION_SKIP_CURRENT_EPISODE);\n-            } else {\n-                Log.d(TAG, \"Not Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-            }\n-        }\n     }\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\n     public void favoritesChanged(FavoritesEvent event) {\n-        setupOptionsMenu();\n+        AudioPlayerFragment.this.loadMediaInfo();\n     }\n \n     @Override\n", "next_change": {"commit": "508cea67d1d5a0fd051a1636e402f31f1c7fc39a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\nindex 7f0326019..d5807cd90 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/AudioPlayerFragment.java\n", "chunk": "@@ -422,32 +501,60 @@ public class AudioPlayerFragment extends Fragment implements\n         if (controller == null || txtvLength == null) {\n             return;\n         }\n+\n         if (fromUser) {\n             float prog = progress / ((float) seekBar.getMax());\n-            int duration = controller.getDuration();\n             TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());\n-            int position = converter.convert((int) (prog * duration));\n-            txtvPosition.setText(Converter.getDurationStringLong(position));\n-\n-            if (showTimeLeft && prog != 0) {\n-                int timeLeft = converter.convert(duration - (int) (prog * duration));\n-                String length = \"-\" + Converter.getDurationStringLong(timeLeft);\n-                txtvLength.setText(length);\n+            int position = converter.convert((int) (prog * controller.getDuration()));\n+            int newChapterIndex = ChapterUtils.getCurrentChapterIndex(controller.getMedia(), position);\n+            if (newChapterIndex > -1) {\n+                if (!sbPosition.isPressed() && currentChapterIndex != newChapterIndex) {\n+                    currentChapterIndex = newChapterIndex;\n+                    position = (int) controller.getMedia().getChapters().get(currentChapterIndex).getStart();\n+                    seekedToChapterStart = true;\n+                    controller.seekTo(position);\n+                    updateUi(controller.getMedia());\n+                    sbPosition.highlightCurrentChapter();\n+                }\n+                txtvSeek.setText(controller.getMedia().getChapters().get(newChapterIndex).getTitle()\n+                                + \"\\n\" + Converter.getDurationStringLong(position));\n+            } else {\n+                txtvSeek.setText(Converter.getDurationStringLong(position));\n             }\n+        } else if (duration != controller.getDuration()) {\n+            updateUi(controller.getMedia());\n         }\n     }\n \n     @Override\n     public void onStartTrackingTouch(SeekBar seekBar) {\n         // interrupt position Observer, restart later\n+        cardViewSeek.setScaleX(.8f);\n+        cardViewSeek.setScaleY(.8f);\n+        cardViewSeek.animate()\n+                .setInterpolator(new FastOutSlowInInterpolator())\n+                .alpha(1f).scaleX(1f).scaleY(1f)\n+                .setDuration(200)\n+                .start();\n     }\n \n     @Override\n     public void onStopTrackingTouch(SeekBar seekBar) {\n         if (controller != null) {\n-            float prog = seekBar.getProgress() / ((float) seekBar.getMax());\n-            controller.seekTo((int) (prog * controller.getDuration()));\n+            if (seekedToChapterStart) {\n+                seekedToChapterStart = false;\n+            } else {\n+                float prog = seekBar.getProgress() / ((float) seekBar.getMax());\n+                controller.seekTo((int) (prog * controller.getDuration()));\n+            }\n         }\n+        cardViewSeek.setScaleX(1f);\n+        cardViewSeek.setScaleY(1f);\n+        cardViewSeek.animate()\n+                .setInterpolator(new FastOutSlowInInterpolator())\n+                .alpha(0f).scaleX(.8f).scaleY(.8f)\n+                .setDuration(200)\n+                .start();\n     }\n \n     public void setupOptionsMenu(Playable media) {\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "cedfb27ccaef74d954bb3a8f0ea471be63a1375c", "committedDate": "2020-04-21 19:30:16 +0430", "message": "Port AudioPlayer's viewpager to ViewPager2, improve RTL support"}, {"oid": "260d7ee9446258508a2b9145267bfe858a0e9540", "committedDate": "2020-04-21 19:30:17 +0430", "message": "Bring back AudioPlayerFragment pager's setOffscreenPageLimit"}, {"oid": "dc230a8f31c5f2199005a75b79587405d57ce869", "committedDate": "2020-05-01 19:15:14 +0430", "message": "Use locale's digits in more places"}, {"oid": "93e68233b4db496283033dbb5de0043ec8a6f780", "committedDate": "2020-05-05 00:48:29 +0200", "message": "Offer to switch to ExoPlayer on media player error"}, {"oid": "c0bca81cc6aa0aa6fe5b77a951db6028c75c3879", "committedDate": "2020-05-09 11:17:24 +0200", "message": "Fixed clicking page indicator"}, {"oid": "24656936c70bc73443119b4e1bb492feeac6dd85", "committedDate": "2020-07-13 00:49:35 -0400", "message": "Fix a bunch of deprecations"}, {"oid": "17b9579dfea12b9b6289982e3fd4251ecf12b86d", "committedDate": "2020-07-16 17:01:53 +0200", "message": "New playback speed dialog"}, {"oid": "15248a6dab2e729e53242a28e5778ca14deff2b6", "committedDate": "2020-07-26 19:35:17 +0200", "message": "Add missing @NonNull and @Nullable annotations."}, {"oid": "c4673662b279d54fb133e54a74c54dd7a9be15b3", "committedDate": "2020-09-08 16:44:53 +0200", "message": "update skip/forward value"}, {"oid": "41efff3382d0a8c37dfb9724e8adf6f60fe6beb1", "committedDate": "2020-09-27 22:10:03 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "c2b0a356acb5c9e7b0e7f3b8bda4626f4bed5ee4", "committedDate": "2020-09-29 11:21:01 +0200", "message": "Fix buffering indicator sometimes sticking"}, {"oid": "e9fa84af588a7d8bcdb50c581eeedd15da79e848", "committedDate": "2020-09-30 10:50:25 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "fc5418637332f7257c08574bff204fdb238999e2", "committedDate": "2020-10-26 10:59:13 +0100", "message": "Fixed NPEs related to bottom sheet"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "7c93bc5140d3f30cd4d3ea589e4e1772ea57fd98", "committedDate": "2021-01-01 18:49:03 +0100", "message": "Added textual tab indicator to player screen (#4731)"}, {"oid": "2a8abb02f616572722240f2f9fd91c871d54e854", "committedDate": "2021-01-21 18:37:04 +0100", "message": "Add scrubbing time overlay (#4786)"}, {"oid": "010ed376cd4b8935736dec6a3be052f93ed18b20", "committedDate": "2021-02-12 21:00:39 +0100", "message": "Move basic views to new module"}, {"oid": "f57cf0c31788962300413a97eefdf746476e2177", "committedDate": "2021-02-14 12:18:27 +0100", "message": "New preference to show the remaining time in the 'queue' and podcast episode view (#4880)"}, {"oid": "339aa936bf53e96236dba12b0d356f196e04813c", "committedDate": "2021-02-15 21:56:06 +0100", "message": "Removed return parameter of loadMediaInfo"}, {"oid": "57587c928e06af39dc3391537b526d515f848410", "committedDate": "2021-02-15 22:02:55 +0100", "message": "Removed method that does the same as loadMediaInfo anyway"}, {"oid": "a476ce2f47ab9c75da607e2109f9518bcc193745", "committedDate": "2021-03-01 20:59:28 +0100", "message": "Chapter dividers for the progress bar (#4915)"}, {"oid": "2a05507902a112c7921a99afa3343e20b77e2568", "committedDate": "2021-03-01 21:01:48 +0100", "message": "Fixed conflicting PRs"}, {"oid": "a2e9a4d8053d278398cb2bc6d69e38a8fc07a4fd", "committedDate": "2021-03-07 11:08:28 +0100", "message": "Fixed clicks going through the player"}, {"oid": "843892e34fb2ca04bf3f5b0f6fce7e45285e0ecd", "committedDate": "2021-04-02 14:30:21 +0200", "message": "Safer remain time - default to zero when the media duration is wrong (#5043)"}, {"oid": "2df3cf9fe7635a7f337dda4f7f026e5fcce2180e", "committedDate": "2021-04-02 17:14:01 +0200", "message": "Rename audio player tabs"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "8768144c9107945cfaf56ed4db771c3def8d00de", "committedDate": "2021-04-14 22:35:01 +0200", "message": "Don't handle play image resource in PlaybackController"}, {"oid": "456470e68992b7482902e9138d7d4ee437d2c30c", "committedDate": "2021-04-14 23:36:01 +0200", "message": "Add chapter controls for the seekbar, add chapter title for the popup while seeking (#5017)"}, {"oid": "58cdba45c52a4d71f583b91a6a8e6b43293130a6", "committedDate": "2021-04-15 21:25:14 +0200", "message": "Merge pull request #5113 from ByteHamster/play-button"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "0106cdc8bfd986da5dc8f21c31caa589b0217044", "committedDate": "2021-05-02 11:20:46 +0200", "message": "Fix jumping thumb"}, {"oid": "508cea67d1d5a0fd051a1636e402f31f1c7fc39a", "committedDate": "2021-05-09 11:04:31 +0200", "message": "Fix chapter seekbar issues (#5142)"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "292c9bf15136f76fea8928ed7abb2b55fb316678", "committedDate": "2021-05-14 21:06:04 +0200", "message": "New media player screen (#5075)"}, {"oid": "fcb75fc38202e6f93e787955a330f333724b3081", "committedDate": "2021-05-14 21:22:22 +0200", "message": "Merge pull request #5161 from ByteHamster/reduce-playback-controller"}, {"oid": "05606507b24c694324f359696cdc408f3ab1833d", "committedDate": "2021-06-15 22:58:31 +0200", "message": "Fix for highlighted seek bar on episode without chapters"}, {"oid": "39a990edcc37284df359ec409c32bb8fcde04cce", "committedDate": "2021-06-25 18:55:54 +0200", "message": "Speed up loading media info"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "508cfc24c2a93fa0bff42704976e52c6066724eb", "committedDate": "2021-07-24 08:26:05 +0200", "message": "Show speed dialog on single click"}, {"oid": "dbac6cae4666f89e3ccb8ecbc2f1c5b06e381fa5", "committedDate": "2021-07-24 17:47:09 +0200", "message": "Merge pull request #5200 from TacoTheDank/plugin-updates"}, {"oid": "bc59d50804328f3c5a293079a33576ff260022ea", "committedDate": "2021-07-26 20:58:10 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "a291be9afb527cc06f5f39d73283ed385e619186", "committedDate": "2021-11-14 15:39:36 +0100", "message": "Fix sometimes showing incorrect position when continuous playback is disabled"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "ac8114342c4beb90745cfc5bd9235ca219a36b29", "committedDate": "2022-09-18 18:57:43 +0200", "message": "Migrate Toolbars to Material3"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d585e37e11d01b61773b287ce2e6cb5ae24380a1", "committedDate": "2022-11-18 20:08:48 +0100", "message": "Add button to refresh episode chapters (#6177)"}, {"oid": "1d251492b08ca17852e4a8bb5b0a9638443da9b2", "committedDate": "2022-12-17 10:51:07 +0100", "message": "Add support for Material You tinted theme"}, {"oid": "db5d47967a6de37604ffa938d4100dcf7d28b917", "committedDate": "2023-02-02 00:05:02 +0100", "message": "Use nicer animation when sliding up player (#6301)"}, {"oid": "7753c500dbfdd4e73fdb8517d3e740ee4b69a48c", "committedDate": "2023-02-24 16:53:14 +0100", "message": "Do not jump bottom sheet when playing (#6342)"}, {"oid": "5f00294c29548e5b9867abe34229c69feb047180", "committedDate": "2023-02-24 22:19:30 +0100", "message": "More human readable player error message (#6346)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTkyNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399795926", "body": "Is there a case where the title might be different from `R.string.pref_feed_skip`? I do not think this needs to be a parameter.", "bodyText": "Is there a case where the title might be different from R.string.pref_feed_skip? I do not think this needs to be a parameter.", "bodyHTML": "<p dir=\"auto\">Is there a case where the title might be different from <code>R.string.pref_feed_skip</code>? I do not think this needs to be a parameter.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T13:11:42Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.view.View;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+import de.danoeh.antennapod.R;\n+\n+/**\n+ * Displays a dialog with a username and password text field and an optional checkbox to save username and preferences.\n+ */\n+public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n+\n+    public FeedPreferenceSkipDialog(Context context, int titleRes, int skipIntroInitialValue,", "originalCommit": "b93bce74012b31980fe3a1e19a49df82901e1978", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2MzQzOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399863439", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-03-29T22:30:43Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc5NTkyNg=="}], "type": "inlineReview", "revised_code": {"commit": "d79e3db3f3d798b6193a8c45a98433f8ad429041", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex a3cf0377c..62aaf777f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -12,10 +12,10 @@ import de.danoeh.antennapod.R;\n  */\n public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n \n-    public FeedPreferenceSkipDialog(Context context, int titleRes, int skipIntroInitialValue,\n+    public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n                                 int skipEndInitialValue) {\n         super(context);\n-        setTitle(titleRes);\n+        setTitle(R.string.pref_feed_skip);\n         View rootView = View.inflate(context, R.layout.feed_pref_skip_dialog, null);\n         setView(rootView);\n \n", "next_change": {"commit": "8057871422cbaf1a7db7b446f0baa148e0dd735a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 62aaf777f..379539a31 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -13,7 +14,7 @@ import de.danoeh.antennapod.R;\n public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n \n     public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n-                                int skipEndInitialValue) {\n+                                    int skipEndInitialValue) {\n         super(context);\n         setTitle(R.string.pref_feed_skip);\n         View rootView = View.inflate(context, R.layout.feed_pref_skip_dialog, null);\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex a3cf0377c..0e5a064eb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -1,10 +1,9 @@\n package de.danoeh.antennapod.dialog;\n \n-import android.app.AlertDialog;\n import android.content.Context;\n import android.view.View;\n-import android.widget.CheckBox;\n import android.widget.EditText;\n+import androidx.appcompat.app.AlertDialog;\n import de.danoeh.antennapod.R;\n \n /**\n", "next_change": {"commit": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 0e5a064eb..77c9ff67e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -3,13 +3,13 @@ package de.danoeh.antennapod.dialog;\n import android.content.Context;\n import android.view.View;\n import android.widget.EditText;\n-import androidx.appcompat.app.AlertDialog;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n \n /**\n  * Displays a dialog with a username and password text field and an optional checkbox to save username and preferences.\n  */\n-public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n+public abstract class FeedPreferenceSkipDialog extends MaterialAlertDialogBuilder {\n \n     public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n                                     int skipEndInitialValue) {\n", "next_change": null}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex a3cf0377c..0e5a064eb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -12,10 +11,10 @@ import de.danoeh.antennapod.R;\n  */\n public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n \n-    public FeedPreferenceSkipDialog(Context context, int titleRes, int skipIntroInitialValue,\n-                                int skipEndInitialValue) {\n+    public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n+                                    int skipEndInitialValue) {\n         super(context);\n-        setTitle(titleRes);\n+        setTitle(R.string.pref_feed_skip);\n         View rootView = View.inflate(context, R.layout.feed_pref_skip_dialog, null);\n         setView(rootView);\n \n", "next_change": null}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}]}, {"oid": "cd2b8c203cf8f84498da16bfc5a601b37405c5ea", "url": "https://github.com/AntennaPod/AntennaPod/commit/cd2b8c203cf8f84498da16bfc5a601b37405c5ea", "message": "move upgrade to the right right place, increment version by 1 only", "committedDate": "2020-03-29T22:24:32Z", "type": "commit"}, {"oid": "a9b13723de404e2dde45b8dd4f5d6c5544ae2d24", "url": "https://github.com/AntennaPod/AntennaPod/commit/a9b13723de404e2dde45b8dd4f5d6c5544ae2d24", "message": "indent and remove dup namespace", "committedDate": "2020-03-29T22:27:27Z", "type": "commit"}, {"oid": "d79e3db3f3d798b6193a8c45a98433f8ad429041", "url": "https://github.com/AntennaPod/AntennaPod/commit/d79e3db3f3d798b6193a8c45a98433f8ad429041", "message": "no need for dialog title to be diff", "committedDate": "2020-03-29T22:30:30Z", "type": "commit"}, {"oid": "70e1bff3aab2330aa5cb25f190258f0383552f45", "url": "https://github.com/AntennaPod/AntennaPod/commit/70e1bff3aab2330aa5cb25f190258f0383552f45", "message": "revert", "committedDate": "2020-03-30T00:54:53Z", "type": "commit"}, {"oid": "82cd109ea3fea61b0b491bfc2ef1f78f37a842d4", "url": "https://github.com/AntennaPod/AntennaPod/commit/82cd109ea3fea61b0b491bfc2ef1f78f37a842d4", "message": "skipIntro", "committedDate": "2020-03-30T00:55:16Z", "type": "commit"}, {"oid": "73ba128fcd10c3b55749242a56fca53ad071d0b5", "url": "https://github.com/AntennaPod/AntennaPod/commit/73ba128fcd10c3b55749242a56fca53ad071d0b5", "message": "revert", "committedDate": "2020-03-30T01:32:31Z", "type": "commit"}, {"oid": "8e7475f31314f9281ba1fa4f10784bf24b084e41", "url": "https://github.com/AntennaPod/AntennaPod/commit/8e7475f31314f9281ba1fa4f10784bf24b084e41", "message": "skip at ending", "committedDate": "2020-03-30T01:54:54Z", "type": "commit"}, {"oid": "47a40943a45844dad5a96732b2c311158baad090", "url": "https://github.com/AntennaPod/AntennaPod/commit/47a40943a45844dad5a96732b2c311158baad090", "message": "dup xmlns", "committedDate": "2020-03-30T01:58:17Z", "type": "commit"}, {"oid": "b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "url": "https://github.com/AntennaPod/AntennaPod/commit/b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "message": "format", "committedDate": "2020-03-30T01:58:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTE2MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399865160", "body": "Is this method used anywhere? I'd vote to just add code that we actually need.", "bodyText": "Is this method used anywhere? I'd vote to just add code that we actually need.", "bodyHTML": "<p dir=\"auto\">Is this method used anywhere? I'd vote to just add code that we actually need.</p>", "author": "ByteHamster", "createdAt": "2020-03-29T22:45:09Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.AlertDialog;\n+import android.content.Context;\n+import android.view.View;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+import de.danoeh.antennapod.R;\n+\n+/**\n+ * Displays a dialog with a username and password text field and an optional checkbox to save username and preferences.\n+ */\n+public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n+\n+    public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n+                                int skipEndInitialValue) {\n+        super(context);\n+        setTitle(R.string.pref_feed_skip);\n+        View rootView = View.inflate(context, R.layout.feed_pref_skip_dialog, null);\n+        setView(rootView);\n+\n+        final EditText etxtSkipIntro = rootView.findViewById(R.id.etxtSkipIntro);\n+        final EditText etxtSkipEnd = rootView.findViewById(R.id.etxtSkipEnd);\n+\n+        etxtSkipIntro.setText(String.valueOf(skipIntroInitialValue));\n+        etxtSkipEnd.setText(String.valueOf(skipEndInitialValue));\n+\n+        setOnCancelListener(dialog -> onCancelled());\n+        setNegativeButton(R.string.cancel_label, null);\n+        setPositiveButton(R.string.confirm_label, (dialog, which)\n+                -> onConfirmed(Integer.valueOf(etxtSkipIntro.getText().toString()),\n+                Integer.valueOf(etxtSkipEnd.getText().toString())));\n+    }\n+\n+    protected void onCancelled() {", "originalCommit": "d79e3db3f3d798b6193a8c45a98433f8ad429041", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 62aaf777f..5061b5954 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -32,9 +32,5 @@ public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n                 Integer.valueOf(etxtSkipEnd.getText().toString())));\n     }\n \n-    protected void onCancelled() {\n-\n-    }\n-\n     protected abstract void onConfirmed(int skipIntro, int skipEnd);\n }\n", "next_change": {"commit": "a1caf62567feb98bb4a3cab4235c5bb14221c4b0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 5061b5954..5a53a617b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -25,12 +26,11 @@ public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n         etxtSkipIntro.setText(String.valueOf(skipIntroInitialValue));\n         etxtSkipEnd.setText(String.valueOf(skipEndInitialValue));\n \n-        setOnCancelListener(dialog -> onCancelled());\n         setNegativeButton(R.string.cancel_label, null);\n         setPositiveButton(R.string.confirm_label, (dialog, which)\n-                -> onConfirmed(Integer.valueOf(etxtSkipIntro.getText().toString()),\n-                Integer.valueOf(etxtSkipEnd.getText().toString())));\n+                -> onConfirmed(etxtSkipIntro.getText().toString(),\n+                               etxtSkipEnd.getText().toString()));\n     }\n \n-    protected abstract void onConfirmed(int skipIntro, int skipEnd);\n+    protected abstract void onConfirmed(String skipIntro, String skipEnd);\n }\n", "next_change": {"commit": "8057871422cbaf1a7db7b446f0baa148e0dd735a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 5a53a617b..379539a31 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -28,9 +28,23 @@ public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n \n         setNegativeButton(R.string.cancel_label, null);\n         setPositiveButton(R.string.confirm_label, (dialog, which)\n-                -> onConfirmed(etxtSkipIntro.getText().toString(),\n-                               etxtSkipEnd.getText().toString()));\n+                -> {\n+            int skipIntro;\n+            int skipEnding;\n+            try {\n+                skipIntro = Integer.parseInt(etxtSkipIntro.getText().toString());\n+            } catch (NumberFormatException e) {\n+                skipIntro = 0;\n+            }\n+\n+            try {\n+                skipEnding = Integer.parseInt(etxtSkipEnd.getText().toString());\n+            } catch (NumberFormatException e) {\n+                skipEnding = 0;\n+            }\n+            onConfirmed(skipIntro, skipEnding);\n+        });\n     }\n \n-    protected abstract void onConfirmed(String skipIntro, String skipEnd);\n+    protected abstract void onConfirmed(int skipIntro, int skipEndig);\n }\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 62aaf777f..0e5a064eb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -25,16 +24,25 @@ public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n         etxtSkipIntro.setText(String.valueOf(skipIntroInitialValue));\n         etxtSkipEnd.setText(String.valueOf(skipEndInitialValue));\n \n-        setOnCancelListener(dialog -> onCancelled());\n         setNegativeButton(R.string.cancel_label, null);\n         setPositiveButton(R.string.confirm_label, (dialog, which)\n-                -> onConfirmed(Integer.valueOf(etxtSkipIntro.getText().toString()),\n-                Integer.valueOf(etxtSkipEnd.getText().toString())));\n+                -> {\n+            int skipIntro;\n+            int skipEnding;\n+            try {\n+                skipIntro = Integer.parseInt(etxtSkipIntro.getText().toString());\n+            } catch (NumberFormatException e) {\n+                skipIntro = 0;\n+            }\n+\n+            try {\n+                skipEnding = Integer.parseInt(etxtSkipEnd.getText().toString());\n+            } catch (NumberFormatException e) {\n+                skipEnding = 0;\n+            }\n+            onConfirmed(skipIntro, skipEnding);\n+        });\n     }\n \n-    protected void onCancelled() {\n-\n-    }\n-\n-    protected abstract void onConfirmed(int skipIntro, int skipEnd);\n+    protected abstract void onConfirmed(int skipIntro, int skipEndig);\n }\n", "next_change": null}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTU1MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399865551", "body": "`GLOBAL` in the case of `SPEED_USE_GLOBAL` means that the feed uses the speed that is set globally (for all feeds). Skipping is not a setting that is available globally (and I don't think it should be). So please rename to something like `DEFAULT` or just remove the variables (used in one place only).", "bodyText": "GLOBAL in the case of SPEED_USE_GLOBAL means that the feed uses the speed that is set globally (for all feeds). Skipping is not a setting that is available globally (and I don't think it should be). So please rename to something like DEFAULT or just remove the variables (used in one place only).", "bodyHTML": "<p dir=\"auto\"><code>GLOBAL</code> in the case of <code>SPEED_USE_GLOBAL</code> means that the feed uses the speed that is set globally (for all feeds). Skipping is not a setting that is available globally (and I don't think it should be). So please rename to something like <code>DEFAULT</code> or just remove the variables (used in one place only).</p>", "author": "ByteHamster", "createdAt": "2020-03-29T22:48:36Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java", "diffHunk": "@@ -15,6 +15,8 @@\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n+    public static final int FEED_SKIP_INTRO_GLOBAL = 0;\n+    public static final int FEED_SKIP_ENDING_GLOBAL = 0;", "originalCommit": "d79e3db3f3d798b6193a8c45a98433f8ad429041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwMjQ5Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400602492", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-03-31T02:15:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTU1MQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex a1a20e5a9..5c982c8df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -15,8 +15,6 @@ import de.danoeh.antennapod.core.storage.PodDBAdapter;\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n-    public static final int FEED_SKIP_INTRO_GLOBAL = 0;\n-    public static final int FEED_SKIP_ENDING_GLOBAL = 0;\n \n     @NonNull\n     private FeedFilter filter;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex a1a20e5a9..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -15,8 +15,6 @@ import de.danoeh.antennapod.core.storage.PodDBAdapter;\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n-    public static final int FEED_SKIP_INTRO_GLOBAL = 0;\n-    public static final int FEED_SKIP_ENDING_GLOBAL = 0;\n \n     @NonNull\n     private FeedFilter filter;\n", "next_change": {"commit": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 2a2568f28..dbbd2b1a4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -15,6 +15,7 @@ import de.danoeh.antennapod.core.storage.PodDBAdapter;\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n+    public static final String TAG_ROOT = \"#root\";\n \n     @NonNull\n     private FeedFilter filter;\n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex dbbd2b1a4..0486ccd9b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -16,6 +20,7 @@ public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n     public static final String TAG_ROOT = \"#root\";\n+    public static final String TAG_SEPARATOR = \",\";\n \n     @NonNull\n     private FeedFilter filter;\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 0486ccd9b..21474db89 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -9,54 +9,47 @@ import de.danoeh.antennapod.core.preferences.UserPreferences;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.storage.PodDBAdapter;\n \n-import java.util.Arrays;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n /**\n  * Contains preferences for a single feed.\n  */\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n-    public static final String TAG_ROOT = \"#root\";\n-    public static final String TAG_SEPARATOR = \",\";\n-\n-    @NonNull\n-    private FeedFilter filter;\n-    private long feedID;\n-    private boolean autoDownload;\n-    private boolean keepUpdated;\n \n     public enum AutoDeleteAction {\n         GLOBAL,\n         YES,\n         NO\n     }\n-    private AutoDeleteAction auto_delete_action;\n \n+    @NonNull\n+    private FeedFilter filter;\n+    private long feedID;\n+    private boolean autoDownload;\n+    private boolean keepUpdated;\n+    private AutoDeleteAction autoDeleteAction;\n     private VolumeAdaptionSetting volumeAdaptionSetting;\n-\n     private String username;\n     private String password;\n     private float feedPlaybackSpeed;\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n-    private final Set<String> tags = new HashSet<>();\n+    private boolean showEpisodeNotification;\n \n-    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n-        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting,\n-                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, new HashSet<>());\n+    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction,\n+                           VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n+        this(feedID, autoDownload, true, autoDeleteAction, volumeAdaptionSetting,\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false);\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action,\n-                            VolumeAdaptionSetting volumeAdaptionSetting, String username, String password,\n-                            @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding,\n-                            Set<String> tags) {\n+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n+                            AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n+                            String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n+                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n-        this.auto_delete_action = auto_delete_action;\n+        this.autoDeleteAction = autoDeleteAction;\n         this.volumeAdaptionSetting = volumeAdaptionSetting;\n         this.username = username;\n         this.password = password;\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 21474db89..794c71cf3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -35,17 +39,19 @@ public class FeedPreferences {\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n     private boolean showEpisodeNotification;\n+    private final Set<String> tags = new HashSet<>();\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction,\n                            VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, autoDeleteAction, volumeAdaptionSetting,\n-                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false);\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false, new HashSet<>());\n     }\n \n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n                             AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n                             String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n-                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification) {\n+                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification,\n+                            Set<String> tags) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n", "next_change": {"commit": "0081d232d0853166db7e88b5b4d192d0bf13f582", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 794c71cf3..8288280bd 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -47,7 +43,7 @@ public class FeedPreferences {\n                 username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false, new HashSet<>());\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n+    public FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n                             AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n                             String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n                             int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 21474db89..794c71cf3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -58,6 +64,7 @@ public class FeedPreferences {\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n         this.showEpisodeNotification = showEpisodeNotification;\n+        this.tags.addAll(tags);\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "0081d232d0853166db7e88b5b4d192d0bf13f582", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 794c71cf3..8288280bd 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -67,56 +63,6 @@ public class FeedPreferences {\n         this.tags.addAll(tags);\n     }\n \n-    public static FeedPreferences fromCursor(Cursor cursor) {\n-        int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);\n-        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);\n-        int indexAutoRefresh = cursor.getColumnIndex(PodDBAdapter.KEY_KEEP_UPDATED);\n-        int indexAutoDeleteAction = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DELETE_ACTION);\n-        int indexVolumeAdaption = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_VOLUME_ADAPTION);\n-        int indexUsername = cursor.getColumnIndex(PodDBAdapter.KEY_USERNAME);\n-        int indexPassword = cursor.getColumnIndex(PodDBAdapter.KEY_PASSWORD);\n-        int indexIncludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_INCLUDE_FILTER);\n-        int indexExcludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_EXCLUDE_FILTER);\n-        int indexFeedPlaybackSpeed = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_PLAYBACK_SPEED);\n-        int indexAutoSkipIntro = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_INTRO);\n-        int indexAutoSkipEnding = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_ENDING);\n-        int indexEpisodeNotification = cursor.getColumnIndex(PodDBAdapter.KEY_EPISODE_NOTIFICATION);\n-        int indexTags = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_TAGS);\n-\n-        long feedId = cursor.getLong(indexId);\n-        boolean autoDownload = cursor.getInt(indexAutoDownload) > 0;\n-        boolean autoRefresh = cursor.getInt(indexAutoRefresh) > 0;\n-        int autoDeleteActionIndex = cursor.getInt(indexAutoDeleteAction);\n-        AutoDeleteAction autoDeleteAction = AutoDeleteAction.values()[autoDeleteActionIndex];\n-        int volumeAdaptionValue = cursor.getInt(indexVolumeAdaption);\n-        VolumeAdaptionSetting volumeAdaptionSetting = VolumeAdaptionSetting.fromInteger(volumeAdaptionValue);\n-        String username = cursor.getString(indexUsername);\n-        String password = cursor.getString(indexPassword);\n-        String includeFilter = cursor.getString(indexIncludeFilter);\n-        String excludeFilter = cursor.getString(indexExcludeFilter);\n-        float feedPlaybackSpeed = cursor.getFloat(indexFeedPlaybackSpeed);\n-        int feedAutoSkipIntro = cursor.getInt(indexAutoSkipIntro);\n-        int feedAutoSkipEnding = cursor.getInt(indexAutoSkipEnding);\n-        boolean showNotification = cursor.getInt(indexEpisodeNotification) > 0;\n-        String tagsString = cursor.getString(indexTags);\n-        if (TextUtils.isEmpty(tagsString)) {\n-            tagsString = TAG_ROOT;\n-        }\n-        return new FeedPreferences(feedId,\n-                autoDownload,\n-                autoRefresh,\n-                autoDeleteAction,\n-                volumeAdaptionSetting,\n-                username,\n-                password,\n-                new FeedFilter(includeFilter, excludeFilter),\n-                feedPlaybackSpeed,\n-                feedAutoSkipIntro,\n-                feedAutoSkipEnding,\n-                showNotification,\n-                new HashSet<>(Arrays.asList(tagsString.split(TAG_SEPARATOR))));\n-    }\n-\n     /**\n      * @return the filter for this feed\n      */\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "5a10728aa97e41f857bf219d30866ac192712a7d", "committedDate": "2020-10-01 12:59:03 +0200", "message": "Delete private constructor in FeedPreferences which is only used by other consturctor (#4477)"}, {"oid": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "committedDate": "2021-01-02 20:45:05 +0100", "message": "Build tags based on feed properties"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "5a8bfc0ea483d0af4db8f266969f1e52c2cd529d", "committedDate": "2021-01-02 21:25:15 +0100", "message": "Fix checkstyle"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "0081d232d0853166db7e88b5b4d192d0bf13f582", "committedDate": "2021-04-22 22:04:20 +0200", "message": "Moved cursor related code out of model (#5126)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTY5NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r399865695", "body": "Please add a space before the plus here :)", "bodyText": "Please add a space before the plus here :)", "bodyHTML": "<p dir=\"auto\">Please add a space before the plus here :)</p>", "author": "ByteHamster", "createdAt": "2020-03-29T22:49:49Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java", "diffHunk": "@@ -145,7 +147,9 @@\n             + KEY_LAST_UPDATE_FAILED + \" INTEGER DEFAULT 0,\"\n             + KEY_AUTO_DELETE_ACTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n-            + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0)\";\n+            + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n+            + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n+            + KEY_FEED_SKIP_ENDING+ \" INTEGER DEFAULT 0)\";", "originalCommit": "d79e3db3f3d798b6193a8c45a98433f8ad429041", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwMTcyMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400601722", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-03-31T02:13:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NTY5NQ=="}], "type": "inlineReview", "revised_code": {"commit": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex a0e220ba9..292062cd5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -149,7 +149,7 @@ public class PodDBAdapter {\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n             + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n-            + KEY_FEED_SKIP_ENDING+ \" INTEGER DEFAULT 0)\";\n+            + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0)\";\n \n     private static final String CREATE_TABLE_FEED_ITEMS = \"CREATE TABLE \"\n             + TABLE_NAME_FEED_ITEMS + \" (\" + TABLE_PRIMARY_KEY + KEY_TITLE\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex a0e220ba9..e6d47b32a 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -149,7 +148,7 @@ public class PodDBAdapter {\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n             + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n-            + KEY_FEED_SKIP_ENDING+ \" INTEGER DEFAULT 0)\";\n+            + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0)\";\n \n     private static final String CREATE_TABLE_FEED_ITEMS = \"CREATE TABLE \"\n             + TABLE_NAME_FEED_ITEMS + \" (\" + TABLE_PRIMARY_KEY + KEY_TITLE\n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex e6d47b32a..3f29b7822 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -147,6 +150,7 @@ public class PodDBAdapter {\n             + KEY_AUTO_DELETE_ACTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n             + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n+            + KEY_FEED_TAGS + \" TEXT,\"\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0)\";\n \n", "next_change": {"commit": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 3f29b7822..7eae8b9f0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -150,7 +150,6 @@ public class PodDBAdapter {\n             + KEY_AUTO_DELETE_ACTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n             + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n-            + KEY_FEED_TAGS + \" TEXT,\"\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0)\";\n \n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 7eae8b9f0..8d1352a10 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -151,7 +153,8 @@ public class PodDBAdapter {\n             + KEY_FEED_PLAYBACK_SPEED + \" REAL DEFAULT \" + SPEED_USE_GLOBAL + \",\"\n             + KEY_FEED_VOLUME_ADAPTION + \" INTEGER DEFAULT 0,\"\n             + KEY_FEED_SKIP_INTRO + \" INTEGER DEFAULT 0,\"\n-            + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0)\";\n+            + KEY_FEED_SKIP_ENDING + \" INTEGER DEFAULT 0,\"\n+            + KEY_EPISODE_NOTIFICATION + \" INTEGER DEFAULT 0)\";\n \n     private static final String CREATE_TABLE_FEED_ITEMS = \"CREATE TABLE \"\n             + TABLE_NAME_FEED_ITEMS + \" (\" + TABLE_PRIMARY_KEY + KEY_TITLE\n", "next_change": {"commit": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 8d1352a10..54f5f3fa4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -157,9 +157,9 @@ public class PodDBAdapter {\n             + KEY_EPISODE_NOTIFICATION + \" INTEGER DEFAULT 0)\";\n \n     private static final String CREATE_TABLE_FEED_ITEMS = \"CREATE TABLE \"\n-            + TABLE_NAME_FEED_ITEMS + \" (\" + TABLE_PRIMARY_KEY + KEY_TITLE\n-            + \" TEXT,\" + KEY_CONTENT_ENCODED + \" TEXT,\" + KEY_PUBDATE\n-            + \" INTEGER,\" + KEY_READ + \" INTEGER,\" + KEY_LINK + \" TEXT,\"\n+            + TABLE_NAME_FEED_ITEMS + \" (\" + TABLE_PRIMARY_KEY\n+            + KEY_TITLE + \" TEXT,\" + KEY_PUBDATE + \" INTEGER,\"\n+            + KEY_READ + \" INTEGER,\" + KEY_LINK + \" TEXT,\"\n             + KEY_DESCRIPTION + \" TEXT,\" + KEY_PAYMENT_LINK + \" TEXT,\"\n             + KEY_MEDIA + \" INTEGER,\" + KEY_FEED + \" INTEGER,\"\n             + KEY_HAS_CHAPTERS + \" INTEGER,\" + KEY_ITEM_IDENTIFIER + \" TEXT,\"\n", "next_change": {"commit": "524e5c95fc20e9cc25bbe1012a287920fc6030bd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\nindex 54f5f3fa4..719e546b5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/PodDBAdapter.java\n", "chunk": "@@ -164,7 +170,7 @@ public class PodDBAdapter {\n             + KEY_MEDIA + \" INTEGER,\" + KEY_FEED + \" INTEGER,\"\n             + KEY_HAS_CHAPTERS + \" INTEGER,\" + KEY_ITEM_IDENTIFIER + \" TEXT,\"\n             + KEY_IMAGE_URL + \" TEXT,\"\n-            + KEY_AUTO_DOWNLOAD + \" INTEGER)\";\n+            + KEY_AUTO_DOWNLOAD_ATTEMPTS + \" INTEGER)\";\n \n     private static final String CREATE_TABLE_FEED_MEDIA = \"CREATE TABLE \"\n             + TABLE_NAME_FEED_MEDIA + \" (\" + TABLE_PRIMARY_KEY + KEY_DURATION\n", "next_change": null}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "984233d1d0c5950330b860446c75fa374d5cc139", "committedDate": "2020-07-08 21:07:51 +0200", "message": "Delete removed files in local feeds"}, {"oid": "24f734f1b60e29d28c03f245e4db26867c2d1a64", "committedDate": "2020-07-11 20:05:47 -0400", "message": "Fix redundant initializers"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "ff116ccd8c3f47de709d207008d9c38ff3ee2d75", "committedDate": "2020-09-20 12:29:49 +0200", "message": "Fixed items without pubdate getting assigned the current date on every single refresh"}, {"oid": "923be5bfdd8168325079968df8fb14de4f7b59b4", "committedDate": "2020-10-01 23:49:34 +0200", "message": "Improve search feature by using keywords instead of full match (#4478)"}, {"oid": "cd100aae15538415dbc896d59732e4b9710c89d1", "committedDate": "2020-10-24 11:49:55 +0200", "message": "Improve performance and memory usage of 'recent pubdate' feed sort option"}, {"oid": "28ebbedbdf34b72b31c536a118bcf5108b3ea7e5", "committedDate": "2020-10-25 17:22:36 +0100", "message": "Local feeds: Unit tests for LocalFeedUpdater (#4551)"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a3a5a936a2c1cc9d9a7b6580be15ed2c19e912f7", "committedDate": "2020-11-02 18:01:32 -0500", "message": "Remove IF NOT EXISTS from index create statements"}, {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "committedDate": "2020-11-06 02:03:20 +0100", "message": "Filter the All Episodes tab via SQL Query"}, {"oid": "8f25f5830a4620218996dcabb73a4ca923b1750a", "committedDate": "2020-11-08 09:36:13 +0100", "message": "Use lazy singleton instead of Bill Pugh singleton"}, {"oid": "4b252250c0df856a63c801c03191e64f4909c239", "committedDate": "2020-11-19 11:24:31 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "committedDate": "2021-01-22 11:07:40 +0100", "message": "Merge branch 'develop' into fix_episodes_list_item_loading_b"}, {"oid": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "committedDate": "2021-01-22 15:09:43 +0100", "message": "Split up filter model and database handling"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "47a0336c3e5cb4c370ad2612de3e8ba6605f6871", "committedDate": "2021-02-28 14:16:07 +0100", "message": "Refactoring: Remove Cursor related code from Feed class (#4968)"}, {"oid": "dd8341a858f560f045f0d90c8c32f27d6a0891d4", "committedDate": "2021-03-03 18:23:29 +0100", "message": "Replace Java-based feed filtering with SQL-based"}, {"oid": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "committedDate": "2021-03-04 19:47:48 +0100", "message": "Only store content_encoded or description"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "998535515bae8ec5bcd2bd95bc0cf4f34416dff7", "committedDate": "2021-03-28 22:32:40 +0200", "message": "Make AntennaPod pass the medium SpotBugs findings"}, {"oid": "79c79efce588b446cf9816a01e0056e7e3dfd9db", "committedDate": "2021-04-06 18:15:14 +0200", "message": "Parsing podcast:funding tag, showing payment, funding links on the show info screen (#4933)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "4f5449a0d3c8540b32a8d54c3c770d5fe91e554e", "committedDate": "2021-07-11 18:52:11 +0200", "message": "No longer show item-specific auto-download property to users"}, {"oid": "db391867608fa37f6568eca02678b3b376e52fa8", "committedDate": "2021-08-20 20:17:23 +0200", "message": "Identify episodes by guid (#5326)"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "345aad4148f133477e40c232a8e855dfd28e0654", "committedDate": "2021-10-28 19:59:50 +0200", "message": "Add 'Duration' to Episode Filter for podcast Auto Download Settings (#5396)"}, {"oid": "524e5c95fc20e9cc25bbe1012a287920fc6030bd", "committedDate": "2021-11-02 21:38:59 +0100", "message": "Fix auto-download retry backoff"}, {"oid": "607b1fdbeb22f605473f2592813e41eb6f3bdc54", "committedDate": "2021-12-01 23:10:32 +0100", "message": "Make feed deletions faster"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "7ab6d08ea589aae7db2f7bdf1b28833f45ba9943", "committedDate": "2022-02-21 22:54:40 +0100", "message": "Add line graph to statistics screen"}, {"oid": "ff3258c34a1797e75538b83baa1e867d0ea07ceb", "committedDate": "2022-02-27 19:47:41 +0100", "message": "Move database to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwODA2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400008062", "body": "There is a checkstyle file in config/checkstyle/ that I want to enforce for new code. Because the existing code is quite inconsistent, CI only checks a small fraction of things. In the past months, I did the checks manually and commented on GitHub. In #3978, I enabled checking the diff on CI.\r\n\r\nI think checkstyle will complain about this line. Have not checked the rest of the code. Just that you already know before I merge #3978 and it suddenly complains.", "bodyText": "There is a checkstyle file in config/checkstyle/ that I want to enforce for new code. Because the existing code is quite inconsistent, CI only checks a small fraction of things. In the past months, I did the checks manually and commented on GitHub. In #3978, I enabled checking the diff on CI.\nI think checkstyle will complain about this line. Have not checked the rest of the code. Just that you already know before I merge #3978 and it suddenly complains.", "bodyHTML": "<p dir=\"auto\">There is a checkstyle file in config/checkstyle/ that I want to enforce for new code. Because the existing code is quite inconsistent, CI only checks a small fraction of things. In the past months, I did the checks manually and commented on GitHub. In <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"589906817\" data-permission-text=\"Title is private\" data-url=\"https://github.com/AntennaPod/AntennaPod/issues/3978\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/AntennaPod/AntennaPod/pull/3978/hovercard\" href=\"https://github.com/AntennaPod/AntennaPod/pull/3978\">#3978</a>, I enabled checking the diff on CI.</p>\n<p dir=\"auto\">I think checkstyle will complain about this line. Have not checked the rest of the code. Just that you already know before I merge <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"589906817\" data-permission-text=\"Title is private\" data-url=\"https://github.com/AntennaPod/AntennaPod/issues/3978\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/AntennaPod/AntennaPod/pull/3978/hovercard\" href=\"https://github.com/AntennaPod/AntennaPod/pull/3978\">#3978</a> and it suddenly complains.</p>", "author": "ByteHamster", "createdAt": "2020-03-30T08:21:14Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -505,6 +507,36 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+\n+        int skipIntro = 0;\n+        if (! (playable instanceof FeedMedia)) { return; }\n+        if (playable.getLastPlayedTime() > 0) { return; }", "originalCommit": "b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "aa0eed8995355143ab3d859374eb028d8e4a4d0f", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..11d9bf8e1 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -508,10 +508,14 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     }\n \n     private void skipIntro(Playable playable) {\n-\n         int skipIntro = 0;\n-        if (! (playable instanceof FeedMedia)) { return; }\n-        if (playable.getLastPlayedTime() > 0) { return; }\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        if (playable.getLastPlayedTime() > 0) {\n+            return;\n+        }\n \n         if (playable instanceof FeedMedia) {\n             FeedMedia feedMedia = (FeedMedia) playable;\n", "next_change": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 11d9bf8e1..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -507,38 +506,32 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n+    private void skipIntroPref(Playable playable) {\n         int skipIntro = 0;\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable.getLastPlayedTime() > 0) {\n-            return;\n-        }\n-\n         if (playable instanceof FeedMedia) {\n             FeedMedia feedMedia = (FeedMedia) playable;\n             FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n             skipIntro = preferences.getFeedSkipIntro();\n         }\n \n-        String skipIntroMesg = \"\";\n         Context context = getApplicationContext();\n-        if (skipIntro > 0) {\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n+                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n-                skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast),\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n                         skipIntro,\n                         context.getString(R.string.time_seconds));\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -508,33 +512,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     }\n \n     private void skipIntro(Playable playable) {\n-\n-        int skipIntro = 0;\n-        if (! (playable instanceof FeedMedia)) { return; }\n-        if (playable.getLastPlayedTime() > 0) { return; }\n-\n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n         }\n \n-        String skipIntroMesg = \"\";\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n         Context context = getApplicationContext();\n-        if (skipIntro > 0) {\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n-                skipIntroMesg = String.format(context.getString(R.string.pref_feed_skip_intro_toast),\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": {"commit": "018a91d66ce42e31e493117467dfa8be76301f26", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..f25b0a5a8 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -541,9 +542,11 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -512,41 +513,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipIntro = preferences.getFeedSkipIntro();\n-\n-        Context context = getApplicationContext();\n-        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n-            int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n-                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n-                mediaPlayer.seekTo(skipIntro * 1000);\n-                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro);\n-                Toast toast = Toast.makeText(context, skipIntroMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-            }\n-        }\n-    }\n-\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -513,15 +517,41 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+            }\n+        }\n+    }\n+\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -548,10 +599,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -599,12 +592,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -592,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +602,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "ae3971a58ff00755148b036794b7e5dc1c57017a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 805956094..a6d90dc7d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -611,8 +545,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n-        intentAlwaysAllow.setAction(EXTRA_ALLOW_STREAM_ALWAYS);\n-        intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n+        intentAlwaysAllow.setAction(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS);\n+        intentAlwaysAllow.putExtra(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,12 +604,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -560,25 +613,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                .addAction(R.drawable.ic_notification_stream,\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -554,15 +529,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n-                NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAwODQyNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400008427", "body": "This is no longer needed, I think.", "bodyText": "This is no longer needed, I think.", "bodyHTML": "<p dir=\"auto\">This is no longer needed, I think.</p>", "author": "ByteHamster", "createdAt": "2020-03-30T08:21:51Z", "path": "app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java", "diffHunk": "@@ -477,6 +480,24 @@ void onPositionObserverUpdate() {\n             txtvLength.setText(Converter.getDurationStringLong(duration));\n         }\n         updateProgressbarPosition(currentPosition, duration);\n+        Playable media = controller.getMedia();\n+        if (media instanceof FeedMedia)  {", "originalCommit": "b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "7894cb874a18cda8ed028e7f6c017c7e1b06ebef", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\nindex f0000317c..9a4a5ef3a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\n", "chunk": "@@ -480,24 +477,6 @@ public abstract class MediaplayerActivity extends CastEnabledActivity implements\n             txtvLength.setText(Converter.getDurationStringLong(duration));\n         }\n         updateProgressbarPosition(currentPosition, duration);\n-        Playable media = controller.getMedia();\n-        if (media instanceof FeedMedia)  {\n-            FeedMedia feedMedia = (FeedMedia) media;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            int skipEnd = preferences.getFeedSkipEnding();\n-            if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-                Log.d(TAG, \"Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-                String skipMesg = MediaplayerActivity.this.getString(de.danoeh.antennapod.core.R.string.pref_feed_skip_ending) + \" \" +\n-                        skipEnd + \" \" +\n-                        MediaplayerActivity.this.getString(de.danoeh.antennapod.core.R.string.time_seconds);\n-                Toast toast = Toast.makeText(MediaplayerActivity.this, skipMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-                IntentUtils.sendLocalBroadcast(MediaplayerActivity.this, PlaybackService.ACTION_SKIP_CURRENT_EPISODE);\n-            } else {\n-                Log.d(TAG, \"Not Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-            }\n-        }\n     }\n \n     private void updateProgressbarPosition(int position, int duration) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\nindex f0000317c..9a4a5ef3a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\n+++ b/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\n", "chunk": "@@ -480,24 +477,6 @@ public abstract class MediaplayerActivity extends CastEnabledActivity implements\n             txtvLength.setText(Converter.getDurationStringLong(duration));\n         }\n         updateProgressbarPosition(currentPosition, duration);\n-        Playable media = controller.getMedia();\n-        if (media instanceof FeedMedia)  {\n-            FeedMedia feedMedia = (FeedMedia) media;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            int skipEnd = preferences.getFeedSkipEnding();\n-            if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-                Log.d(TAG, \"Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-                String skipMesg = MediaplayerActivity.this.getString(de.danoeh.antennapod.core.R.string.pref_feed_skip_ending) + \" \" +\n-                        skipEnd + \" \" +\n-                        MediaplayerActivity.this.getString(de.danoeh.antennapod.core.R.string.time_seconds);\n-                Toast toast = Toast.makeText(MediaplayerActivity.this, skipMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-                IntentUtils.sendLocalBroadcast(MediaplayerActivity.this, PlaybackService.ACTION_SKIP_CURRENT_EPISODE);\n-            } else {\n-                Log.d(TAG, \"Not Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n-            }\n-        }\n     }\n \n     private void updateProgressbarPosition(int position, int duration) {\n", "next_change": {"commit": "c3d7209f09f3b6c3974ada7836fe08f9d131e09b", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java b/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\ndeleted file mode 100644\nindex 9a4a5ef3a..000000000\n--- a/app/src/main/java/de/danoeh/antennapod/activity/MediaplayerActivity.java\n+++ /dev/null\n", "chunk": "@@ -1,745 +0,0 @@\n-package de.danoeh.antennapod.activity;\n-\n-import android.Manifest;\n-import android.annotation.TargetApi;\n-import android.content.Intent;\n-import android.content.SharedPreferences;\n-import android.content.pm.PackageManager;\n-import android.graphics.PixelFormat;\n-import android.os.Build;\n-import android.os.Bundle;\n-import android.util.Log;\n-import android.view.Menu;\n-import android.view.MenuInflater;\n-import android.view.MenuItem;\n-import android.view.View;\n-import android.widget.ImageButton;\n-import android.widget.SeekBar;\n-import android.widget.SeekBar.OnSeekBarChangeListener;\n-import android.widget.TextView;\n-import android.widget.Toast;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.appcompat.app.AlertDialog;\n-import androidx.arch.core.util.Function;\n-import androidx.core.app.ActivityCompat;\n-import androidx.core.app.ActivityOptionsCompat;\n-import androidx.core.content.ContextCompat;\n-import androidx.core.util.Consumer;\n-import androidx.core.util.Supplier;\n-import com.bumptech.glide.Glide;\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.event.PlaybackPositionEvent;\n-import de.danoeh.antennapod.core.feed.FeedItem;\n-import de.danoeh.antennapod.core.feed.FeedMedia;\n-import de.danoeh.antennapod.core.feed.MediaType;\n-import de.danoeh.antennapod.core.preferences.UserPreferences;\n-import de.danoeh.antennapod.core.service.playback.PlaybackService;\n-import de.danoeh.antennapod.core.storage.DBReader;\n-import de.danoeh.antennapod.core.storage.DBWriter;\n-import de.danoeh.antennapod.core.util.Converter;\n-import de.danoeh.antennapod.core.util.FeedItemUtil;\n-import de.danoeh.antennapod.core.util.Flavors;\n-import de.danoeh.antennapod.core.util.IntentUtils;\n-import de.danoeh.antennapod.core.util.ShareUtils;\n-import de.danoeh.antennapod.core.util.StorageUtils;\n-import de.danoeh.antennapod.core.util.TimeSpeedConverter;\n-import de.danoeh.antennapod.core.util.gui.PictureInPictureUtil;\n-import de.danoeh.antennapod.core.util.playback.ExternalMedia;\n-import de.danoeh.antennapod.core.util.playback.MediaPlayerError;\n-import de.danoeh.antennapod.core.util.playback.Playable;\n-import de.danoeh.antennapod.core.util.playback.PlaybackController;\n-import de.danoeh.antennapod.core.util.playback.PlaybackServiceStarter;\n-import de.danoeh.antennapod.dialog.PlaybackControlsDialog;\n-import de.danoeh.antennapod.dialog.SkipPreferenceDialog;\n-import de.danoeh.antennapod.dialog.SleepTimerDialog;\n-import io.reactivex.Observable;\n-import io.reactivex.android.schedulers.AndroidSchedulers;\n-import io.reactivex.disposables.Disposable;\n-import io.reactivex.schedulers.Schedulers;\n-import org.apache.commons.lang3.StringUtils;\n-import org.greenrobot.eventbus.EventBus;\n-import org.greenrobot.eventbus.Subscribe;\n-import org.greenrobot.eventbus.ThreadMode;\n-\n-\n-/**\n- * Provides general features which are both needed for playing audio and video\n- * files.\n- */\n-public abstract class MediaplayerActivity extends CastEnabledActivity implements OnSeekBarChangeListener {\n-    private static final String TAG = \"MediaplayerActivity\";\n-    private static final String PREFS = \"MediaPlayerActivityPreferences\";\n-    private static final String PREF_SHOW_TIME_LEFT = \"showTimeLeft\";\n-    private static final int REQUEST_CODE_STORAGE_PLAY_VIDEO = 42;\n-    private static final int REQUEST_CODE_STORAGE_PLAY_AUDIO = 43;\n-\n-    PlaybackController controller;\n-\n-    private TextView txtvPosition;\n-    private TextView txtvLength;\n-    SeekBar sbPosition;\n-    private ImageButton butRev;\n-    private TextView txtvRev;\n-    private ImageButton butPlay;\n-    private ImageButton butFF;\n-    private TextView txtvFF;\n-    private ImageButton butSkip;\n-\n-    private boolean showTimeLeft = false;\n-\n-    private boolean isFavorite = false;\n-\n-    private Disposable disposable;\n-\n-    private PlaybackController newPlaybackController() {\n-        return new PlaybackController(this) {\n-\n-            @Override\n-            public void setupGUI() {\n-                MediaplayerActivity.this.setupGUI();\n-            }\n-\n-            @Override\n-            public void onPositionObserverUpdate() {\n-                MediaplayerActivity.this.onPositionObserverUpdate();\n-            }\n-\n-            @Override\n-            public void onBufferStart() {\n-                MediaplayerActivity.this.onBufferStart();\n-            }\n-\n-            @Override\n-            public void onBufferEnd() {\n-                MediaplayerActivity.this.onBufferEnd();\n-            }\n-\n-            @Override\n-            public void onBufferUpdate(float progress) {\n-                MediaplayerActivity.this.onBufferUpdate(progress);\n-            }\n-\n-            @Override\n-            public void handleError(int code) {\n-                MediaplayerActivity.this.handleError(code);\n-            }\n-\n-            @Override\n-            public void onReloadNotification(int code) {\n-                MediaplayerActivity.this.onReloadNotification(code);\n-            }\n-\n-            @Override\n-            public void onSleepTimerUpdate() {\n-                supportInvalidateOptionsMenu();\n-            }\n-\n-            @Override\n-            public ImageButton getPlayButton() {\n-                return butPlay;\n-            }\n-\n-            @Override\n-            public boolean loadMediaInfo() {\n-                return MediaplayerActivity.this.loadMediaInfo();\n-            }\n-\n-            @Override\n-            public void onAwaitingVideoSurface() {\n-                MediaplayerActivity.this.onAwaitingVideoSurface();\n-            }\n-\n-            @Override\n-            public void onShutdownNotification() {\n-                finish();\n-            }\n-\n-            @Override\n-            public void onPlaybackEnd() {\n-                finish();\n-            }\n-\n-            @Override\n-            public void onPlaybackSpeedChange() {\n-                MediaplayerActivity.this.onPlaybackSpeedChange();\n-            }\n-\n-            @Override\n-            protected void setScreenOn(boolean enable) {\n-                super.setScreenOn(enable);\n-                MediaplayerActivity.this.setScreenOn(enable);\n-            }\n-\n-            @Override\n-            public void onSetSpeedAbilityChanged() {\n-                MediaplayerActivity.this.onSetSpeedAbilityChanged();\n-            }\n-        };\n-    }\n-\n-    @Subscribe(threadMode = ThreadMode.MAIN)\n-    public void onEventMainThread(PlaybackPositionEvent event) {\n-        onPositionObserverUpdate();\n-    }\n-\n-    private void onSetSpeedAbilityChanged() {\n-        Log.d(TAG, \"onSetSpeedAbilityChanged()\");\n-        updatePlaybackSpeedButton();\n-    }\n-\n-    private void onPlaybackSpeedChange() {\n-        updatePlaybackSpeedButtonText();\n-    }\n-\n-    void chooseTheme() {\n-        setTheme(UserPreferences.getTheme());\n-    }\n-\n-    void setScreenOn(boolean enable) {\n-    }\n-\n-    @Override\n-    protected void onCreate(Bundle savedInstanceState) {\n-        chooseTheme();\n-        super.onCreate(savedInstanceState);\n-\n-        Log.d(TAG, \"onCreate()\");\n-        StorageUtils.checkStorageAvailability(this);\n-\n-        getWindow().setFormat(PixelFormat.TRANSPARENT);\n-        setupGUI();\n-    }\n-\n-    @Override\n-    protected void onPause() {\n-        if (!PictureInPictureUtil.isInPictureInPictureMode(this)) {\n-            if (controller != null) {\n-                controller.reinitServiceIfPaused();\n-                controller.pause();\n-            }\n-        }\n-        super.onPause();\n-    }\n-\n-    /**\n-     * Should be used to switch to another player activity if the mime type is\n-     * not the correct one for the current activity.\n-     */\n-    protected abstract void onReloadNotification(int notificationCode);\n-\n-    /**\n-     * Should be used to inform the user that the PlaybackService is currently\n-     * buffering.\n-     */\n-    protected void onBufferStart() {\n-\n-    }\n-\n-    /**\n-     * Should be used to hide the view that was showing the 'buffering'-message.\n-     */\n-    protected void onBufferEnd() {\n-\n-    }\n-\n-    private void onBufferUpdate(float progress) {\n-        if (sbPosition != null) {\n-            sbPosition.setSecondaryProgress((int) (progress * sbPosition.getMax()));\n-        }\n-    }\n-\n-    @Override\n-    protected void onStart() {\n-        super.onStart();\n-        controller = newPlaybackController();\n-        controller.init();\n-        loadMediaInfo();\n-        onPositionObserverUpdate();\n-        EventBus.getDefault().register(this);\n-    }\n-\n-    @Override\n-    protected void onStop() {\n-        Log.d(TAG, \"onStop()\");\n-        if (controller != null) {\n-            controller.release();\n-            controller = null; // prevent leak\n-        }\n-        if (disposable != null) {\n-            disposable.dispose();\n-        }\n-        EventBus.getDefault().unregister(this);\n-        super.onStop();\n-    }\n-\n-    @TargetApi(Build.VERSION_CODES.ICE_CREAM_SANDWICH)\n-    @Override\n-    public void onTrimMemory(int level) {\n-        super.onTrimMemory(level);\n-        Glide.get(this).trimMemory(level);\n-    }\n-\n-    @Override\n-    public void onLowMemory() {\n-        super.onLowMemory();\n-        Glide.get(this).clearMemory();\n-    }\n-\n-    @Override\n-    public boolean onCreateOptionsMenu(Menu menu) {\n-        super.onCreateOptionsMenu(menu);\n-        requestCastButton(menu);\n-        MenuInflater inflater = getMenuInflater();\n-        inflater.inflate(R.menu.mediaplayer, menu);\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean onPrepareOptionsMenu(Menu menu) {\n-        super.onPrepareOptionsMenu(menu);\n-        if (controller == null) {\n-            return false;\n-        }\n-        Playable media = controller.getMedia();\n-        boolean isFeedMedia = media != null && (media instanceof FeedMedia);\n-\n-        menu.findItem(R.id.open_feed_item).setVisible(isFeedMedia); // FeedMedia implies it belongs to a Feed\n-\n-        boolean hasWebsiteLink = ( getWebsiteLinkWithFallback(media) != null );\n-        menu.findItem(R.id.visit_website_item).setVisible(hasWebsiteLink);\n-\n-        boolean isItemAndHasLink = isFeedMedia &&\n-                ShareUtils.hasLinkToShare(((FeedMedia) media).getItem());\n-        menu.findItem(R.id.share_link_item).setVisible(isItemAndHasLink);\n-        menu.findItem(R.id.share_link_with_position_item).setVisible(isItemAndHasLink);\n-\n-        boolean isItemHasDownloadLink = isFeedMedia && ((FeedMedia) media).getDownload_url() != null;\n-        menu.findItem(R.id.share_download_url_item).setVisible(isItemHasDownloadLink);\n-        menu.findItem(R.id.share_download_url_with_position_item).setVisible(isItemHasDownloadLink);\n-        menu.findItem(R.id.share_file).setVisible(isFeedMedia && ((FeedMedia) media).fileExists());\n-\n-        menu.findItem(R.id.share_item).setVisible(hasWebsiteLink || isItemAndHasLink || isItemHasDownloadLink);\n-\n-        menu.findItem(R.id.add_to_favorites_item).setVisible(false);\n-        menu.findItem(R.id.remove_from_favorites_item).setVisible(false);\n-        if (isFeedMedia) {\n-            menu.findItem(R.id.add_to_favorites_item).setVisible(!isFavorite);\n-            menu.findItem(R.id.remove_from_favorites_item).setVisible(isFavorite);\n-        }\n-\n-        menu.findItem(R.id.set_sleeptimer_item).setVisible(!controller.sleepTimerActive());\n-        menu.findItem(R.id.disable_sleeptimer_item).setVisible(controller.sleepTimerActive());\n-        return true;\n-    }\n-\n-    @Override\n-    public boolean onOptionsItemSelected(MenuItem item) {\n-        if (controller == null) {\n-            return false;\n-        }\n-        Playable media = controller.getMedia();\n-        if (item.getItemId() == android.R.id.home) {\n-            Intent intent = new Intent(MediaplayerActivity.this,\n-                    MainActivity.class);\n-            intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP\n-                    | Intent.FLAG_ACTIVITY_NEW_TASK);\n-\n-            View cover = findViewById(R.id.imgvCover);\n-            if (cover != null) {\n-                ActivityOptionsCompat options = ActivityOptionsCompat\n-                        .makeSceneTransitionAnimation(MediaplayerActivity.this, cover, \"coverTransition\");\n-                startActivity(intent, options.toBundle());\n-            } else {\n-                startActivity(intent);\n-            }\n-            finish();\n-            return true;\n-        } else {\n-            if (media != null) {\n-                final @Nullable FeedItem feedItem = getFeedItem(media); // some options option requires FeedItem\n-                switch (item.getItemId()) {\n-                    case R.id.add_to_favorites_item:\n-                        if (feedItem != null) {\n-                            DBWriter.addFavoriteItem(feedItem);\n-                            isFavorite = true;\n-                            invalidateOptionsMenu();\n-                            Toast.makeText(this, R.string.added_to_favorites, Toast.LENGTH_SHORT)\n-                                 .show();\n-                        }\n-                        break;\n-                    case R.id.remove_from_favorites_item:\n-                        if (feedItem != null) {\n-                            DBWriter.removeFavoriteItem(feedItem);\n-                            isFavorite = false;\n-                            invalidateOptionsMenu();\n-                            Toast.makeText(this, R.string.removed_from_favorites, Toast.LENGTH_SHORT)\n-                                    .show();\n-                        }\n-                        break;\n-                    case R.id.disable_sleeptimer_item: // Fall-through\n-                    case R.id.set_sleeptimer_item:\n-                        new SleepTimerDialog().show(getSupportFragmentManager(), \"SleepTimerDialog\");\n-                        break;\n-                    case R.id.audio_controls:\n-                        boolean isPlayingVideo = controller.getMedia().getMediaType() == MediaType.VIDEO;\n-                        PlaybackControlsDialog dialog = PlaybackControlsDialog.newInstance(isPlayingVideo);\n-                        dialog.show(getSupportFragmentManager(), \"playback_controls\");\n-                        break;\n-                    case R.id.open_feed_item:\n-                        if (feedItem != null) {\n-                            Intent intent = MainActivity.getIntentToOpenFeed(this, feedItem.getFeedId());\n-                            startActivity(intent);\n-                        }\n-                        break;\n-                    case R.id.visit_website_item:\n-                        IntentUtils.openInBrowser(MediaplayerActivity.this, getWebsiteLinkWithFallback(media));\n-                        break;\n-                    case R.id.share_link_item:\n-                        if (feedItem != null) {\n-                            ShareUtils.shareFeedItemLink(this, feedItem);\n-                        }\n-                        break;\n-                    case R.id.share_download_url_item:\n-                        if (feedItem != null) {\n-                            ShareUtils.shareFeedItemDownloadLink(this, feedItem);\n-                        }\n-                        break;\n-                    case R.id.share_link_with_position_item:\n-                        if (feedItem != null) {\n-                            ShareUtils.shareFeedItemLink(this, feedItem, true);\n-                        }\n-                        break;\n-                    case R.id.share_download_url_with_position_item:\n-                        if (feedItem != null) {\n-                            ShareUtils.shareFeedItemDownloadLink(this, feedItem, true);\n-                        }\n-                        break;\n-                    case R.id.share_file:\n-                        if (media instanceof FeedMedia) {\n-                            ShareUtils.shareFeedItemFile(this, ((FeedMedia) media));\n-                        }\n-                        break;\n-                    default:\n-                        return false;\n-                }\n-                return true;\n-            } else {\n-                return false;\n-            }\n-        }\n-    }\n-\n-    private static String getWebsiteLinkWithFallback(Playable media) {\n-        if (media == null) {\n-            return null;\n-        } else if (StringUtils.isNotBlank(media.getWebsiteLink())) {\n-            return media.getWebsiteLink();\n-        } else if (media instanceof FeedMedia) {\n-            return FeedItemUtil.getLinkWithFallback(((FeedMedia)media).getItem());\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    protected void onResume() {\n-        super.onResume();\n-        Log.d(TAG, \"onResume()\");\n-        StorageUtils.checkStorageAvailability(this);\n-    }\n-\n-    /**\n-     * Called by 'handleStatus()' when the PlaybackService is waiting for\n-     * a video surface.\n-     */\n-    protected abstract void onAwaitingVideoSurface();\n-\n-    void onPositionObserverUpdate() {\n-        if (controller == null || txtvPosition == null || txtvLength == null) {\n-            return;\n-        }\n-\n-        TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());\n-        int currentPosition = converter.convert(controller.getPosition());\n-        int duration = converter.convert(controller.getDuration());\n-        int remainingTime = converter.convert(\n-                controller.getDuration() - controller.getPosition());\n-        Log.d(TAG, \"currentPosition \" + Converter.getDurationStringLong(currentPosition));\n-        if (currentPosition == PlaybackService.INVALID_TIME ||\n-                duration == PlaybackService.INVALID_TIME) {\n-            Log.w(TAG, \"Could not react to position observer update because of invalid time\");\n-            return;\n-        }\n-        txtvPosition.setText(Converter.getDurationStringLong(currentPosition));\n-        if (showTimeLeft) {\n-            txtvLength.setText(\"-\" + Converter.getDurationStringLong(remainingTime));\n-        } else {\n-            txtvLength.setText(Converter.getDurationStringLong(duration));\n-        }\n-        updateProgressbarPosition(currentPosition, duration);\n-    }\n-\n-    private void updateProgressbarPosition(int position, int duration) {\n-        Log.d(TAG, \"updateProgressbarPosition(\" + position + \", \" + duration + \")\");\n-        if(sbPosition == null) {\n-            return;\n-        }\n-        float progress = ((float) position) / duration;\n-        sbPosition.setProgress((int) (progress * sbPosition.getMax()));\n-    }\n-\n-    /**\n-     * Load information about the media that is going to be played or currently\n-     * being played. This method will be called when the activity is connected\n-     * to the PlaybackService to ensure that the activity has the right\n-     * FeedMedia object.\n-     */\n-    boolean loadMediaInfo() {\n-        Log.d(TAG, \"loadMediaInfo()\");\n-        if(controller == null || controller.getMedia() == null) {\n-            return false;\n-        }\n-        SharedPreferences prefs = getSharedPreferences(PREFS, MODE_PRIVATE);\n-        showTimeLeft = prefs.getBoolean(PREF_SHOW_TIME_LEFT, false);\n-        onPositionObserverUpdate();\n-        checkFavorite();\n-        updatePlaybackSpeedButton();\n-        return true;\n-    }\n-\n-    void updatePlaybackSpeedButton() {\n-        // Only meaningful on AudioplayerActivity, where it is overridden.\n-    }\n-\n-    void updatePlaybackSpeedButtonText() {\n-        // Only meaningful on AudioplayerActivity, where it is overridden.\n-    }\n-\n-    void setupGUI() {\n-        setContentView(getContentViewResourceId());\n-        sbPosition = findViewById(R.id.sbPosition);\n-        txtvPosition = findViewById(R.id.txtvPosition);\n-\n-        SharedPreferences prefs = getSharedPreferences(PREFS, MODE_PRIVATE);\n-        showTimeLeft = prefs.getBoolean(PREF_SHOW_TIME_LEFT, false);\n-        Log.d(\"timeleft\", showTimeLeft ? \"true\" : \"false\");\n-        txtvLength = findViewById(R.id.txtvLength);\n-        if (txtvLength != null) {\n-            txtvLength.setOnClickListener(v -> {\n-                showTimeLeft = !showTimeLeft;\n-                Playable media = controller.getMedia();\n-                if (media == null) {\n-                    return;\n-                }\n-\n-                TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());\n-                String length;\n-                if (showTimeLeft) {\n-                    int remainingTime = converter.convert(\n-                            media.getDuration() - media.getPosition());\n-\n-                    length = \"-\" + Converter.getDurationStringLong(remainingTime);\n-                } else {\n-                    int duration = converter.convert(media.getDuration());\n-                    length = Converter.getDurationStringLong(duration);\n-                }\n-                txtvLength.setText(length);\n-\n-                SharedPreferences.Editor editor = prefs.edit();\n-                editor.putBoolean(PREF_SHOW_TIME_LEFT, showTimeLeft);\n-                editor.apply();\n-                Log.d(\"timeleft on click\", showTimeLeft ? \"true\" : \"false\");\n-            });\n-        }\n-\n-        butRev = findViewById(R.id.butRev);\n-        txtvRev = findViewById(R.id.txtvRev);\n-        if (txtvRev != null) {\n-            txtvRev.setText(String.valueOf(UserPreferences.getRewindSecs()));\n-        }\n-        butPlay = findViewById(R.id.butPlay);\n-        butFF = findViewById(R.id.butFF);\n-        txtvFF = findViewById(R.id.txtvFF);\n-        if (txtvFF != null) {\n-            txtvFF.setText(String.valueOf(UserPreferences.getFastForwardSecs()));\n-        }\n-        butSkip = findViewById(R.id.butSkip);\n-\n-        // SEEKBAR SETUP\n-\n-        sbPosition.setOnSeekBarChangeListener(this);\n-\n-        // BUTTON SETUP\n-\n-        if (butRev != null) {\n-            butRev.setOnClickListener(v -> onRewind());\n-            butRev.setOnLongClickListener(v -> {\n-                SkipPreferenceDialog.showSkipPreference(MediaplayerActivity.this,\n-                        SkipPreferenceDialog.SkipDirection.SKIP_REWIND, txtvRev);\n-                return true;\n-            });\n-        }\n-\n-        butPlay.setOnClickListener(v -> onPlayPause());\n-\n-        if (butFF != null) {\n-            butFF.setOnClickListener(v -> onFastForward());\n-            butFF.setOnLongClickListener(v -> {\n-                SkipPreferenceDialog.showSkipPreference(MediaplayerActivity.this,\n-                        SkipPreferenceDialog.SkipDirection.SKIP_FORWARD, txtvFF);\n-                return false;\n-            });\n-        }\n-\n-        if (butSkip != null) {\n-            butSkip.setOnClickListener(v ->\n-                    IntentUtils.sendLocalBroadcast(MediaplayerActivity.this, PlaybackService.ACTION_SKIP_CURRENT_EPISODE));\n-        }\n-    }\n-\n-    void onRewind() {\n-        if (controller == null) {\n-            return;\n-        }\n-        int curr = controller.getPosition();\n-        controller.seekTo(curr - UserPreferences.getRewindSecs() * 1000);\n-    }\n-\n-    void onPlayPause() {\n-        if(controller == null) {\n-            return;\n-        }\n-        controller.init();\n-        controller.playPause();\n-    }\n-\n-    void onFastForward() {\n-        if (controller == null) {\n-            return;\n-        }\n-        int curr = controller.getPosition();\n-        controller.seekTo(curr + UserPreferences.getFastForwardSecs() * 1000);\n-    }\n-\n-    protected abstract int getContentViewResourceId();\n-\n-    private void handleError(int errorCode) {\n-        final AlertDialog.Builder errorDialog = new AlertDialog.Builder(this);\n-        errorDialog.setTitle(R.string.error_label);\n-        errorDialog.setMessage(MediaPlayerError.getErrorString(this, errorCode));\n-        errorDialog.setNeutralButton(\"OK\",\n-                (dialog, which) -> {\n-                    dialog.dismiss();\n-                    finish();\n-                }\n-        );\n-        errorDialog.create().show();\n-    }\n-\n-    private float prog;\n-\n-    @Override\n-    public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n-        if (controller == null || txtvLength == null) {\n-            return;\n-        }\n-        if (fromUser) {\n-            prog = progress / ((float) seekBar.getMax());\n-            int duration = controller.getDuration();\n-            TimeSpeedConverter converter = new TimeSpeedConverter(controller.getCurrentPlaybackSpeedMultiplier());\n-            int position = converter.convert((int) (prog * duration));\n-            txtvPosition.setText(Converter.getDurationStringLong(position));\n-\n-            if (showTimeLeft) {\n-                int timeLeft = converter.convert(duration - (int) (prog * duration));\n-                txtvLength.setText(\"-\" + Converter.getDurationStringLong(timeLeft));\n-            }\n-        }\n-    }\n-\n-    @Override\n-    public void onStartTrackingTouch(SeekBar seekBar) {\n-\n-    }\n-\n-    @Override\n-    public void onStopTrackingTouch(SeekBar seekBar) {\n-        if (controller != null) {\n-            controller.seekTo((int) (prog * controller.getDuration()));\n-        }\n-    }\n-\n-    private void checkFavorite() {\n-        FeedItem feedItem = getFeedItem(controller.getMedia());\n-        if (feedItem == null) {\n-            return;\n-        }\n-        if (disposable != null) {\n-            disposable.dispose();\n-        }\n-        disposable = Observable.fromCallable(() -> DBReader.getFeedItem(feedItem.getId()))\n-            .subscribeOn(Schedulers.io())\n-            .observeOn(AndroidSchedulers.mainThread())\n-            .subscribe(\n-                item -> {\n-                    boolean isFav = item.isTagged(FeedItem.TAG_FAVORITE);\n-                    if (isFavorite != isFav) {\n-                        isFavorite = isFav;\n-                        invalidateOptionsMenu();\n-                    }\n-                }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-    }\n-\n-    void playExternalMedia(Intent intent, MediaType type) {\n-        if (intent == null || intent.getData() == null) {\n-            return;\n-        }\n-        if (Build.VERSION.SDK_INT >= 23\n-                && ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)\n-                != PackageManager.PERMISSION_GRANTED) {\n-\n-            if (ActivityCompat.shouldShowRequestPermissionRationale(this, Manifest.permission.READ_EXTERNAL_STORAGE)) {\n-                Toast.makeText(this, R.string.needs_storage_permission, Toast.LENGTH_LONG).show();\n-            }\n-\n-            int code = REQUEST_CODE_STORAGE_PLAY_AUDIO;\n-            if (type == MediaType.VIDEO) {\n-                code = REQUEST_CODE_STORAGE_PLAY_VIDEO;\n-            }\n-            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.READ_EXTERNAL_STORAGE}, code);\n-            return;\n-        }\n-\n-        Log.d(TAG, \"Received VIEW intent: \" + intent.getData().getPath());\n-        ExternalMedia media = new ExternalMedia(intent.getData().getPath(), type);\n-\n-        new PlaybackServiceStarter(this, media)\n-                .callEvenIfRunning(true)\n-                .startWhenPrepared(true)\n-                .shouldStream(false)\n-                .prepareImmediately(true)\n-                .start();\n-    }\n-\n-    @Override\n-    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, int[] grantResults) {\n-        if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n-            if (requestCode == REQUEST_CODE_STORAGE_PLAY_AUDIO) {\n-                playExternalMedia(getIntent(), MediaType.AUDIO);\n-            } else if (requestCode == REQUEST_CODE_STORAGE_PLAY_VIDEO) {\n-                playExternalMedia(getIntent(), MediaType.VIDEO);\n-            }\n-        } else {\n-            Toast.makeText(this, R.string.needs_storage_permission, Toast.LENGTH_LONG).show();\n-        }\n-    }\n-\n-    @Nullable\n-    private static FeedItem getFeedItem(@Nullable Playable playable) {\n-        if (playable instanceof FeedMedia) {\n-            return ((FeedMedia) playable).getItem();\n-        } else {\n-            return null;\n-        }\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "dc230a8f31c5f2199005a75b79587405d57ce869", "committedDate": "2020-05-01 19:15:14 +0430", "message": "Use locale's digits in more places"}, {"oid": "20bcb8a781fc9c7289b1437a5c11dac1fd673128", "committedDate": "2020-05-03 17:18:10 +0200", "message": "Replaced some Toasts with Snackbars"}, {"oid": "020d5859725b5322f85fbf3db6d4332c467b08ef", "committedDate": "2020-06-23 17:15:41 -0500", "message": "fixes #1215 replacing share menu by dialog"}, {"oid": "1b57b00fb32940c1de0baeffc91f2ca92bd90822", "committedDate": "2020-06-26 10:58:37 -0500", "message": "updating share episode dialog"}, {"oid": "b36078b8f198d166c31863558198510cf574e656", "committedDate": "2020-06-26 16:38:08 -0500", "message": "adding shared preferences to ShareEpisodeDialog"}, {"oid": "61df26aacdd053fb849fdfea4f8a00a035adf90b", "committedDate": "2020-06-28 16:49:49 -0500", "message": "updating ShareDialog according to code review"}, {"oid": "df19ca27410f35e65b51a7648ff64212499a2aca", "committedDate": "2020-07-10 00:57:18 -0500", "message": "updates for share dialog and implementing new instance pattern"}, {"oid": "a17f24912f262c79d1822e3df389ab08d4cb0273", "committedDate": "2020-07-11 20:06:03 -0400", "message": "Remove unnecessary conditions"}, {"oid": "17b9579dfea12b9b6289982e3fd4251ecf12b86d", "committedDate": "2020-07-16 17:01:53 +0200", "message": "New playback speed dialog"}, {"oid": "63306ee95c7c4b6d0af232f7fba0e456bebc52df", "committedDate": "2020-12-14 23:06:06 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "d567c2917a9fda6438f3d64cd894ac30b21a9481", "committedDate": "2021-01-04 13:15:34 +0530", "message": "Removed old methods referring to external media."}, {"oid": "737fe13b45009c59f3879351f7f474903f29f859", "committedDate": "2021-01-04 13:15:35 +0530", "message": "Removed unused imports"}, {"oid": "daa31b32c1133ae6b45ff6c4e847673612bc58d7", "committedDate": "2021-01-06 08:52:48 +0530", "message": "Removed unused variables"}, {"oid": "2a8abb02f616572722240f2f9fd91c871d54e854", "committedDate": "2021-01-21 18:37:04 +0100", "message": "Add scrubbing time overlay (#4786)"}, {"oid": "f57cf0c31788962300413a97eefdf746476e2177", "committedDate": "2021-02-14 12:18:27 +0100", "message": "New preference to show the remaining time in the 'queue' and podcast episode view (#4880)"}, {"oid": "339aa936bf53e96236dba12b0d356f196e04813c", "committedDate": "2021-02-15 21:56:06 +0100", "message": "Removed return parameter of loadMediaInfo"}, {"oid": "57587c928e06af39dc3391537b526d515f848410", "committedDate": "2021-02-15 22:02:55 +0100", "message": "Removed method that does the same as loadMediaInfo anyway"}, {"oid": "998535515bae8ec5bcd2bd95bc0cf4f34416dff7", "committedDate": "2021-03-28 22:32:40 +0200", "message": "Make AntennaPod pass the medium SpotBugs findings"}, {"oid": "8768144c9107945cfaf56ed4db771c3def8d00de", "committedDate": "2021-04-14 22:35:01 +0200", "message": "Don't handle play image resource in PlaybackController"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "362e66cf0857cf7432303c5e47e806d808224d3d", "committedDate": "2021-05-14 22:07:35 +0200", "message": "Removed code from MediaPlayerActivity that only affects the audio player"}, {"oid": "c3d7209f09f3b6c3974ada7836fe08f9d131e09b", "committedDate": "2021-05-14 22:07:35 +0200", "message": "Moved all code from MediaPlayerActivity to VideoPlayerActivity"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMDg4Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400010887", "body": "I think you can directly add the format parameters to getString. Then Android Studio can do better analysis.", "bodyText": "I think you can directly add the format parameters to getString. Then Android Studio can do better analysis.", "bodyHTML": "<p dir=\"auto\">I think you can directly add the format parameters to getString. Then Android Studio can do better analysis.</p>", "author": "ByteHamster", "createdAt": "2020-03-30T08:25:59Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1071,32 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipIfMetEnding() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) { return; }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+            Context context = getApplicationContext();\n+            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),", "originalCommit": "b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDYwMDc4OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400600789", "bodyText": "fixed", "author": "tonytamsf", "createdAt": "2020-03-31T02:09:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMDg4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..ded7f65ba 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1084,7 +1084,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n             Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n-            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n                     skipEnd,\n                     context.getString(R.string.time_seconds));\n             Toast toast = Toast.makeText(context, skipMesg,\n", "next_change": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ded7f65ba..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,7 +1081,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n         if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n                     skipEnd,\n", "next_change": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex d04538aab..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,19 +1076,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n+                    skipEnd);\n             Toast toast = Toast.makeText(context, skipMesg,\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n         }\n     }\n \n", "next_change": {"commit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..2e65078ef 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1089,7 +1090,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n     }\n \n", "next_change": {"commit": "1cd505504daacc88e3600a50ca2bab239e422a67", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2e65078ef..47c1caa38 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1088,6 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n+            playable.setAutoSkippedEnding(true);\n             mediaPlayer.skip();\n         } else {\n            Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 47c1caa38..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ded7f65ba..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipIfMetEnding: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n         }\n     }\n \n", "next_change": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex d04538aab..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,19 +1076,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n+                    skipEnd);\n             Toast toast = Toast.makeText(context, skipMesg,\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n         }\n     }\n \n", "next_change": {"commit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..2e65078ef 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1089,7 +1090,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n     }\n \n", "next_change": {"commit": "1cd505504daacc88e3600a50ca2bab239e422a67", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2e65078ef..47c1caa38 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1088,6 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n+            playable.setAutoSkippedEnding(true);\n             mediaPlayer.skip();\n         } else {\n            Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 47c1caa38..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1081,21 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipIfMetEnding: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMTU1Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400011556", "body": "Just wondering: Does this honor the \"Follow queue\" setting?", "bodyText": "Just wondering: Does this honor the \"Follow queue\" setting?", "bodyHTML": "<p dir=\"auto\">Just wondering: Does this honor the \"Follow queue\" setting?</p>", "author": "ByteHamster", "createdAt": "2020-03-30T08:27:06Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1071,32 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipIfMetEnding() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) { return; }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+            Context context = getApplicationContext();\n+            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),\n+                    skipEnd,\n+                    context.getString(R.string.time_seconds));\n+            Toast toast = Toast.makeText(context, skipMesg,\n+                    Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            mediaPlayer.skip();", "originalCommit": "b661f29e75c2b2b127ae4f0d7502ff66941a08d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU5ODIzNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400598235", "bodyText": "I tested it and this behaves the same as hitting the 'Skip' button\n\nThe location is saved\nThe video is skipped and the next one is started.", "author": "tonytamsf", "createdAt": "2020-03-31T01:59:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMTU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc1ODExOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400758118", "bodyText": "The video is skipped and the next one is started.\n\nWhat if you uncheck the option Follow queue in Settings \u00bb Playback? It should then not start the next file.", "author": "ByteHamster", "createdAt": "2020-03-31T09:10:28Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMTU1Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxODM2NQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402018365", "bodyText": "fixed now and tested.", "author": "tonytamsf", "createdAt": "2020-04-02T02:33:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMTU1Ng=="}], "type": "inlineReview", "revised_code": {"commit": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..ded7f65ba 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1084,7 +1084,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n             Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n-            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n                     skipEnd,\n                     context.getString(R.string.time_seconds));\n             Toast toast = Toast.makeText(context, skipMesg,\n", "next_change": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ded7f65ba..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,7 +1081,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n         if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n                     skipEnd,\n", "next_change": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex d04538aab..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,19 +1076,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n+                    skipEnd);\n             Toast toast = Toast.makeText(context, skipMesg,\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n         }\n     }\n \n", "next_change": {"commit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..2e65078ef 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1089,7 +1090,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n     }\n \n", "next_change": {"commit": "1cd505504daacc88e3600a50ca2bab239e422a67", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2e65078ef..47c1caa38 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1088,6 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n+            playable.setAutoSkippedEnding(true);\n             mediaPlayer.skip();\n         } else {\n            Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 47c1caa38..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ded7f65ba..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipIfMetEnding: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n         }\n     }\n \n", "next_change": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex d04538aab..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,19 +1076,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n+                    skipEnd);\n             Toast toast = Toast.makeText(context, skipMesg,\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n         }\n     }\n \n", "next_change": {"commit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..2e65078ef 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1089,7 +1090,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n     }\n \n", "next_change": {"commit": "1cd505504daacc88e3600a50ca2bab239e422a67", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2e65078ef..47c1caa38 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1088,6 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n+            playable.setAutoSkippedEnding(true);\n             mediaPlayer.skip();\n         } else {\n            Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 47c1caa38..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 164df7989..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1081,21 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipIfMetEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = String.format(context.getString(R.string.pref_feed_skip_ending_toast),\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipIfMetEnding: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "7894cb874a18cda8ed028e7f6c017c7e1b06ebef", "url": "https://github.com/AntennaPod/AntennaPod/commit/7894cb874a18cda8ed028e7f6c017c7e1b06ebef", "message": "revert", "committedDate": "2020-03-31T02:12:11Z", "type": "commit"}, {"oid": "bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "url": "https://github.com/AntennaPod/AntennaPod/commit/bc78e796a49ee399d7a0bd82c6a5f1328435bce3", "message": "cleanup", "committedDate": "2020-03-31T02:19:53Z", "type": "commit"}, {"oid": "aa0eed8995355143ab3d859374eb028d8e4a4d0f", "url": "https://github.com/AntennaPod/AntennaPod/commit/aa0eed8995355143ab3d859374eb028d8e4a4d0f", "message": "checkstyle", "committedDate": "2020-03-31T02:36:13Z", "type": "commit"}, {"oid": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "url": "https://github.com/AntennaPod/AntennaPod/commit/8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "message": "no need for onCancelled()", "committedDate": "2020-03-31T04:34:04Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MDc0Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400760743", "body": "Please use the `androidx` alert dialog. It has the same interface but it might have better compatibility with old Android versions.", "bodyText": "Please use the androidx alert dialog. It has the same interface but it might have better compatibility with old Android versions.", "bodyHTML": "<p dir=\"auto\">Please use the <code>androidx</code> alert dialog. It has the same interface but it might have better compatibility with old Android versions.</p>", "author": "ByteHamster", "createdAt": "2020-03-31T09:14:46Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.app.AlertDialog;", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "e93df087899e0fa9e356ba1bd8ed20abb042bfb6", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 6e1eadf59..48fdf59ae 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -1,10 +1,11 @@\n package de.danoeh.antennapod.dialog;\n \n-import android.app.AlertDialog;\n import android.content.Context;\n import android.view.View;\n-import android.widget.CheckBox;\n import android.widget.EditText;\n+\n+import androidx.appcompat.app.AlertDialog;\n+\n import de.danoeh.antennapod.R;\n \n /**\n", "next_change": {"commit": "8057871422cbaf1a7db7b446f0baa148e0dd735a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 48fdf59ae..379539a31 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -14,7 +14,7 @@ import de.danoeh.antennapod.R;\n public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n \n     public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n-                                int skipEndInitialValue) {\n+                                    int skipEndInitialValue) {\n         super(context);\n         setTitle(R.string.pref_feed_skip);\n         View rootView = View.inflate(context, R.layout.feed_pref_skip_dialog, null);\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 6e1eadf59..0e5a064eb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -1,10 +1,9 @@\n package de.danoeh.antennapod.dialog;\n \n-import android.app.AlertDialog;\n import android.content.Context;\n import android.view.View;\n-import android.widget.CheckBox;\n import android.widget.EditText;\n+import androidx.appcompat.app.AlertDialog;\n import de.danoeh.antennapod.R;\n \n /**\n", "next_change": {"commit": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\nindex 0e5a064eb..77c9ff67e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedPreferenceSkipDialog.java\n", "chunk": "@@ -3,13 +3,13 @@ package de.danoeh.antennapod.dialog;\n import android.content.Context;\n import android.view.View;\n import android.widget.EditText;\n-import androidx.appcompat.app.AlertDialog;\n+import com.google.android.material.dialog.MaterialAlertDialogBuilder;\n import de.danoeh.antennapod.R;\n \n /**\n  * Displays a dialog with a username and password text field and an optional checkbox to save username and preferences.\n  */\n-public abstract class FeedPreferenceSkipDialog extends AlertDialog.Builder {\n+public abstract class FeedPreferenceSkipDialog extends MaterialAlertDialogBuilder {\n \n     public FeedPreferenceSkipDialog(Context context, int skipIntroInitialValue,\n                                     int skipEndInitialValue) {\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MTc3NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400761774", "body": "Please add an empty line between the methods. Not sure why checkstyle did not complain about that. The checkstyle config file needs some more changes, I think.", "bodyText": "Please add an empty line between the methods. Not sure why checkstyle did not complain about that. The checkstyle config file needs some more changes, I think.", "bodyHTML": "<p dir=\"auto\">Please add an empty line between the methods. Not sure why checkstyle did not complain about that. The checkstyle config file needs some more changes, I think.</p>", "author": "ByteHamster", "createdAt": "2020-03-31T09:16:27Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java", "diffHunk": "@@ -34,12 +34,17 @@\n     private String username;\n     private String password;\n     private float feedPlaybackSpeed;\n+    private int feedSkipIntro;\n+    private int feedSkipEnding;\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), SPEED_USE_GLOBAL);\n     }\n \n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed) {\n+        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), feedPlaybackSpeed, 0, 0);\n+    }\n+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding) {", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "1bcca4567ce64b52c52a2475d839830258db8f8b", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 5c982c8df..4449acf18 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -44,6 +44,7 @@ public class FeedPreferences {\n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed) {\n         this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), feedPlaybackSpeed, 0, 0);\n     }\n+\n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 5c982c8df..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -44,6 +44,7 @@ public class FeedPreferences {\n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed) {\n         this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), feedPlaybackSpeed, 0, 0);\n     }\n+\n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n", "next_change": {"commit": "5a10728aa97e41f857bf219d30866ac192712a7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 2a2568f28..5ffee0d62 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -38,11 +38,8 @@ public class FeedPreferences {\n     private int feedSkipEnding;\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n-        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), SPEED_USE_GLOBAL);\n-    }\n-\n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed) {\n-        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting, username, password, new FeedFilter(), feedPlaybackSpeed, 0, 0);\n+        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting,\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0);\n     }\n \n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding) {\n", "next_change": {"commit": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 5ffee0d62..dbbd2b1a4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -36,6 +37,7 @@ public class FeedPreferences {\n     private float feedPlaybackSpeed;\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n+    private String[] tags = {TAG_ROOT, \"Test 1\", \"Test 2\"};\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting,\n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex dbbd2b1a4..0486ccd9b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -37,14 +42,17 @@ public class FeedPreferences {\n     private float feedPlaybackSpeed;\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n-    private String[] tags = {TAG_ROOT, \"Test 1\", \"Test 2\"};\n+    private final Set<String> tags = new HashSet<>();\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting,\n-                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0);\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, new HashSet<>());\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding) {\n+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action,\n+                            VolumeAdaptionSetting volumeAdaptionSetting, String username, String password,\n+                            @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding,\n+                            Set<String> tags) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n", "next_change": {"commit": "5a8bfc0ea483d0af4db8f266969f1e52c2cd529d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 0486ccd9b..bd4690684 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -44,19 +44,19 @@ public class FeedPreferences {\n     private int feedSkipEnding;\n     private final Set<String> tags = new HashSet<>();\n \n-    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction auto_delete_action, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n-        this(feedID, autoDownload, true, auto_delete_action, volumeAdaptionSetting,\n+    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n+        this(feedID, autoDownload, true, autoDeleteAction, volumeAdaptionSetting,\n                 username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, new HashSet<>());\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction auto_delete_action,\n+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction autoDeleteAction,\n                             VolumeAdaptionSetting volumeAdaptionSetting, String username, String password,\n                             @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding,\n                             Set<String> tags) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n-        this.auto_delete_action = auto_delete_action;\n+        this.autoDeleteAction = autoDeleteAction;\n         this.volumeAdaptionSetting = volumeAdaptionSetting;\n         this.username = username;\n         this.password = password;\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex bd4690684..21474db89 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -9,50 +9,43 @@ import de.danoeh.antennapod.core.preferences.UserPreferences;\n import de.danoeh.antennapod.core.storage.DBWriter;\n import de.danoeh.antennapod.core.storage.PodDBAdapter;\n \n-import java.util.Arrays;\n-import java.util.HashSet;\n-import java.util.Set;\n-\n /**\n  * Contains preferences for a single feed.\n  */\n public class FeedPreferences {\n \n     public static final float SPEED_USE_GLOBAL = -1;\n-    public static final String TAG_ROOT = \"#root\";\n-    public static final String TAG_SEPARATOR = \",\";\n-\n-    @NonNull\n-    private FeedFilter filter;\n-    private long feedID;\n-    private boolean autoDownload;\n-    private boolean keepUpdated;\n \n     public enum AutoDeleteAction {\n         GLOBAL,\n         YES,\n         NO\n     }\n-    private AutoDeleteAction autoDeleteAction;\n \n+    @NonNull\n+    private FeedFilter filter;\n+    private long feedID;\n+    private boolean autoDownload;\n+    private boolean keepUpdated;\n+    private AutoDeleteAction autoDeleteAction;\n     private VolumeAdaptionSetting volumeAdaptionSetting;\n-\n     private String username;\n     private String password;\n     private float feedPlaybackSpeed;\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n-    private final Set<String> tags = new HashSet<>();\n+    private boolean showEpisodeNotification;\n \n-    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n+    public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction,\n+                           VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, autoDeleteAction, volumeAdaptionSetting,\n-                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, new HashSet<>());\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false);\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated, AutoDeleteAction autoDeleteAction,\n-                            VolumeAdaptionSetting volumeAdaptionSetting, String username, String password,\n-                            @NonNull FeedFilter filter, float feedPlaybackSpeed, int feedSkipIntro, int feedSkipEnding,\n-                            Set<String> tags) {\n+    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n+                            AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n+                            String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n+                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 21474db89..794c71cf3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -35,17 +39,19 @@ public class FeedPreferences {\n     private int feedSkipIntro;\n     private int feedSkipEnding;\n     private boolean showEpisodeNotification;\n+    private final Set<String> tags = new HashSet<>();\n \n     public FeedPreferences(long feedID, boolean autoDownload, AutoDeleteAction autoDeleteAction,\n                            VolumeAdaptionSetting volumeAdaptionSetting, String username, String password) {\n         this(feedID, autoDownload, true, autoDeleteAction, volumeAdaptionSetting,\n-                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false);\n+                username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false, new HashSet<>());\n     }\n \n     private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n                             AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n                             String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n-                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification) {\n+                            int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification,\n+                            Set<String> tags) {\n         this.feedID = feedID;\n         this.autoDownload = autoDownload;\n         this.keepUpdated = keepUpdated;\n", "next_change": {"commit": "0081d232d0853166db7e88b5b4d192d0bf13f582", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 794c71cf3..8288280bd 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -47,7 +43,7 @@ public class FeedPreferences {\n                 username, password, new FeedFilter(), SPEED_USE_GLOBAL, 0, 0, false, new HashSet<>());\n     }\n \n-    private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n+    public FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n                             AutoDeleteAction autoDeleteAction, VolumeAdaptionSetting volumeAdaptionSetting,\n                             String username, String password, @NonNull FeedFilter filter, float feedPlaybackSpeed,\n                             int feedSkipIntro, int feedSkipEnding, boolean showEpisodeNotification,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex bd4690684..21474db89 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -64,7 +57,7 @@ public class FeedPreferences {\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n-        this.tags.addAll(tags);\n+        this.showEpisodeNotification = showEpisodeNotification;\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 21474db89..794c71cf3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -58,6 +64,7 @@ public class FeedPreferences {\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n         this.showEpisodeNotification = showEpisodeNotification;\n+        this.tags.addAll(tags);\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "0081d232d0853166db7e88b5b4d192d0bf13f582", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 794c71cf3..8288280bd 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -67,56 +63,6 @@ public class FeedPreferences {\n         this.tags.addAll(tags);\n     }\n \n-    public static FeedPreferences fromCursor(Cursor cursor) {\n-        int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);\n-        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);\n-        int indexAutoRefresh = cursor.getColumnIndex(PodDBAdapter.KEY_KEEP_UPDATED);\n-        int indexAutoDeleteAction = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DELETE_ACTION);\n-        int indexVolumeAdaption = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_VOLUME_ADAPTION);\n-        int indexUsername = cursor.getColumnIndex(PodDBAdapter.KEY_USERNAME);\n-        int indexPassword = cursor.getColumnIndex(PodDBAdapter.KEY_PASSWORD);\n-        int indexIncludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_INCLUDE_FILTER);\n-        int indexExcludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_EXCLUDE_FILTER);\n-        int indexFeedPlaybackSpeed = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_PLAYBACK_SPEED);\n-        int indexAutoSkipIntro = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_INTRO);\n-        int indexAutoSkipEnding = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_ENDING);\n-        int indexEpisodeNotification = cursor.getColumnIndex(PodDBAdapter.KEY_EPISODE_NOTIFICATION);\n-        int indexTags = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_TAGS);\n-\n-        long feedId = cursor.getLong(indexId);\n-        boolean autoDownload = cursor.getInt(indexAutoDownload) > 0;\n-        boolean autoRefresh = cursor.getInt(indexAutoRefresh) > 0;\n-        int autoDeleteActionIndex = cursor.getInt(indexAutoDeleteAction);\n-        AutoDeleteAction autoDeleteAction = AutoDeleteAction.values()[autoDeleteActionIndex];\n-        int volumeAdaptionValue = cursor.getInt(indexVolumeAdaption);\n-        VolumeAdaptionSetting volumeAdaptionSetting = VolumeAdaptionSetting.fromInteger(volumeAdaptionValue);\n-        String username = cursor.getString(indexUsername);\n-        String password = cursor.getString(indexPassword);\n-        String includeFilter = cursor.getString(indexIncludeFilter);\n-        String excludeFilter = cursor.getString(indexExcludeFilter);\n-        float feedPlaybackSpeed = cursor.getFloat(indexFeedPlaybackSpeed);\n-        int feedAutoSkipIntro = cursor.getInt(indexAutoSkipIntro);\n-        int feedAutoSkipEnding = cursor.getInt(indexAutoSkipEnding);\n-        boolean showNotification = cursor.getInt(indexEpisodeNotification) > 0;\n-        String tagsString = cursor.getString(indexTags);\n-        if (TextUtils.isEmpty(tagsString)) {\n-            tagsString = TAG_ROOT;\n-        }\n-        return new FeedPreferences(feedId,\n-                autoDownload,\n-                autoRefresh,\n-                autoDeleteAction,\n-                volumeAdaptionSetting,\n-                username,\n-                password,\n-                new FeedFilter(includeFilter, excludeFilter),\n-                feedPlaybackSpeed,\n-                feedAutoSkipIntro,\n-                feedAutoSkipEnding,\n-                showNotification,\n-                new HashSet<>(Arrays.asList(tagsString.split(TAG_SEPARATOR))));\n-    }\n-\n     /**\n      * @return the filter for this feed\n      */\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "5a10728aa97e41f857bf219d30866ac192712a7d", "committedDate": "2020-10-01 12:59:03 +0200", "message": "Delete private constructor in FeedPreferences which is only used by other consturctor (#4477)"}, {"oid": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "committedDate": "2021-01-02 20:45:05 +0100", "message": "Build tags based on feed properties"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "5a8bfc0ea483d0af4db8f266969f1e52c2cd529d", "committedDate": "2021-01-02 21:25:15 +0100", "message": "Fix checkstyle"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "0081d232d0853166db7e88b5b4d192d0bf13f582", "committedDate": "2021-04-22 22:04:20 +0200", "message": "Moved cursor related code out of model (#5126)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjYxOA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400762618", "body": "Doesn't this mean that the intro is not skipped if you play it for the second time?", "bodyText": "Doesn't this mean that the intro is not skipped if you play it for the second time?", "bodyHTML": "<p dir=\"auto\">Doesn't this mean that the intro is not skipped if you play it for the second time?</p>", "author": "ByteHamster", "createdAt": "2020-03-31T09:17:39Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -505,6 +507,40 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        int skipIntro = 0;\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        if (playable.getLastPlayedTime() > 0) {", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwOTM4OA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r401109388", "bodyText": "Right, I intentionally don't want to skip the intro if someone\n\nPlays an, and rewinds back.\n--\nIf they replay, do you want me to fix that as well?", "author": "tonytamsf", "createdAt": "2020-03-31T18:02:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjYxOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxODc2OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402018769", "bodyText": "I have fixed.\n\nIf you play, autoskip and rewind, it works as you expected.\nIf you play, autoskip, let it end. and come back, it will work as you expect.  The 2nd time, it will skip again", "author": "tonytamsf", "createdAt": "2020-04-02T02:35:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MjYxOA=="}], "type": "inlineReview", "revised_code": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -507,38 +506,32 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n+    private void skipIntroPref(Playable playable) {\n         int skipIntro = 0;\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable.getLastPlayedTime() > 0) {\n-            return;\n-        }\n-\n         if (playable instanceof FeedMedia) {\n             FeedMedia feedMedia = (FeedMedia) playable;\n             FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n             skipIntro = preferences.getFeedSkipIntro();\n         }\n \n-        String skipIntroMesg = \"\";\n         Context context = getApplicationContext();\n-        if (skipIntro > 0) {\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n+                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n-                skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n                         skipIntro,\n                         context.getString(R.string.time_seconds));\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -508,37 +512,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     }\n \n     private void skipIntro(Playable playable) {\n-        int skipIntro = 0;\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable.getLastPlayedTime() > 0) {\n-            return;\n-        }\n-\n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n-        String skipIntroMesg = \"\";\n         Context context = getApplicationContext();\n-        if (skipIntro > 0) {\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n-                skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": {"commit": "018a91d66ce42e31e493117467dfa8be76301f26", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..f25b0a5a8 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -541,9 +542,11 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -512,41 +513,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipIntro = preferences.getFeedSkipIntro();\n-\n-        Context context = getApplicationContext();\n-        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n-            int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n-                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n-                mediaPlayer.seekTo(skipIntro * 1000);\n-                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro);\n-                Toast toast = Toast.makeText(context, skipIntroMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-            }\n-        }\n-    }\n-\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -513,15 +517,41 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+            }\n+        }\n+    }\n+\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -548,10 +599,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -599,12 +592,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -592,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +602,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "ae3971a58ff00755148b036794b7e5dc1c57017a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 805956094..a6d90dc7d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -611,8 +545,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n-        intentAlwaysAllow.setAction(EXTRA_ALLOW_STREAM_ALWAYS);\n-        intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n+        intentAlwaysAllow.setAction(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS);\n+        intentAlwaysAllow.putExtra(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,12 +604,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -560,25 +613,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                .addAction(R.drawable.ic_notification_stream,\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -554,15 +529,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n-                NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2MzkyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400763921", "body": "I would move this up into the two `if`s above. Then you can skip the check (`skipIntroMesg != \"\"` if and only if the code above is executed).", "bodyText": "I would move this up into the two ifs above. Then you can skip the check (skipIntroMesg != \"\" if and only if the code above is executed).", "bodyHTML": "<p dir=\"auto\">I would move this up into the two <code>if</code>s above. Then you can skip the check (<code>skipIntroMesg != \"\"</code> if and only if the code above is executed).</p>", "author": "ByteHamster", "createdAt": "2020-03-31T09:19:36Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -505,6 +507,40 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        int skipIntro = 0;\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        if (playable.getLastPlayedTime() > 0) {\n+            return;\n+        }\n+\n+        if (playable instanceof FeedMedia) {\n+            FeedMedia feedMedia = (FeedMedia) playable;\n+            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+            skipIntro = preferences.getFeedSkipIntro();\n+        }\n+\n+        String skipIntroMesg = \"\";\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration) {\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro,\n+                        context.getString(R.string.time_seconds));\n+            }\n+        }\n+        if (skipIntroMesg != \"\") {", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "28727d2295afff50f187ef70affa4e019905c64b", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..b4681b1fe 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -532,13 +532,11 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n                         skipIntro,\n                         context.getString(R.string.time_seconds));\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -508,37 +512,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     }\n \n     private void skipIntro(Playable playable) {\n-        int skipIntro = 0;\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable.getLastPlayedTime() > 0) {\n-            return;\n-        }\n-\n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n-        String skipIntroMesg = \"\";\n         Context context = getApplicationContext();\n-        if (skipIntro > 0) {\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n-                skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n             }\n         }\n-        if (skipIntroMesg != \"\") {\n-            Toast toast = Toast.makeText(context, skipIntroMesg,\n-                    Toast.LENGTH_LONG);\n-            toast.show();\n-        }\n     }\n \n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n", "next_change": {"commit": "018a91d66ce42e31e493117467dfa8be76301f26", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..f25b0a5a8 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -541,9 +542,11 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -512,41 +513,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipIntro = preferences.getFeedSkipIntro();\n-\n-        Context context = getApplicationContext();\n-        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n-            int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n-                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n-                mediaPlayer.seekTo(skipIntro * 1000);\n-                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro);\n-                Toast toast = Toast.makeText(context, skipIntroMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-            }\n-        }\n-    }\n-\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -513,15 +517,41 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+            }\n+        }\n+    }\n+\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -548,10 +599,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -599,12 +592,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -592,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +602,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "ae3971a58ff00755148b036794b7e5dc1c57017a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 805956094..a6d90dc7d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -611,8 +545,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n-        intentAlwaysAllow.setAction(EXTRA_ALLOW_STREAM_ALWAYS);\n-        intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n+        intentAlwaysAllow.setAction(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS);\n+        intentAlwaysAllow.putExtra(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,12 +604,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -560,25 +613,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                .addAction(R.drawable.ic_notification_stream,\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f25b0a5a8..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -554,15 +529,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n-                NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -529,12 +559,15 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAlwaysAllow = PendingIntent.getService(this, 0, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAlwaysAllow = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n-        NotificationCompat.Builder builder = new NotificationCompat.Builder(this, NotificationUtils.CHANNEL_ID_USER_ACTION)\n+        NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n+                NotificationUtils.CHANNEL_ID_USER_ACTION)\n                 .setSmallIcon(R.drawable.ic_stream_white)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n", "next_change": {"commit": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..92f395d0d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -576,7 +580,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92f395d0d..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -580,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +591,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -591,7 +566,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.confirm_mobile_streaming_button_once),\n+                        getString(R.string.stream_label),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -566,7 +593,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n                 .addAction(R.drawable.ic_stream_white,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n", "next_change": {"commit": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..fb576421c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -585,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": {"commit": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex fb576421c..c89724605 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,17 +613,17 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NDkyMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400764920", "body": "`positionSaverTick` is only executed every 5 seconds. I think you can use EventBus:\r\n\r\n```\r\n@Subscribe\r\npublic void skipIfMetEnding(PlaybackPositionEvent event) {\r\n```", "bodyText": "positionSaverTick is only executed every 5 seconds. I think you can use EventBus:\n@Subscribe\npublic void skipIfMetEnding(PlaybackPositionEvent event) {", "bodyHTML": "<p dir=\"auto\"><code>positionSaverTick</code> is only executed every 5 seconds. I think you can use EventBus:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"@Subscribe\npublic void skipIfMetEnding(PlaybackPositionEvent event) {\n\"><pre><code>@Subscribe\npublic void skipIfMetEnding(PlaybackPositionEvent event) {\n</code></pre></div>", "author": "ByteHamster", "createdAt": "2020-03-31T09:21:16Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1075,34 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipIfMetEnding() {", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAxODMwOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402018309", "bodyText": "instead of a new Subscriber, I'm piggybacking on the onPositionObserver()", "author": "tonytamsf", "createdAt": "2020-04-02T02:33:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2NDkyMA=="}], "type": "inlineReview", "revised_code": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1075,7 +1068,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipIfMetEnding() {\n+    private void skipEndingPref() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex d04538aab..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1068,7 +1064,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingPref() {\n+    private void skipEnding() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1064,7 +1071,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEnding() {\n+    private void skipEndingIfNecessary() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1075,7 +1074,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipIfMetEnding() {\n+    private void skipEndingIfNecessary() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDc2Njk1Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r400766956", "body": "I don't think that this is enough. If AntennaPod automatically plays the next item in the queue, this code is not executed.", "bodyText": "I don't think that this is enough. If AntennaPod automatically plays the next item in the queue, this code is not executed.", "bodyHTML": "<p dir=\"auto\">I don't think that this is enough. If AntennaPod automatically plays the next item in the queue, this code is not executed.</p>", "author": "ByteHamster", "createdAt": "2020-03-31T09:24:29Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -496,6 +497,7 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n                     return Service.START_NOT_STICKY;\n                 }\n                 mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n+                skipIntro(playable);", "originalCommit": "8505e7bc5c072eaa3b52bf524b78e791a7a2778a", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..d04538aab 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -497,7 +497,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     return Service.START_NOT_STICKY;\n                 }\n                 mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                skipIntro(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 3ad15a7cc..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -497,7 +501,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     return Service.START_NOT_STICKY;\n                 }\n                 mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                skipIntro(playable);\n+                addPlayableToQueue(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -501,7 +504,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     return Service.START_NOT_STICKY;\n                 }\n                 mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                addPlayableToQueue(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -504,6 +507,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     return Service.START_NOT_STICKY;\n                 }\n                 mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n+                addPlayableToQueue(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..49208206d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -498,16 +502,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-                if (playable instanceof FeedMedia) {\n-                    playable = DBReader.getFeedMedia(((FeedMedia) playable).getId());\n-                }\n-                if (playable == null) {\n-                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n-                    stateManager.stopService();\n-                    return Service.START_NOT_STICKY;\n-                }\n-                mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                addPlayableToQueue(playable);\n+\n+                Observable.fromCallable(\n+                        () -> {\n+                            if (playable instanceof FeedMedia) {\n+                                return DBReader.getFeedMedia(((FeedMedia) playable).getId());\n+                            } else {\n+                                return playable;\n+                            }\n+                        })\n+                        .subscribeOn(Schedulers.io())\n+                        .observeOn(AndroidSchedulers.mainThread())\n+                        .subscribe(\n+                                playableLoaded -> {\n+                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n+                                            prepareImmediately);\n+                                    addPlayableToQueue(playable);\n+                                }, error -> {\n+                                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                                    stateManager.stopService();\n+                                });\n+                return Service.START_NOT_STICKY;\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "c8a2f20000032228226149500767ba903752e0a5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 49208206d..9f53c6da0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -496,33 +497,23 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 if (allowStreamAlways) {\n                     UserPreferences.setAllowMobileStreaming(true);\n                 }\n-                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime) {\n+                boolean localFeed = URLUtil.isContentUrl(playable.getStreamUrl());\n+                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime && !localFeed) {\n                     displayStreamingNotAllowedNotification(intent);\n                     PlaybackPreferences.writeNoMediaPlaying();\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-\n-                Observable.fromCallable(\n-                        () -> {\n-                            if (playable instanceof FeedMedia) {\n-                                return DBReader.getFeedMedia(((FeedMedia) playable).getId());\n-                            } else {\n-                                return playable;\n-                            }\n-                        })\n-                        .subscribeOn(Schedulers.io())\n-                        .observeOn(AndroidSchedulers.mainThread())\n-                        .subscribe(\n-                                playableLoaded -> {\n-                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n-                                            prepareImmediately);\n-                                    addPlayableToQueue(playable);\n-                                }, error -> {\n-                                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n-                                    stateManager.stopService();\n-                                });\n-                return Service.START_NOT_STICKY;\n+                if (playable instanceof FeedMedia) {\n+                    playable = DBReader.getFeedMedia(((FeedMedia) playable).getId());\n+                }\n+                if (playable == null) {\n+                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                    stateManager.stopService();\n+                    return Service.START_NOT_STICKY;\n+                }\n+                mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n+                addPlayableToQueue(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f53c6da0..b85998538 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -497,23 +496,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 if (allowStreamAlways) {\n                     UserPreferences.setAllowMobileStreaming(true);\n                 }\n-                boolean localFeed = URLUtil.isContentUrl(playable.getStreamUrl());\n-                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime && !localFeed) {\n+                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime) {\n                     displayStreamingNotAllowedNotification(intent);\n                     PlaybackPreferences.writeNoMediaPlaying();\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-                if (playable instanceof FeedMedia) {\n-                    playable = DBReader.getFeedMedia(((FeedMedia) playable).getId());\n-                }\n-                if (playable == null) {\n-                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n-                    stateManager.stopService();\n-                    return Service.START_NOT_STICKY;\n-                }\n-                mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                addPlayableToQueue(playable);\n+\n+                Observable.fromCallable(\n+                        () -> {\n+                            if (playable instanceof FeedMedia) {\n+                                return DBReader.getFeedMedia(((FeedMedia) playable).getId());\n+                            } else {\n+                                return playable;\n+                            }\n+                        })\n+                        .subscribeOn(Schedulers.io())\n+                        .observeOn(AndroidSchedulers.mainThread())\n+                        .subscribe(\n+                                playableLoaded -> {\n+                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n+                                            prepareImmediately);\n+                                    addPlayableToQueue(playable);\n+                                }, error -> {\n+                                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                                    stateManager.stopService();\n+                                });\n+                return Service.START_NOT_STICKY;\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "2da36919b394681a1a96b9d9f478de15d0c6c871", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b85998538..f284f2988 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -502,27 +488,16 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-\n-                Observable.fromCallable(\n-                        () -> {\n-                            if (playable instanceof FeedMedia) {\n-                                return DBReader.getFeedMedia(((FeedMedia) playable).getId());\n-                            } else {\n-                                return playable;\n-                            }\n-                        })\n-                        .subscribeOn(Schedulers.io())\n-                        .observeOn(AndroidSchedulers.mainThread())\n-                        .subscribe(\n-                                playableLoaded -> {\n-                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n-                                            prepareImmediately);\n-                                    addPlayableToQueue(playable);\n-                                }, error -> {\n-                                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n-                                    stateManager.stopService();\n-                                });\n-                return Service.START_NOT_STICKY;\n+                if (playable instanceof FeedMedia) {\n+                    playable = DBReader.getFeedMedia(((FeedMedia) playable).getId());\n+                }\n+                if (playable == null) {\n+                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                    stateManager.stopService();\n+                    return Service.START_NOT_STICKY;\n+                }\n+                mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n+                addPlayableToQueue(playable);\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f284f2988..60075dda6 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -482,22 +497,34 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 if (allowStreamAlways) {\n                     UserPreferences.setAllowMobileStreaming(true);\n                 }\n-                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime) {\n+                boolean localFeed = URLUtil.isContentUrl(playable.getStreamUrl());\n+                if (stream && !NetworkUtils.isStreamingAllowed() && !allowStreamThisTime && !localFeed) {\n                     displayStreamingNotAllowedNotification(intent);\n                     PlaybackPreferences.writeNoMediaPlaying();\n                     stateManager.stopService();\n                     return Service.START_NOT_STICKY;\n                 }\n-                if (playable instanceof FeedMedia) {\n-                    playable = DBReader.getFeedMedia(((FeedMedia) playable).getId());\n-                }\n-                if (playable == null) {\n-                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n-                    stateManager.stopService();\n-                    return Service.START_NOT_STICKY;\n-                }\n-                mediaPlayer.playMediaObject(playable, stream, startWhenPrepared, prepareImmediately);\n-                addPlayableToQueue(playable);\n+\n+                Observable.fromCallable(\n+                        () -> {\n+                            if (playable instanceof FeedMedia) {\n+                                return DBReader.getFeedMedia(((FeedMedia) playable).getId());\n+                            } else {\n+                                return playable;\n+                            }\n+                        })\n+                        .subscribeOn(Schedulers.io())\n+                        .observeOn(AndroidSchedulers.mainThread())\n+                        .subscribe(\n+                                playableLoaded -> {\n+                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n+                                            prepareImmediately);\n+                                    addPlayableToQueue(playable);\n+                                }, error -> {\n+                                    Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                                    stateManager.stopService();\n+                                });\n+                return Service.START_NOT_STICKY;\n             } else {\n                 Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n                 Log.d(TAG, \"Extras: \" + intent.getExtras());\n", "next_change": {"commit": "688f1b370c093abecbd4c17643e8661246fcc6c1", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60075dda6..69b35bff5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -517,11 +517,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                         .observeOn(AndroidSchedulers.mainThread())\n                         .subscribe(\n                                 playableLoaded -> {\n-                                    mediaPlayer.playMediaObject(playable, stream, startWhenPrepared,\n+                                    mediaPlayer.playMediaObject(playableLoaded, stream, startWhenPrepared,\n                                             prepareImmediately);\n-                                    addPlayableToQueue(playable);\n+                                    addPlayableToQueue(playableLoaded);\n                                 }, error -> {\n                                     Log.d(TAG, \"Playable was not found. Stopping service.\");\n+                                    error.printStackTrace();\n                                     stateManager.stopService();\n                                 });\n                 return Service.START_NOT_STICKY;\n", "next_change": {"commit": "f0100e61ac633516082ea112363132c99f7c0b7a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 69b35bff5..949c0ff9d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -526,9 +565,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                                     stateManager.stopService();\n                                 });\n                 return Service.START_NOT_STICKY;\n-            } else {\n-                Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n-                Log.d(TAG, \"Extras: \" + intent.getExtras());\n             }\n         }\n \n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 949c0ff9d..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -565,6 +558,9 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                                     stateManager.stopService();\n                                 });\n                 return Service.START_NOT_STICKY;\n+            } else {\n+                Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n+                Log.d(TAG, \"Extras: \" + intent.getExtras());\n             }\n         }\n \n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -558,9 +565,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                                     stateManager.stopService();\n                                 });\n                 return Service.START_NOT_STICKY;\n-            } else {\n-                Log.d(TAG, \"Did not handle intent to PlaybackService: \" + intent);\n-                Log.d(TAG, \"Extras: \" + intent.getExtras());\n             }\n         }\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "e93df087899e0fa9e356ba1bd8ed20abb042bfb6", "url": "https://github.com/AntennaPod/AntennaPod/commit/e93df087899e0fa9e356ba1bd8ed20abb042bfb6", "message": "androidx dialog", "committedDate": "2020-03-31T17:59:01Z", "type": "commit"}, {"oid": "1bcca4567ce64b52c52a2475d839830258db8f8b", "url": "https://github.com/AntennaPod/AntennaPod/commit/1bcca4567ce64b52c52a2475d839830258db8f8b", "message": "format", "committedDate": "2020-03-31T18:00:32Z", "type": "commit"}, {"oid": "28727d2295afff50f187ef70affa4e019905c64b", "url": "https://github.com/AntennaPod/AntennaPod/commit/28727d2295afff50f187ef70affa4e019905c64b", "message": "cleaner code", "committedDate": "2020-03-31T18:03:37Z", "type": "commit"}, {"oid": "15ba8d031ba064c357000b6de13a9835095fe096", "url": "https://github.com/AntennaPod/AntennaPod/commit/15ba8d031ba064c357000b6de13a9835095fe096", "message": "grammer", "committedDate": "2020-03-31T18:06:31Z", "type": "commit"}, {"oid": "9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "url": "https://github.com/AntennaPod/AntennaPod/commit/9ea5bed6d3b8bb1134f6e7ed3fb908025d155f6e", "message": "skipIntroPref and skipEndingPref at the right places", "committedDate": "2020-04-02T02:32:34Z", "type": "commit"}, {"oid": "f9ec0698b0c07608e45e8aff00c28f42fc6568fe", "url": "https://github.com/AntennaPod/AntennaPod/commit/f9ec0698b0c07608e45e8aff00c28f42fc6568fe", "message": "oops, wrong func", "committedDate": "2020-04-02T02:37:16Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ2MDk5MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402460991", "body": "Why is this method called `skipIntroPref`? Why `pref`?", "bodyText": "Why is this method called skipIntroPref? Why pref?", "bodyHTML": "<p dir=\"auto\">Why is this method called <code>skipIntroPref</code>? Why <code>pref</code>?</p>", "author": "ByteHamster", "createdAt": "2020-04-02T16:49:53Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -505,6 +506,34 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntroPref(Playable playable) {", "originalCommit": "f9ec0698b0c07608e45e8aff00c28f42fc6568fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -506,27 +506,23 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntroPref(Playable playable) {\n-        int skipIntro = 0;\n+    private void skipIntro(Playable playable) {\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n-                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                        skipIntro);\n                 Toast toast = Toast.makeText(context, skipIntroMesg,\n                         Toast.LENGTH_LONG);\n                 toast.show();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -506,27 +511,23 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntroPref(Playable playable) {\n-        int skipIntro = 0;\n+    private void skipIntro(Playable playable) {\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n-                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                        skipIntro);\n                 Toast toast = Toast.makeText(context, skipIntroMesg,\n                         Toast.LENGTH_LONG);\n                 toast.show();\n", "next_change": {"commit": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..2570fb1c5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +523,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration) {\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2570fb1c5..193fd4944 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +523,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n+            if (skipIntro * 1000 < duration) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "3de98ca89901251500d1c829e513aab7f98d5466", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 193fd4944..5f6e49e1c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +524,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration) {\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 5f6e49e1c..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -512,30 +513,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipIntro = preferences.getFeedSkipIntro();\n-\n-        Context context = getApplicationContext();\n-        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n-            int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n-                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n-                mediaPlayer.seekTo(skipIntro * 1000);\n-                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro);\n-                Toast toast = Toast.makeText(context, skipIntroMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-            }\n-        }\n-    }\n-\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -513,15 +517,41 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+            }\n+        }\n+    }\n+\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -548,10 +599,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -599,12 +592,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -592,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +602,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "ae3971a58ff00755148b036794b7e5dc1c57017a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 805956094..a6d90dc7d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -611,8 +545,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n-        intentAlwaysAllow.setAction(EXTRA_ALLOW_STREAM_ALWAYS);\n-        intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n+        intentAlwaysAllow.setAction(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS);\n+        intentAlwaysAllow.putExtra(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,12 +604,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -560,25 +613,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                .addAction(R.drawable.ic_notification_stream,\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NjI2Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402476262", "body": "I think it would be easier for the translators if you just added the text \"Seconds\" to \"Skipped first\" in `strings.xml`. I do not think that we want to skip other units than seconds. Additionally, this gives a weird mix of languages if \"Seconds\" is translated but \"Skipped first\" is not translated.", "bodyText": "I think it would be easier for the translators if you just added the text \"Seconds\" to \"Skipped first\" in strings.xml. I do not think that we want to skip other units than seconds. Additionally, this gives a weird mix of languages if \"Seconds\" is translated but \"Skipped first\" is not translated.", "bodyHTML": "<p dir=\"auto\">I think it would be easier for the translators if you just added the text \"Seconds\" to \"Skipped first\" in <code>strings.xml</code>. I do not think that we want to skip other units than seconds. Additionally, this gives a weird mix of languages if \"Seconds\" is translated but \"Skipped first\" is not translated.</p>", "author": "ByteHamster", "createdAt": "2020-04-02T17:14:23Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1068,34 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingPref() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n+                    skipEnd,\n+                    context.getString(R.string.time_seconds));", "originalCommit": "f9ec0698b0c07608e45e8aff00c28f42fc6568fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,19 +1076,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            remainingTime < skipEnd * 1000) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n             Context context = getApplicationContext();\n             String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n+                    skipEnd);\n             Toast toast = Toast.makeText(context, skipMesg,\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n         }\n     }\n \n", "next_change": {"commit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 59834c59f..2e65078ef 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1089,7 +1090,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n             mediaPlayer.skip();\n         } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" end at \" + skipEnd * 1000);\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n     }\n \n", "next_change": {"commit": "1cd505504daacc88e3600a50ca2bab239e422a67", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2e65078ef..47c1caa38 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1088,6 +1092,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     Toast.LENGTH_LONG);\n             toast.show();\n \n+            playable.setAutoSkippedEnding(true);\n             mediaPlayer.skip();\n         } else {\n            Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n", "next_change": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 47c1caa38..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1080,21 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 && remainingTime < skipEnd * 1000) {\n-            Log.d(TAG, \"skipEndingPref: Skipping the remaining \" + remainingTime / 1000 + \" \" + skipEnd );\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd,\n-                    context.getString(R.string.time_seconds));\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEndingPref: Not at ending yet \" + remainingTime / 1000 + \" end at \" + skipEnd);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ3NzM2OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402477369", "body": "This is always true. You check for FeedMedia in the line above.", "bodyText": "This is always true. You check for FeedMedia in the line above.", "bodyHTML": "<p dir=\"auto\">This is always true. You check for FeedMedia in the line above.</p>", "author": "ByteHamster", "createdAt": "2020-04-02T17:16:16Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -505,6 +506,34 @@ public int onStartCommand(Intent intent, int flags, int startId) {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntroPref(Playable playable) {\n+        int skipIntro = 0;\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        if (playable instanceof FeedMedia) {", "originalCommit": "f9ec0698b0c07608e45e8aff00c28f42fc6568fe", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "495fceed76fd89f80b63254fc6490e379a06b883", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..59834c59f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -506,27 +506,23 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntroPref(Playable playable) {\n-        int skipIntro = 0;\n+    private void skipIntro(Playable playable) {\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n-                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                        skipIntro);\n                 Toast toast = Toast.makeText(context, skipIntroMesg,\n                         Toast.LENGTH_LONG);\n                 toast.show();\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex b67b4b1c3..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -506,27 +511,23 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntroPref(Playable playable) {\n-        int skipIntro = 0;\n+    private void skipIntro(Playable playable) {\n         if (! (playable instanceof FeedMedia)) {\n             return;\n         }\n \n-        if (playable instanceof FeedMedia) {\n-            FeedMedia feedMedia = (FeedMedia) playable;\n-            FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-            skipIntro = preferences.getFeedSkipIntro();\n-        }\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n \n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n             if (skipIntro * 1000 < duration) {\n-                Log.d(TAG, \"skipIntroPref \" + playable.getEpisodeTitle());\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro,\n-                        context.getString(R.string.time_seconds));\n+                        skipIntro);\n                 Toast toast = Toast.makeText(context, skipIntroMesg,\n                         Toast.LENGTH_LONG);\n                 toast.show();\n", "next_change": {"commit": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..2570fb1c5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +523,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration) {\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 2570fb1c5..193fd4944 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +523,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n+            if (skipIntro * 1000 < duration) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "3de98ca89901251500d1c829e513aab7f98d5466", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 193fd4944..5f6e49e1c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -523,7 +524,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         Context context = getApplicationContext();\n         if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n             int duration = getDuration();\n-            if (skipIntro * 1000 < duration) {\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n                 Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n                 mediaPlayer.seekTo(skipIntro * 1000);\n                 String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 5f6e49e1c..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -512,30 +513,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n-    private void skipIntro(Playable playable) {\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipIntro = preferences.getFeedSkipIntro();\n-\n-        Context context = getApplicationContext();\n-        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n-            int duration = getDuration();\n-            if (skipIntro * 1000 < duration || duration <= 0) {\n-                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n-                mediaPlayer.seekTo(skipIntro * 1000);\n-                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n-                        skipIntro);\n-                Toast toast = Toast.makeText(context, skipIntroMesg,\n-                        Toast.LENGTH_LONG);\n-                toast.show();\n-            }\n-        }\n-    }\n-\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -513,15 +517,41 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         return Service.START_NOT_STICKY;\n     }\n \n+    private void skipIntro(Playable playable) {\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipIntro = preferences.getFeedSkipIntro();\n+\n+        Context context = getApplicationContext();\n+        if (skipIntro > 0 && playable.getPosition() < skipIntro * 1000) {\n+            int duration = getDuration();\n+            if (skipIntro * 1000 < duration || duration <= 0) {\n+                Log.d(TAG, \"skipIntro \" + playable.getEpisodeTitle());\n+                mediaPlayer.seekTo(skipIntro * 1000);\n+                String skipIntroMesg = context.getString(R.string.pref_feed_skip_intro_toast,\n+                        skipIntro);\n+                Toast toast = Toast.makeText(context, skipIntroMesg,\n+                        Toast.LENGTH_LONG);\n+                toast.show();\n+            }\n+        }\n+    }\n+\n     private void displayStreamingNotAllowedNotification(Intent originalIntent) {\n         Intent intentAllowThisTime = new Intent(originalIntent);\n         intentAllowThisTime.setAction(EXTRA_ALLOW_STREAM_THIS_TIME);\n         intentAllowThisTime.putExtra(EXTRA_ALLOW_STREAM_THIS_TIME, true);\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n-            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n-            pendingIntentAllowThisTime = PendingIntent.getService(this, 0, intentAllowThisTime,  PendingIntent.FLAG_UPDATE_CURRENT);\n+            pendingIntentAllowThisTime = PendingIntent.getService(this,\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -548,10 +599,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -599,12 +592,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -592,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +593,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -593,12 +598,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -598,10 +602,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAllowThisTime;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAllowThisTime = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAllowThisTime = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_this_time, intentAllowThisTime, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n", "next_change": {"commit": "ae3971a58ff00755148b036794b7e5dc1c57017a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 805956094..a6d90dc7d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -611,8 +545,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         }\n \n         Intent intentAlwaysAllow = new Intent(intentAllowThisTime);\n-        intentAlwaysAllow.setAction(EXTRA_ALLOW_STREAM_ALWAYS);\n-        intentAlwaysAllow.putExtra(EXTRA_ALLOW_STREAM_ALWAYS, true);\n+        intentAlwaysAllow.setAction(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS);\n+        intentAlwaysAllow.putExtra(PlaybackServiceInterface.EXTRA_ALLOW_STREAM_ALWAYS, true);\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 84a9c429f..9f46ebd92 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -613,12 +604,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 9f46ebd92..c969923d4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -604,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex c969923d4..f192b1675 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "3f81e22eed78f6f0735f3639953fdec20acad302", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex f192b1675..60ccb5c9e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +607,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 60ccb5c9e..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -607,12 +610,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n-                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n-                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -610,10 +616,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..84a9c429f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -560,25 +613,27 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         PendingIntent pendingIntentAlwaysAllow;\n         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {\n             pendingIntentAlwaysAllow = PendingIntent.getForegroundService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,\n+                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE);\n         } else {\n             pendingIntentAlwaysAllow = PendingIntent.getService(this,\n-                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow,  PendingIntent.FLAG_UPDATE_CURRENT);\n+                    R.id.pending_intent_allow_stream_always, intentAlwaysAllow, PendingIntent.FLAG_UPDATE_CURRENT\n+                            | (Build.VERSION.SDK_INT >= 23 ? PendingIntent.FLAG_IMMUTABLE : 0));\n         }\n \n         NotificationCompat.Builder builder = new NotificationCompat.Builder(this,\n                 NotificationUtils.CHANNEL_ID_USER_ACTION)\n-                .setSmallIcon(R.drawable.ic_stream_white)\n+                .setSmallIcon(R.drawable.ic_notification_stream)\n                 .setContentTitle(getString(R.string.confirm_mobile_streaming_notification_title))\n                 .setContentText(getString(R.string.confirm_mobile_streaming_notification_message))\n                 .setStyle(new NotificationCompat.BigTextStyle()\n                         .bigText(getString(R.string.confirm_mobile_streaming_notification_message)))\n                 .setPriority(NotificationCompat.PRIORITY_DEFAULT)\n                 .setContentIntent(pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n-                        getString(R.string.stream_label),\n+                .addAction(R.drawable.ic_notification_stream,\n+                        getString(R.string.confirm_mobile_streaming_button_once),\n                         pendingIntentAllowThisTime)\n-                .addAction(R.drawable.ic_stream_white,\n+                .addAction(R.drawable.ic_notification_stream,\n                         getString(R.string.confirm_mobile_streaming_button_always),\n                         pendingIntentAlwaysAllow)\n                 .setAutoCancel(true);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "495fceed76fd89f80b63254fc6490e379a06b883", "url": "https://github.com/AntennaPod/AntennaPod/commit/495fceed76fd89f80b63254fc6490e379a06b883", "message": "smarter about skipping long duration", "committedDate": "2020-04-03T04:08:14Z", "type": "commit"}, {"oid": "a1caf62567feb98bb4a3cab4235c5bb14221c4b0", "url": "https://github.com/AntennaPod/AntennaPod/commit/a1caf62567feb98bb4a3cab4235c5bb14221c4b0", "message": "double check the integersg", "committedDate": "2020-04-03T04:31:00Z", "type": "commit"}, {"oid": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "url": "https://github.com/AntennaPod/AntennaPod/commit/a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "message": "skip right before our ending, so we can replay", "committedDate": "2020-04-03T05:49:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxOTIyMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r402919221", "body": "I think this could be done inside `FeedPreferenceSkipDialog` to keep the `FeedSettingsFragment` a bit shorter", "bodyText": "I think this could be done inside FeedPreferenceSkipDialog to keep the FeedSettingsFragment a bit shorter", "bodyHTML": "<p dir=\"auto\">I think this could be done inside <code>FeedPreferenceSkipDialog</code> to keep the <code>FeedSettingsFragment</code> a bit shorter</p>", "author": "ByteHamster", "createdAt": "2020-04-03T10:46:01Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java", "diffHunk": "@@ -159,6 +161,37 @@ public void onDestroy() {\n             }\n         }\n \n+        private void setupFeedAutoSkipPreference() {\n+            findPreference(\"skipping\").setOnPreferenceClickListener(preference -> {\n+                new FeedPreferenceSkipDialog(getContext(),\n+                        feedPreferences.getFeedSkipIntro(),\n+                        feedPreferences.getFeedSkipEnding()) {\n+                    @Override\n+                    protected void onConfirmed(String skipIntroStr, String skipEndingStr) {\n+\n+                        int skipIntro;\n+                        int skipEnding;\n+                        try {\n+                            skipIntro = Integer.parseInt(skipIntroStr);\n+                        } catch (NumberFormatException e) {\n+                            skipIntro = 0;\n+                        }", "originalCommit": "a96683acc5d3cdcc7f4f37c7a3103ed0aa42f8e3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUwMjM2Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403502366", "bodyText": "done", "author": "tonytamsf", "createdAt": "2020-04-04T18:40:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjkxOTIyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "8057871422cbaf1a7db7b446f0baa148e0dd735a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 54f1c8ab1..55397d322 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -167,22 +167,7 @@ public class FeedSettingsFragment extends Fragment {\n                         feedPreferences.getFeedSkipIntro(),\n                         feedPreferences.getFeedSkipEnding()) {\n                     @Override\n-                    protected void onConfirmed(String skipIntroStr, String skipEndingStr) {\n-\n-                        int skipIntro;\n-                        int skipEnding;\n-                        try {\n-                            skipIntro = Integer.parseInt(skipIntroStr);\n-                        } catch (NumberFormatException e) {\n-                            skipIntro = 0;\n-                        }\n-\n-                        try {\n-                            skipEnding = Integer.parseInt(skipEndingStr);\n-                        } catch (NumberFormatException e) {\n-                            skipEnding = 0;\n-                        }\n-\n+                    protected void onConfirmed(int skipIntro, int skipEnding) {\n                         feedPreferences.setFeedSkipIntro(skipIntro);\n                         feedPreferences.setFeedSkipEnding(skipEnding);\n                         feed.savePreferences();\n", "next_change": {"commit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 55397d322..491874f81 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -171,6 +172,11 @@ public class FeedSettingsFragment extends Fragment {\n                         feedPreferences.setFeedSkipIntro(skipIntro);\n                         feedPreferences.setFeedSkipEnding(skipEnding);\n                         feed.savePreferences();\n+                        EventBus.getDefault().post(\n+                                new SkipIntroEndingChangedEvent(feedPreferences.getFeedSkipIntro(),\n+                                        feedPreferences.getFeedSkipEnding(),\n+                                        feed.getId()));\n+\n                     }\n                 }.show();\n                 return false;\n", "next_change": {"commit": "ed0117b8f892d963a709a2bced7baa4458e2e39b", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 491874f81..4134a217e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -176,7 +176,6 @@ public class FeedSettingsFragment extends Fragment {\n                                 new SkipIntroEndingChangedEvent(feedPreferences.getFeedSkipIntro(),\n                                         feedPreferences.getFeedSkipEnding(),\n                                         feed.getId()));\n-\n                     }\n                 }.show();\n                 return false;\n", "next_change": null}]}}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 54f1c8ab1..8251e8716 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -162,30 +164,19 @@ public class FeedSettingsFragment extends Fragment {\n         }\n \n         private void setupFeedAutoSkipPreference() {\n-            findPreference(\"skipping\").setOnPreferenceClickListener(preference -> {\n+            findPreference(PREF_AUTO_SKIP).setOnPreferenceClickListener(preference -> {\n                 new FeedPreferenceSkipDialog(getContext(),\n                         feedPreferences.getFeedSkipIntro(),\n                         feedPreferences.getFeedSkipEnding()) {\n                     @Override\n-                    protected void onConfirmed(String skipIntroStr, String skipEndingStr) {\n-\n-                        int skipIntro;\n-                        int skipEnding;\n-                        try {\n-                            skipIntro = Integer.parseInt(skipIntroStr);\n-                        } catch (NumberFormatException e) {\n-                            skipIntro = 0;\n-                        }\n-\n-                        try {\n-                            skipEnding = Integer.parseInt(skipEndingStr);\n-                        } catch (NumberFormatException e) {\n-                            skipEnding = 0;\n-                        }\n-\n+                    protected void onConfirmed(int skipIntro, int skipEnding) {\n                         feedPreferences.setFeedSkipIntro(skipIntro);\n                         feedPreferences.setFeedSkipEnding(skipEnding);\n                         feed.savePreferences();\n+                        EventBus.getDefault().post(\n+                                new SkipIntroEndingChangedEvent(feedPreferences.getFeedSkipIntro(),\n+                                        feedPreferences.getFeedSkipEnding(),\n+                                        feed.getId()));\n                     }\n                 }.show();\n                 return false;\n", "next_change": {"commit": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 8251e8716..e24c89478 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -172,7 +193,7 @@ public class FeedSettingsFragment extends Fragment {\n                     protected void onConfirmed(int skipIntro, int skipEnding) {\n                         feedPreferences.setFeedSkipIntro(skipIntro);\n                         feedPreferences.setFeedSkipEnding(skipEnding);\n-                        feed.savePreferences();\n+                        DBWriter.setFeedPreferences(feedPreferences);\n                         EventBus.getDefault().post(\n                                 new SkipIntroEndingChangedEvent(feedPreferences.getFeedSkipIntro(),\n                                         feedPreferences.getFeedSkipEnding(),\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "24656936c70bc73443119b4e1bb492feeac6dd85", "committedDate": "2020-07-13 00:49:35 -0400", "message": "Fix a bunch of deprecations"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "4996d4685197d8a7e7813a88e19a183c27c9a794", "committedDate": "2020-09-13 23:40:29 +0200", "message": "Hide irrelevant options for local feeds"}, {"oid": "94f8c6012d8e7dccfab37f48a259c6a9113db3a8", "committedDate": "2020-09-27 21:52:12 +0200", "message": "Checkstyle fix"}, {"oid": "1ffb9f94644b136aaf16ae13bc777485268cb247", "committedDate": "2020-11-01 15:35:39 +0100", "message": "Converted second-level fragments to stand-alone toolbar"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "4f5449a0d3c8540b32a8d54c3c770d5fe91e554e", "committedDate": "2021-07-11 18:52:11 +0200", "message": "No longer show item-specific auto-download property to users"}, {"oid": "64b72d1ae95402da73a5f1a66995d43b8fd65ce5", "committedDate": "2021-10-10 11:10:23 +0200", "message": "Reworked feed specific speed selector (#5458)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "ac8114342c4beb90745cfc5bd9235ca219a36b29", "committedDate": "2022-09-18 18:57:43 +0200", "message": "Migrate Toolbars to Material3"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "ebfda200e0a74946a95d418b01b8fc38dda3f7cb", "committedDate": "2022-12-24 17:07:43 +0100", "message": "Refresh Feed after Credentials Change (#6236)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "4f7f49e1e714ce41320fff569272a1423198b2f3", "committedDate": "2023-03-14 21:03:45 +0100", "message": "Move feed download to worker (#6375)"}]}, {"oid": "8057871422cbaf1a7db7b446f0baa148e0dd735a", "url": "https://github.com/AntennaPod/AntennaPod/commit/8057871422cbaf1a7db7b446f0baa148e0dd735a", "message": "move str to in logic to the right place", "committedDate": "2020-04-04T18:39:46Z", "type": "commit"}, {"oid": "1cd505504daacc88e3600a50ca2bab239e422a67", "url": "https://github.com/AntennaPod/AntennaPod/commit/1cd505504daacc88e3600a50ca2bab239e422a67", "message": "consider auto skipping the exact same behavior has an episode ending", "committedDate": "2020-04-04T19:28:43Z", "type": "commit"}, {"oid": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "url": "https://github.com/AntennaPod/AntennaPod/commit/d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "message": "listen to events when the Feed preference changed for skipIntro and skipEnding", "committedDate": "2020-04-04T21:45:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwNzI0OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403707249", "body": "What about `skipEndingIfNecessary`?", "bodyText": "What about skipEndingIfNecessary?", "bodyHTML": "<p dir=\"auto\">What about <code>skipEndingIfNecessary</code>?</p>", "author": "ByteHamster", "createdAt": "2020-04-05T14:11:08Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1070,37 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEnding() {", "originalCommit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1070,7 +1071,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEnding() {\n+    private void skipEndingIfNecessary() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1070,7 +1074,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEnding() {\n+    private void skipEndingIfNecessary() {\n         Playable playable = mediaPlayer.getPlayable();\n         if (! (playable instanceof FeedMedia)) {\n             return;\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwNzMxNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403707315", "body": "Please remove this. It is executed every second, so this floods the log output", "bodyText": "Please remove this. It is executed every second, so this floods the log output", "bodyHTML": "<p dir=\"auto\">Please remove this. It is executed every second, so this floods the log output</p>", "author": "ByteHamster", "createdAt": "2020-04-05T14:11:45Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1070,37 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEnding() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            (remainingTime - (skipEnd * 1000) > 0) &&\n+            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n+                    skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg,\n+                    Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            playable.setAutoSkippedEnding(true);\n+            mediaPlayer.skip();\n+        } else {\n+           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);", "originalCommit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwNzYwNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403707605", "body": "This PR does not include the more strict diff-checkstyle CI rule. The `&&` characters should be in the next line. Also, indentation should be 8 spaces when breaking the same statement.\r\n\r\nYou can select the file `config/checkstyle/checkstyle-new-code.xml` in IntelliJ/Android Studio (with checkstyle version 8.18 and \"Treat errors as warnings\") to get inline suggestions. Alternatively, you can rebase the commit with a more recent `develop` branch to have it executed on CI.", "bodyText": "This PR does not include the more strict diff-checkstyle CI rule. The && characters should be in the next line. Also, indentation should be 8 spaces when breaking the same statement.\nYou can select the file config/checkstyle/checkstyle-new-code.xml in IntelliJ/Android Studio (with checkstyle version 8.18 and \"Treat errors as warnings\") to get inline suggestions. Alternatively, you can rebase the commit with a more recent develop branch to have it executed on CI.", "bodyHTML": "<p dir=\"auto\">This PR does not include the more strict diff-checkstyle CI rule. The <code>&amp;&amp;</code> characters should be in the next line. Also, indentation should be 8 spaces when breaking the same statement.</p>\n<p dir=\"auto\">You can select the file <code>config/checkstyle/checkstyle-new-code.xml</code> in IntelliJ/Android Studio (with checkstyle version 8.18 and \"Treat errors as warnings\") to get inline suggestions. Alternatively, you can rebase the commit with a more recent <code>develop</code> branch to have it executed on CI.</p>", "author": "ByteHamster", "createdAt": "2020-04-05T14:13:54Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1070,37 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEnding() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&", "originalCommit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcwNzcwMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403707702", "body": "Could you please make above statements a single line each? There is a lot of horizontal screen space left :)", "bodyText": "Could you please make above statements a single line each? There is a lot of horizontal screen space left :)", "bodyHTML": "<p dir=\"auto\">Could you please make above statements a single line each? There is a lot of horizontal screen space left :)</p>", "author": "ByteHamster", "createdAt": "2020-04-05T14:14:37Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -1037,6 +1070,37 @@ private void sendNotificationBroadcast(int type, int code) {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEnding() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0 &&\n+            skipEnd < playable.getDuration() &&\n+            (remainingTime - (skipEnd * 1000) > 0) &&\n+            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n+                    skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg,\n+                    Toast.LENGTH_LONG);", "originalCommit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1083,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMedia = feedMedia;\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1093,7 +1093,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMedia = feedMedia;\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1082,24 +1086,20 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         FeedMedia feedMedia = (FeedMedia) playable;\n         FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n         int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0 &&\n-            skipEnd < playable.getDuration() &&\n-            (remainingTime - (skipEnd * 1000) > 0) &&\n-            ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEnding: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+        if (skipEnd > 0\n+                && skipEnd < playable.getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n             Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast,\n-                    skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg,\n-                    Toast.LENGTH_LONG);\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            playable.setAutoSkippedEnding(true);\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n             mediaPlayer.skip();\n-        } else {\n-           Log.d(TAG, \"skipEnding: Not at ending yet \" + remainingTime + \" diff \" + (remainingTime - (skipEnd * 1000)) + \" skipEnd \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed() * 1000);\n         }\n-    }\n+   }\n \n     /**\n      * Updates the Media Session for the corresponding status.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1074,33 +1034,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n-    private void skipEndingIfNecessary() {\n-        Playable playable = mediaPlayer.getPlayable();\n-        if (! (playable instanceof FeedMedia)) {\n-            return;\n-        }\n-\n-        int duration = getDuration();\n-        int remainingTime = duration - getCurrentPosition();\n-\n-        FeedMedia feedMedia = (FeedMedia) playable;\n-        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n-        int skipEnd = preferences.getFeedSkipEnding();\n-        if (skipEnd > 0\n-                && skipEnd < playable.getDuration()\n-                && (remainingTime - (skipEnd * 1000) > 0)\n-                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n-            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n-            Context context = getApplicationContext();\n-            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n-            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n-            toast.show();\n-\n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n-            mediaPlayer.skip();\n-        }\n-   }\n-\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1034,6 +1098,33 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n         sendBroadcast(intent);\n     }\n \n+    private void skipEndingIfNecessary() {\n+        Playable playable = mediaPlayer.getPlayable();\n+        if (! (playable instanceof FeedMedia)) {\n+            return;\n+        }\n+\n+        int duration = getDuration();\n+        int remainingTime = duration - getCurrentPosition();\n+\n+        FeedMedia feedMedia = (FeedMedia) playable;\n+        FeedPreferences preferences = feedMedia.getItem().getFeed().getPreferences();\n+        int skipEnd = preferences.getFeedSkipEnding();\n+        if (skipEnd > 0\n+                && skipEnd < getDuration()\n+                && (remainingTime - (skipEnd * 1000) > 0)\n+                && ((remainingTime - skipEnd * 1000) < (getCurrentPlaybackSpeed() * 1000))) {\n+            Log.d(TAG, \"skipEndingIfNecessary: Skipping the remaining \" + remainingTime + \" \" + skipEnd * 1000 + \" speed \" + getCurrentPlaybackSpeed());\n+            Context context = getApplicationContext();\n+            String skipMesg = context.getString(R.string.pref_feed_skip_ending_toast, skipEnd);\n+            Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n+            toast.show();\n+\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            mediaPlayer.skip();\n+        }\n+   }\n+\n     /**\n      * Updates the Media Session for the corresponding status.\n      *\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1120,7 +1121,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Toast toast = Toast.makeText(context, skipMesg, Toast.LENGTH_LONG);\n             toast.show();\n \n-            this.autoSkippedFeedMediaId = feedMedia.getItem().getId();\n+            this.autoSkippedFeedMediaId = feedMedia.getItem().getIdentifyingValue();\n             mediaPlayer.skip();\n         }\n    }\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxMDc1Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r403710756", "body": "Hmm this adds quite a lot of code for a single use-case. What about checking the position here instead of adding the Playable methods?", "bodyText": "Hmm this adds quite a lot of code for a single use-case. What about checking the position here instead of adding the Playable methods?", "bodyHTML": "<p dir=\"auto\">Hmm this adds quite a lot of code for a single use-case. What about checking the position here instead of adding the Playable methods?</p>", "author": "ByteHamster", "createdAt": "2020-04-05T14:38:51Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -997,6 +1026,10 @@ private void onPostPlayback(final Playable playable, boolean ended, boolean skip\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n+        if (playable.hasAutoSkippedEnding()) {", "originalCommit": "d41ede9d8443bae3e6461b37a9dbb76551e1f36b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..ef81cffc5 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1026,7 +1027,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n-        if (playable.hasAutoSkippedEnding()) {\n+        if (autoSkippedFeedMedia != null && autoSkippedFeedMedia.getId() == media.getId()) {\n             ended = true;\n         }\n \n", "next_change": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1027,7 +1027,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n-        if (autoSkippedFeedMedia != null && autoSkippedFeedMedia.getId() == media.getId()) {\n+        if (autoSkippedFeedMediaId >= 0 && autoSkippedFeedMediaId == media.getId()) {\n             ended = true;\n         }\n \n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 0890d3aba..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1026,7 +1030,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n-        if (playable.hasAutoSkippedEnding()) {\n+        if (autoSkippedFeedMediaId >= 0 && autoSkippedFeedMediaId == media.getId()) {\n             ended = true;\n         }\n \n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1030,10 +994,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n-        if (autoSkippedFeedMediaId >= 0 && autoSkippedFeedMediaId == media.getId()) {\n-            ended = true;\n-        }\n-\n         if (item != null) {\n             if (ended || smartMarkAsPlayed\n                     || (skipped && !UserPreferences.shouldSkipKeepEpisode())) {\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -994,6 +1054,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n+        if (autoSkippedFeedMediaId >= 0 && autoSkippedFeedMediaId == media.getId()) {\n+            ended = true;\n+        }\n+\n         if (item != null) {\n             if (ended || smartMarkAsPlayed\n                     || (skipped && !UserPreferences.shouldSkipKeepEpisode())) {\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1048,18 +1046,21 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n             Log.d(TAG, \"smart mark as played\");\n         }\n \n+        boolean autoSkipped = false;\n+        if (autoSkippedFeedMediaId != null && autoSkippedFeedMediaId.equals(item.getIdentifyingValue())) {\n+            autoSkippedFeedMediaId = null;\n+            autoSkipped = true;\n+        }\n+\n         if (ended || smartMarkAsPlayed) {\n             media.onPlaybackCompleted(getApplicationContext());\n         } else {\n             media.onPlaybackPause(getApplicationContext());\n         }\n \n-        if (autoSkippedFeedMediaId >= 0 && autoSkippedFeedMediaId == media.getId()) {\n-            ended = true;\n-        }\n-\n         if (item != null) {\n             if (ended || smartMarkAsPlayed\n+                    || autoSkipped\n                     || (skipped && !UserPreferences.shouldSkipKeepEpisode())) {\n                 // only mark the item as played if we're not keeping it anyways\n                 DBWriter.markItemPlayed(item, FeedItem.PLAYED, ended);\n", "next_change": {"commit": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex e9c8e1bbb..928ebe2a2 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1067,8 +1122,12 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 // don't know if it actually matters to not autodownload when smart mark as played is triggered\n                 DBWriter.removeQueueItem(PlaybackService.this, ended, item);\n                 // Delete episode if enabled\n-                if (item.getFeed().getPreferences().getCurrentAutoDelete()\n-                        && (!item.isTagged(FeedItem.TAG_FAVORITE) || !UserPreferences.shouldFavoriteKeepEpisode())) {\n+                FeedPreferences.AutoDeleteAction action =\n+                        item.getFeed().getPreferences().getCurrentAutoDelete();\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n+                        || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n+                if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n+                        || !UserPreferences.shouldFavoriteKeepEpisode())) {\n                     DBWriter.deleteFeedMediaOfItem(PlaybackService.this, media.getId());\n                     Log.d(TAG, \"Episode Deleted\");\n                 }\n", "next_change": {"commit": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 928ebe2a2..7e0377c88 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1118,13 +1067,13 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                     || autoSkipped\n                     || (skipped && !UserPreferences.shouldSkipKeepEpisode())) {\n                 // only mark the item as played if we're not keeping it anyways\n-                DBWriter.markItemPlayed(item, FeedItem.PLAYED, ended);\n+                DBWriter.markItemPlayed(item, FeedItem.PLAYED, ended || (skipped && smartMarkAsPlayed));\n                 // don't know if it actually matters to not autodownload when smart mark as played is triggered\n                 DBWriter.removeQueueItem(PlaybackService.this, ended, item);\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n-                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n                         || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n", "next_change": {"commit": "9cd59a67207411d428963de501347444f08989f0", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 7e0377c88..4f352aa15 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1073,7 +1083,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n-                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n                         || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n", "next_change": {"commit": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 4f352aa15..62ddf969c 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1083,7 +1076,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n-                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n                         || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n", "next_change": {"commit": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 62ddf969c..92119e31e 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1076,7 +1083,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n-                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n                         || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n", "next_change": {"commit": "2c0b970044b3180786e165588d5d94ada0c90797", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 92119e31e..488724665 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -1083,13 +1076,14 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n                 // Delete episode if enabled\n                 FeedPreferences.AutoDeleteAction action =\n                         item.getFeed().getPreferences().getCurrentAutoDelete();\n-                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.YES\n+                boolean shouldAutoDelete = action == FeedPreferences.AutoDeleteAction.ALWAYS\n                         || (action == FeedPreferences.AutoDeleteAction.GLOBAL && UserPreferences.isAutoDelete());\n                 if (shouldAutoDelete && (!item.isTagged(FeedItem.TAG_FAVORITE)\n                         || !UserPreferences.shouldFavoriteKeepEpisode())) {\n                     DBWriter.deleteFeedMediaOfItem(PlaybackService.this, media.getId());\n                     Log.d(TAG, \"Episode Deleted\");\n                 }\n+                notifyChildrenChanged(getString(R.string.queue_label));\n             }\n         }\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "4595a3f674b2f3931eda02f956bf9b96f88836b5", "url": "https://github.com/AntennaPod/AntennaPod/commit/4595a3f674b2f3931eda02f956bf9b96f88836b5", "message": "code review, smaller code", "committedDate": "2020-04-06T02:43:22Z", "type": "commit"}, {"oid": "ed0117b8f892d963a709a2bced7baa4458e2e39b", "url": "https://github.com/AntennaPod/AntennaPod/commit/ed0117b8f892d963a709a2bced7baa4458e2e39b", "message": "clean up whitespace", "committedDate": "2020-04-06T02:54:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyNzE0OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r406827149", "body": "Missing space :)", "bodyText": "Missing space :)", "bodyHTML": "<p dir=\"auto\">Missing space :)</p>", "author": "ByteHamster", "createdAt": "2020-04-10T16:10:44Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java", "diffHunk": "@@ -49,6 +55,8 @@ private FeedPreferences(long feedID, boolean autoDownload, boolean keepUpdated,\n         this.password = password;\n         this.filter = filter;\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n+        this.feedSkipIntro= feedSkipIntro;", "originalCommit": "ed0117b8f892d963a709a2bced7baa4458e2e39b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 4449acf18..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -55,7 +55,7 @@ public class FeedPreferences {\n         this.password = password;\n         this.filter = filter;\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n-        this.feedSkipIntro= feedSkipIntro;\n+        this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n     }\n \n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 4449acf18..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -55,7 +55,7 @@ public class FeedPreferences {\n         this.password = password;\n         this.filter = filter;\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n-        this.feedSkipIntro= feedSkipIntro;\n+        this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n     }\n \n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 2a2568f28..0486ccd9b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -57,6 +64,7 @@ public class FeedPreferences {\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n+        this.tags.addAll(tags);\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 0486ccd9b..21474db89 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -64,7 +57,7 @@ public class FeedPreferences {\n         this.feedPlaybackSpeed = feedPlaybackSpeed;\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n-        this.tags.addAll(tags);\n+        this.showEpisodeNotification = showEpisodeNotification;\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 21474db89..794c71cf3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -58,6 +64,7 @@ public class FeedPreferences {\n         this.feedSkipIntro = feedSkipIntro;\n         this.feedSkipEnding = feedSkipEnding;\n         this.showEpisodeNotification = showEpisodeNotification;\n+        this.tags.addAll(tags);\n     }\n \n     public static FeedPreferences fromCursor(Cursor cursor) {\n", "next_change": {"commit": "0081d232d0853166db7e88b5b4d192d0bf13f582", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 794c71cf3..8288280bd 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -67,56 +63,6 @@ public class FeedPreferences {\n         this.tags.addAll(tags);\n     }\n \n-    public static FeedPreferences fromCursor(Cursor cursor) {\n-        int indexId = cursor.getColumnIndex(PodDBAdapter.KEY_ID);\n-        int indexAutoDownload = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DOWNLOAD);\n-        int indexAutoRefresh = cursor.getColumnIndex(PodDBAdapter.KEY_KEEP_UPDATED);\n-        int indexAutoDeleteAction = cursor.getColumnIndex(PodDBAdapter.KEY_AUTO_DELETE_ACTION);\n-        int indexVolumeAdaption = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_VOLUME_ADAPTION);\n-        int indexUsername = cursor.getColumnIndex(PodDBAdapter.KEY_USERNAME);\n-        int indexPassword = cursor.getColumnIndex(PodDBAdapter.KEY_PASSWORD);\n-        int indexIncludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_INCLUDE_FILTER);\n-        int indexExcludeFilter = cursor.getColumnIndex(PodDBAdapter.KEY_EXCLUDE_FILTER);\n-        int indexFeedPlaybackSpeed = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_PLAYBACK_SPEED);\n-        int indexAutoSkipIntro = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_INTRO);\n-        int indexAutoSkipEnding = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_SKIP_ENDING);\n-        int indexEpisodeNotification = cursor.getColumnIndex(PodDBAdapter.KEY_EPISODE_NOTIFICATION);\n-        int indexTags = cursor.getColumnIndex(PodDBAdapter.KEY_FEED_TAGS);\n-\n-        long feedId = cursor.getLong(indexId);\n-        boolean autoDownload = cursor.getInt(indexAutoDownload) > 0;\n-        boolean autoRefresh = cursor.getInt(indexAutoRefresh) > 0;\n-        int autoDeleteActionIndex = cursor.getInt(indexAutoDeleteAction);\n-        AutoDeleteAction autoDeleteAction = AutoDeleteAction.values()[autoDeleteActionIndex];\n-        int volumeAdaptionValue = cursor.getInt(indexVolumeAdaption);\n-        VolumeAdaptionSetting volumeAdaptionSetting = VolumeAdaptionSetting.fromInteger(volumeAdaptionValue);\n-        String username = cursor.getString(indexUsername);\n-        String password = cursor.getString(indexPassword);\n-        String includeFilter = cursor.getString(indexIncludeFilter);\n-        String excludeFilter = cursor.getString(indexExcludeFilter);\n-        float feedPlaybackSpeed = cursor.getFloat(indexFeedPlaybackSpeed);\n-        int feedAutoSkipIntro = cursor.getInt(indexAutoSkipIntro);\n-        int feedAutoSkipEnding = cursor.getInt(indexAutoSkipEnding);\n-        boolean showNotification = cursor.getInt(indexEpisodeNotification) > 0;\n-        String tagsString = cursor.getString(indexTags);\n-        if (TextUtils.isEmpty(tagsString)) {\n-            tagsString = TAG_ROOT;\n-        }\n-        return new FeedPreferences(feedId,\n-                autoDownload,\n-                autoRefresh,\n-                autoDeleteAction,\n-                volumeAdaptionSetting,\n-                username,\n-                password,\n-                new FeedFilter(includeFilter, excludeFilter),\n-                feedPlaybackSpeed,\n-                feedAutoSkipIntro,\n-                feedAutoSkipEnding,\n-                showNotification,\n-                new HashSet<>(Arrays.asList(tagsString.split(TAG_SEPARATOR))));\n-    }\n-\n     /**\n      * @return the filter for this feed\n      */\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "5a10728aa97e41f857bf219d30866ac192712a7d", "committedDate": "2020-10-01 12:59:03 +0200", "message": "Delete private constructor in FeedPreferences which is only used by other consturctor (#4477)"}, {"oid": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "committedDate": "2021-01-02 20:45:05 +0100", "message": "Build tags based on feed properties"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "5a8bfc0ea483d0af4db8f266969f1e52c2cd529d", "committedDate": "2021-01-02 21:25:15 +0100", "message": "Fix checkstyle"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "0081d232d0853166db7e88b5b4d192d0bf13f582", "committedDate": "2021-04-22 22:04:20 +0200", "message": "Moved cursor related code out of model (#5126)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyNzczNg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r406827736", "body": "Only one statement per line, please", "bodyText": "Only one statement per line, please", "bodyHTML": "<p dir=\"auto\">Only one statement per line, please</p>", "author": "ByteHamster", "createdAt": "2020-04-10T16:12:17Z", "path": "core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java", "diffHunk": "@@ -204,4 +227,12 @@ public float getFeedPlaybackSpeed() {\n     public void setFeedPlaybackSpeed(float playbackSpeed) {\n         feedPlaybackSpeed = playbackSpeed;\n     }\n+\n+    public void setFeedSkipIntro(int skipIntro) { feedSkipIntro = skipIntro; }", "originalCommit": "ed0117b8f892d963a709a2bced7baa4458e2e39b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 4449acf18..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -228,11 +228,19 @@ public class FeedPreferences {\n         feedPlaybackSpeed = playbackSpeed;\n     }\n \n-    public void setFeedSkipIntro(int skipIntro) { feedSkipIntro = skipIntro; }\n+    public void setFeedSkipIntro(int skipIntro) {\n+        feedSkipIntro = skipIntro;\n+    }\n \n-    public int getFeedSkipIntro() { return feedSkipIntro; }\n+    public int getFeedSkipIntro() {\n+        return feedSkipIntro;\n+    }\n \n-    public void setFeedSkipEnding(int skipEnding) { feedSkipEnding = skipEnding; }\n+    public void setFeedSkipEnding(int skipEnding) {\n+        feedSkipEnding = skipEnding;\n+    }\n \n-    public int getFeedSkipEnding() { return feedSkipEnding; }\n+    public int getFeedSkipEnding() {\n+        return feedSkipEnding;\n+    }\n }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 4449acf18..2a2568f28 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -228,11 +228,19 @@ public class FeedPreferences {\n         feedPlaybackSpeed = playbackSpeed;\n     }\n \n-    public void setFeedSkipIntro(int skipIntro) { feedSkipIntro = skipIntro; }\n+    public void setFeedSkipIntro(int skipIntro) {\n+        feedSkipIntro = skipIntro;\n+    }\n \n-    public int getFeedSkipIntro() { return feedSkipIntro; }\n+    public int getFeedSkipIntro() {\n+        return feedSkipIntro;\n+    }\n \n-    public void setFeedSkipEnding(int skipEnding) { feedSkipEnding = skipEnding; }\n+    public void setFeedSkipEnding(int skipEnding) {\n+        feedSkipEnding = skipEnding;\n+    }\n \n-    public int getFeedSkipEnding() { return feedSkipEnding; }\n+    public int getFeedSkipEnding() {\n+        return feedSkipEnding;\n+    }\n }\n", "next_change": {"commit": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 2a2568f28..dbbd2b1a4 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -243,4 +242,12 @@ public class FeedPreferences {\n     public int getFeedSkipEnding() {\n         return feedSkipEnding;\n     }\n+\n+    public String[] getTags() {\n+        return tags;\n+    }\n+\n+    public void setTags(String[] tags) {\n+        this.tags = tags;\n+    }\n }\n", "next_change": {"commit": "19e427b52438f7508b97127100947f0f81e4f378", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex dbbd2b1a4..0486ccd9b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -243,11 +258,7 @@ public class FeedPreferences {\n         return feedSkipEnding;\n     }\n \n-    public String[] getTags() {\n+    public Set<String> getTags() {\n         return tags;\n     }\n-\n-    public void setTags(String[] tags) {\n-        this.tags = tags;\n-    }\n }\n", "next_change": {"commit": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex 0486ccd9b..d34047ac0 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -261,4 +261,8 @@ public class FeedPreferences {\n     public Set<String> getTags() {\n         return tags;\n     }\n+\n+    public String getTagsAsString() {\n+        return TextUtils.join(TAG_SEPARATOR, tags);\n+    }\n }\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\nindex d34047ac0..21474db89 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/feed/FeedPreferences.java\n", "chunk": "@@ -258,11 +246,15 @@ public class FeedPreferences {\n         return feedSkipEnding;\n     }\n \n-    public Set<String> getTags() {\n-        return tags;\n+    /**\n+     * getter for preference if notifications should be display for new episodes.\n+     * @return true for displaying notifications\n+     */\n+    public boolean getShowEpisodeNotification() {\n+        return showEpisodeNotification;\n     }\n \n-    public String getTagsAsString() {\n-        return TextUtils.join(TAG_SEPARATOR, tags);\n+    public void setShowEpisodeNotification(boolean showEpisodeNotification) {\n+        this.showEpisodeNotification = showEpisodeNotification;\n     }\n }\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "5a10728aa97e41f857bf219d30866ac192712a7d", "committedDate": "2020-10-01 12:59:03 +0200", "message": "Delete private constructor in FeedPreferences which is only used by other consturctor (#4477)"}, {"oid": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "committedDate": "2021-01-02 20:45:05 +0100", "message": "Build tags based on feed properties"}, {"oid": "19e427b52438f7508b97127100947f0f81e4f378", "committedDate": "2021-01-02 21:03:21 +0100", "message": "Store tags in the database"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "5a8bfc0ea483d0af4db8f266969f1e52c2cd529d", "committedDate": "2021-01-02 21:25:15 +0100", "message": "Fix checkstyle"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "0081d232d0853166db7e88b5b4d192d0bf13f582", "committedDate": "2021-04-22 22:04:20 +0200", "message": "Moved cursor related code out of model (#5126)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyODcwNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r406828705", "body": "Can this be private? I think it would be enough to only save the ID instead of the whole object.", "bodyText": "Can this be private? I think it would be enough to only save the ID instead of the whole object.", "bodyHTML": "<p dir=\"auto\">Can this be private? I think it would be enough to only save the ID instead of the whole object.</p>", "author": "ByteHamster", "createdAt": "2020-04-10T16:14:21Z", "path": "core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java", "diffHunk": "@@ -210,6 +212,8 @@\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n+    FeedMedia autoSkippedFeedMedia;", "originalCommit": "ed0117b8f892d963a709a2bced7baa4458e2e39b", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "68b2fc4432b0425416a114fb67da17be03528856", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..5569ff696 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -212,7 +212,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n-    FeedMedia autoSkippedFeedMedia;\n+    private long autoSkippedFeedMediaId = -1;\n \n     /**\n      * Used for Lollipop notifications, Android Wear, and Android Auto.\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex ef81cffc5..a83e50506 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -212,7 +213,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n-    FeedMedia autoSkippedFeedMedia;\n+    private long autoSkippedFeedMediaId = -1;\n \n     /**\n      * Used for Lollipop notifications, Android Wear, and Android Auto.\n", "next_change": {"commit": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex a83e50506..8a48ed571 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -213,8 +218,6 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n-    private long autoSkippedFeedMediaId = -1;\n-\n     /**\n      * Used for Lollipop notifications, Android Wear, and Android Auto.\n      */\n", "next_change": {"commit": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8a48ed571..00d4e2e90 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -218,6 +214,8 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n+    private long autoSkippedFeedMediaId = -1;\n+\n     /**\n      * Used for Lollipop notifications, Android Wear, and Android Auto.\n      */\n", "next_change": {"commit": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 00d4e2e90..e9c8e1bbb 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -214,7 +212,7 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n \n-    private long autoSkippedFeedMediaId = -1;\n+    private String autoSkippedFeedMediaId = null;\n \n     /**\n      * Used for Lollipop notifications, Android Wear, and Android Auto.\n", "next_change": {"commit": "f0100e61ac633516082ea112363132c99f7c0b7a", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex e9c8e1bbb..949c0ff9d 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -207,10 +191,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n     private PlaybackServiceMediaPlayer mediaPlayer;\n     private PlaybackServiceTaskManager taskManager;\n-    private PlaybackServiceFlavorHelper flavorHelper;\n     private PlaybackServiceStateManager stateManager;\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n+    private CastStateListener castStateListener;\n \n     private String autoSkippedFeedMediaId = null;\n \n", "next_change": {"commit": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 949c0ff9d..8ba5215df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -191,10 +203,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n     private PlaybackServiceMediaPlayer mediaPlayer;\n     private PlaybackServiceTaskManager taskManager;\n+    private PlaybackServiceFlavorHelper flavorHelper;\n     private PlaybackServiceStateManager stateManager;\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n-    private CastStateListener castStateListener;\n \n     private String autoSkippedFeedMediaId = null;\n \n", "next_change": {"commit": "413df734953dbfbaffac312745f7a467c3ec41ff", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\nindex 8ba5215df..805956094 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/service/playback/PlaybackService.java\n", "chunk": "@@ -203,10 +191,10 @@ public class PlaybackService extends MediaBrowserServiceCompat {\n \n     private PlaybackServiceMediaPlayer mediaPlayer;\n     private PlaybackServiceTaskManager taskManager;\n-    private PlaybackServiceFlavorHelper flavorHelper;\n     private PlaybackServiceStateManager stateManager;\n     private Disposable positionEventTimer;\n     private PlaybackServiceNotificationBuilder notificationBuilder;\n+    private CastStateListener castStateListener;\n \n     private String autoSkippedFeedMediaId = null;\n \n", "next_change": null}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "df1c298bf6a9fca18c3afda76293f7fce50bf351", "committedDate": "2020-05-16 22:30:25 +0200", "message": "Allow to skip even if duration is unknown"}, {"oid": "ed0233f767448426d92be9948211970e860a4980", "committedDate": "2020-05-16 22:30:30 +0200", "message": "Set duration of playable when streaming"}, {"oid": "1ee1a7458aa47c10ea0054909bac36726318f4e2", "committedDate": "2020-05-20 09:53:02 +0200", "message": "Fixed enqueueing wrong items on playback"}, {"oid": "2273d60ac47535e632392a77c1a572d800bb8b0d", "committedDate": "2020-05-20 11:13:07 +0200", "message": "Sleep timer adjustments"}, {"oid": "3de98ca89901251500d1c829e513aab7f98d5466", "committedDate": "2020-05-20 14:56:51 +0200", "message": "Merge pull request #4174 from ByteHamster/ui-adjustments"}, {"oid": "dd02b4b5cf2b8bd9eb7661fa530787e1dcff9b14", "committedDate": "2020-05-20 14:57:20 +0200", "message": "Merge pull request #4172 from ByteHamster/fix-wrong-enqueue"}, {"oid": "018a91d66ce42e31e493117467dfa8be76301f26", "committedDate": "2020-05-27 11:02:41 +0200", "message": "Made PendingIntent request codes unique"}, {"oid": "31404f72cf972c303c4ea7e0c8ca5aa58dc87d49", "committedDate": "2020-05-27 11:11:31 +0200", "message": "Made notification IDs unique"}, {"oid": "1fc7352702e4df1a67c1362d23f34b139e254936", "committedDate": "2020-05-29 09:32:15 +0200", "message": "Load queue in background"}, {"oid": "0b60a8acee6439d290f7d2cda5cc72f4ee7b11d4", "committedDate": "2020-05-29 09:32:46 +0200", "message": "Do not show service running notification on onCreate"}, {"oid": "c6edf77fc29de6d50b3be25da5aec1ff42f1554c", "committedDate": "2020-07-04 21:50:25 +0200", "message": "Fix #1560 for some remaining platforms still affected"}, {"oid": "14b93bb8bf22d5b271c0fe2b57f04296ded174f9", "committedDate": "2020-07-11 08:41:08 -0600", "message": "Add seekbar to Android 10 notifications"}, {"oid": "4857892b05e372073ceba1b51fe0fce62dab3c60", "committedDate": "2020-07-11 19:16:07 -0400", "message": "Convert wrapper types to primitives"}, {"oid": "37f9c08fd9d6a605bfcc393fe74a31a596671596", "committedDate": "2020-07-11 20:06:19 -0400", "message": "Fix duplicate branches"}, {"oid": "9a178726a34780277abcd4e49a758acd36ff2d68", "committedDate": "2020-07-31 23:42:17 +0200", "message": "Smoothier sleep timer (#4314)"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "410ebfe98c3ae441e57c75ceef3ac34c29ada07d", "committedDate": "2020-09-14 17:24:19 +0200", "message": "Merge pull request #4256 from Slinger/fix_hardware_buttons"}, {"oid": "3bb2e2ae17ca848ce1a24b48066210ce36f29965", "committedDate": "2020-09-27 19:42:40 -0700", "message": "Add custom rewind and fast forward for Android Auto"}, {"oid": "e31a833361b2ca19b7a4cdfdf765bbb1bcb81d75", "committedDate": "2020-09-28 09:02:23 +0200", "message": "Merge pull request #3871 from tonytamsf/android-auto-rewind"}, {"oid": "41580b57cc06c297615bc3484274859bb0c9c5c1", "committedDate": "2020-10-02 23:03:30 +0200", "message": "Local feeds: Do not display streaming confirmation (#4468)"}, {"oid": "dc7e2bebbb2b1cfa0b43bc89877418f3dd76e3d3", "committedDate": "2020-10-15 22:24:10 +0200", "message": "Load queue in background thread"}, {"oid": "aeabc7c4ef8220066b5f513dac7635a87a9cfa7d", "committedDate": "2020-10-24 19:45:00 +0200", "message": "Edit streaming confirmation dialog labels"}, {"oid": "3f80a5fdb8c46e21184917bc947e022f6dee73b4", "committedDate": "2020-10-24 23:24:43 +0200", "message": "Ensure that first DB query is executed in background thread"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "a0c604dc869f5c918d96c67a6b8a30bf1c71dce4", "committedDate": "2020-10-25 19:00:55 +0100", "message": "Merge pull request #4591 from ByteHamster/ensure-background-thread"}, {"oid": "679e4829997d886a07fe3361fd9d917db16061d2", "committedDate": "2020-10-25 19:33:21 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2da36919b394681a1a96b9d9f478de15d0c6c871", "committedDate": "2020-10-26 11:13:52 +0100", "message": "Only accept media control buttons while actually playing"}, {"oid": "3a9829bd5edfd569329f236c3df52f6a6421e74a", "committedDate": "2020-10-28 09:06:42 +0100", "message": "When doing Auto Skip to End, do the right thing (#4594)"}, {"oid": "8ad4682aa4cfc58065f02e12b5072b6ee966fafd", "committedDate": "2020-10-28 10:56:22 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "688f1b370c093abecbd4c17643e8661246fcc6c1", "committedDate": "2020-11-06 21:58:04 +0100", "message": "Fix using wrong playable object"}, {"oid": "d68b45fd3088a48f7ae09da987592d08e08b653d", "committedDate": "2020-11-15 14:26:07 +0100", "message": "Refactoring: Remove callback functions with constant value"}, {"oid": "d9151351b02e632b55d34f1fac6bada08c59731c", "committedDate": "2020-11-21 18:20:17 -0800", "message": "pause button for autos"}, {"oid": "aebc62d1364c6c4578f6b43802dbad7b01eee409", "committedDate": "2020-11-22 18:20:10 -0800", "message": "only show the play button for non-car mode, since that is taken care of already"}, {"oid": "ed47e27baae481ff0faf76ff972360211c329799", "committedDate": "2020-11-22 18:25:33 -0800", "message": "line > 120"}, {"oid": "a8fbb97cfe4a0074f96016023ef93235144b7a3b", "committedDate": "2020-11-25 16:52:20 -0800", "message": "add an icon to the Android Auto queue"}, {"oid": "8f0cbb2a8830a342263657ef8f934c8b558ab057", "committedDate": "2020-11-25 17:10:47 -0800", "message": "show number in queue"}, {"oid": "28f72aa58697e07b3e12d940e8c58d463d845df8", "committedDate": "2020-11-26 17:48:16 +0100", "message": "Fix timing issue with speed settings per podcast (#4713)"}, {"oid": "66ee677ebe647d100f0aa32f371085e1c65a1688", "committedDate": "2020-11-26 18:24:56 +0100", "message": "Merge pull request #4718 from tonytamsf/queue-image-button"}, {"oid": "28064ffa1907277f7ff36f670eaa93259e6aa6fe", "committedDate": "2020-11-30 19:57:48 +0100", "message": "Merge pull request #4707 from tonytamsf/pause-button-android-auto"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "35d010caa23124d12d8487fefadf6ad64beb50dc", "committedDate": "2021-01-23 13:03:53 +0100", "message": "Use podcast image as fallback when episode image returns 404 (#4861)"}, {"oid": "c32239be0ed0ac0b9ca44c84fb3f032a3188eb38", "committedDate": "2021-01-24 12:27:37 +0100", "message": "Android auto skip button (#4865)"}, {"oid": "1297a168507d691a29092c89f46000736a753a04", "committedDate": "2021-02-03 12:50:01 +0100", "message": "Allow remapping hardware buttons (#4881)"}, {"oid": "b6f72f8847f834eecfb392d1c5057d789cc87b04", "committedDate": "2021-02-03 23:37:51 +0100", "message": "Reduce coupling between widget and playback service"}, {"oid": "9924952e2f33cca36f44463426d63411d56edfe5", "committedDate": "2021-02-03 23:56:33 +0100", "message": "Merge pull request #4900 from ByteHamster/decouple-widget"}, {"oid": "24ea4708ea318e923eafdc222c89a158567d1f52", "committedDate": "2021-02-12 18:08:58 +0100", "message": "Remove PlaybackServiceCallbacks"}, {"oid": "aaeea78b37377cc09252c89a35fe9ae2e8542c68", "committedDate": "2021-02-15 16:04:03 +0100", "message": "changed the \"Use Episode Cover\" setting to only apply to list items. (#4908)"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "39f9796656ae9b37e995af8da2977fd16746bfda", "committedDate": "2021-02-25 23:17:34 +0100", "message": "Refactoring: Move inner classes PlayableUtils and PlayableException out of Playable (#4962)"}, {"oid": "3ebbacdf60721ed957151692847cdaac253d9233", "committedDate": "2021-03-01 20:21:25 +0100", "message": "Removed ExternalMedia"}, {"oid": "bc073ff38fc9f21998811504d0c0cd15ffb39c5e", "committedDate": "2021-03-05 17:44:33 +0100", "message": "Removed metadata loader from model"}, {"oid": "1646ba40884dfa22de95a1edf917e80df67b8ebd", "committedDate": "2021-03-07 11:35:50 +0100", "message": "Clear temporary playback speed when switching to another episode"}, {"oid": "4f5d076cb94f5c8fe40472a6727dc36e43dabf4c", "committedDate": "2021-03-26 18:59:14 +0100", "message": "Stop service properly when playback ends"}, {"oid": "ef41704166cc17b95159a891e7be36c8b334b8b4", "committedDate": "2021-04-04 19:31:59 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "74c8dc9c144ca80453b64b8743aceebf4b6cb4cf", "committedDate": "2021-04-21 23:05:47 +0200", "message": "Moved notification icons to their own module, so they don't crash old Android versions"}, {"oid": "0d49f39ea0868f57bfdcfd9536cd34d11a8ea355", "committedDate": "2021-04-22 21:17:52 +0200", "message": "Reduce dependencies of model to UserPreferences"}, {"oid": "762140bccd1d0473c63c7a767fb4457bcaa5deca", "committedDate": "2021-04-22 22:06:11 +0200", "message": "Decouple FeedMedia and sync service (#5128)"}, {"oid": "2a47f49fde3327ee3a1b3c2d66b2c950cda7e14e", "committedDate": "2021-04-22 22:27:39 +0200", "message": "Remove dependency of FeedMedia to DbWriter"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "390fb1a15ba21c47dd1a9f941900ac2dcd425bca", "committedDate": "2021-05-14 20:26:57 +0200", "message": "Use EventBus instead of broadcast for service shutdown"}, {"oid": "f56ce1ea529e90637b80f4f20853d63ccbbff5fd", "committedDate": "2021-05-14 21:03:35 +0200", "message": "Just assume we can always set the playback speed"}, {"oid": "ffaa5b0045858ac140e52472abfcbcac20926888", "committedDate": "2021-05-17 23:18:34 +0200", "message": "sync paused position on playback pause"}, {"oid": "e8eb2458996053a1350048d3b85b079db77242f8", "committedDate": "2021-07-11 19:36:02 +0200", "message": "Handle bluetooth and headphone disconnect (#4722)"}, {"oid": "0247a018a2a43b3c4c96b3f4a8d970db11ba673f", "committedDate": "2021-07-29 21:51:38 +0200", "message": "Simplify loading media icon for MediaSession"}, {"oid": "4e185f2895d773ae3a966597ab8cc65e4d1c576d", "committedDate": "2021-07-29 22:41:25 +0200", "message": "Removed left/right volume controls"}, {"oid": "666a11f3a940cad622d53d05f976046c1e5edf5a", "committedDate": "2021-07-30 22:00:28 +0200", "message": "Merge pull request #5309 from ByteHamster/remove-volume-control"}, {"oid": "b6fcc8bc5a64549e7d2bef545934a9fa0beb42aa", "committedDate": "2021-08-05 22:47:06 +0200", "message": "When continuous playback is disabled, show next episode in notification"}, {"oid": "ad9542f7b6af556140dc91dbbedb3858d3e329ce", "committedDate": "2021-08-07 08:51:11 +0200", "message": "Delay loading queue until media is loaded"}, {"oid": "90ad1adbc84bfbeeee3f448ce3f83c655433c7c6", "committedDate": "2021-08-07 09:15:43 +0200", "message": "Merge pull request #5336 from ByteHamster/load-queue-after-media"}, {"oid": "697c199275d3097d599789fd0c58d567621c282f", "committedDate": "2021-08-28 11:03:36 +0200", "message": "Fixed wrong icon sometimes ending up in the media session"}, {"oid": "bf58cdc430744e0923c898c75183650429bf1c05", "committedDate": "2021-08-28 11:49:15 +0200", "message": "Don't write noMediaPlaying when follow queue is disabled"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "5ea3661bd8fbe4e367be21366911d5130ceb7acf", "committedDate": "2021-10-10 07:22:54 -0700", "message": "limit to 100 episodes when browsing a podcast feed"}, {"oid": "0eeb47ee1e2ad4d2f91c1851480af80fcc364181", "committedDate": "2021-10-24 12:45:23 +0200", "message": "Show actual error messages instead of just the error codes"}, {"oid": "def0211358c003f4bc262f6a7aefcbf6ccbe1488", "committedDate": "2021-10-24 18:13:06 +0200", "message": "Moved playback events to their own package"}, {"oid": "8a4b0361485a0f0953af7b13d74c13dc06bd0ca7", "committedDate": "2021-10-24 18:28:27 +0200", "message": "Convert buffering update to event"}, {"oid": "a859b3bbc595689217d3d934011580be49cbcb39", "committedDate": "2021-10-24 18:52:26 +0200", "message": "Convert speed update to event"}, {"oid": "b53df742a71422ef6f491b478ffd87e30cb77b91", "committedDate": "2021-10-28 18:00:41 +0200", "message": "Convert sleep timer update to event"}, {"oid": "da50f4323234370ecd0209819f0c7c9c0705bdd2", "committedDate": "2021-10-29 00:10:22 +0200", "message": "Declare intent mutability for Android 12 compatibility"}, {"oid": "5d03405d148507ce5b1fbc2dd91888f103ae34ac", "committedDate": "2021-10-30 12:46:19 +0200", "message": "Show list of downloads on Android Auto"}, {"oid": "c8414ccf0bd962a9fa0aef6272968c22be5bb066", "committedDate": "2021-10-30 13:49:51 +0200", "message": "Merge pull request #5496 from ByteHamster/android-auto-show-downloads"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "f35086e9a2b8fe0d0362a396e5d3a7723d1de315", "committedDate": "2021-11-21 20:59:18 +0100", "message": "Remove new flag when streaming"}, {"oid": "3f81e22eed78f6f0735f3639953fdec20acad302", "committedDate": "2021-11-21 21:51:46 +0100", "message": "Bump to minimum SDK version 19 (Android 4.4)"}, {"oid": "f0100e61ac633516082ea112363132c99f7c0b7a", "committedDate": "2021-11-28 22:19:14 +0100", "message": "Chromecast rework (#5518)"}, {"oid": "561141cfffaacc159660578a46cb393d7be5bc68", "committedDate": "2021-11-28 22:20:57 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "434cd2b79f2679ca8b01c10723e5663d3b265fb6", "committedDate": "2021-12-10 21:28:09 +0100", "message": "Update AndroidX Media and ExoPlayer (#5371)"}, {"oid": "7cd813dc23193feaa93753ee62aae9a5caf4f1ac", "committedDate": "2021-12-28 20:14:19 +0100", "message": "resume playing only if the user unplugs via wired headset or bluetooth while episode in progress (#5611)"}, {"oid": "413df734953dbfbaffac312745f7a467c3ec41ff", "committedDate": "2022-01-03 14:26:56 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "485db9ebcd1a8799eed2036bf0d9c2ca210deecb", "committedDate": "2022-01-06 12:36:11 +0100", "message": "Remove queue loading logic from PlaybackServiceTaskManager"}, {"oid": "07ba067ae9de79dbcbbd54f323402578d96f1282", "committedDate": "2022-02-18 23:06:06 +0100", "message": "Decide whether or not to stream on demand"}, {"oid": "1e87e34797c8167eeec835b13b01441b61cd6719", "committedDate": "2022-02-19 14:19:59 +0100", "message": "Remove startWhenPrepared and prepareImmediately"}, {"oid": "5d82e9c84f1884537e5c7978fb9ce69897de7b55", "committedDate": "2022-02-20 14:51:08 +0100", "message": "Reset position when skipping and 'smart mark as played'"}, {"oid": "48852e081a374c495fec1162f4dce3f31dc5b2c0", "committedDate": "2022-02-22 20:14:00 +0100", "message": "Delete a few unused things"}, {"oid": "53a652dc5be9e049cba94bb4386f26ace5c84692", "committedDate": "2022-03-22 19:41:54 +0100", "message": "Fix UI not updating when forwarding while paused"}, {"oid": "484b6d093245ad08bd27e797c9d0082eabfcffc4", "committedDate": "2022-05-24 18:45:44 +0200", "message": "add episodes into android auto (#5907)"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "a528e8adfd09271e4cc33a5cddbfe6acc36fd15e", "committedDate": "2022-09-18 18:10:18 +0200", "message": "Add Quick Settings tile (#6006)"}, {"oid": "b0b95f0a05c216e8af62b21433658e2cc0c55441", "committedDate": "2022-10-04 19:48:47 +0200", "message": "Reorder queue section when pressing play, not when pausing"}, {"oid": "17f2ebd7f24f454d55056f16e3b2b0a0f6fbcf74", "committedDate": "2022-11-01 11:22:03 +0100", "message": "Use normal pause/skip keycodes, not custom intent"}, {"oid": "a29041cd4d797bf4737d6a0814ce4bb7c6420d01", "committedDate": "2022-11-01 12:06:13 +0100", "message": "No need to define INVALID_TIME multiple times"}, {"oid": "5b8cee0de0a092e78c01f195b7c7ac0bd95483d3", "committedDate": "2022-11-03 23:04:48 +0100", "message": "Decouple restoring Playable from Preferences and storing position"}, {"oid": "ae3971a58ff00755148b036794b7e5dc1c57017a", "committedDate": "2022-11-05 13:54:33 +0100", "message": "No need to have other classes depend on the entire playback service when they just need one constant"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "d8d6f1c72f0aad452eb88f002dd11995bc1230f9", "committedDate": "2022-12-18 15:01:59 +0100", "message": "Remove support for Android 4.4"}, {"oid": "731adeaf2c36842f067fc22b57f5decb3141efac", "committedDate": "2023-01-29 16:45:26 +0100", "message": "Don't stop service between episodes (#6293)"}, {"oid": "530165206b9dd9155b00c0ba418a8bdcfcd51c69", "committedDate": "2023-02-02 00:06:53 +0100", "message": "Fix when playback is started from MediaSessionCompat.Callback (#6295)"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "2b22d4b6977f9a22abfd4bc2d269c79834551ee2", "committedDate": "2023-02-20 23:19:34 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "240737e3acee6d6c56ce8ca782b99f54205a4ea9", "committedDate": "2023-02-23 21:53:56 +0100", "message": "Fix memory leaks (#6335)"}, {"oid": "59253db2e4ec8cced94541d97111429760c72a3d", "committedDate": "2023-02-24 17:10:44 +0100", "message": "Add back skip buttons and more custom actions on Android Auto (#6050)"}, {"oid": "658c47f7a7219dfdc058fe691fda72aa77521603", "committedDate": "2023-02-24 19:08:57 +0100", "message": "Resume playback does not work when streaming after data connection drops (#6272)"}, {"oid": "9cd59a67207411d428963de501347444f08989f0", "committedDate": "2023-02-25 16:33:11 +0100", "message": "Support media resumption (#6350)"}, {"oid": "ccea00e4056b85d5be0ebfa898a1ac961c2e3c56", "committedDate": "2023-02-26 16:38:31 +0100", "message": "Remove deprecated media players (#6354)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "6b6753ad84d42bd0cf0b7225241594b694c4f10d", "committedDate": "2023-03-06 22:08:49 +0100", "message": "Hide 'reconnect' settings (#6367)"}, {"oid": "2c0b970044b3180786e165588d5d94ada0c90797", "committedDate": "2023-03-12 20:09:12 +0100", "message": "Notify Android Auto that the queue changed (#6373)"}, {"oid": "8c9b61e599df6124e39066b409f62cfed083d849", "committedDate": "2023-03-31 22:18:37 +0200", "message": "Remove 'set lockscreen background' setting (#6385)"}, {"oid": "78f65349d597a2d3b251323f1ea4def77c4993d4", "committedDate": "2023-04-01 23:16:53 +0200", "message": "Update AGP to 7.4.0 (#5655)"}, {"oid": "596bdaed3fe4d5aa0c90ba5a8f21f0bf4e719ef2", "committedDate": "2023-04-06 20:00:17 +0200", "message": "Don't crash when Chromecast media is not loaded yet (#6417)"}, {"oid": "0bdf9d9e28572bba38fd36ad518e817dbdd04fe5", "committedDate": "2023-04-15 21:08:03 +0200", "message": "Add option to enable sleep timer based on current time (#6384)"}, {"oid": "f8be7d596d098e534039908ade8270e13168fd23", "committedDate": "2023-05-05 19:43:45 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "68b2fc4432b0425416a114fb67da17be03528856", "url": "https://github.com/AntennaPod/AntennaPod/commit/68b2fc4432b0425416a114fb67da17be03528856", "message": "cleaner code", "committedDate": "2020-04-10T19:43:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkyMDQ4Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r406920487", "body": "Sorry, I just noticed this line (otherwise, I would have written that earlier). Please use a constant here, just like the other preferences in this class.", "bodyText": "Sorry, I just noticed this line (otherwise, I would have written that earlier). Please use a constant here, just like the other preferences in this class.", "bodyHTML": "<p dir=\"auto\">Sorry, I just noticed this line (otherwise, I would have written that earlier). Please use a constant here, just like the other preferences in this class.</p>", "author": "ByteHamster", "createdAt": "2020-04-10T20:05:11Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java", "diffHunk": "@@ -159,6 +162,26 @@ public void onDestroy() {\n             }\n         }\n \n+        private void setupFeedAutoSkipPreference() {\n+            findPreference(\"skipping\").setOnPreferenceClickListener(preference -> {", "originalCommit": "68b2fc4432b0425416a114fb67da17be03528856", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk5NDk0Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/3975#discussion_r406994947", "bodyText": "No worries will change", "author": "tonytamsf", "createdAt": "2020-04-11T00:46:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkyMDQ4Nw=="}], "type": "inlineReview", "revised_code": {"commit": "3b418f66ede9b7f2a0a27edcc057b6b4c93ba703", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 4134a217e..8251e8716 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -163,7 +164,7 @@ public class FeedSettingsFragment extends Fragment {\n         }\n \n         private void setupFeedAutoSkipPreference() {\n-            findPreference(\"skipping\").setOnPreferenceClickListener(preference -> {\n+            findPreference(PREF_AUTO_SKIP).setOnPreferenceClickListener(preference -> {\n                 new FeedPreferenceSkipDialog(getContext(),\n                         feedPreferences.getFeedSkipIntro(),\n                         feedPreferences.getFeedSkipEnding()) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 4134a217e..8251e8716 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -163,7 +164,7 @@ public class FeedSettingsFragment extends Fragment {\n         }\n \n         private void setupFeedAutoSkipPreference() {\n-            findPreference(\"skipping\").setOnPreferenceClickListener(preference -> {\n+            findPreference(PREF_AUTO_SKIP).setOnPreferenceClickListener(preference -> {\n                 new FeedPreferenceSkipDialog(getContext(),\n                         feedPreferences.getFeedSkipIntro(),\n                         feedPreferences.getFeedSkipEnding()) {\n", "next_change": {"commit": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\nindex 8251e8716..e24c89478 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/FeedSettingsFragment.java\n", "chunk": "@@ -172,7 +193,7 @@ public class FeedSettingsFragment extends Fragment {\n                     protected void onConfirmed(int skipIntro, int skipEnding) {\n                         feedPreferences.setFeedSkipIntro(skipIntro);\n                         feedPreferences.setFeedSkipEnding(skipEnding);\n-                        feed.savePreferences();\n+                        DBWriter.setFeedPreferences(feedPreferences);\n                         EventBus.getDefault().post(\n                                 new SkipIntroEndingChangedEvent(feedPreferences.getFeedSkipIntro(),\n                                         feedPreferences.getFeedSkipEnding(),\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "92eb1d669ba14318b90ad4da4cd925279007fa3a", "message": "Merge commit", "committedDate": null}, {"oid": "24656936c70bc73443119b4e1bb492feeac6dd85", "committedDate": "2020-07-13 00:49:35 -0400", "message": "Fix a bunch of deprecations"}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "4996d4685197d8a7e7813a88e19a183c27c9a794", "committedDate": "2020-09-13 23:40:29 +0200", "message": "Hide irrelevant options for local feeds"}, {"oid": "94f8c6012d8e7dccfab37f48a259c6a9113db3a8", "committedDate": "2020-09-27 21:52:12 +0200", "message": "Checkstyle fix"}, {"oid": "1ffb9f94644b136aaf16ae13bc777485268cb247", "committedDate": "2020-11-01 15:35:39 +0100", "message": "Converted second-level fragments to stand-alone toolbar"}, {"oid": "f4bbc5535cdd8210634ecb043142b8efdedaa064", "committedDate": "2021-01-02 21:17:40 +0100", "message": "Added basic UI for editing tags"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "cc3e0c38d2796aa213cf62d07bafe7e413b28388", "committedDate": "2021-02-26 11:10:00 +0100", "message": "Removed DbWriter dependency from model"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "3f21ef50d313363238990bbfac186acf25e3c143", "committedDate": "2021-03-05 14:12:07 +0100", "message": "Added basic tag editor UI"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "4f5449a0d3c8540b32a8d54c3c770d5fe91e554e", "committedDate": "2021-07-11 18:52:11 +0200", "message": "No longer show item-specific auto-download property to users"}, {"oid": "64b72d1ae95402da73a5f1a66995d43b8fd65ce5", "committedDate": "2021-10-10 11:10:23 +0200", "message": "Reworked feed specific speed selector (#5458)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "ac8114342c4beb90745cfc5bd9235ca219a36b29", "committedDate": "2022-09-18 18:57:43 +0200", "message": "Migrate Toolbars to Material3"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "ebfda200e0a74946a95d418b01b8fc38dda3f7cb", "committedDate": "2022-12-24 17:07:43 +0100", "message": "Refresh Feed after Credentials Change (#6236)"}, {"oid": "9fed944392ee31f00ef91a01a2c34dddc876a86a", "committedDate": "2023-02-22 21:34:43 +0100", "message": "Add \"New Episodes Action\" preference (#6095)"}, {"oid": "4f7f49e1e714ce41320fff569272a1423198b2f3", "committedDate": "2023-03-14 21:03:45 +0100", "message": "Move feed download to worker (#6375)"}]}, {"oid": "3b418f66ede9b7f2a0a27edcc057b6b4c93ba703", "url": "https://github.com/AntennaPod/AntennaPod/commit/3b418f66ede9b7f2a0a27edcc057b6b4c93ba703", "message": "preference is a constant", "committedDate": "2020-04-19T18:00:53Z", "type": "commit"}]}