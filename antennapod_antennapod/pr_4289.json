{"pr_number": 4289, "pr_title": "Add subscriptions filter", "pr_author": "asdoi", "pr_createdAt": "2020-07-13T16:05:30Z", "pr_url": "https://github.com/AntennaPod/AntennaPod/pull/4289", "merge_commit": "23792f4067fe547cee32cb47d24108e7c2881321", "timeline": [{"oid": "76b65883f1ca9a30d5a10868f6ca2e8640e79cd1", "url": "https://github.com/AntennaPod/AntennaPod/commit/76b65883f1ca9a30d5a10868f6ca2e8640e79cd1", "message": "Add basic function of Hiding subscriptions where counter is zero", "committedDate": "2020-07-13T15:45:06Z", "type": "commit"}, {"oid": "30d05e12a910205bb692b2569ba4661b0c8ced58", "url": "https://github.com/AntennaPod/AntennaPod/commit/30d05e12a910205bb692b2569ba4661b0c8ced58", "message": "Better strings", "committedDate": "2020-07-13T16:03:26Z", "type": "commit"}, {"oid": "37dd3519fc462c80ed5cd609f6961c0576e50ba8", "url": "https://github.com/AntennaPod/AntennaPod/commit/37dd3519fc462c80ed5cd609f6961c0576e50ba8", "message": "add filter settings list", "committedDate": "2020-07-16T10:29:22Z", "type": "commit"}, {"oid": "88661a1fd2252372675de046bda6413b95af0cda", "url": "https://github.com/AntennaPod/AntennaPod/commit/88661a1fd2252372675de046bda6413b95af0cda", "message": "add filter message message", "committedDate": "2020-07-16T16:32:02Z", "type": "commit"}, {"oid": "a7053ec82b02415b4a562d065db4f4afe76b5071", "url": "https://github.com/AntennaPod/AntennaPod/commit/a7053ec82b02415b4a562d065db4f4afe76b5071", "message": "update subscriptions", "committedDate": "2020-07-16T16:39:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA4NjQzMQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r456086431", "body": "Please use `if` statements with braces (that's why CI fails)", "bodyText": "Please use if statements with braces (that's why CI fails)", "bodyHTML": "<p dir=\"auto\">Please use <code>if</code> statements with braces (that's why CI fails)</p>", "author": "ByteHamster", "createdAt": "2020-07-16T21:24:26Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java", "diffHunk": "@@ -111,6 +119,10 @@ private void updateSelection() {\n             }\n         }\n         navAdapter.notifyDataSetChanged();\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n+            filteredMsg.setVisibility(View.VISIBLE);", "originalCommit": "a7053ec82b02415b4a562d065db4f4afe76b5071", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bba061ba963b08b326efc3b2d4bb87e9a00764b0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 7487d13f6..ec3a6f8c1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -119,10 +119,11 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n             }\n         }\n         navAdapter.notifyDataSetChanged();\n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             filteredMsg.setVisibility(View.VISIBLE);\n-        else\n+        } else {\n             filteredMsg.setVisibility(View.GONE);\n+        }\n     }\n \n     @Override\n", "next_change": {"commit": "5a24c3ce1f0b40eb047796e5a723bb8cb1edf406", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ec3a6f8c1..dcad8503e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -119,11 +115,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n             }\n         }\n         navAdapter.notifyDataSetChanged();\n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            filteredMsg.setVisibility(View.VISIBLE);\n-        } else {\n-            filteredMsg.setVisibility(View.GONE);\n-        }\n     }\n \n     @Override\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 7487d13f6..04714f4aa 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -119,10 +111,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n             }\n         }\n         navAdapter.notifyDataSetChanged();\n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n-            filteredMsg.setVisibility(View.VISIBLE);\n-        else\n-            filteredMsg.setVisibility(View.GONE);\n     }\n \n     @Override\n", "next_change": {"commit": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 04714f4aa..bec459bed 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -93,26 +98,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n         return root;\n     }\n \n-    private void updateSelection() {\n-        String lastNavFragment = getLastNavFragment(getContext());\n-        int tagIndex = navAdapter.getTags().indexOf(lastNavFragment);\n-        if (tagIndex >= 0) {\n-            selectedNavListIndex = tagIndex;\n-        } else if (StringUtils.isNumeric(lastNavFragment)) { // last fragment was not a list, but a feed\n-            long feedId = Long.parseLong(lastNavFragment);\n-            if (navDrawerData != null) {\n-                List<Feed> feeds = navDrawerData.feeds;\n-                for (int i = 0; i < feeds.size(); i++) {\n-                    if (feeds.get(i).getId() == feedId) {\n-                        selectedNavListIndex = navAdapter.getSubscriptionOffset() + i;\n-                        break;\n-                    }\n-                }\n-            }\n-        }\n-        navAdapter.notifyDataSetChanged();\n-    }\n-\n     @Override\n     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n         super.onViewCreated(view, savedInstanceState);\n", "next_change": {"commit": "20f4d9739d996921c9b1e6b840df6e7fe2136b59", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex bec459bed..51c8c48ad 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -93,8 +97,8 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n \n         root.findViewById(R.id.nav_settings).setOnClickListener(v ->\n                 startActivity(new Intent(getActivity(), PreferenceActivity.class)));\n-        getContext().getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE)\n-                .registerOnSharedPreferenceChangeListener(this);\n+\n+        preferences.registerOnSharedPreferenceChangeListener(this);\n         return root;\n     }\n \n", "next_change": {"commit": "10c70dd5f1bd498de32e323cd2832e247df80db7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 51c8c48ad..0916b93ad 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -102,6 +136,23 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         return root;\n     }\n \n+    private void setupDrawerRoundBackground(View root) {\n+        // Akin to this logic:\n+        //   https://github.com/material-components/material-components-android/blob/8938da8c/lib/java/com/google/android/material/navigation/NavigationView.java#L405\n+        ShapeAppearanceModel.Builder shapeBuilder = ShapeAppearanceModel.builder();\n+        float cornerSize = getResources().getDimension(R.dimen.drawer_corner_size);\n+        boolean isRtl = getResources().getConfiguration().getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;\n+        if (isRtl) {\n+            shapeBuilder.setTopLeftCornerSize(cornerSize).setBottomLeftCornerSize(cornerSize);\n+        } else {\n+            shapeBuilder.setTopRightCornerSize(cornerSize).setBottomRightCornerSize(cornerSize);\n+        }\n+        MaterialShapeDrawable drawable = new MaterialShapeDrawable(shapeBuilder.build());\n+        int themeColor = ThemeUtils.getColorFromAttr(root.getContext(), android.R.attr.windowBackground);\n+        drawable.setFillColor(ColorStateList.valueOf(themeColor));\n+        root.setBackground(drawable);\n+    }\n+\n     @Override\n     public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n         super.onViewCreated(view, savedInstanceState);\n", "next_change": null}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "242614245d9259ede3e368ac520c31105a2fd87f", "committedDate": "2020-07-16 17:25:20 +0200", "message": "Close player when selecting sidebar entry"}, {"oid": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "committedDate": "2020-07-21 09:50:20 +0200", "message": "Do not warn that all files are deleted when removing a local feed"}, {"oid": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "committedDate": "2020-08-15 19:48:23 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "1324c81f22a30c80d267f447bd3213b94516d134", "committedDate": "2020-10-16 13:55:09 +0200", "message": "Add progress bar when loading feeds in sidebar (#4533)"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "35f0827f84d026a70c5df0598f3327c0f3c86c90", "committedDate": "2020-10-16 14:15:10 +0200", "message": "Fixed NavDrawer sometimes not updating"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "101f4e34edf940636948505f6cf4411bedae01d7", "committedDate": "2020-12-02 11:11:13 +0100", "message": "Use RxJava for deleting feeds"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "committedDate": "2021-02-16 22:20:11 +0100", "message": "Don't flicker with nav drawer loading indicator when refreshing"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "20f4d9739d996921c9b1e6b840df6e7fe2136b59", "committedDate": "2021-03-05 13:23:48 +0100", "message": "Store opened folders across app launches"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "fd569aefa8cdd8b70245123f1a05e2fe13a2cc37", "committedDate": "2021-03-06 20:51:36 +0100", "message": "Fix regression: flashing progress bar"}, {"oid": "a3da79235a5965d830b164834cc95d3a1c762071", "committedDate": "2021-03-07 10:52:26 +0100", "message": "Only react to onContextItemSelected if something was actually selected"}, {"oid": "9d2467a4e237608c192738357b659c13eff37379", "committedDate": "2021-03-07 11:18:36 +0100", "message": "Merge pull request #4998 from ByteHamster/fix-navdrawer-pressed"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "7ebaa9f619e004c8f2231bce1d170007c9de1544", "committedDate": "2021-08-17 23:57:49 +0200", "message": "Fix: #5298 \"Add to folder\" in podcast contextual side menu (#5344)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "committedDate": "2021-11-06 22:28:49 +0100", "message": "Fix crash when deleting feed"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "committedDate": "2022-02-19 14:14:08 +0100", "message": "Fix side drawer detecting click on 'remove item'"}, {"oid": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "committedDate": "2022-03-15 19:48:53 +0100", "message": "Fix context menu click ending up in wrong fragment"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "ad9de4467bac4b8ca235010a6b8532621c3a03e1", "committedDate": "2022-09-10 16:09:26 +0200", "message": "Add 'default screen' setting (replaces 'back button behavior') (#6041)"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "8248bc6bb1f5f71a1e6be3101e1b2173948bf516", "committedDate": "2023-02-12 21:05:24 +0100", "message": "Automatically switch to different screen when hiding current one from drawer (#6254)"}, {"oid": "c98194f519c66e5af1575b1c6ffac5af16594141", "committedDate": "2023-02-19 11:48:48 +0100", "message": "Remove another global callback object (#6316)"}, {"oid": "a828660b446fcc1a8a518c7a30622b905c7bf358", "committedDate": "2023-04-07 14:21:52 +0200", "message": "Do not switch screens when clicking \"Remove podcast\" (#6259)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "10c70dd5f1bd498de32e323cd2832e247df80db7", "committedDate": "2023-05-28 11:18:56 +0200", "message": "Make drawer's corners round (#6478)"}]}, {"oid": "bba061ba963b08b326efc3b2d4bb87e9a00764b0", "url": "https://github.com/AntennaPod/AntennaPod/commit/bba061ba963b08b326efc3b2d4bb87e9a00764b0", "message": "add suggestions", "committedDate": "2020-07-17T10:49:39Z", "type": "commit"}, {"oid": "2cbb98bfa5091f91c6778780f6c3de7cb2582b0b", "url": "https://github.com/AntennaPod/AntennaPod/commit/2cbb98bfa5091f91c6778780f6c3de7cb2582b0b", "message": "some ui changes", "committedDate": "2020-07-17T10:57:14Z", "type": "commit"}, {"oid": "88715e79fa314ab9da242467c2605b14f577db58", "url": "https://github.com/AntennaPod/AntennaPod/commit/88715e79fa314ab9da242467c2605b14f577db58", "message": "new preference category \"Subscriptions\"", "committedDate": "2020-07-17T11:00:40Z", "type": "commit"}, {"oid": "9b6dd6b905a53fe2b6f1e05f1361a3c122a8a7be", "url": "https://github.com/AntennaPod/AntennaPod/commit/9b6dd6b905a53fe2b6f1e05f1361a3c122a8a7be", "message": "undo reformat in some more files", "committedDate": "2020-07-17T11:07:00Z", "type": "commit"}, {"oid": "6a7f68b545437f1a30a1247228a98c2a79b5d9c9", "url": "https://github.com/AntennaPod/AntennaPod/commit/6a7f68b545437f1a30a1247228a98c2a79b5d9c9", "message": "Revert \"undo reformat in some more files\"\n\nThis reverts commit 9b6dd6b9", "committedDate": "2020-07-17T11:09:45Z", "type": "commit"}, {"oid": "3bb44e11f6eedc9a559cf8f36ef528a42be6d711", "url": "https://github.com/AntennaPod/AntennaPod/commit/3bb44e11f6eedc9a559cf8f36ef528a42be6d711", "message": "update user interface sum", "committedDate": "2020-07-20T12:20:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxMjYxOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r457912619", "body": "Please add braces. To see more checkstyle violations, please have a look at the output of the `static-analysis` CI task.", "bodyText": "Please add braces. To see more checkstyle violations, please have a look at the output of the static-analysis CI task.", "bodyHTML": "<p dir=\"auto\">Please add braces. To see more checkstyle violations, please have a look at the output of the <code>static-analysis</code> CI task.</p>", "author": "ByteHamster", "createdAt": "2020-07-21T08:05:17Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java", "diffHunk": "@@ -198,6 +209,11 @@ private void loadSubscriptions() {\n                     emptyView.updateVisibility();\n                     progressBar.setVisibility(View.GONE);\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n+\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n+            filterMsg.setVisibility(View.VISIBLE);\n+        else\n+            filterMsg.setVisibility(View.GONE);", "originalCommit": "3bb44e11f6eedc9a559cf8f36ef528a42be6d711", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81a7b13981dddc2c345aadff58cfe8cc7e6831e0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 44a7cfbd6..e66396645 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -210,10 +210,11 @@ public class SubscriptionFragment extends Fragment {\n                     progressBar.setVisibility(View.GONE);\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             filterMsg.setVisibility(View.VISIBLE);\n-        else\n+        } else {\n             filterMsg.setVisibility(View.GONE);\n+        }\n     }\n \n     @Override\n", "next_change": {"commit": "c24d8ff8709c5ec685064f69c980d7a7565773b5", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex e66396645..665ad4424 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -211,9 +209,9 @@ public class SubscriptionFragment extends Fragment {\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n \n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            filterMsg.setVisibility(View.VISIBLE);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            filterMsg.setVisibility(View.GONE);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n     }\n \n", "next_change": {"commit": "dbd75d83783be0f5696866a5d151360011865158", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 665ad4424..f84daf323 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -209,6 +211,8 @@ public class SubscriptionFragment extends Fragment {\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n \n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.feed_is_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n             feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n             feedsFilteredMsg.setVisibility(View.GONE);\n", "next_change": {"commit": "f54024d9f5d7557138038582c46f772823bfc0e5", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex f84daf323..4cb61a196 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -211,7 +211,7 @@ public class SubscriptionFragment extends Fragment {\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n \n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.feed_is_filtered));\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.subscriptions_are_filtered));\n             Iconify.addIcons(feedsFilteredMsg);\n             feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 44a7cfbd6..33e4cb764 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -210,10 +210,17 @@ public class SubscriptionFragment extends Fragment {\n                     progressBar.setVisibility(View.GONE);\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)\n-            filterMsg.setVisibility(View.VISIBLE);\n-        else\n-            filterMsg.setVisibility(View.GONE);\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+        } else {\n+            feedsFilteredMsg.setVisibility(View.GONE);\n+        }\n+    }\n+\n+    private int getDefaultNumOfColumns() {\n+        return getResources().getInteger(R.integer.subscriptions_default_num_of_columns);\n     }\n \n     @Override\n", "next_change": {"commit": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 33e4cb764..1e248af07 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -209,18 +198,6 @@ public class SubscriptionFragment extends Fragment {\n                     emptyView.updateVisibility();\n                     progressBar.setVisibility(View.GONE);\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-\n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n-        } else {\n-            feedsFilteredMsg.setVisibility(View.GONE);\n-        }\n-    }\n-\n-    private int getDefaultNumOfColumns() {\n-        return getResources().getInteger(R.integer.subscriptions_default_num_of_columns);\n     }\n \n     @Override\n", "next_change": {"commit": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 1e248af07..7d6a3dc40 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -198,6 +209,18 @@ public class SubscriptionFragment extends Fragment {\n                     emptyView.updateVisibility();\n                     progressBar.setVisibility(View.GONE);\n                 }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n+\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+        } else {\n+            feedsFilteredMsg.setVisibility(View.GONE);\n+        }\n+    }\n+\n+    private int getDefaultNumOfColumns() {\n+        return getResources().getInteger(R.integer.subscriptions_default_num_of_columns);\n     }\n \n     @Override\n", "next_change": {"commit": "4b7cb20a7aa95c52eadb034ff91c9376e347997f", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 7d6a3dc40..c9f85b22e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -229,37 +265,24 @@ public class SubscriptionFragment extends Fragment {\n         AdapterView.AdapterContextMenuInfo adapterInfo = (AdapterView.AdapterContextMenuInfo) menuInfo;\n         int position = adapterInfo.position;\n \n-        Object selectedObject = subscriptionAdapter.getItem(position);\n-        if (selectedObject.equals(SubscriptionsAdapter.ADD_ITEM_OBJ)) {\n-            mPosition = position;\n-            return;\n-        }\n-\n-        Feed feed = (Feed) selectedObject;\n+        NavDrawerData.DrawerItem selectedObject = (NavDrawerData.DrawerItem) subscriptionAdapter.getItem(position);\n \n-        MenuInflater inflater = requireActivity().getMenuInflater();\n-        inflater.inflate(R.menu.nav_feed_context, menu);\n-\n-        menu.setHeaderTitle(feed.getTitle());\n-\n-        mPosition = position;\n+        if (selectedObject.type == NavDrawerData.DrawerItem.Type.FEED) {\n+            MenuInflater inflater = requireActivity().getMenuInflater();\n+            inflater.inflate(R.menu.nav_feed_context, menu);\n+            selectedFeed = ((NavDrawerData.FeedDrawerItem) selectedObject).feed;\n+        }\n+        menu.setHeaderTitle(selectedObject.getTitle());\n     }\n \n     @Override\n     public boolean onContextItemSelected(MenuItem item) {\n-        final int position = mPosition;\n-        mPosition = -1; // reset\n-        if (position < 0) {\n+        if (selectedFeed == null) {\n             return false;\n         }\n \n-        Object selectedObject = subscriptionAdapter.getItem(position);\n-        if (selectedObject.equals(SubscriptionsAdapter.ADD_ITEM_OBJ)) {\n-            // this is the add object, do nothing\n-            return false;\n-        }\n-\n-        Feed feed = (Feed) selectedObject;\n+        Feed feed = selectedFeed;\n+        selectedFeed = null;\n         switch (item.getItemId()) {\n             case R.id.remove_all_new_flags_item:\n                 displayConfirmationDialog(\n", "next_change": {"commit": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex c9f85b22e..23341ff66 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -283,28 +314,27 @@ public class SubscriptionFragment extends Fragment implements Toolbar.OnMenuItem\n \n         Feed feed = selectedFeed;\n         selectedFeed = null;\n-        switch (item.getItemId()) {\n-            case R.id.remove_all_new_flags_item:\n-                displayConfirmationDialog(\n-                        R.string.remove_all_new_flags_label,\n-                        R.string.remove_all_new_flags_confirmation_msg,\n-                        () -> DBWriter.removeFeedNewFlag(feed.getId()));\n-                return true;\n-            case R.id.mark_all_read_item:\n-                displayConfirmationDialog(\n-                        R.string.mark_all_read_label,\n-                        R.string.mark_all_read_confirmation_msg,\n-                        () -> DBWriter.markFeedRead(feed.getId()));\n-                return true;\n-            case R.id.rename_item:\n-                new RenameFeedDialog(getActivity(), feed).show();\n-                return true;\n-            case R.id.remove_item:\n-                RemoveFeedDialog.show(getContext(), feed, null);\n-                return true;\n-            default:\n-                return super.onContextItemSelected(item);\n+        final int itemId = item.getItemId();\n+        if (itemId == R.id.remove_all_new_flags_item) {\n+            displayConfirmationDialog(\n+                    R.string.remove_all_new_flags_label,\n+                    R.string.remove_all_new_flags_confirmation_msg,\n+                    () -> DBWriter.removeFeedNewFlag(feed.getId()));\n+            return true;\n+        } else if (itemId == R.id.mark_all_read_item) {\n+            displayConfirmationDialog(\n+                    R.string.mark_all_read_label,\n+                    R.string.mark_all_read_confirmation_msg,\n+                    () -> DBWriter.markFeedRead(feed.getId()));\n+            return true;\n+        } else if (itemId == R.id.rename_item) {\n+            new RenameFeedDialog(getActivity(), feed).show();\n+            return true;\n+        } else if (itemId == R.id.remove_item) {\n+            RemoveFeedDialog.show(getContext(), feed, null);\n+            return true;\n         }\n+        return super.onContextItemSelected(item);\n     }\n \n     private <T> void displayConfirmationDialog(@StringRes int title, @StringRes int message, Callable<? extends T> task) {\n", "next_change": {"commit": "eacc90af299220c60fd504ef7970775aa344b44c", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 23341ff66..b720f1167 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -333,6 +348,9 @@ public class SubscriptionFragment extends Fragment implements Toolbar.OnMenuItem\n         } else if (itemId == R.id.remove_item) {\n             RemoveFeedDialog.show(getContext(), feed, null);\n             return true;\n+        } else if (itemId == R.id.multi_select) {\n+            speedDialView.setVisibility(View.VISIBLE);\n+            return subscriptionAdapter.onContextItemSelected(item);\n         }\n         return super.onContextItemSelected(item);\n     }\n", "next_change": {"commit": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex b720f1167..a87575681 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -339,14 +344,14 @@ public class SubscriptionFragment extends Fragment\n                     R.string.remove_all_new_flags_confirmation_msg,\n                     () -> DBWriter.removeFeedNewFlag(feed.getId()));\n             return true;\n-        } else if (itemId == R.id.add_to_folder) {\n+        } else if (itemId == R.id.edit_tags) {\n             TagSettingsDialog.newInstance(feed.getPreferences()).show(getChildFragmentManager(), TagSettingsDialog.TAG);\n             return true;\n         } else if (itemId == R.id.rename_item) {\n             new RenameFeedDialog(getActivity(), feed).show();\n             return true;\n         } else if (itemId == R.id.remove_item) {\n-            RemoveFeedDialog.show(getContext(), feed, null);\n+            RemoveFeedDialog.show(getContext(), feed);\n             return true;\n         } else if (itemId == R.id.multi_select) {\n             speedDialView.setVisibility(View.VISIBLE);\n", "next_change": {"commit": "a399702da2e222c586f8f5697076d373b667929a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex a87575681..200f4dcd6 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -345,10 +352,11 @@ public class SubscriptionFragment extends Fragment\n                     () -> DBWriter.removeFeedNewFlag(feed.getId()));\n             return true;\n         } else if (itemId == R.id.edit_tags) {\n-            TagSettingsDialog.newInstance(feed.getPreferences()).show(getChildFragmentManager(), TagSettingsDialog.TAG);\n+            TagSettingsDialog.newInstance(Collections.singletonList(feed.getPreferences()))\n+                    .show(getChildFragmentManager(), TagSettingsDialog.TAG);\n             return true;\n         } else if (itemId == R.id.rename_item) {\n-            new RenameFeedDialog(getActivity(), feed).show();\n+            new RenameItemDialog(getActivity(), feed).show();\n             return true;\n         } else if (itemId == R.id.remove_item) {\n             RemoveFeedDialog.show(getContext(), feed);\n", "next_change": {"commit": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 200f4dcd6..697ecebf4 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -358,7 +357,7 @@ public class SubscriptionFragment extends Fragment\n         } else if (itemId == R.id.rename_item) {\n             new RenameItemDialog(getActivity(), feed).show();\n             return true;\n-        } else if (itemId == R.id.remove_item) {\n+        } else if (itemId == R.id.remove_feed) {\n             RemoveFeedDialog.show(getContext(), feed);\n             return true;\n         } else if (itemId == R.id.multi_select) {\n", "next_change": {"commit": "371faf7dfb55d7b233523184dc69e88789ecdc5b", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 697ecebf4..42b6580a2 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -357,7 +361,7 @@ public class SubscriptionFragment extends Fragment\n         } else if (itemId == R.id.rename_item) {\n             new RenameItemDialog(getActivity(), feed).show();\n             return true;\n-        } else if (itemId == R.id.remove_feed) {\n+        } else if (itemId == R.id.remove_item) {\n             RemoveFeedDialog.show(getContext(), feed);\n             return true;\n         } else if (itemId == R.id.multi_select) {\n", "next_change": {"commit": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 42b6580a2..9f6167c65 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -361,7 +364,7 @@ public class SubscriptionFragment extends Fragment\n         } else if (itemId == R.id.rename_item) {\n             new RenameItemDialog(getActivity(), feed).show();\n             return true;\n-        } else if (itemId == R.id.remove_item) {\n+        } else if (itemId == R.id.remove_feed) {\n             RemoveFeedDialog.show(getContext(), feed);\n             return true;\n         } else if (itemId == R.id.multi_select) {\n", "next_change": {"commit": "f9e344e2154bb43fa25fabaf4c05114b15d10456", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\nindex 9f6167c65..15886cf9a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/SubscriptionFragment.java\n", "chunk": "@@ -351,43 +342,11 @@ public class SubscriptionFragment extends Fragment\n         }\n \n         Feed feed = ((NavDrawerData.FeedDrawerItem) drawerItem).feed;\n-        if (itemId == R.id.remove_all_new_flags_item) {\n-            displayConfirmationDialog(\n-                    R.string.remove_all_new_flags_label,\n-                    R.string.remove_all_new_flags_confirmation_msg,\n-                    () -> DBWriter.removeFeedNewFlag(feed.getId()));\n-            return true;\n-        } else if (itemId == R.id.edit_tags) {\n-            TagSettingsDialog.newInstance(Collections.singletonList(feed.getPreferences()))\n-                    .show(getChildFragmentManager(), TagSettingsDialog.TAG);\n-            return true;\n-        } else if (itemId == R.id.rename_item) {\n-            new RenameItemDialog(getActivity(), feed).show();\n-            return true;\n-        } else if (itemId == R.id.remove_feed) {\n-            RemoveFeedDialog.show(getContext(), feed);\n-            return true;\n-        } else if (itemId == R.id.multi_select) {\n+        if (itemId == R.id.multi_select) {\n             speedDialView.setVisibility(View.VISIBLE);\n             return subscriptionAdapter.onContextItemSelected(item);\n         }\n-        return super.onContextItemSelected(item);\n-    }\n-\n-    private <T> void displayConfirmationDialog(@StringRes int title, @StringRes int message, Callable<? extends T> task) {\n-        ConfirmationDialog dialog = new ConfirmationDialog(getActivity(), title, message) {\n-            @Override\n-            @SuppressLint(\"CheckResult\")\n-            public void onConfirmButtonPressed(DialogInterface clickedDialog) {\n-                clickedDialog.dismiss();\n-                Observable.fromCallable(task)\n-                        .subscribeOn(Schedulers.io())\n-                        .observeOn(AndroidSchedulers.mainThread())\n-                        .subscribe(result -> loadSubscriptions(),\n-                                error -> Log.e(TAG, Log.getStackTraceString(error)));\n-            }\n-        };\n-        dialog.createNewDialog().show();\n+        return FeedMenuHandler.onMenuItemClicked(this, item.getItemId(), feed, this::loadSubscriptions);\n     }\n \n     @Subscribe(threadMode = ThreadMode.MAIN)\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "committedDate": "2020-07-21 09:50:20 +0200", "message": "Do not warn that all files are deleted when removing a local feed"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "bd0d0b5008fe2735b335df03ffe16bdae73785d0", "committedDate": "2020-09-03 13:16:48 +0200", "message": "add feed sort menu item"}, {"oid": "f29a1ad98f6903df9bb621599213e4663d166a14", "committedDate": "2020-09-07 22:26:06 +0200", "message": "fix fallthrough"}, {"oid": "5d96effbd500a8378d9058f78c3149c048f3caf8", "committedDate": "2020-09-12 21:59:01 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "0de1cbad2f75e1ea2e7c1e18ae836a4f96d0943f", "committedDate": "2020-10-04 15:47:12 +0200", "message": "Use swipe to refresh (#4401)"}, {"oid": "9833bd753b440c300cfdeccf73fb94226488910c", "committedDate": "2020-10-09 09:05:07 +0200", "message": "Replacing deprecated default constructor of handler with constructor that accepts Looper (#4513)"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "8975b60ecd81acae9dd12ff20e73374322fa9137", "committedDate": "2020-11-01 15:35:44 +0100", "message": "Converted main fragments except pagers to stand-alone toolbar"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "ed2348570c36b77361a3d064a6676fa923002677", "committedDate": "2020-11-04 00:13:07 +0100", "message": "Use radio buttons for column number on subscriptions screen"}, {"oid": "101f4e34edf940636948505f6cf4411bedae01d7", "committedDate": "2020-12-02 11:11:13 +0100", "message": "Use RxJava for deleting feeds"}, {"oid": "3411fcd10d9a6cabc27c77d4e95bd09890b79844", "committedDate": "2021-01-01 20:04:08 +0100", "message": "Merge branch 'master' into develop"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "df4b01361116aaa19cc5138ff5f0e58ae0af57a1", "committedDate": "2021-02-16 14:42:37 +0100", "message": "Fixed disappearing drawer toggle"}, {"oid": "f0358eb344ab3f0782f613861dca59d483f60b6f", "committedDate": "2021-02-19 20:39:34 +0100", "message": "Don't flicker progress bar while refreshing"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "4b7cb20a7aa95c52eadb034ff91c9376e347997f", "committedDate": "2021-03-05 11:26:08 +0100", "message": "Fixed long-pressing items on subscriptions page"}, {"oid": "8586c7672053e45d2bfce29909a6a99cd68c4b8f", "committedDate": "2021-03-05 13:40:14 +0100", "message": "Make folders work on subscriptions page"}, {"oid": "998535515bae8ec5bcd2bd95bc0cf4f34416dff7", "committedDate": "2021-03-28 22:32:40 +0200", "message": "Make AntennaPod pass the medium SpotBugs findings"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "9de72a2cab66e852735dd0c9cb6e1452b00fc250", "committedDate": "2021-08-08 13:48:38 +0200", "message": "Live results in local search"}, {"oid": "06713ded886e6a22c05be3eefe0526b7a91b3cdb", "committedDate": "2021-08-12 19:18:35 +0200", "message": "Make Accidental Pull Down Refresh less likely (#5281)"}, {"oid": "7ebaa9f619e004c8f2231bce1d170007c9de1544", "committedDate": "2021-08-17 23:57:49 +0200", "message": "Fix: #5298 \"Add to folder\" in podcast contextual side menu (#5344)"}, {"oid": "eacc90af299220c60fd504ef7970775aa344b44c", "committedDate": "2021-08-23 23:46:38 +0200", "message": "Feed multi select (#5261)"}, {"oid": "0a22e9fc3848a006247d1460c49e66e0c0e08a7c", "committedDate": "2021-09-24 10:18:54 +0200", "message": "Update AndroidX Fragment to 1.3.6 (#5201)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "11a7d67f9772482a770378162ef74c94272e43f9", "committedDate": "2021-10-03 15:50:48 +0200", "message": "Fix FAB overlay sometimes not showing"}, {"oid": "a540eca0d5fb6861f0ad168214710248672adbd7", "committedDate": "2021-10-05 21:18:45 +0200", "message": "End select mode when the number of items got smaller"}, {"oid": "63d6f3f2e39c407918d3f3c6b359260e5bce5d2d", "committedDate": "2021-10-05 22:00:10 +0200", "message": "Merge pull request #5452 from ByteHamster/end-select-fewer"}, {"oid": "e734d43e7287a0f0f3f678c5875a34bf6bc75716", "committedDate": "2021-10-14 21:40:12 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "committedDate": "2021-11-06 22:28:49 +0100", "message": "Fix crash when deleting feed"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "849bf4ad854973d39698613c3a356c09c87e687c", "committedDate": "2022-01-06 14:36:11 +0100", "message": "Rewrite download request creation (#5530)"}, {"oid": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "committedDate": "2022-02-19 14:14:08 +0100", "message": "Fix side drawer detecting click on 'remove item'"}, {"oid": "371faf7dfb55d7b233523184dc69e88789ecdc5b", "committedDate": "2022-02-19 19:32:44 +0100", "message": "Added a Statistics Button on the Subscriptions toolbar (#5706)"}, {"oid": "7451da112145f96ecddc314eea7b90fcb03737dd", "committedDate": "2022-02-26 19:44:17 +0100", "message": "Move statistics screens to new module"}, {"oid": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "committedDate": "2022-03-15 19:48:53 +0100", "message": "Fix context menu click ending up in wrong fragment"}, {"oid": "4a91d6f5dea2c050b3713c8fc899d11ce9272dd6", "committedDate": "2022-04-02 12:03:44 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "f0fe9aa7103ea24505d06b7c63a730a8a6d933b0", "committedDate": "2022-05-07 20:52:45 +0200", "message": "Fix column change on subscriptions screen"}, {"oid": "1054e13221003e031fcbf05fcd2373986196b97f", "committedDate": "2022-06-30 11:11:35 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "239a30c26760d0761912d70600a8da7826f36c66", "committedDate": "2022-07-09 15:29:18 +0200", "message": "Scroll to top by long-pressing toolbar"}, {"oid": "f5ae8815612c01c0e9bb3c4407b4813792fa6959", "committedDate": "2022-07-09 19:46:46 +0200", "message": "Merge pull request #5962 from ByteHamster/long-press-toolbar"}, {"oid": "d3b5b0e14e11d96a12c1bfb1fdf8a17c7dd6fa57", "committedDate": "2022-08-20 16:47:14 +0200", "message": "Change subscriptions icon from folder to grid view"}, {"oid": "9558e61bad5fb00342a89ba3055d62daee779adf", "committedDate": "2022-08-20 20:48:11 +0200", "message": "Simplify updating refresh menu"}, {"oid": "4c88a1aa69b698284ab0f70e55f059bcd514e654", "committedDate": "2022-08-28 16:02:21 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "c42ed1d1874142f52385ad1c7ce45bffa17e4981", "committedDate": "2022-08-30 18:45:41 +0200", "message": "Use dummy items instead of loading progress bar"}, {"oid": "ac8114342c4beb90745cfc5bd9235ca219a36b29", "committedDate": "2022-09-18 18:57:43 +0200", "message": "Migrate Toolbars to Material3"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "b670cf6111a0c04dee0bac1687c6fa3320bba89c", "committedDate": "2022-12-11 17:56:07 +0100", "message": "Do not animate dummy views (#6231)"}, {"oid": "c478b49b1e95b71335e56e021df8a69306401c08", "committedDate": "2022-12-18 18:59:30 +0100", "message": "Revert back to showing progress bars while loading"}, {"oid": "f9e344e2154bb43fa25fabaf4c05114b15d10456", "committedDate": "2023-02-02 00:04:07 +0100", "message": "Add long press menu to search results in subscriptions list (#6267)"}, {"oid": "4096aaf47ea6f0341274e82fc14c5a3960a83f5f", "committedDate": "2023-02-11 19:04:14 +0100", "message": "Convert subscriptions screen to cards (#6261)"}, {"oid": "4f7f49e1e714ce41320fff569272a1423198b2f3", "committedDate": "2023-03-14 21:03:45 +0100", "message": "Move feed download to worker (#6375)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxNjAzNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r457916037", "body": "Please turn the iteration order around (instead of `0...size` to `size...0`). The reason is that this sometimes skips indices when removing an item. You can therefore end up with feeds that have counter 0 and are still displayed.", "bodyText": "Please turn the iteration order around (instead of 0...size to size...0). The reason is that this sometimes skips indices when removing an item. You can therefore end up with feeds that have counter 0 and are still displayed.", "bodyHTML": "<p dir=\"auto\">Please turn the iteration order around (instead of <code>0...size</code> to <code>size...0</code>). The reason is that this sometimes skips indices when removing an item. You can therefore end up with feeds that have counter 0 and are still displayed.</p>", "author": "ByteHamster", "createdAt": "2020-07-21T08:11:11Z", "path": "core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java", "diffHunk": "@@ -898,6 +898,16 @@ public static NavDrawerData getNavDrawerData() {\n         }\n         final LongIntMap feedCounters = adapter.getFeedCounters(feedIds);\n \n+        int feedFilter = UserPreferences.getFeedFilter();\n+        if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n+            for (int i = 0; i < feeds.size(); i++) {", "originalCommit": "3bb44e11f6eedc9a559cf8f36ef528a42be6d711", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81a7b13981dddc2c345aadff58cfe8cc7e6831e0", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 00ecf490a..a7a897921 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -900,7 +900,7 @@ public final class DBReader {\n \n         int feedFilter = UserPreferences.getFeedFilter();\n         if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n-            for (int i = 0; i < feeds.size(); i++) {\n+            for (int i = feeds.size() - 1; i >= 0; i--) {\n                 if (feedCounters.get(feeds.get(i).getId()) <= 0) {\n                     feedCounters.delete(feeds.get(i).getId());\n                     feeds.remove(i);\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 00ecf490a..0de67b306 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -900,7 +803,7 @@ public final class DBReader {\n \n         int feedFilter = UserPreferences.getFeedFilter();\n         if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n-            for (int i = 0; i < feeds.size(); i++) {\n+            for (int i = feeds.size() - 1; i >= 0; i--) {\n                 if (feedCounters.get(feeds.get(i).getId()) <= 0) {\n                     feedCounters.delete(feeds.get(i).getId());\n                     feeds.remove(i);\n", "next_change": {"commit": "43d36c7560eb018a2e450466d75c1dbbf136a961", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 0de67b306..7330a6c80 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -801,16 +899,6 @@ public final class DBReader {\n         }\n         final LongIntMap feedCounters = adapter.getFeedCounters(feedIds);\n \n-        int feedFilter = UserPreferences.getFeedFilter();\n-        if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n-            for (int i = feeds.size() - 1; i >= 0; i--) {\n-                if (feedCounters.get(feeds.get(i).getId()) <= 0) {\n-                    feedCounters.delete(feeds.get(i).getId());\n-                    feeds.remove(i);\n-                }\n-            }\n-        }\n-\n         Comparator<Feed> comparator;\n         int feedOrder = UserPreferences.getFeedOrder();\n         if (feedOrder == UserPreferences.FEED_ORDER_COUNTER) {\n", "next_change": {"commit": "41efff3382d0a8c37dfb9724e8adf6f60fe6beb1", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 7330a6c80..140fde93b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -899,6 +802,16 @@ public final class DBReader {\n         }\n         final LongIntMap feedCounters = adapter.getFeedCounters(feedIds);\n \n+        int feedFilter = UserPreferences.getFeedFilter();\n+        if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n+            for (int i = feeds.size() - 1; i >= 0; i--) {\n+                if (feedCounters.get(feeds.get(i).getId()) <= 0) {\n+                    feedCounters.delete(feeds.get(i).getId());\n+                    feeds.remove(i);\n+                }\n+            }\n+        }\n+\n         Comparator<Feed> comparator;\n         int feedOrder = UserPreferences.getFeedOrder();\n         if (feedOrder == UserPreferences.FEED_ORDER_COUNTER) {\n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 140fde93b..c8368506b 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -802,15 +804,8 @@ public final class DBReader {\n         }\n         final LongIntMap feedCounters = adapter.getFeedCounters(feedIds);\n \n-        int feedFilter = UserPreferences.getFeedFilter();\n-        if (feedFilter == UserPreferences.FEED_FILTER_COUNTER_ZERO) {\n-            for (int i = feeds.size() - 1; i >= 0; i--) {\n-                if (feedCounters.get(feeds.get(i).getId()) <= 0) {\n-                    feedCounters.delete(feeds.get(i).getId());\n-                    feeds.remove(i);\n-                }\n-            }\n-        }\n+        SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n+        feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n         Comparator<Feed> comparator;\n         int feedOrder = UserPreferences.getFeedOrder();\n", "next_change": {"commit": "03c71ee6c52820317b6cc2fdff10ebc624360507", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex c8368506b..27f08243f 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -797,15 +802,9 @@ public final class DBReader {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n-        List<Feed> feeds = getFeedList(adapter);\n-        long[] feedIds = new long[feeds.size()];\n-        for (int i = 0; i < feeds.size(); i++) {\n-            feedIds[i] = feeds.get(i).getId();\n-        }\n-        final LongIntMap feedCounters = adapter.getFeedCounters(feedIds);\n-\n+        final LongIntMap feedCounters = adapter.getFeedCounters();\n         SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n-        feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n+        List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n         Comparator<Feed> comparator;\n         int feedOrder = UserPreferences.getFeedOrder();\n", "next_change": {"commit": "ff3258c34a1797e75538b83baa1e867d0ea07ceb", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 27f08243f..64cf446aa 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -802,7 +878,7 @@ public final class DBReader {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n-        final LongIntMap feedCounters = adapter.getFeedCounters();\n+        final LongIntMap feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n         SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n         List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n", "next_change": {"commit": "9b1984548bc98e0601da0c080c0d2221d9461a02", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 64cf446aa..81f3af7df 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -878,7 +848,7 @@ public final class DBReader {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n-        final LongIntMap feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n+        final LongIntMap feedCounters = adapter.getFeedCounters();\n         SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n         List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n", "next_change": {"commit": "4a91d6f5dea2c050b3713c8fc899d11ce9272dd6", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 81f3af7df..528ded708 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -848,7 +881,7 @@ public final class DBReader {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n-        final LongIntMap feedCounters = adapter.getFeedCounters();\n+        final LongIntMap feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n         SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n         List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n", "next_change": {"commit": "069a2ca329a342ad0559a48719f49264d2610f00", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 528ded708..62a461dfe 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -881,7 +880,7 @@ public final class DBReader {\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n-        final LongIntMap feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n+        final Map<Long, Integer> feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n         SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n         List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n \n", "next_change": {"commit": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "changed_code": [{"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 62a461dfe..94a7334f3 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -875,14 +812,17 @@ public final class DBReader {\n      * items.\n      */\n     @NonNull\n-    public static NavDrawerData getNavDrawerData() {\n+    public static NavDrawerData getNavDrawerData(@Nullable SubscriptionsFilter subscriptionsFilter) {\n         Log.d(TAG, \"getNavDrawerData() called with: \" + \"\");\n         PodDBAdapter adapter = PodDBAdapter.getInstance();\n         adapter.open();\n \n         final Map<Long, Integer> feedCounters = adapter.getFeedCounters(UserPreferences.getFeedCounterSetting());\n-        SubscriptionsFilter subscriptionsFilter = UserPreferences.getSubscriptionsFilter();\n-        List<Feed> feeds = subscriptionsFilter.filter(getFeedList(adapter), feedCounters);\n+        List<Feed> feeds = getFeedList(adapter);\n+\n+        if (subscriptionsFilter != null) {\n+            feeds = subscriptionsFilter.filter(feeds, feedCounters);\n+        }\n \n         Comparator<Feed> comparator;\n         int feedOrder = UserPreferences.getFeedOrder();\n", "next_change": null}]}}, {"header": "diff --git a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\nindex 528ded708..62a461dfe 100644\n--- a/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n+++ b/core/src/main/java/de/danoeh/antennapod/core/storage/DBReader.java\n", "chunk": "@@ -889,8 +888,8 @@ public final class DBReader {\n         int feedOrder = UserPreferences.getFeedOrder();\n         if (feedOrder == UserPreferences.FEED_ORDER_COUNTER) {\n             comparator = (lhs, rhs) -> {\n-                long counterLhs = feedCounters.get(lhs.getId());\n-                long counterRhs = feedCounters.get(rhs.getId());\n+                long counterLhs = feedCounters.containsKey(lhs.getId()) ? feedCounters.get(lhs.getId()) : 0;\n+                long counterRhs = feedCounters.containsKey(rhs.getId()) ? feedCounters.get(rhs.getId()) : 0;\n                 if (counterLhs > counterRhs) {\n                     // reverse natural order: podcast with most unplayed episodes first\n                     return -1;\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "43d36c7560eb018a2e450466d75c1dbbf136a961", "committedDate": "2020-09-20 11:52:11 +0200", "message": "Fixed crash when item has no feed"}, {"oid": "41efff3382d0a8c37dfb9724e8adf6f60fe6beb1", "committedDate": "2020-09-27 22:10:03 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "69a3c56d247e0f32c156c49a396c989d746ba96e", "committedDate": "2020-10-24 10:26:56 +0200", "message": "[Statistics]Add count of episodes stocked on device (#4581)"}, {"oid": "cd100aae15538415dbc896d59732e4b9710c89d1", "committedDate": "2020-10-24 11:49:55 +0200", "message": "Improve performance and memory usage of 'recent pubdate' feed sort option"}, {"oid": "3e4e6381bd39a40b210e5b6ab054e3adee371330", "committedDate": "2020-10-24 20:03:38 +0200", "message": "Merge pull request #4588 from ByteHamster/recent-pubdate-performance"}, {"oid": "c378b1828b551beac17e9feb288b4c074a15b832", "committedDate": "2020-10-25 19:03:26 +0100", "message": "Merge chapter lists if specified in both feed and media file"}, {"oid": "71b6c57773d1af6e6df967bba968e08cb0268335", "committedDate": "2020-10-25 19:20:05 +0100", "message": "Merge pull request #4590 from ByteHamster/merge-chapters"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "85b897c7d778ae70d837ae0c2a9e7b4252ea8945", "committedDate": "2020-11-06 02:03:20 +0100", "message": "Filter the All Episodes tab via SQL Query"}, {"oid": "24c15cfc617a353b329a6a98f22aea1ba439ce68", "committedDate": "2020-11-09 23:27:05 +0100", "message": "Fixed file size statistics"}, {"oid": "1d008317aa6c6f71d8e35936ab1d02802057384a", "committedDate": "2020-12-13 22:55:11 +0100", "message": "Remove unused import statements to reduce dependencies"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "b107e6da95ae9f9ba771a235252ada059bfa7791", "committedDate": "2021-01-02 17:16:57 +0100", "message": "Fixed crash when opening subscriptions screen"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "1eb47a2d6b2c4e54b2f7140995bab0b743f19dc5", "committedDate": "2021-01-02 20:45:05 +0100", "message": "Build tags based on feed properties"}, {"oid": "cdf59a1c8e99720fd737fcbcc1f5ac1eb5252890", "committedDate": "2021-01-22 11:07:40 +0100", "message": "Merge branch 'develop' into fix_episodes_list_item_loading_b"}, {"oid": "f610ceffc2a257d5e43e5b1d728284fc2800c42c", "committedDate": "2021-01-22 15:09:43 +0100", "message": "Split up filter model and database handling"}, {"oid": "03c71ee6c52820317b6cc2fdff10ebc624360507", "committedDate": "2021-01-22 17:27:46 +0100", "message": "Add Notifications for episodes (#4646)"}, {"oid": "47a0336c3e5cb4c370ad2612de3e8ba6605f6871", "committedDate": "2021-02-28 14:16:07 +0100", "message": "Refactoring: Remove Cursor related code from Feed class (#4968)"}, {"oid": "dd8341a858f560f045f0d90c8c32f27d6a0891d4", "committedDate": "2021-03-03 18:23:29 +0100", "message": "Replace Java-based feed filtering with SQL-based"}, {"oid": "f62a6b808e54e28c791b0448661099ccbcf3e1c1", "committedDate": "2021-03-04 19:47:48 +0100", "message": "Only store content_encoded or description"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "e86905e4c853b4caf9a1abfeafd30534f281fc4e", "committedDate": "2021-03-05 12:56:23 +0100", "message": "Sort folders to the end"}, {"oid": "0081d232d0853166db7e88b5b4d192d0bf13f582", "committedDate": "2021-04-22 22:04:20 +0200", "message": "Moved cursor related code out of model (#5126)"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "db391867608fa37f6568eca02678b3b376e52fa8", "committedDate": "2021-08-20 20:17:23 +0200", "message": "Identify episodes by guid (#5326)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "bc85ebc806367d863973bc9434e7b0d9d5fd2168", "committedDate": "2021-10-06 22:12:47 +0200", "message": "Add synchronization with gPodder Nextcloud server app (#5243)"}, {"oid": "38c470eacec8f083e5d1ab440edbe4ea617d7486", "committedDate": "2022-01-06 12:01:50 +0100", "message": "load Media info from DB in order to grab last saved position (#5624)"}, {"oid": "b6d23168707bd55e5bb4060a9cd8e8ecf96a9716", "committedDate": "2022-02-21 22:53:18 +0100", "message": "Add time-based statistics filter (#5734)"}, {"oid": "7ab6d08ea589aae7db2f7bdf1b28833f45ba9943", "committedDate": "2022-02-21 22:54:40 +0100", "message": "Add line graph to statistics screen"}, {"oid": "940338625023d9a24a589d0a087f3b077f3ea0b2", "committedDate": "2022-02-27 11:09:36 +0100", "message": "Separate UI (download error messages) from logic (download errors) (#5755)"}, {"oid": "ff3258c34a1797e75538b83baa1e867d0ea07ceb", "committedDate": "2022-02-27 19:47:41 +0100", "message": "Move database to its own module"}, {"oid": "9b1984548bc98e0601da0c080c0d2221d9461a02", "committedDate": "2022-03-25 10:23:43 +0100", "message": "Fix full sync trying to handle local feeds"}, {"oid": "4a91d6f5dea2c050b3713c8fc899d11ce9272dd6", "committedDate": "2022-04-02 12:03:44 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "069a2ca329a342ad0559a48719f49264d2610f00", "committedDate": "2022-04-26 17:57:42 +0200", "message": "Decouple preferences"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "03220d07748d0908c4cf4e6b260ce828dc5ebaac", "committedDate": "2022-05-08 11:18:53 +0200", "message": "Show correct total number for lazy loaded items"}, {"oid": "df53c5bfe57e95211fd6e3f90b4c2480cf5f7bf9", "committedDate": "2022-06-09 22:24:22 +0200", "message": "Convert playback history fragment to lazy loading (#5886)"}, {"oid": "28a397c8979f143fba74ea5d385e74bae62c6673", "committedDate": "2022-08-26 20:26:28 +0200", "message": "Make statistics loading more efficient"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "836e2199bc609863332a1d85e2f29094d515491a", "committedDate": "2022-08-30 19:23:11 +0200", "message": "Load only favorite IDs instead of whole FeedItems"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "7a2f4771ecd327665497f21606ebc9d6c9415fd1", "committedDate": "2023-02-12 21:12:04 +0100", "message": "Add sorting options to downloads screen (#6210)"}, {"oid": "25ddd73f244dc6444ed052942d763384f5c58cac", "committedDate": "2023-02-22 20:04:04 +0100", "message": "Add sort option to episodes screen (#6286)"}, {"oid": "581e71b306bbc28dc504bde1d1bba6d6121e26e1", "committedDate": "2023-02-28 21:41:15 +0100", "message": "Add option to switch a- & descending sort order for Inbox (#6266)"}, {"oid": "24d1a06662c8eec31f3a4c3ebdcd3aea759fb63a", "committedDate": "2023-03-01 20:52:23 +0100", "message": "Instead of specialized methods, use the global 'getEpisodes' method with a filter (#6358)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "6d7bfef8a5fe8180f13904739996bb2b8de8a0d4", "committedDate": "2023-05-05 23:09:03 +0200", "message": "Download Service Rewrite (#6420)"}]}, {"oid": "81a7b13981dddc2c345aadff58cfe8cc7e6831e0", "url": "https://github.com/AntennaPod/AntennaPod/commit/81a7b13981dddc2c345aadff58cfe8cc7e6831e0", "message": "fixes", "committedDate": "2020-07-21T11:38:05Z", "type": "commit"}, {"oid": "0c718a794f4dd3ff43d4d9267544aa144b7ea9c3", "url": "https://github.com/AntennaPod/AntennaPod/commit/0c718a794f4dd3ff43d4d9267544aa144b7ea9c3", "message": "Update subscriptions.xml", "committedDate": "2020-07-21T11:43:42Z", "type": "commit"}, {"oid": "cd0eb8cf49543a5c49cabe8751c67dc52af46eb3", "url": "https://github.com/AntennaPod/AntennaPod/commit/cd0eb8cf49543a5c49cabe8751c67dc52af46eb3", "message": "Update fragment_subscriptions.xml", "committedDate": "2020-07-21T11:45:42Z", "type": "commit"}, {"oid": "5a24c3ce1f0b40eb047796e5a723bb8cb1edf406", "url": "https://github.com/AntennaPod/AntennaPod/commit/5a24c3ce1f0b40eb047796e5a723bb8cb1edf406", "message": "move filter msg to NavListAdapter", "committedDate": "2020-07-21T12:07:10Z", "type": "commit"}, {"oid": "4f742c24496b3cb2cf2dad8cc2f333d8e4de26ac", "url": "https://github.com/AntennaPod/AntennaPod/commit/4f742c24496b3cb2cf2dad8cc2f333d8e4de26ac", "message": "Merge remote-tracking branch 'origin/develop' into develop", "committedDate": "2020-07-21T12:07:31Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4MDc2Mw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r458880763", "body": "Could you please move click handling to `NavDrawerFragment.onItemClick`? All other items of the sidebar are handled in that file. It's also a good practice to keep displaying (adapter) and behavior (click listener) separated. I must admit that this is not always the case in the code base but in this case, it should be pretty easy to do.", "bodyText": "Could you please move click handling to NavDrawerFragment.onItemClick? All other items of the sidebar are handled in that file. It's also a good practice to keep displaying (adapter) and behavior (click listener) separated. I must admit that this is not always the case in the code base but in this case, it should be pretty easy to do.", "bodyHTML": "<p dir=\"auto\">Could you please move click handling to <code>NavDrawerFragment.onItemClick</code>? All other items of the sidebar are handled in that file. It's also a good practice to keep displaying (adapter) and behavior (click listener) separated. I must admit that this is not always the case in the code base but in this case, it should be pretty easy to do.</p>", "author": "ByteHamster", "createdAt": "2020-07-22T15:29:36Z", "path": "app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java", "diffHunk": "@@ -295,10 +296,15 @@ private View getSectionDividerView(View convertView, ViewGroup parent) {\n         LayoutInflater inflater = (LayoutInflater) context\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-\n-        convertView.setEnabled(false);\n-        convertView.setOnClickListener(null);\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+            convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n+            convertView.setEnabled(true);\n+            convertView.setOnClickListener((l) -> FeedFilterDialog.showDialog(context));\n+        } else {\n+            convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+            convertView.setEnabled(false);\n+            convertView.setOnClickListener(null);", "originalCommit": "4f742c24496b3cb2cf2dad8cc2f333d8e4de26ac", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5OTMwMg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r458999302", "bodyText": "I tried this in 0a384bc but the on click event is not fired", "author": "asdoi", "createdAt": "2020-07-22T18:31:55Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4MDc2Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3MjM1Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459072357", "bodyText": "Setting the listener to null is not required here. I think this interferes more with the list than what it helps.", "author": "ByteHamster", "createdAt": "2020-07-22T20:45:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4MDc2Mw=="}], "type": "inlineReview", "revised_code": {"commit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 86024a383..fc6eb4fc2 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -296,10 +296,10 @@ public class NavListAdapter extends BaseAdapter\n         LayoutInflater inflater = (LayoutInflater) context\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n+        View convertView;\n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n             convertView.setEnabled(true);\n-            convertView.setOnClickListener((l) -> FeedFilterDialog.showDialog(context));\n         } else {\n             convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n             convertView.setEnabled(false);\n", "next_change": {"commit": "0d838ac4d0354a2804467cfe7ed0d04183b2e896", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex fc6eb4fc2..86024a383 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -296,10 +296,10 @@ public class NavListAdapter extends BaseAdapter\n         LayoutInflater inflater = (LayoutInflater) context\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n-        View convertView;\n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n             convertView.setEnabled(true);\n+            convertView.setOnClickListener((l) -> FeedFilterDialog.showDialog(context));\n         } else {\n             convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n             convertView.setEnabled(false);\n", "next_change": {"commit": "47f5a3d44a7384ece905ca249485cc87f67e42df", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 86024a383..4c25bbab2 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -299,11 +299,9 @@ public class NavListAdapter extends BaseAdapter\n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n             convertView.setEnabled(true);\n-            convertView.setOnClickListener((l) -> FeedFilterDialog.showDialog(context));\n         } else {\n             convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n             convertView.setEnabled(false);\n-            convertView.setOnClickListener(null);\n         }\n \n         return convertView;\n", "next_change": {"commit": "c24d8ff8709c5ec685064f69c980d7a7565773b5", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 4c25bbab2..f67835fb1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -297,10 +296,10 @@ public class NavListAdapter extends BaseAdapter\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n+            convertView = inflater.inflate(R.layout.nav_section_filter_item, parent, false);\n             convertView.setEnabled(true);\n         } else {\n-            convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+            convertView = inflater.inflate(R.layout.nav_section_divider_item, parent, false);\n             convertView.setEnabled(false);\n         }\n \n", "next_change": {"commit": "dbd75d83783be0f5696866a5d151360011865158", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex f67835fb1..52074c70e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -295,12 +295,17 @@ public class NavListAdapter extends BaseAdapter\n         LayoutInflater inflater = (LayoutInflater) context\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n+\n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            convertView = inflater.inflate(R.layout.nav_section_filter_item, parent, false);\n             convertView.setEnabled(true);\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.feed_is_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView = inflater.inflate(R.layout.nav_section_divider_item, parent, false);\n             convertView.setEnabled(false);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n \n         return convertView;\n", "next_change": null}]}}]}}]}}]}}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 86024a383..eea977c2e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -296,14 +295,17 @@ public class NavListAdapter extends BaseAdapter\n         LayoutInflater inflater = (LayoutInflater) context\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n-            convertView = inflater.inflate(R.layout.nav_section_filter_divider, parent, false);\n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n+\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && showSubscriptionList) {\n             convertView.setEnabled(true);\n-            convertView.setOnClickListener((l) -> FeedFilterDialog.showDialog(context));\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n             convertView.setEnabled(false);\n-            convertView.setOnClickListener(null);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n \n         return convertView;\n", "next_change": {"commit": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex eea977c2e..300687e70 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -311,13 +329,12 @@ public class NavListAdapter extends BaseAdapter\n         return convertView;\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private View getFeedView(NavDrawerData.FeedDrawerItem drawerItem, View convertView, ViewGroup parent) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n+        if (context == null) {\n             return null;\n         }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n \n         FeedHolder holder;\n         if (convertView == null) {\n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 300687e70..74ffd8d9b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -301,56 +272,30 @@ public class NavListAdapter extends BaseAdapter\n         }\n \n         holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n-\n-        return convertView;\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n-\n-        return convertView;\n     }\n \n-    private View getFeedView(NavDrawerData.FeedDrawerItem drawerItem, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n         Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n         if (context == null) {\n-            return null;\n-        }\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "542dbd190c6aa4b01c1b644e5c107333817442cd", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 74ffd8d9b..f8507ba74 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -271,31 +282,58 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n+        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n+\n+        return convertView;\n     }\n \n-    private void bindSectionDivider(DividerHolder holder) {\n+    private View getSectionDividerView(View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n         }\n+        LayoutInflater inflater = (LayoutInflater) context\n+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            holder.itemView.setEnabled(true);\n-            holder.feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(holder.feedsFilteredMsg);\n-            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            convertView.setEnabled(true);\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            holder.itemView.setEnabled(false);\n-            holder.feedsFilteredMsg.setVisibility(View.GONE);\n+            convertView.setEnabled(false);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+\n+        return convertView;\n     }\n \n-    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n-        Feed feed = drawerItem.feed;\n+    private View getFeedView(int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n-        if (context == null) {\n-            return;\n+        if(context == null) {\n+            return null;\n+        }\n+        int feedPos = position - getSubscriptionOffset();\n+        Feed feed = itemAccess.getItem(feedPos);\n+\n+        FeedHolder holder;\n+        if (convertView == null) {\n+            holder = new FeedHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (FeedHolder) convertView.getTag();\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex f8507ba74..83abd4091 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -282,58 +274,43 @@ public class NavListAdapter extends BaseAdapter\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n-\n-        return convertView;\n+        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n+                    + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+    }\n \n-        return convertView;\n+    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n+        if (item.getCounter() > 0) {\n+            holder.count.setVisibility(View.VISIBLE);\n+            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n+        } else {\n+            holder.count.setVisibility(View.GONE);\n+        }\n+        holder.title.setText(item.getTitle());\n+        holder.itemView.setPadding(item.layer * 50, 0, 0, 0); // TODO\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n-            return null;\n-        }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+        if (context == null) {\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 83abd4091..7c8943f36 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -274,47 +282,62 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n+        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n+\n+        return convertView;\n     }\n \n-    private void bindSectionDivider(DividerHolder holder) {\n+    private View getSectionDividerView(View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n         }\n+        LayoutInflater inflater = (LayoutInflater) context\n+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            holder.itemView.setEnabled(true);\n-            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n-                    + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(holder.feedsFilteredMsg);\n-            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            convertView.setEnabled(true);\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            holder.itemView.setEnabled(false);\n-            holder.feedsFilteredMsg.setVisibility(View.GONE);\n+            convertView.setEnabled(false);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n-    }\n \n-    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n-        if (item.getCounter() > 0) {\n-            holder.count.setVisibility(View.VISIBLE);\n-            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n-        } else {\n-            holder.count.setVisibility(View.GONE);\n-        }\n-        holder.title.setText(item.getTitle());\n-        holder.itemView.setPadding(item.layer * 50, 0, 0, 0); // TODO\n+        return convertView;\n     }\n \n-    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n-        Feed feed = drawerItem.feed;\n+    private View getFeedView(int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n-        if (context == null) {\n-            return;\n+        if(context == null) {\n+            return null;\n+        }\n+        int feedPos = position - getSubscriptionOffset();\n+        Feed feed = itemAccess.getItem(feedPos);\n+\n+        FeedHolder holder;\n+        if (convertView == null) {\n+            holder = new FeedHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (FeedHolder) convertView.getTag();\n         }\n \n         Glide.with(context)\n-                .load(feed.getImageLocation())\n+                .load(feed.getImageUrl())\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 7c8943f36..8bfcf66cc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -282,58 +274,43 @@ public class NavListAdapter extends BaseAdapter\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n-\n-        return convertView;\n+        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n+                    + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+    }\n \n-        return convertView;\n+    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n+        if (item.getCounter() > 0) {\n+            holder.count.setVisibility(View.VISIBLE);\n+            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n+        } else {\n+            holder.count.setVisibility(View.GONE);\n+        }\n+        holder.title.setText(item.getTitle());\n+        holder.itemView.setPadding(item.getLayer() * 50, 0, 0, 0); // TODO\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n-            return null;\n-        }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+        if (context == null) {\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 8bfcf66cc..29f9d3e44 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -319,7 +327,8 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n                     .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n-                    .fitCenter()\n+                    .transform(new FitCenter(),\n+                            new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n                 .into(holder.image);\n \n", "next_change": {"commit": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 29f9d3e44..1d20c6b20 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -326,7 +325,6 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n                     .transform(new FitCenter(),\n                             new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n", "next_change": null}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 7c8943f36..8bfcf66cc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -346,9 +323,7 @@ public class NavListAdapter extends BaseAdapter\n                     .dontAnimate())\n                 .into(holder.image);\n \n-        holder.title.setText(feed.getTitle());\n-\n-        if(feed.hasLastUpdateFailed()) {\n+        if (feed.hasLastUpdateFailed()) {\n             RelativeLayout.LayoutParams p = (RelativeLayout.LayoutParams) holder.title.getLayoutParams();\n             p.addRule(RelativeLayout.LEFT_OF, R.id.itxtvFailure);\n             holder.failure.setVisibility(View.VISIBLE);\n", "next_change": {"commit": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 8bfcf66cc..29f9d3e44 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -319,7 +327,8 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n                     .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n-                    .fitCenter()\n+                    .transform(new FitCenter(),\n+                            new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n                 .into(holder.image);\n \n", "next_change": {"commit": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 29f9d3e44..1d20c6b20 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -326,7 +325,6 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n                     .transform(new FitCenter(),\n                             new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "0bbeda914221b45801416c771b95e6fa177aa0c0", "committedDate": "2021-01-02 17:30:48 +0100", "message": "Fixed nav item width"}, {"oid": "542dbd190c6aa4b01c1b644e5c107333817442cd", "committedDate": "2021-01-02 17:49:30 +0100", "message": "Run more util tests with Robolectric (#4815)"}, {"oid": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "committedDate": "2021-01-02 20:05:45 +0100", "message": "Clear glide when loading image manually"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "4b7f7880a5394603340d81b8a286a78b100df052", "committedDate": "2021-03-05 13:23:53 +0100", "message": "Use dp for padding"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "b05d877954e8f0c4eaa7e102b0cb20de7511aa8e", "committedDate": "2021-03-09 17:55:57 +0100", "message": "Fixed animation when hiding drawer items"}, {"oid": "71184ee5d4bc3a5b9e83625b9ee40297a6e3dd21", "committedDate": "2021-03-27 20:44:35 +0100", "message": "Fixed SpotBugs violations, so that at least the most severe checks pass"}, {"oid": "7465b747f3630a82ee6375c766dcba015aa78cfc", "committedDate": "2021-03-28 22:46:37 +0200", "message": "Merge pull request #5055 from ByteHamster/spotbugs"}, {"oid": "ea4488c18112de4ee8a328ca14fadf79b171004c", "committedDate": "2021-03-28 22:57:48 +0200", "message": "Fixed new SpotBugs violations after merging to develop"}, {"oid": "d8ca965e0c696c962b72b6ba75101419b9c0d7fb", "committedDate": "2021-04-06 22:52:39 +0200", "message": "Add link to relevant settings screen in 'Episode cache full' dialog  (#5088)"}, {"oid": "d51e9c7625e0cf1d72c17e908312b7dd42363622", "committedDate": "2021-04-18 17:05:04 +0200", "message": "Use VectorDrawable compat library"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "27443bf2c8f0eaad5ffb4c3b03f9908d2c798b5c", "committedDate": "2022-01-15 10:44:14 +0100", "message": "handle mouse right click (#5625)"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "8b85e199221f4c4fb2a5bead2640d06cd94ebb06", "committedDate": "2022-05-15 20:47:41 +0200", "message": "Don't ignore taps on counter"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "1054e13221003e031fcbf05fcd2373986196b97f", "committedDate": "2022-06-30 11:11:35 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "abf94c4d27e43fe0210fb75beeebf39b8e41f66d", "committedDate": "2022-07-30 17:37:48 +0200", "message": "Merge pull request #5942 from TacoTheDank/newPlaylistIcons"}, {"oid": "504fb782c05b017a086eae1e215c2cc34b7341e7", "committedDate": "2022-07-31 20:29:14 -0400", "message": "Remove iconify: ListItem failures"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "440b20487b9c48ddc1e20ba008262689916e8eaa", "committedDate": "2022-08-07 20:53:11 +0200", "message": "Merge pull request #6001 from ByteHamster/remove-favorite-tab"}, {"oid": "d3b5b0e14e11d96a12c1bfb1fdf8a17c7dd6fa57", "committedDate": "2022-08-20 16:47:14 +0200", "message": "Change subscriptions icon from folder to grid view"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "e5d2d1b6ef6eec995e2ef7e714653567e349e59e", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Migrate navigation drawer to Material3"}, {"oid": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Round all the things"}, {"oid": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "committedDate": "2022-11-01 12:47:52 +0100", "message": "Apply default RequestOptions globally instead of locally"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4MTYyNQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r458881625", "body": "There are a few checkstyle errors left:\r\n\r\n```\r\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:24: 'if' construct must use '{}'s. [NeedBraces]\r\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:29: Line is longer than 120 characters (found 145). [LineLength]\r\n[ERROR] /home/circleci/AntennaPod/./core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java:1064:51: WhitespaceAround: '{' is not preceded with whitespace. [WhitespaceAround]\r\n```", "bodyText": "There are a few checkstyle errors left:\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:24: 'if' construct must use '{}'s. [NeedBraces]\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:29: Line is longer than 120 characters (found 145). [LineLength]\n[ERROR] /home/circleci/AntennaPod/./core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java:1064:51: WhitespaceAround: '{' is not preceded with whitespace. [WhitespaceAround]", "bodyHTML": "<p dir=\"auto\">There are a few checkstyle errors left:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:24: 'if' construct must use '{}'s. [NeedBraces]\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:29: Line is longer than 120 characters (found 145). [LineLength]\n[ERROR] /home/circleci/AntennaPod/./core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java:1064:51: WhitespaceAround: '{' is not preceded with whitespace. [WhitespaceAround]\n\"><pre><code>[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:24: 'if' construct must use '{}'s. [NeedBraces]\n[ERROR] /home/circleci/AntennaPod/./app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java:29: Line is longer than 120 characters (found 145). [LineLength]\n[ERROR] /home/circleci/AntennaPod/./core/src/main/java/de/danoeh/antennapod/core/preferences/UserPreferences.java:1064:51: WhitespaceAround: '{' is not preceded with whitespace. [WhitespaceAround]\n</code></pre></div>", "author": "ByteHamster", "createdAt": "2020-07-22T15:30:46Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.content.Context;\n+\n+import androidx.appcompat.app.AlertDialog;\n+\n+import org.greenrobot.eventbus.EventBus;\n+\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+\n+public class FeedFilterDialog {\n+    public static void showDialog(Context context) {\n+        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n+        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n+        dialog.setPositiveButton(null, null);\n+        dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n+\n+        int selectedIndexTemp = 0;\n+        int selected = UserPreferences.getFeedFilter();\n+        String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n+        for (int i = 0; i < entryValues.length; i++) {\n+            if (Integer.parseInt(entryValues[i]) == selected)\n+                selectedIndexTemp = i;\n+        }\n+\n+        final int selectedIndex = selectedIndexTemp;\n+        dialog.setSingleChoiceItems(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options), selectedIndex, (d, which) -> {", "originalCommit": "4f742c24496b3cb2cf2dad8cc2f333d8e4de26ac", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "929dada365d76505ed5764ffee683760aa47cec4", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex 3489c46ea..b2a781cc9 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -21,12 +21,14 @@ public class FeedFilterDialog {\n         int selected = UserPreferences.getFeedFilter();\n         String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n         for (int i = 0; i < entryValues.length; i++) {\n-            if (Integer.parseInt(entryValues[i]) == selected)\n+            if (Integer.parseInt(entryValues[i]) == selected) {\n                 selectedIndexTemp = i;\n+            }\n         }\n \n         final int selectedIndex = selectedIndexTemp;\n-        dialog.setSingleChoiceItems(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options), selectedIndex, (d, which) -> {\n+        String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n+        dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n             if (selectedIndex != which) {\n                 UserPreferences.setFeedFilter(entryValues[which]);\n                 //Update subscriptions\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex 3489c46ea..7d1fe4026 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -14,19 +14,20 @@ public class FeedFilterDialog {\n     public static void showDialog(Context context) {\n         AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setPositiveButton(null, null);\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n         int selectedIndexTemp = 0;\n         int selected = UserPreferences.getFeedFilter();\n         String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n         for (int i = 0; i < entryValues.length; i++) {\n-            if (Integer.parseInt(entryValues[i]) == selected)\n+            if (Integer.parseInt(entryValues[i]) == selected) {\n                 selectedIndexTemp = i;\n+            }\n         }\n \n         final int selectedIndex = selectedIndexTemp;\n-        dialog.setSingleChoiceItems(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options), selectedIndex, (d, which) -> {\n+        String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n+        dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n             if (selectedIndex != which) {\n                 UserPreferences.setFeedFilter(entryValues[which]);\n                 //Update subscriptions\n", "next_change": {"commit": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex 7d1fe4026..3b0e2d04b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -16,20 +19,15 @@ public class FeedFilterDialog {\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n-        int selectedIndexTemp = 0;\n         int selected = UserPreferences.getFeedFilter();\n-        String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n-        for (int i = 0; i < entryValues.length; i++) {\n-            if (Integer.parseInt(entryValues[i]) == selected) {\n-                selectedIndexTemp = i;\n-            }\n-        }\n+        List<String> entryValues =\n+                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n+        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n \n-        final int selectedIndex = selectedIndexTemp;\n         String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n         dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n             if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues[which]);\n+                UserPreferences.setFeedFilter(entryValues.get(which));\n                 //Update subscriptions\n                 EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n             }\n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\ndeleted file mode 100644\nindex 3b0e2d04b..000000000\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ /dev/null\n", "chunk": "@@ -1,38 +0,0 @@\n-package de.danoeh.antennapod.dialog;\n-\n-import android.content.Context;\n-\n-import androidx.appcompat.app.AlertDialog;\n-\n-import org.greenrobot.eventbus.EventBus;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n-import de.danoeh.antennapod.core.preferences.UserPreferences;\n-\n-public class FeedFilterDialog {\n-    public static void showDialog(Context context) {\n-        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n-        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n-\n-        int selected = UserPreferences.getFeedFilter();\n-        List<String> entryValues =\n-                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n-        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n-\n-        String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n-        dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n-            if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues.get(which));\n-                //Update subscriptions\n-                EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n-            }\n-            d.dismiss();\n-        });\n-        dialog.show();\n-    }\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "committedDate": "2020-09-03 14:15:01 +0200", "message": "update FeedFilterDialog"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}]}, {"oid": "929dada365d76505ed5764ffee683760aa47cec4", "url": "https://github.com/AntennaPod/AntennaPod/commit/929dada365d76505ed5764ffee683760aa47cec4", "message": "fixes", "committedDate": "2020-07-22T17:36:09Z", "type": "commit"}, {"oid": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "url": "https://github.com/AntennaPod/AntennaPod/commit/0a384bc3c7c7b287c4aeae4f68d1401856418594", "message": "not working move to NavDrawerFragment", "committedDate": "2020-07-22T18:30:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDAwNw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459064007", "body": "Why is this needed? I do not think that the section divider should stay selected after clicking.", "bodyText": "Why is this needed? I do not think that the section divider should stay selected after clicking.", "bodyHTML": "<p dir=\"auto\">Why is this needed? I do not think that the section divider should stay selected after clicking.</p>", "author": "ByteHamster", "createdAt": "2020-07-22T20:29:46Z", "path": "app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java", "diffHunk": "@@ -198,11 +199,11 @@ public View getView(int position, View convertView, ViewGroup parent) {\n         if (viewType == VIEW_TYPE_NAV) {\n             v = getNavView((String) getItem(position), position, convertView, parent);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(convertView, parent);\n+            v = getSectionDividerView(parent);\n         } else {\n             v = getFeedView(position, convertView, parent);\n         }\n-        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (v != null && (viewType != VIEW_TYPE_SECTION_DIVIDER || UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)) {", "originalCommit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5MDg5Nw==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459090897", "bodyText": "As I said, I could not get this working, so I added some ways and maybe useless stuff \ud83d\ude05\nI reverted the commit and made a new clear version", "author": "asdoi", "createdAt": "2020-07-22T21:21:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDAwNw=="}], "type": "inlineReview", "revised_code": {"commit": "0d838ac4d0354a2804467cfe7ed0d04183b2e896", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex fc6eb4fc2..86024a383 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -199,11 +199,11 @@ public class NavListAdapter extends BaseAdapter\n         if (viewType == VIEW_TYPE_NAV) {\n             v = getNavView((String) getItem(position), position, convertView, parent);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(parent);\n+            v = getSectionDividerView(convertView, parent);\n         } else {\n             v = getFeedView(position, convertView, parent);\n         }\n-        if (v != null && (viewType != VIEW_TYPE_SECTION_DIVIDER || UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)) {\n+        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex fc6eb4fc2..eea977c2e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -195,15 +194,15 @@ public class NavListAdapter extends BaseAdapter\n     @Override\n     public View getView(int position, View convertView, ViewGroup parent) {\n         int viewType = getItemViewType(position);\n-        View v = null;\n+        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n             v = getNavView((String) getItem(position), position, convertView, parent);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(parent);\n+            v = getSectionDividerView(convertView, parent);\n         } else {\n             v = getFeedView(position, convertView, parent);\n         }\n-        if (v != null && (viewType != VIEW_TYPE_SECTION_DIVIDER || UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE)) {\n+        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n", "next_change": {"commit": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex eea977c2e..300687e70 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -200,7 +212,13 @@ public class NavListAdapter extends BaseAdapter\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n             v = getSectionDividerView(convertView, parent);\n         } else {\n-            v = getFeedView(position, convertView, parent);\n+            int itemPos = position - getSubscriptionOffset();\n+            NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n+                v = getFeedView((NavDrawerData.FeedDrawerItem) item, convertView, parent);\n+            } else {\n+                v = getFolderView((NavDrawerData.FolderDrawerItem) item, convertView, parent);\n+            }\n         }\n         if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 300687e70..74ffd8d9b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -193,68 +173,59 @@ public class NavListAdapter extends BaseAdapter\n         }\n     }\n \n-    @Override\n-    public int getViewTypeCount() {\n-        return VIEW_TYPE_COUNT;\n-    }\n-\n     public int getSubscriptionOffset() {\n         return fragmentTags.size() > 0 ? fragmentTags.size() + 1 : 0;\n     }\n \n+    @NonNull\n+    @Override\n+    public Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        if (viewType == VIEW_TYPE_NAV) {\n+            return new NavHolder(View.inflate(activity.get(), R.layout.nav_listitem, null));\n+        } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n+            return new DividerHolder(View.inflate(activity.get(), R.layout.nav_section_item, null));\n+        } else {\n+            return new FeedHolder(View.inflate(activity.get(), R.layout.nav_listitem, null));\n+        }\n+    }\n \n     @Override\n-    public View getView(int position, View convertView, ViewGroup parent) {\n+    public void onBindViewHolder(@NonNull Holder holder, int position) {\n         int viewType = getItemViewType(position);\n-        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n-            v = getNavView((String) getItem(position), position, convertView, parent);\n+            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(convertView, parent);\n+            bindSectionDivider((DividerHolder) holder);\n         } else {\n             int itemPos = position - getSubscriptionOffset();\n             NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n             if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                v = getFeedView((NavDrawerData.FeedDrawerItem) item, convertView, parent);\n+                bindFeedView((NavDrawerData.FeedDrawerItem) item, (FeedHolder) holder);\n             } else {\n-                v = getFolderView((NavDrawerData.FolderDrawerItem) item, convertView, parent);\n+                bindFolderView((NavDrawerData.FolderDrawerItem) item, (FeedHolder) holder);\n             }\n         }\n-        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n-                v.getContext().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             } else {\n-                v.getContext().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             }\n+\n+            holder.itemView.setOnClickListener(v -> itemAccess.onItemClick(position));\n+            holder.itemView.setOnLongClickListener(v -> itemAccess.onItemLongClick(position));\n         }\n-        return v;\n     }\n \n-    private View getNavView(String title, int position, View convertView, ViewGroup parent) {\n+    private void bindNavView(String title, int position, NavHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        NavHolder holder;\n-        if (convertView == null) {\n-            holder = new NavHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (NavHolder) convertView.getTag();\n-        }\n-\n         holder.title.setText(title);\n \n         // reset for re-use\n", "next_change": {"commit": "542dbd190c6aa4b01c1b644e5c107333817442cd", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 74ffd8d9b..f8507ba74 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -173,66 +181,69 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n         }\n     }\n \n-    public int getSubscriptionOffset() {\n-        return fragmentTags.size() > 0 ? fragmentTags.size() + 1 : 0;\n+    @Override\n+    public int getViewTypeCount() {\n+        return VIEW_TYPE_COUNT;\n     }\n \n-    @NonNull\n-    @Override\n-    public Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n-        if (viewType == VIEW_TYPE_NAV) {\n-            return new NavHolder(View.inflate(activity.get(), R.layout.nav_listitem, null));\n-        } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            return new DividerHolder(View.inflate(activity.get(), R.layout.nav_section_item, null));\n-        } else {\n-            return new FeedHolder(View.inflate(activity.get(), R.layout.nav_listitem, null));\n-        }\n+    public int getSubscriptionOffset() {\n+        return tags.size() > 0 ? tags.size() + 1 : 0;\n     }\n \n+\n     @Override\n-    public void onBindViewHolder(@NonNull Holder holder, int position) {\n+    public View getView(int position, View convertView, ViewGroup parent) {\n         int viewType = getItemViewType(position);\n+        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n-            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n+            v = getNavView((String) getItem(position), position, convertView, parent);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            bindSectionDivider((DividerHolder) holder);\n+            v = getSectionDividerView(convertView, parent);\n         } else {\n-            int itemPos = position - getSubscriptionOffset();\n-            NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                bindFeedView((NavDrawerData.FeedDrawerItem) item, (FeedHolder) holder);\n-            } else {\n-                bindFolderView((NavDrawerData.FolderDrawerItem) item, (FeedHolder) holder);\n-            }\n+            v = getFeedView(position, convertView, parent);\n         }\n-        if (viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n-                activity.get().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n-                holder.itemView.setBackgroundResource(typedValue.resourceId);\n+                v.getContext().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n+                v.setBackgroundResource(typedValue.resourceId);\n             } else {\n-                activity.get().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n-                holder.itemView.setBackgroundResource(typedValue.resourceId);\n+                v.getContext().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n+                v.setBackgroundResource(typedValue.resourceId);\n             }\n-\n-            holder.itemView.setOnClickListener(v -> itemAccess.onItemClick(position));\n-            holder.itemView.setOnLongClickListener(v -> itemAccess.onItemLongClick(position));\n         }\n+        return v;\n     }\n \n-    private void bindNavView(String title, int position, NavHolder holder) {\n+    private View getNavView(String title, int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n+        }\n+        NavHolder holder;\n+        if (convertView == null) {\n+            holder = new NavHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (NavHolder) convertView.getTag();\n         }\n+\n         holder.title.setText(title);\n \n         // reset for re-use\n         holder.count.setVisibility(View.GONE);\n         holder.count.setOnClickListener(null);\n \n-        String tag = fragmentTags.get(position);\n+        String tag = tags.get(position);\n         if (tag.equals(QueueFragment.TAG)) {\n             int queueSize = itemAccess.getQueueSize();\n             if (queueSize > 0) {\n", "next_change": {"commit": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex f8507ba74..83abd4091 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -181,69 +174,68 @@ public class NavListAdapter extends BaseAdapter\n         }\n     }\n \n-    @Override\n-    public int getViewTypeCount() {\n-        return VIEW_TYPE_COUNT;\n-    }\n-\n     public int getSubscriptionOffset() {\n-        return tags.size() > 0 ? tags.size() + 1 : 0;\n+        return fragmentTags.size() > 0 ? fragmentTags.size() + 1 : 0;\n     }\n \n+    @NonNull\n+    @Override\n+    public Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        LayoutInflater inflater = LayoutInflater.from(activity.get());\n+        if (viewType == VIEW_TYPE_NAV) {\n+            return new NavHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n+        } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n+            return new DividerHolder(inflater.inflate(R.layout.nav_section_item, parent, false));\n+        } else {\n+            return new FeedHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n+        }\n+    }\n \n     @Override\n-    public View getView(int position, View convertView, ViewGroup parent) {\n+    public void onBindViewHolder(@NonNull Holder holder, int position) {\n         int viewType = getItemViewType(position);\n-        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n-            v = getNavView((String) getItem(position), position, convertView, parent);\n+            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(convertView, parent);\n+            bindSectionDivider((DividerHolder) holder);\n         } else {\n-            v = getFeedView(position, convertView, parent);\n+            int itemPos = position - getSubscriptionOffset();\n+            NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n+            bindListItem(item, (FeedHolder) holder);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n+                bindFeedView((NavDrawerData.FeedDrawerItem) item, (FeedHolder) holder);\n+            } else {\n+                bindFolderView((NavDrawerData.FolderDrawerItem) item, (FeedHolder) holder);\n+            }\n         }\n-        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n-                v.getContext().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             } else {\n-                v.getContext().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             }\n+\n+            holder.itemView.setOnClickListener(v -> itemAccess.onItemClick(position));\n+            holder.itemView.setOnLongClickListener(v -> itemAccess.onItemLongClick(position));\n         }\n-        return v;\n     }\n \n-    private View getNavView(String title, int position, View convertView, ViewGroup parent) {\n+    private void bindNavView(String title, int position, NavHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n-        }\n-        NavHolder holder;\n-        if (convertView == null) {\n-            holder = new NavHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (NavHolder) convertView.getTag();\n+            return;\n         }\n-\n         holder.title.setText(title);\n \n         // reset for re-use\n         holder.count.setVisibility(View.GONE);\n         holder.count.setOnClickListener(null);\n \n-        String tag = tags.get(position);\n+        String tag = fragmentTags.get(position);\n         if (tag.equals(QueueFragment.TAG)) {\n             int queueSize = itemAccess.getQueueSize();\n             if (queueSize > 0) {\n", "next_change": {"commit": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 83abd4091..7c8943f36 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -174,68 +181,69 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n         }\n     }\n \n-    public int getSubscriptionOffset() {\n-        return fragmentTags.size() > 0 ? fragmentTags.size() + 1 : 0;\n+    @Override\n+    public int getViewTypeCount() {\n+        return VIEW_TYPE_COUNT;\n     }\n \n-    @NonNull\n-    @Override\n-    public Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n-        LayoutInflater inflater = LayoutInflater.from(activity.get());\n-        if (viewType == VIEW_TYPE_NAV) {\n-            return new NavHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n-        } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            return new DividerHolder(inflater.inflate(R.layout.nav_section_item, parent, false));\n-        } else {\n-            return new FeedHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n-        }\n+    public int getSubscriptionOffset() {\n+        return tags.size() > 0 ? tags.size() + 1 : 0;\n     }\n \n+\n     @Override\n-    public void onBindViewHolder(@NonNull Holder holder, int position) {\n+    public View getView(int position, View convertView, ViewGroup parent) {\n         int viewType = getItemViewType(position);\n+        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n-            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n+            v = getNavView((String) getItem(position), position, convertView, parent);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            bindSectionDivider((DividerHolder) holder);\n+            v = getSectionDividerView(convertView, parent);\n         } else {\n-            int itemPos = position - getSubscriptionOffset();\n-            NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n-            bindListItem(item, (FeedHolder) holder);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                bindFeedView((NavDrawerData.FeedDrawerItem) item, (FeedHolder) holder);\n-            } else {\n-                bindFolderView((NavDrawerData.FolderDrawerItem) item, (FeedHolder) holder);\n-            }\n+            v = getFeedView(position, convertView, parent);\n         }\n-        if (viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n-                activity.get().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n-                holder.itemView.setBackgroundResource(typedValue.resourceId);\n+                v.getContext().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n+                v.setBackgroundResource(typedValue.resourceId);\n             } else {\n-                activity.get().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n-                holder.itemView.setBackgroundResource(typedValue.resourceId);\n+                v.getContext().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n+                v.setBackgroundResource(typedValue.resourceId);\n             }\n-\n-            holder.itemView.setOnClickListener(v -> itemAccess.onItemClick(position));\n-            holder.itemView.setOnLongClickListener(v -> itemAccess.onItemLongClick(position));\n         }\n+        return v;\n     }\n \n-    private void bindNavView(String title, int position, NavHolder holder) {\n+    private View getNavView(String title, int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n+        }\n+        NavHolder holder;\n+        if (convertView == null) {\n+            holder = new NavHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (NavHolder) convertView.getTag();\n         }\n+\n         holder.title.setText(title);\n \n         // reset for re-use\n         holder.count.setVisibility(View.GONE);\n         holder.count.setOnClickListener(null);\n \n-        String tag = fragmentTags.get(position);\n+        String tag = tags.get(position);\n         if (tag.equals(QueueFragment.TAG)) {\n             int queueSize = itemAccess.getQueueSize();\n             if (queueSize > 0) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 7c8943f36..8bfcf66cc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -181,69 +174,68 @@ public class NavListAdapter extends BaseAdapter\n         }\n     }\n \n-    @Override\n-    public int getViewTypeCount() {\n-        return VIEW_TYPE_COUNT;\n-    }\n-\n     public int getSubscriptionOffset() {\n-        return tags.size() > 0 ? tags.size() + 1 : 0;\n+        return fragmentTags.size() > 0 ? fragmentTags.size() + 1 : 0;\n     }\n \n+    @NonNull\n+    @Override\n+    public Holder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n+        LayoutInflater inflater = LayoutInflater.from(activity.get());\n+        if (viewType == VIEW_TYPE_NAV) {\n+            return new NavHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n+        } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n+            return new DividerHolder(inflater.inflate(R.layout.nav_section_item, parent, false));\n+        } else {\n+            return new FeedHolder(inflater.inflate(R.layout.nav_listitem, parent, false));\n+        }\n+    }\n \n     @Override\n-    public View getView(int position, View convertView, ViewGroup parent) {\n+    public void onBindViewHolder(@NonNull Holder holder, int position) {\n         int viewType = getItemViewType(position);\n-        View v;\n         if (viewType == VIEW_TYPE_NAV) {\n-            v = getNavView((String) getItem(position), position, convertView, parent);\n+            bindNavView(getLabel(fragmentTags.get(position)), position, (NavHolder) holder);\n         } else if (viewType == VIEW_TYPE_SECTION_DIVIDER) {\n-            v = getSectionDividerView(convertView, parent);\n+            bindSectionDivider((DividerHolder) holder);\n         } else {\n-            v = getFeedView(position, convertView, parent);\n+            int itemPos = position - getSubscriptionOffset();\n+            NavDrawerData.DrawerItem item = itemAccess.getItem(itemPos);\n+            bindListItem(item, (FeedHolder) holder);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FEED) {\n+                bindFeedView((NavDrawerData.FeedDrawerItem) item, (FeedHolder) holder);\n+            } else {\n+                bindFolderView((NavDrawerData.FolderDrawerItem) item, (FeedHolder) holder);\n+            }\n         }\n-        if (v != null && viewType != VIEW_TYPE_SECTION_DIVIDER) {\n+        if (viewType != VIEW_TYPE_SECTION_DIVIDER) {\n             TypedValue typedValue = new TypedValue();\n \n             if (position == itemAccess.getSelectedItemIndex()) {\n-                v.getContext().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(R.attr.drawer_activated_color, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             } else {\n-                v.getContext().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n-                v.setBackgroundResource(typedValue.resourceId);\n+                activity.get().getTheme().resolveAttribute(android.R.attr.windowBackground, typedValue, true);\n+                holder.itemView.setBackgroundResource(typedValue.resourceId);\n             }\n+\n+            holder.itemView.setOnClickListener(v -> itemAccess.onItemClick(position));\n+            holder.itemView.setOnLongClickListener(v -> itemAccess.onItemLongClick(position));\n         }\n-        return v;\n     }\n \n-    private View getNavView(String title, int position, View convertView, ViewGroup parent) {\n+    private void bindNavView(String title, int position, NavHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n-        }\n-        NavHolder holder;\n-        if (convertView == null) {\n-            holder = new NavHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (NavHolder) convertView.getTag();\n+            return;\n         }\n-\n         holder.title.setText(title);\n \n         // reset for re-use\n         holder.count.setVisibility(View.GONE);\n         holder.count.setOnClickListener(null);\n \n-        String tag = tags.get(position);\n+        String tag = fragmentTags.get(position);\n         if (tag.equals(QueueFragment.TAG)) {\n             int queueSize = itemAccess.getQueueSize();\n             if (queueSize > 0) {\n", "next_change": {"commit": "dfcc342c57e263754bf145501cd237c7570debd2", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 8bfcf66cc..6a3758358 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -242,7 +245,7 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 holder.count.setText(NumberFormat.getInstance().format(queueSize));\n                 holder.count.setVisibility(View.VISIBLE);\n             }\n-        } else if (tag.equals(EpisodesFragment.TAG)) {\n+        } else if (tag.equals(InboxFragment.TAG)) {\n             int unreadItems = itemAccess.getNumberOfNewItems();\n             if (unreadItems > 0) {\n                 holder.count.setText(NumberFormat.getInstance().format(unreadItems));\n", "next_change": {"commit": "8b85e199221f4c4fb2a5bead2640d06cd94ebb06", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 6a3758358..0b713c305 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -245,7 +243,7 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 holder.count.setText(NumberFormat.getInstance().format(queueSize));\n                 holder.count.setVisibility(View.VISIBLE);\n             }\n-        } else if (tag.equals(InboxFragment.TAG)) {\n+        } else if (tag.equals(EpisodesFragment.TAG)) {\n             int unreadItems = itemAccess.getNumberOfNewItems();\n             if (unreadItems > 0) {\n                 holder.count.setText(NumberFormat.getInstance().format(unreadItems));\n", "next_change": {"commit": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 0b713c305..bf508cdd8 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -243,7 +245,7 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 holder.count.setText(NumberFormat.getInstance().format(queueSize));\n                 holder.count.setVisibility(View.VISIBLE);\n             }\n-        } else if (tag.equals(EpisodesFragment.TAG)) {\n+        } else if (tag.equals(InboxFragment.TAG)) {\n             int unreadItems = itemAccess.getNumberOfNewItems();\n             if (unreadItems > 0) {\n                 holder.count.setText(NumberFormat.getInstance().format(unreadItems));\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "0bbeda914221b45801416c771b95e6fa177aa0c0", "committedDate": "2021-01-02 17:30:48 +0100", "message": "Fixed nav item width"}, {"oid": "542dbd190c6aa4b01c1b644e5c107333817442cd", "committedDate": "2021-01-02 17:49:30 +0100", "message": "Run more util tests with Robolectric (#4815)"}, {"oid": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "committedDate": "2021-01-02 20:05:45 +0100", "message": "Clear glide when loading image manually"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "4b7f7880a5394603340d81b8a286a78b100df052", "committedDate": "2021-03-05 13:23:53 +0100", "message": "Use dp for padding"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "b05d877954e8f0c4eaa7e102b0cb20de7511aa8e", "committedDate": "2021-03-09 17:55:57 +0100", "message": "Fixed animation when hiding drawer items"}, {"oid": "71184ee5d4bc3a5b9e83625b9ee40297a6e3dd21", "committedDate": "2021-03-27 20:44:35 +0100", "message": "Fixed SpotBugs violations, so that at least the most severe checks pass"}, {"oid": "7465b747f3630a82ee6375c766dcba015aa78cfc", "committedDate": "2021-03-28 22:46:37 +0200", "message": "Merge pull request #5055 from ByteHamster/spotbugs"}, {"oid": "ea4488c18112de4ee8a328ca14fadf79b171004c", "committedDate": "2021-03-28 22:57:48 +0200", "message": "Fixed new SpotBugs violations after merging to develop"}, {"oid": "d8ca965e0c696c962b72b6ba75101419b9c0d7fb", "committedDate": "2021-04-06 22:52:39 +0200", "message": "Add link to relevant settings screen in 'Episode cache full' dialog  (#5088)"}, {"oid": "d51e9c7625e0cf1d72c17e908312b7dd42363622", "committedDate": "2021-04-18 17:05:04 +0200", "message": "Use VectorDrawable compat library"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "27443bf2c8f0eaad5ffb4c3b03f9908d2c798b5c", "committedDate": "2022-01-15 10:44:14 +0100", "message": "handle mouse right click (#5625)"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "8b85e199221f4c4fb2a5bead2640d06cd94ebb06", "committedDate": "2022-05-15 20:47:41 +0200", "message": "Don't ignore taps on counter"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "1054e13221003e031fcbf05fcd2373986196b97f", "committedDate": "2022-06-30 11:11:35 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "abf94c4d27e43fe0210fb75beeebf39b8e41f66d", "committedDate": "2022-07-30 17:37:48 +0200", "message": "Merge pull request #5942 from TacoTheDank/newPlaylistIcons"}, {"oid": "504fb782c05b017a086eae1e215c2cc34b7341e7", "committedDate": "2022-07-31 20:29:14 -0400", "message": "Remove iconify: ListItem failures"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "440b20487b9c48ddc1e20ba008262689916e8eaa", "committedDate": "2022-08-07 20:53:11 +0200", "message": "Merge pull request #6001 from ByteHamster/remove-favorite-tab"}, {"oid": "d3b5b0e14e11d96a12c1bfb1fdf8a17c7dd6fa57", "committedDate": "2022-08-20 16:47:14 +0200", "message": "Change subscriptions icon from folder to grid view"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "e5d2d1b6ef6eec995e2ef7e714653567e349e59e", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Migrate navigation drawer to Material3"}, {"oid": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Round all the things"}, {"oid": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "committedDate": "2022-11-01 12:47:52 +0100", "message": "Apply default RequestOptions globally instead of locally"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDg4MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459064881", "body": "This looks a bit strange. Shouldn't the button either have a text or just not be there?", "bodyText": "This looks a bit strange. Shouldn't the button either have a text or just not be there?", "bodyHTML": "<p dir=\"auto\">This looks a bit strange. Shouldn't the button either have a text or just not be there?</p>", "author": "ByteHamster", "createdAt": "2020-07-22T20:31:19Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.content.Context;\n+\n+import androidx.appcompat.app.AlertDialog;\n+\n+import org.greenrobot.eventbus.EventBus;\n+\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+\n+public class FeedFilterDialog {\n+    public static void showDialog(Context context) {\n+        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n+        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n+        dialog.setPositiveButton(null, null);", "originalCommit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4MjM5OQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459082399", "bodyText": "Yes, this should hide the positive button. I do not know if this is needed, mostly I work with the library by afollestad.", "author": "asdoi", "createdAt": "2020-07-22T21:04:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDg4MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ5MzM5MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r460493390", "bodyText": "Just not writing this line should hide the button, too", "author": "ByteHamster", "createdAt": "2020-07-26T07:48:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NDg4MQ=="}], "type": "inlineReview", "revised_code": {"commit": "c3dc9250cefa8e5bc2b03a971f0e95f5af560181", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex b2a781cc9..7d1fe4026 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -14,7 +14,6 @@ public class FeedFilterDialog {\n     public static void showDialog(Context context) {\n         AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setPositiveButton(null, null);\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n         int selectedIndexTemp = 0;\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex b2a781cc9..7d1fe4026 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -14,7 +14,6 @@ public class FeedFilterDialog {\n     public static void showDialog(Context context) {\n         AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setPositiveButton(null, null);\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n         int selectedIndexTemp = 0;\n", "next_change": {"commit": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex 7d1fe4026..3b0e2d04b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -16,20 +19,15 @@ public class FeedFilterDialog {\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n-        int selectedIndexTemp = 0;\n         int selected = UserPreferences.getFeedFilter();\n-        String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n-        for (int i = 0; i < entryValues.length; i++) {\n-            if (Integer.parseInt(entryValues[i]) == selected) {\n-                selectedIndexTemp = i;\n-            }\n-        }\n+        List<String> entryValues =\n+                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n+        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n \n-        final int selectedIndex = selectedIndexTemp;\n         String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n         dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n             if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues[which]);\n+                UserPreferences.setFeedFilter(entryValues.get(which));\n                 //Update subscriptions\n                 EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n             }\n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\ndeleted file mode 100644\nindex 3b0e2d04b..000000000\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ /dev/null\n", "chunk": "@@ -1,38 +0,0 @@\n-package de.danoeh.antennapod.dialog;\n-\n-import android.content.Context;\n-\n-import androidx.appcompat.app.AlertDialog;\n-\n-import org.greenrobot.eventbus.EventBus;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n-import de.danoeh.antennapod.core.preferences.UserPreferences;\n-\n-public class FeedFilterDialog {\n-    public static void showDialog(Context context) {\n-        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n-        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n-\n-        int selected = UserPreferences.getFeedFilter();\n-        List<String> entryValues =\n-                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n-        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n-\n-        String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n-        dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n-            if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues.get(which));\n-                //Update subscriptions\n-                EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n-            }\n-            d.dismiss();\n-        });\n-        dialog.show();\n-    }\n-}\n", "next_change": null}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "committedDate": "2020-09-03 14:15:01 +0200", "message": "update FeedFilterDialog"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NTgwMA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459065800", "body": "Why do you need to create a copy of the variable?", "bodyText": "Why do you need to create a copy of the variable?", "bodyHTML": "<p dir=\"auto\">Why do you need to create a copy of the variable?</p>", "author": "ByteHamster", "createdAt": "2020-07-22T20:33:06Z", "path": "app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package de.danoeh.antennapod.dialog;\n+\n+import android.content.Context;\n+\n+import androidx.appcompat.app.AlertDialog;\n+\n+import org.greenrobot.eventbus.EventBus;\n+\n+import de.danoeh.antennapod.R;\n+import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n+import de.danoeh.antennapod.core.preferences.UserPreferences;\n+\n+public class FeedFilterDialog {\n+    public static void showDialog(Context context) {\n+        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n+        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n+        dialog.setPositiveButton(null, null);\n+        dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n+\n+        int selectedIndexTemp = 0;\n+        int selected = UserPreferences.getFeedFilter();\n+        String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n+        for (int i = 0; i < entryValues.length; i++) {\n+            if (Integer.parseInt(entryValues[i]) == selected) {\n+                selectedIndexTemp = i;\n+            }\n+        }\n+\n+        final int selectedIndex = selectedIndexTemp;", "originalCommit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA4Mjk2MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459082960", "bodyText": "Otherwise the lambda does not work.", "author": "asdoi", "createdAt": "2020-07-22T21:05:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA2NTgwMA=="}], "type": "inlineReview", "revised_code": null, "revised_code_in_main": {"commit": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\nindex b2a781cc9..3b0e2d04b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n", "chunk": "@@ -14,23 +17,17 @@ public class FeedFilterDialog {\n     public static void showDialog(Context context) {\n         AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n         dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setPositiveButton(null, null);\n         dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n \n-        int selectedIndexTemp = 0;\n         int selected = UserPreferences.getFeedFilter();\n-        String[] entryValues = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values);\n-        for (int i = 0; i < entryValues.length; i++) {\n-            if (Integer.parseInt(entryValues[i]) == selected) {\n-                selectedIndexTemp = i;\n-            }\n-        }\n+        List<String> entryValues =\n+                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n+        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n \n-        final int selectedIndex = selectedIndexTemp;\n         String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n         dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n             if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues[which]);\n+                UserPreferences.setFeedFilter(entryValues.get(which));\n                 //Update subscriptions\n                 EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n             }\n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java b/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\ndeleted file mode 100644\nindex 3b0e2d04b..000000000\n--- a/app/src/main/java/de/danoeh/antennapod/dialog/FeedFilterDialog.java\n+++ /dev/null\n", "chunk": "@@ -1,38 +0,0 @@\n-package de.danoeh.antennapod.dialog;\n-\n-import android.content.Context;\n-\n-import androidx.appcompat.app.AlertDialog;\n-\n-import org.greenrobot.eventbus.EventBus;\n-\n-import java.util.Arrays;\n-import java.util.List;\n-\n-import de.danoeh.antennapod.R;\n-import de.danoeh.antennapod.core.event.UnreadItemsUpdateEvent;\n-import de.danoeh.antennapod.core.preferences.UserPreferences;\n-\n-public class FeedFilterDialog {\n-    public static void showDialog(Context context) {\n-        AlertDialog.Builder dialog = new AlertDialog.Builder(context);\n-        dialog.setTitle(context.getString(R.string.pref_filter_feed_title));\n-        dialog.setNegativeButton(android.R.string.cancel, (d, listener) -> d.dismiss());\n-\n-        int selected = UserPreferences.getFeedFilter();\n-        List<String> entryValues =\n-                Arrays.asList(context.getResources().getStringArray(R.array.nav_drawer_feed_filter_values));\n-        final int selectedIndex = entryValues.indexOf(\"\" + selected);\n-\n-        String[] items = context.getResources().getStringArray(R.array.nav_drawer_feed_filter_options);\n-        dialog.setSingleChoiceItems(items, selectedIndex, (d, which) -> {\n-            if (selectedIndex != which) {\n-                UserPreferences.setFeedFilter(entryValues.get(which));\n-                //Update subscriptions\n-                EventBus.getDefault().post(new UnreadItemsUpdateEvent());\n-            }\n-            d.dismiss();\n-        });\n-        dialog.show();\n-    }\n-}\n", "next_change": null}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "7f068e95f9383e74543ff1480be1811d1d6b7c6a", "committedDate": "2020-09-03 14:15:01 +0200", "message": "update FeedFilterDialog"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3MTU4Ng==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459071586", "body": "Please check if it is actually filtered (just to be sure)", "bodyText": "Please check if it is actually filtered (just to be sure)", "bodyHTML": "<p dir=\"auto\">Please check if it is actually filtered (just to be sure)</p>", "author": "ByteHamster", "createdAt": "2020-07-22T20:43:59Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java", "diffHunk": "@@ -366,7 +370,10 @@ private void loadData() {\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {", "originalCommit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA5MTI0Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459091242", "bodyText": "Changed it to an else statement", "author": "asdoi", "createdAt": "2020-07-22T21:22:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3MTU4Ng=="}], "type": "inlineReview", "revised_code": {"commit": "0d838ac4d0354a2804467cfe7ed0d04183b2e896", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 57fca0dcc..dcad8503e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -370,10 +370,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            FeedFilterDialog.showDialog(requireContext());\n-        }\n-        else {\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n             if (position < navAdapter.getSubscriptionOffset()) {\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 57fca0dcc..04714f4aa 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -370,10 +366,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            FeedFilterDialog.showDialog(requireContext());\n-        }\n-        else {\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n             if (position < navAdapter.getSubscriptionOffset()) {\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n", "next_change": {"commit": "242614245d9259ede3e368ac520c31105a2fd87f", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 04714f4aa..da5710936 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -371,6 +372,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex da5710936..ceae7f847 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -372,7 +373,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -373,6 +372,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..e64a4e11f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -378,19 +424,32 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 }\n             } else {\n                 int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n+\n+                if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n+                    long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n+                    if (getActivity() instanceof MainActivity) {\n+                        ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                    } else {\n+                        Intent intent = new Intent(getActivity(), MainActivity.class);\n+                        intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                        startActivity(intent);\n+                    }\n                 } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+                    NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n+                    if (openFolders.contains(folder.name)) {\n+                        openFolders.remove(folder.name);\n+                    } else {\n+                        openFolders.add(folder.name);\n+                    }\n+                    flatItemList = makeFlatDrawerData(navDrawerData.items);\n+                    navAdapter.notifyDataSetChanged();\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e64a4e11f..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -410,60 +464,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n         return flatItems;\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                    long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        Intent intent = new Intent(getActivity(), MainActivity.class);\n-                        intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                        startActivity(intent);\n-                    }\n-                } else {\n-                    NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                    if (openFolders.contains(folder.name)) {\n-                        openFolders.remove(folder.name);\n-                    } else {\n-                        openFolders.add(folder.name);\n-                    }\n-                    flatItemList = makeFlatDrawerData(navDrawerData.items);\n-                    navAdapter.notifyDataSetChanged();\n-                }\n-            }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n-        }\n-    }\n-\n     public static void saveLastNavFragment(Context context, String tag) {\n         Log.d(TAG, \"saveLastNavFragment(tag: \" + tag + \")\");\n         SharedPreferences prefs = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,12 +381,16 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n                     startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n+            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..de31071af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,9 +398,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex de31071af..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -374,45 +450,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex da5710936..ceae7f847 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,7 +381,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n", "next_change": {"commit": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,12 +381,16 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n                     startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n+            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..de31071af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,9 +398,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex de31071af..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -374,45 +450,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "242614245d9259ede3e368ac520c31105a2fd87f", "committedDate": "2020-07-16 17:25:20 +0200", "message": "Close player when selecting sidebar entry"}, {"oid": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "committedDate": "2020-07-21 09:50:20 +0200", "message": "Do not warn that all files are deleted when removing a local feed"}, {"oid": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "committedDate": "2020-08-15 19:48:23 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "1324c81f22a30c80d267f447bd3213b94516d134", "committedDate": "2020-10-16 13:55:09 +0200", "message": "Add progress bar when loading feeds in sidebar (#4533)"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "35f0827f84d026a70c5df0598f3327c0f3c86c90", "committedDate": "2020-10-16 14:15:10 +0200", "message": "Fixed NavDrawer sometimes not updating"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "101f4e34edf940636948505f6cf4411bedae01d7", "committedDate": "2020-12-02 11:11:13 +0100", "message": "Use RxJava for deleting feeds"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "committedDate": "2021-02-16 22:20:11 +0100", "message": "Don't flicker with nav drawer loading indicator when refreshing"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "20f4d9739d996921c9b1e6b840df6e7fe2136b59", "committedDate": "2021-03-05 13:23:48 +0100", "message": "Store opened folders across app launches"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "fd569aefa8cdd8b70245123f1a05e2fe13a2cc37", "committedDate": "2021-03-06 20:51:36 +0100", "message": "Fix regression: flashing progress bar"}, {"oid": "a3da79235a5965d830b164834cc95d3a1c762071", "committedDate": "2021-03-07 10:52:26 +0100", "message": "Only react to onContextItemSelected if something was actually selected"}, {"oid": "9d2467a4e237608c192738357b659c13eff37379", "committedDate": "2021-03-07 11:18:36 +0100", "message": "Merge pull request #4998 from ByteHamster/fix-navdrawer-pressed"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "7ebaa9f619e004c8f2231bce1d170007c9de1544", "committedDate": "2021-08-17 23:57:49 +0200", "message": "Fix: #5298 \"Add to folder\" in podcast contextual side menu (#5344)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "committedDate": "2021-11-06 22:28:49 +0100", "message": "Fix crash when deleting feed"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "committedDate": "2022-02-19 14:14:08 +0100", "message": "Fix side drawer detecting click on 'remove item'"}, {"oid": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "committedDate": "2022-03-15 19:48:53 +0100", "message": "Fix context menu click ending up in wrong fragment"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "ad9de4467bac4b8ca235010a6b8532621c3a03e1", "committedDate": "2022-09-10 16:09:26 +0200", "message": "Add 'default screen' setting (replaces 'back button behavior') (#6041)"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "8248bc6bb1f5f71a1e6be3101e1b2173948bf516", "committedDate": "2023-02-12 21:05:24 +0100", "message": "Automatically switch to different screen when hiding current one from drawer (#6254)"}, {"oid": "c98194f519c66e5af1575b1c6ffac5af16594141", "committedDate": "2023-02-19 11:48:48 +0100", "message": "Remove another global callback object (#6316)"}, {"oid": "a828660b446fcc1a8a518c7a30622b905c7bf358", "committedDate": "2023-04-07 14:21:52 +0200", "message": "Do not switch screens when clicking \"Remove podcast\" (#6259)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "10c70dd5f1bd498de32e323cd2832e247df80db7", "committedDate": "2023-05-28 11:18:56 +0200", "message": "Make drawer's corners round (#6478)"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA3Mzk3MA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r459073970", "body": "Could you please make this an `else if`? Also, single line to make Checkstyle happy :)", "bodyText": "Could you please make this an else if? Also, single line to make Checkstyle happy :)", "bodyHTML": "<p dir=\"auto\">Could you please make this an <code>else if</code>? Also, single line to make Checkstyle happy :)</p>", "author": "ByteHamster", "createdAt": "2020-07-22T20:48:24Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java", "diffHunk": "@@ -366,7 +370,10 @@ private void loadData() {\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            FeedFilterDialog.showDialog(requireContext());\n+        }\n+        else {", "originalCommit": "0a384bc3c7c7b287c4aeae4f68d1401856418594", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "0d838ac4d0354a2804467cfe7ed0d04183b2e896", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 57fca0dcc..dcad8503e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -370,10 +370,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            FeedFilterDialog.showDialog(requireContext());\n-        }\n-        else {\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n             if (position < navAdapter.getSubscriptionOffset()) {\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 57fca0dcc..04714f4aa 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -370,10 +366,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n     @Override\n     public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n         int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType == NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            FeedFilterDialog.showDialog(requireContext());\n-        }\n-        else {\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n             if (position < navAdapter.getSubscriptionOffset()) {\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n", "next_change": {"commit": "242614245d9259ede3e368ac520c31105a2fd87f", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 04714f4aa..da5710936 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -371,6 +372,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex da5710936..ceae7f847 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -372,7 +373,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -373,6 +372,7 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 String tag = navAdapter.getTags().get(position);\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     showMainActivity(tag);\n                 }\n", "next_change": {"commit": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..e64a4e11f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -378,19 +424,32 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 }\n             } else {\n                 int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n+\n+                if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n+                    long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n+                    if (getActivity() instanceof MainActivity) {\n+                        ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                    } else {\n+                        Intent intent = new Intent(getActivity(), MainActivity.class);\n+                        intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                        startActivity(intent);\n+                    }\n                 } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+                    NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n+                    if (openFolders.contains(folder.name)) {\n+                        openFolders.remove(folder.name);\n+                    } else {\n+                        openFolders.add(folder.name);\n+                    }\n+                    flatItemList = makeFlatDrawerData(navDrawerData.items);\n+                    navAdapter.notifyDataSetChanged();\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e64a4e11f..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -410,60 +464,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n         return flatItems;\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                    long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        Intent intent = new Intent(getActivity(), MainActivity.class);\n-                        intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                        startActivity(intent);\n-                    }\n-                } else {\n-                    NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                    if (openFolders.contains(folder.name)) {\n-                        openFolders.remove(folder.name);\n-                    } else {\n-                        openFolders.add(folder.name);\n-                    }\n-                    flatItemList = makeFlatDrawerData(navDrawerData.items);\n-                    navAdapter.notifyDataSetChanged();\n-                }\n-            }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n-        }\n-    }\n-\n     public static void saveLastNavFragment(Context context, String tag) {\n         Log.d(TAG, \"saveLastNavFragment(tag: \" + tag + \")\");\n         SharedPreferences prefs = context.getSharedPreferences(PREF_NAME, Context.MODE_PRIVATE);\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,12 +381,16 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n                     startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n+            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..de31071af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,9 +398,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex de31071af..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -374,45 +450,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex da5710936..ceae7f847 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,7 +381,6 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n", "next_change": {"commit": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex ceae7f847..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -381,12 +381,16 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n                     startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n+            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..de31071af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,9 +398,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex de31071af..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -374,45 +450,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "242614245d9259ede3e368ac520c31105a2fd87f", "committedDate": "2020-07-16 17:25:20 +0200", "message": "Close player when selecting sidebar entry"}, {"oid": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "committedDate": "2020-07-21 09:50:20 +0200", "message": "Do not warn that all files are deleted when removing a local feed"}, {"oid": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "committedDate": "2020-08-15 19:48:23 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "1324c81f22a30c80d267f447bd3213b94516d134", "committedDate": "2020-10-16 13:55:09 +0200", "message": "Add progress bar when loading feeds in sidebar (#4533)"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "35f0827f84d026a70c5df0598f3327c0f3c86c90", "committedDate": "2020-10-16 14:15:10 +0200", "message": "Fixed NavDrawer sometimes not updating"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "101f4e34edf940636948505f6cf4411bedae01d7", "committedDate": "2020-12-02 11:11:13 +0100", "message": "Use RxJava for deleting feeds"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "committedDate": "2021-02-16 22:20:11 +0100", "message": "Don't flicker with nav drawer loading indicator when refreshing"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "20f4d9739d996921c9b1e6b840df6e7fe2136b59", "committedDate": "2021-03-05 13:23:48 +0100", "message": "Store opened folders across app launches"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "fd569aefa8cdd8b70245123f1a05e2fe13a2cc37", "committedDate": "2021-03-06 20:51:36 +0100", "message": "Fix regression: flashing progress bar"}, {"oid": "a3da79235a5965d830b164834cc95d3a1c762071", "committedDate": "2021-03-07 10:52:26 +0100", "message": "Only react to onContextItemSelected if something was actually selected"}, {"oid": "9d2467a4e237608c192738357b659c13eff37379", "committedDate": "2021-03-07 11:18:36 +0100", "message": "Merge pull request #4998 from ByteHamster/fix-navdrawer-pressed"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "7ebaa9f619e004c8f2231bce1d170007c9de1544", "committedDate": "2021-08-17 23:57:49 +0200", "message": "Fix: #5298 \"Add to folder\" in podcast contextual side menu (#5344)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "committedDate": "2021-11-06 22:28:49 +0100", "message": "Fix crash when deleting feed"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "committedDate": "2022-02-19 14:14:08 +0100", "message": "Fix side drawer detecting click on 'remove item'"}, {"oid": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "committedDate": "2022-03-15 19:48:53 +0100", "message": "Fix context menu click ending up in wrong fragment"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "ad9de4467bac4b8ca235010a6b8532621c3a03e1", "committedDate": "2022-09-10 16:09:26 +0200", "message": "Add 'default screen' setting (replaces 'back button behavior') (#6041)"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "8248bc6bb1f5f71a1e6be3101e1b2173948bf516", "committedDate": "2023-02-12 21:05:24 +0100", "message": "Automatically switch to different screen when hiding current one from drawer (#6254)"}, {"oid": "c98194f519c66e5af1575b1c6ffac5af16594141", "committedDate": "2023-02-19 11:48:48 +0100", "message": "Remove another global callback object (#6316)"}, {"oid": "a828660b446fcc1a8a518c7a30622b905c7bf358", "committedDate": "2023-04-07 14:21:52 +0200", "message": "Do not switch screens when clicking \"Remove podcast\" (#6259)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "10c70dd5f1bd498de32e323cd2832e247df80db7", "committedDate": "2023-05-28 11:18:56 +0200", "message": "Make drawer's corners round (#6478)"}]}, {"oid": "0d838ac4d0354a2804467cfe7ed0d04183b2e896", "url": "https://github.com/AntennaPod/AntennaPod/commit/0d838ac4d0354a2804467cfe7ed0d04183b2e896", "message": "Revert \"not working move to NavDrawerFragment\"\n\nThis reverts commit 0a384bc3", "committedDate": "2020-07-22T21:06:59Z", "type": "commit"}, {"oid": "47f5a3d44a7384ece905ca249485cc87f67e42df", "url": "https://github.com/AntennaPod/AntennaPod/commit/47f5a3d44a7384ece905ca249485cc87f67e42df", "message": "New working filter dialog", "committedDate": "2020-07-22T21:16:45Z", "type": "commit"}, {"oid": "0030c39c2e55fa8eb8f69a85c57f723bc42d17ef", "url": "https://github.com/AntennaPod/AntennaPod/commit/0030c39c2e55fa8eb8f69a85c57f723bc42d17ef", "message": "remove focusable", "committedDate": "2020-07-22T21:25:24Z", "type": "commit"}, {"oid": "9e08d5fef4f4f575e061115728b48eb715f6ff1e", "url": "https://github.com/AntennaPod/AntennaPod/commit/9e08d5fef4f4f575e061115728b48eb715f6ff1e", "message": "Update NavDrawerFragment.java", "committedDate": "2020-07-26T10:35:23Z", "type": "commit"}, {"oid": "2e6f7778bc53d0efff7f12cd848a36b2b98a0d00", "url": "https://github.com/AntennaPod/AntennaPod/commit/2e6f7778bc53d0efff7f12cd848a36b2b98a0d00", "message": "Update NavDrawerFragment.java", "committedDate": "2020-07-26T10:36:01Z", "type": "commit"}, {"oid": "c3dc9250cefa8e5bc2b03a971f0e95f5af560181", "url": "https://github.com/AntennaPod/AntennaPod/commit/c3dc9250cefa8e5bc2b03a971f0e95f5af560181", "message": "fixes", "committedDate": "2020-07-26T10:39:02Z", "type": "commit"}, {"oid": "7b43c4404e696f35df3865d0f131e4b725f21b6a", "url": "https://github.com/AntennaPod/AntennaPod/commit/7b43c4404e696f35df3865d0f131e4b725f21b6a", "message": "Merge remote-tracking branch 'origin/develop' into develop", "committedDate": "2020-07-26T10:42:05Z", "type": "commit"}, {"oid": "95c4485689c6dd5759a6cd91228aa3892f1bc82a", "url": "https://github.com/AntennaPod/AntennaPod/commit/95c4485689c6dd5759a6cd91228aa3892f1bc82a", "message": "Update SubscriptionFragment.java", "committedDate": "2020-07-26T10:47:48Z", "type": "commit"}, {"oid": "c24d8ff8709c5ec685064f69c980d7a7565773b5", "url": "https://github.com/AntennaPod/AntennaPod/commit/c24d8ff8709c5ec685064f69c980d7a7565773b5", "message": "rename to proper names", "committedDate": "2020-07-30T09:25:23Z", "type": "commit"}, {"oid": "dbd75d83783be0f5696866a5d151360011865158", "url": "https://github.com/AntennaPod/AntennaPod/commit/dbd75d83783be0f5696866a5d151360011865158", "message": "change to iconify", "committedDate": "2020-08-01T17:12:10Z", "type": "commit"}, {"oid": "d324b2c4ca42a4c3d0bc4ccc28d262ee59fa38ad", "url": "https://github.com/AntennaPod/AntennaPod/commit/d324b2c4ca42a4c3d0bc4ccc28d262ee59fa38ad", "message": "remove divider id", "committedDate": "2020-08-01T17:13:23Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjAxMDI3NA==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r466010274", "body": "There is an option to hide the subscriptions list from the sidebar. If it is hidden, the filter text should not be displayed.", "bodyText": "There is an option to hide the subscriptions list from the sidebar. If it is hidden, the filter text should not be displayed.", "bodyHTML": "<p dir=\"auto\">There is an option to hide the subscriptions list from the sidebar. If it is hidden, the filter text should not be displayed.</p>", "author": "ByteHamster", "createdAt": "2020-08-05T21:19:07Z", "path": "app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java", "diffHunk": "@@ -296,9 +296,17 @@ private View getSectionDividerView(View convertView, ViewGroup parent) {\n                 .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n \n         convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n-        convertView.setEnabled(false);\n-        convertView.setOnClickListener(null);\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {", "originalCommit": "d324b2c4ca42a4c3d0bc4ccc28d262ee59fa38ad", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "f54024d9f5d7557138038582c46f772823bfc0e5", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 52074c70e..14fa42d5a 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -300,7 +300,7 @@ public class NavListAdapter extends BaseAdapter\n \n         if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n             convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.feed_is_filtered));\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n             Iconify.addIcons(feedsFilteredMsg);\n             feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n", "next_change": {"commit": "82ad038537b255fc2bcc2b45de13d3289e41a222", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 14fa42d5a..05432a595 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -298,7 +298,7 @@ public class NavListAdapter extends BaseAdapter\n         convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n         TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && showSubscriptionList) {\n             convertView.setEnabled(true);\n             feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n             Iconify.addIcons(feedsFilteredMsg);\n", "next_change": null}]}}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 52074c70e..eea977c2e 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -298,9 +298,9 @@ public class NavListAdapter extends BaseAdapter\n         convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n         TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE) {\n+        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && showSubscriptionList) {\n             convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.feed_is_filtered));\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n             Iconify.addIcons(feedsFilteredMsg);\n             feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex eea977c2e..92ed7b052 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -298,7 +298,7 @@ public class NavListAdapter extends BaseAdapter\n         convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n         TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n-        if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && showSubscriptionList) {\n+        if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n             convertView.setEnabled(true);\n             feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n             Iconify.addIcons(feedsFilteredMsg);\n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 92ed7b052..74ffd8d9b 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -282,58 +271,31 @@ public class NavListAdapter extends BaseAdapter\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n-\n-        return convertView;\n+        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n-\n-        return convertView;\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n-            return null;\n-        }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+        if (context == null) {\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "542dbd190c6aa4b01c1b644e5c107333817442cd", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 74ffd8d9b..f8507ba74 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -271,31 +282,58 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n+        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n+\n+        return convertView;\n     }\n \n-    private void bindSectionDivider(DividerHolder holder) {\n+    private View getSectionDividerView(View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n         }\n+        LayoutInflater inflater = (LayoutInflater) context\n+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            holder.itemView.setEnabled(true);\n-            holder.feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(holder.feedsFilteredMsg);\n-            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            convertView.setEnabled(true);\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            holder.itemView.setEnabled(false);\n-            holder.feedsFilteredMsg.setVisibility(View.GONE);\n+            convertView.setEnabled(false);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+\n+        return convertView;\n     }\n \n-    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n-        Feed feed = drawerItem.feed;\n+    private View getFeedView(int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n-        if (context == null) {\n-            return;\n+        if(context == null) {\n+            return null;\n+        }\n+        int feedPos = position - getSubscriptionOffset();\n+        Feed feed = itemAccess.getItem(feedPos);\n+\n+        FeedHolder holder;\n+        if (convertView == null) {\n+            holder = new FeedHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (FeedHolder) convertView.getTag();\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex f8507ba74..83abd4091 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -282,58 +274,43 @@ public class NavListAdapter extends BaseAdapter\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n-\n-        return convertView;\n+        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n+                    + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+    }\n \n-        return convertView;\n+    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n+        if (item.getCounter() > 0) {\n+            holder.count.setVisibility(View.VISIBLE);\n+            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n+        } else {\n+            holder.count.setVisibility(View.GONE);\n+        }\n+        holder.title.setText(item.getTitle());\n+        holder.itemView.setPadding(item.layer * 50, 0, 0, 0); // TODO\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n-            return null;\n-        }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+        if (context == null) {\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 83abd4091..7c8943f36 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -274,47 +282,62 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n+        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n+\n+        return convertView;\n     }\n \n-    private void bindSectionDivider(DividerHolder holder) {\n+    private View getSectionDividerView(View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return;\n+            return null;\n         }\n+        LayoutInflater inflater = (LayoutInflater) context\n+                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n+        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            holder.itemView.setEnabled(true);\n-            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n-                    + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(holder.feedsFilteredMsg);\n-            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            convertView.setEnabled(true);\n+            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(feedsFilteredMsg);\n+            feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            holder.itemView.setEnabled(false);\n-            holder.feedsFilteredMsg.setVisibility(View.GONE);\n+            convertView.setEnabled(false);\n+            feedsFilteredMsg.setVisibility(View.GONE);\n         }\n-    }\n \n-    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n-        if (item.getCounter() > 0) {\n-            holder.count.setVisibility(View.VISIBLE);\n-            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n-        } else {\n-            holder.count.setVisibility(View.GONE);\n-        }\n-        holder.title.setText(item.getTitle());\n-        holder.itemView.setPadding(item.layer * 50, 0, 0, 0); // TODO\n+        return convertView;\n     }\n \n-    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n-        Feed feed = drawerItem.feed;\n+    private View getFeedView(int position, View convertView, ViewGroup parent) {\n         Activity context = activity.get();\n-        if (context == null) {\n-            return;\n+        if(context == null) {\n+            return null;\n+        }\n+        int feedPos = position - getSubscriptionOffset();\n+        Feed feed = itemAccess.getItem(feedPos);\n+\n+        FeedHolder holder;\n+        if (convertView == null) {\n+            holder = new FeedHolder();\n+            LayoutInflater inflater = (LayoutInflater) context\n+                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n+\n+            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n+\n+            holder.image = convertView.findViewById(R.id.imgvCover);\n+            holder.title = convertView.findViewById(R.id.txtvTitle);\n+            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n+            holder.count = convertView.findViewById(R.id.txtvCount);\n+            convertView.setTag(holder);\n+        } else {\n+            holder = (FeedHolder) convertView.getTag();\n         }\n \n         Glide.with(context)\n-                .load(feed.getImageLocation())\n+                .load(feed.getImageUrl())\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 7c8943f36..8bfcf66cc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -282,58 +274,43 @@ public class NavListAdapter extends BaseAdapter\n             }\n         }\n \n-        holder.image.setImageDrawable(getDrawable(tags.get(position)));\n-\n-        return convertView;\n+        holder.image.setImageDrawable(getDrawable(fragmentTags.get(position)));\n     }\n \n-    private View getSectionDividerView(View convertView, ViewGroup parent) {\n+    private void bindSectionDivider(DividerHolder holder) {\n         Activity context = activity.get();\n         if(context == null) {\n-            return null;\n+            return;\n         }\n-        LayoutInflater inflater = (LayoutInflater) context\n-                .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-        convertView = inflater.inflate(R.layout.nav_section_item, parent, false);\n-        TextView feedsFilteredMsg = convertView.findViewById(R.id.nav_feeds_filtered_message);\n \n         if (UserPreferences.getSubscriptionsFilter().isEnabled() && showSubscriptionList) {\n-            convertView.setEnabled(true);\n-            feedsFilteredMsg.setText(\"{md-info-outline} \" + context.getString(R.string.subscriptions_are_filtered));\n-            Iconify.addIcons(feedsFilteredMsg);\n-            feedsFilteredMsg.setVisibility(View.VISIBLE);\n+            holder.itemView.setEnabled(true);\n+            holder.feedsFilteredMsg.setText(\"{md-info-outline} \"\n+                    + context.getString(R.string.subscriptions_are_filtered));\n+            Iconify.addIcons(holder.feedsFilteredMsg);\n+            holder.feedsFilteredMsg.setVisibility(View.VISIBLE);\n         } else {\n-            convertView.setEnabled(false);\n-            feedsFilteredMsg.setVisibility(View.GONE);\n+            holder.itemView.setEnabled(false);\n+            holder.feedsFilteredMsg.setVisibility(View.GONE);\n         }\n+    }\n \n-        return convertView;\n+    private void bindListItem(NavDrawerData.DrawerItem item, FeedHolder holder) {\n+        if (item.getCounter() > 0) {\n+            holder.count.setVisibility(View.VISIBLE);\n+            holder.count.setText(NumberFormat.getInstance().format(item.getCounter()));\n+        } else {\n+            holder.count.setVisibility(View.GONE);\n+        }\n+        holder.title.setText(item.getTitle());\n+        holder.itemView.setPadding(item.getLayer() * 50, 0, 0, 0); // TODO\n     }\n \n-    private View getFeedView(int position, View convertView, ViewGroup parent) {\n+    private void bindFeedView(NavDrawerData.FeedDrawerItem drawerItem, FeedHolder holder) {\n+        Feed feed = drawerItem.feed;\n         Activity context = activity.get();\n-        if(context == null) {\n-            return null;\n-        }\n-        int feedPos = position - getSubscriptionOffset();\n-        Feed feed = itemAccess.getItem(feedPos);\n-\n-        FeedHolder holder;\n-        if (convertView == null) {\n-            holder = new FeedHolder();\n-            LayoutInflater inflater = (LayoutInflater) context\n-                    .getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n-\n-            convertView = inflater.inflate(R.layout.nav_listitem, parent, false);\n-\n-            holder.image = convertView.findViewById(R.id.imgvCover);\n-            holder.title = convertView.findViewById(R.id.txtvTitle);\n-            holder.failure = convertView.findViewById(R.id.itxtvFailure);\n-            holder.count = convertView.findViewById(R.id.txtvCount);\n-            convertView.setTag(holder);\n-        } else {\n-            holder = (FeedHolder) convertView.getTag();\n+        if (context == null) {\n+            return;\n         }\n \n         Glide.with(context)\n", "next_change": {"commit": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 8bfcf66cc..29f9d3e44 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -319,7 +327,8 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n                     .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n-                    .fitCenter()\n+                    .transform(new FitCenter(),\n+                            new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n                 .into(holder.image);\n \n", "next_change": {"commit": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 29f9d3e44..1d20c6b20 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -326,7 +325,6 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n                     .transform(new FitCenter(),\n                             new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n", "next_change": null}]}}]}}, {"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 7c8943f36..8bfcf66cc 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -346,9 +323,7 @@ public class NavListAdapter extends BaseAdapter\n                     .dontAnimate())\n                 .into(holder.image);\n \n-        holder.title.setText(feed.getTitle());\n-\n-        if(feed.hasLastUpdateFailed()) {\n+        if (feed.hasLastUpdateFailed()) {\n             RelativeLayout.LayoutParams p = (RelativeLayout.LayoutParams) holder.title.getLayoutParams();\n             p.addRule(RelativeLayout.LEFT_OF, R.id.itxtvFailure);\n             holder.failure.setVisibility(View.VISIBLE);\n", "next_change": {"commit": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 8bfcf66cc..29f9d3e44 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -319,7 +327,8 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n                     .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n-                    .fitCenter()\n+                    .transform(new FitCenter(),\n+                            new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n                 .into(holder.image);\n \n", "next_change": {"commit": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\nindex 29f9d3e44..1d20c6b20 100644\n--- a/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n+++ b/app/src/main/java/de/danoeh/antennapod/adapter/NavListAdapter.java\n", "chunk": "@@ -326,7 +325,6 @@ public class NavListAdapter extends RecyclerView.Adapter<NavListAdapter.Holder>\n                 .apply(new RequestOptions()\n                     .placeholder(R.color.light_gray)\n                     .error(R.color.light_gray)\n-                    .diskCacheStrategy(ApGlideSettings.AP_DISK_CACHE_STRATEGY)\n                     .transform(new FitCenter(),\n                             new RoundedCorners((int) (4 * context.getResources().getDisplayMetrics().density)))\n                     .dontAnimate())\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "acb4832df62aeae6574169690d34a5c65f178a3c", "committedDate": "2020-08-29 00:10:50 -0400", "message": "Move remaining preference to AndroidX preference"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "0bbeda914221b45801416c771b95e6fa177aa0c0", "committedDate": "2021-01-02 17:30:48 +0100", "message": "Fixed nav item width"}, {"oid": "542dbd190c6aa4b01c1b644e5c107333817442cd", "committedDate": "2021-01-02 17:49:30 +0100", "message": "Run more util tests with Robolectric (#4815)"}, {"oid": "052884e0813fbd4580d6139d3034a4fe57e2bce0", "committedDate": "2021-01-02 20:05:45 +0100", "message": "Clear glide when loading image manually"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "1cd680a2af9bc7ae9717fac84109c25542e81f06", "committedDate": "2021-02-24 15:44:40 +0100", "message": "Remove interface ImageResource (#4911)"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "4b7f7880a5394603340d81b8a286a78b100df052", "committedDate": "2021-03-05 13:23:53 +0100", "message": "Use dp for padding"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "b05d877954e8f0c4eaa7e102b0cb20de7511aa8e", "committedDate": "2021-03-09 17:55:57 +0100", "message": "Fixed animation when hiding drawer items"}, {"oid": "71184ee5d4bc3a5b9e83625b9ee40297a6e3dd21", "committedDate": "2021-03-27 20:44:35 +0100", "message": "Fixed SpotBugs violations, so that at least the most severe checks pass"}, {"oid": "7465b747f3630a82ee6375c766dcba015aa78cfc", "committedDate": "2021-03-28 22:46:37 +0200", "message": "Merge pull request #5055 from ByteHamster/spotbugs"}, {"oid": "ea4488c18112de4ee8a328ca14fadf79b171004c", "committedDate": "2021-03-28 22:57:48 +0200", "message": "Fixed new SpotBugs violations after merging to develop"}, {"oid": "d8ca965e0c696c962b72b6ba75101419b9c0d7fb", "committedDate": "2021-04-06 22:52:39 +0200", "message": "Add link to relevant settings screen in 'Episode cache full' dialog  (#5088)"}, {"oid": "d51e9c7625e0cf1d72c17e908312b7dd42363622", "committedDate": "2021-04-18 17:05:04 +0200", "message": "Use VectorDrawable compat library"}, {"oid": "bd7793ffd49a914ced95f82b3ea7633972eb738a", "committedDate": "2021-04-21 23:05:42 +0200", "message": "Deleted duplicate resources"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "27443bf2c8f0eaad5ffb4c3b03f9908d2c798b5c", "committedDate": "2022-01-15 10:44:14 +0100", "message": "handle mouse right click (#5625)"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "8b85e199221f4c4fb2a5bead2640d06cd94ebb06", "committedDate": "2022-05-15 20:47:41 +0200", "message": "Don't ignore taps on counter"}, {"oid": "756e76e19d9614328c9b541ab1e2f2dc1bc7d779", "committedDate": "2022-06-12 16:32:30 -0400", "message": "Use new material playlist drawables"}, {"oid": "1054e13221003e031fcbf05fcd2373986196b97f", "committedDate": "2022-06-30 11:11:35 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "abf94c4d27e43fe0210fb75beeebf39b8e41f66d", "committedDate": "2022-07-30 17:37:48 +0200", "message": "Merge pull request #5942 from TacoTheDank/newPlaylistIcons"}, {"oid": "504fb782c05b017a086eae1e215c2cc34b7341e7", "committedDate": "2022-07-31 20:29:14 -0400", "message": "Remove iconify: ListItem failures"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "440b20487b9c48ddc1e20ba008262689916e8eaa", "committedDate": "2022-08-07 20:53:11 +0200", "message": "Merge pull request #6001 from ByteHamster/remove-favorite-tab"}, {"oid": "d3b5b0e14e11d96a12c1bfb1fdf8a17c7dd6fa57", "committedDate": "2022-08-20 16:47:14 +0200", "message": "Change subscriptions icon from folder to grid view"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "cbfa0181f48e601a18d87f9f699f48460dd61acd", "committedDate": "2022-09-18 19:12:38 +0200", "message": "Migrate dialogs to Material3"}, {"oid": "e5d2d1b6ef6eec995e2ef7e714653567e349e59e", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Migrate navigation drawer to Material3"}, {"oid": "2740816bb85041d4d67fe242bcf0dddb5ad06116", "committedDate": "2022-09-18 19:12:41 +0200", "message": "Round all the things"}, {"oid": "6921d7162eaacc90c4522a3d9bf6d2d47d045ae7", "committedDate": "2022-11-01 12:47:52 +0100", "message": "Apply default RequestOptions globally instead of locally"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}]}, {"oid": "f54024d9f5d7557138038582c46f772823bfc0e5", "url": "https://github.com/AntennaPod/AntennaPod/commit/f54024d9f5d7557138038582c46f772823bfc0e5", "message": "strings & indention fix", "committedDate": "2020-08-06T14:39:16Z", "type": "commit"}, {"oid": "08e9a1678c14945588c1c4bbd8a8fbee6b6dca27", "url": "https://github.com/AntennaPod/AntennaPod/commit/08e9a1678c14945588c1c4bbd8a8fbee6b6dca27", "message": "add space to divider", "committedDate": "2020-08-06T14:55:34Z", "type": "commit"}, {"oid": "f8620e34d113371f8f8c26a1c8d00680a3dab3d4", "url": "https://github.com/AntennaPod/AntennaPod/commit/f8620e34d113371f8f8c26a1c8d00680a3dab3d4", "message": "update subscriptions padding", "committedDate": "2020-08-06T14:59:44Z", "type": "commit"}, {"oid": "cfe9c1ee5d2874f835a4a0aba88e7af51a46c4df", "url": "https://github.com/AntennaPod/AntennaPod/commit/cfe9c1ee5d2874f835a4a0aba88e7af51a46c4df", "message": "update subscriptions indention", "committedDate": "2020-08-06T15:00:32Z", "type": "commit"}, {"oid": "82ad038537b255fc2bcc2b45de13d3289e41a222", "url": "https://github.com/AntennaPod/AntennaPod/commit/82ad038537b255fc2bcc2b45de13d3289e41a222", "message": "hide message if subscriptions list is hidden", "committedDate": "2020-08-06T15:25:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3ODg5Mg==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r466678892", "body": "Is the line clickable if you do not add the check `navAdapter.showSubscriptionList`?", "bodyText": "Is the line clickable if you do not add the check navAdapter.showSubscriptionList?", "bodyHTML": "<p dir=\"auto\">Is the line clickable if you do not add the check <code>navAdapter.showSubscriptionList</code>?</p>", "author": "ByteHamster", "createdAt": "2020-08-06T20:50:56Z", "path": "app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java", "diffHunk": "@@ -386,7 +386,7 @@ public void onItemClick(AdapterView<?> parent, View view, int position, long id)\n                     startActivity(intent);\n                 }\n             }\n-        } else {\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && navAdapter.showSubscriptionList) {", "originalCommit": "82ad038537b255fc2bcc2b45de13d3289e41a222", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzAwNzA1MQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r467007051", "bodyText": "Yes, if you exactly click on it (I think this is only possible on an emulator with a mouse) the filter dialog opens.\nI think it is better to make this check before opening the dialog otherwise it could confuse users, who have never heard of this function.", "author": "asdoi", "createdAt": "2020-08-07T12:24:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3ODg5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzQ2NDQzOQ==", "url": "https://github.com/AntennaPod/AntennaPod/pull/4289#discussion_r467464439", "bodyText": "Okay \ud83d\udc4d I think there is only one thing left to do: This line is too long (that's also why CI fails)", "author": "ByteHamster", "createdAt": "2020-08-08T13:20:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3ODg5Mg=="}], "type": "inlineReview", "revised_code": {"commit": "c6852dec282b9c234a73fd623e121c9a05fd5538", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 927172cec..973d44198 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -386,7 +386,8 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && navAdapter.showSubscriptionList) {\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n             FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n", "next_change": null}]}, "revised_code_in_main": {"commit": "23792f4067fe547cee32cb47d24108e7c2881321", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 927172cec..04714f4aa 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -386,7 +385,8 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE && navAdapter.showSubscriptionList) {\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n             FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n", "next_change": {"commit": "242614245d9259ede3e368ac520c31105a2fd87f", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 04714f4aa..da5710936 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -379,15 +381,13 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                 long feedId = navDrawerData.feeds.get(pos).getId();\n                 if (getActivity() instanceof MainActivity) {\n                     ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n                 } else {\n                     Intent intent = new Intent(getActivity(), MainActivity.class);\n                     intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n-                && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex da5710936..8b7d2b886 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,6 +388,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+                && navAdapter.showSubscriptionList) {\n+            FeedFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "e334b9cad6c627d5793898c110e7e0ad57613c20", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 8b7d2b886..de31071af 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -388,9 +398,9 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                     startActivity(intent);\n                 }\n             }\n-        } else if (UserPreferences.getFeedFilter() != UserPreferences.FEED_FILTER_NONE\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n                 && navAdapter.showSubscriptionList) {\n-            FeedFilterDialog.showDialog(requireContext());\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n         }\n     }\n \n", "next_change": {"commit": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex de31071af..a97ad40f1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -374,45 +450,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "101f4e34edf940636948505f6cf4411bedae01d7", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex a97ad40f1..c69d46265 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -450,18 +347,45 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3ed33794327f547c8892d30958a78770dae56d45", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex c69d46265..5baa1ed4d 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -347,45 +419,18 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                if (openFolders.contains(folder.name)) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 5baa1ed4d..3d82bf7a1 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -419,14 +431,16 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items) {\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n         List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n         for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n             flatItems.add(item);\n             if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n                 NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                if (openFolders.contains(folder.name)) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children));\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": {"commit": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex 3d82bf7a1..be74678d3 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,105 +328,63 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n             return sum;\n         }\n \n-        @Override\n-        public void onItemClick(int position) {\n-            int viewType = navAdapter.getItemViewType(position);\n-            if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-                if (position < navAdapter.getSubscriptionOffset()) {\n-                    String tag = navAdapter.getTags().get(position);\n-                    if (getActivity() instanceof MainActivity) {\n-                        ((MainActivity) getActivity()).loadFragment(tag, null);\n-                        ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                    } else {\n-                        showMainActivity(tag);\n-                    }\n-                } else {\n-                    int pos = position - navAdapter.getSubscriptionOffset();\n-                    NavDrawerData.DrawerItem clickedItem = flatItemList.get(pos);\n-\n-                    if (clickedItem.type == NavDrawerData.DrawerItem.Type.FEED) {\n-                        long feedId = ((NavDrawerData.FeedDrawerItem) clickedItem).feed.getId();\n-                        if (getActivity() instanceof MainActivity) {\n-                            ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                            ((MainActivity) getActivity()).getBottomSheet()\n-                                    .setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                        } else {\n-                            Intent intent = new Intent(getActivity(), MainActivity.class);\n-                            intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                            startActivity(intent);\n-                        }\n-                    } else {\n-                        NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) clickedItem);\n-                        if (openFolders.contains(folder.name)) {\n-                            openFolders.remove(folder.name);\n-                        } else {\n-                            openFolders.add(folder.name);\n-                        }\n-\n-                        disposable = Observable.fromCallable(() -> makeFlatDrawerData(navDrawerData.items, 0))\n-                                .subscribeOn(Schedulers.computation())\n-                                .observeOn(AndroidSchedulers.mainThread())\n-                                .subscribe(\n-                                        result -> {\n-                                            flatItemList = result;\n-                                            navAdapter.notifyDataSetChanged();\n-                                        }, error -> Log.e(TAG, Log.getStackTraceString(error)));\n-                    }\n-                }\n-            } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                    && navAdapter.showSubscriptionList) {\n-                SubscriptionsFilterDialog.showDialog(requireContext());\n-            }\n-        }\n-\n-        @Override\n-        public boolean onItemLongClick(int position) {\n-            if (position < navAdapter.getTags().size()) {\n-                showDrawerPreferencesDialog();\n-                return true;\n-            } else {\n-                NavDrawerFragment.this.position = position;\n-                return false;\n-            }\n-        }\n     };\n \n     private void loadData() {\n-        progressBar.setVisibility(View.VISIBLE);\n-        disposable = Observable.fromCallable(\n-                () -> {\n-                    NavDrawerData data = DBReader.getNavDrawerData();\n-                    return new Pair<>(data, makeFlatDrawerData(data.items, 0));\n-                })\n+        disposable = Observable.fromCallable(DBReader::getNavDrawerData)\n                 .subscribeOn(Schedulers.io())\n                 .observeOn(AndroidSchedulers.mainThread())\n                 .subscribe(\n                         result -> {\n-                            navDrawerData = result.first;\n-                            flatItemList = result.second;\n+                            navDrawerData = result;\n                             updateSelection(); // Selected item might be a feed\n                             navAdapter.notifyDataSetChanged();\n-                            progressBar.setVisibility(View.GONE);\n+                            progressBar.setVisibility(View.GONE); // Stays hidden once there is something in the list\n                         }, error -> {\n                             Log.e(TAG, Log.getStackTraceString(error));\n                             progressBar.setVisibility(View.GONE);\n                         });\n     }\n \n-    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n-        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n-        for (NavDrawerData.DrawerItem item : items) {\n-            item.setLayer(layer);\n-            flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n-                folder.isOpen = openFolders.contains(folder.name);\n-                if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+    @Override\n+    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n+        int viewType = parent.getAdapter().getItemViewType(position);\n+        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n+            if (position < navAdapter.getSubscriptionOffset()) {\n+                String tag = navAdapter.getTags().get(position);\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFragment(tag, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    showMainActivity(tag);\n+                }\n+            } else {\n+                int pos = position - navAdapter.getSubscriptionOffset();\n+                long feedId = navDrawerData.feeds.get(pos).getId();\n+                if (getActivity() instanceof MainActivity) {\n+                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n+                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n+                } else {\n+                    Intent intent = new Intent(getActivity(), MainActivity.class);\n+                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n+                    startActivity(intent);\n                 }\n             }\n+        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n+                && navAdapter.showSubscriptionList) {\n+            SubscriptionsFilterDialog.showDialog(requireContext());\n+        }\n+    }\n+\n+    @Override\n+    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n+        if (position < navAdapter.getTags().size()) {\n+            showDrawerPreferencesDialog();\n+            return true;\n+        } else {\n+            this.position = position;\n+            return false;\n         }\n-        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex be74678d3..e8c04336f 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -346,45 +431,20 @@ public class NavDrawerFragment extends Fragment implements AdapterView.OnItemCli\n                         });\n     }\n \n-    @Override\n-    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n-        int viewType = parent.getAdapter().getItemViewType(position);\n-        if (viewType != NavListAdapter.VIEW_TYPE_SECTION_DIVIDER) {\n-            if (position < navAdapter.getSubscriptionOffset()) {\n-                String tag = navAdapter.getTags().get(position);\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFragment(tag, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    showMainActivity(tag);\n-                }\n-            } else {\n-                int pos = position - navAdapter.getSubscriptionOffset();\n-                long feedId = navDrawerData.feeds.get(pos).getId();\n-                if (getActivity() instanceof MainActivity) {\n-                    ((MainActivity) getActivity()).loadFeedFragmentById(feedId, null);\n-                    ((MainActivity) getActivity()).getBottomSheet().setState(BottomSheetBehavior.STATE_COLLAPSED);\n-                } else {\n-                    Intent intent = new Intent(getActivity(), MainActivity.class);\n-                    intent.putExtra(MainActivity.EXTRA_FEED_ID, feedId);\n-                    startActivity(intent);\n+    private List<NavDrawerData.DrawerItem> makeFlatDrawerData(List<NavDrawerData.DrawerItem> items, int layer) {\n+        List<NavDrawerData.DrawerItem> flatItems = new ArrayList<>();\n+        for (NavDrawerData.DrawerItem item : items) {\n+            item.setLayer(layer);\n+            flatItems.add(item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n+                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+                folder.isOpen = openFolders.contains(folder.name);\n+                if (folder.isOpen) {\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n                 }\n             }\n-        } else if (UserPreferences.getSubscriptionsFilter().isEnabled()\n-                && navAdapter.showSubscriptionList) {\n-            SubscriptionsFilterDialog.showDialog(requireContext());\n-        }\n-    }\n-\n-    @Override\n-    public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n-        if (position < navAdapter.getTags().size()) {\n-            showDrawerPreferencesDialog();\n-            return true;\n-        } else {\n-            this.position = position;\n-            return false;\n         }\n+        return flatItems;\n     }\n \n     public static void saveLastNavFragment(Context context, String tag) {\n", "next_change": {"commit": "dab44b68436601f415edb095da605811e985eb00", "changed_code": [{"header": "diff --git a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\nindex e8c04336f..911f262cb 100644\n--- a/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n+++ b/app/src/main/java/de/danoeh/antennapod/fragment/NavDrawerFragment.java\n", "chunk": "@@ -436,11 +388,11 @@ public class NavDrawerFragment extends Fragment implements SharedPreferences.OnS\n         for (NavDrawerData.DrawerItem item : items) {\n             item.setLayer(layer);\n             flatItems.add(item);\n-            if (item.type == NavDrawerData.DrawerItem.Type.FOLDER) {\n-                NavDrawerData.FolderDrawerItem folder = ((NavDrawerData.FolderDrawerItem) item);\n+            if (item.type == NavDrawerData.DrawerItem.Type.TAG) {\n+                NavDrawerData.TagDrawerItem folder = ((NavDrawerData.TagDrawerItem) item);\n                 folder.isOpen = openFolders.contains(folder.name);\n                 if (folder.isOpen) {\n-                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.FolderDrawerItem) item).children, layer + 1));\n+                    flatItems.addAll(makeFlatDrawerData(((NavDrawerData.TagDrawerItem) item).children, layer + 1));\n                 }\n             }\n         }\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "23792f4067fe547cee32cb47d24108e7c2881321", "message": "Merge commit", "committedDate": null}, {"oid": "242614245d9259ede3e368ac520c31105a2fd87f", "committedDate": "2020-07-16 17:25:20 +0200", "message": "Close player when selecting sidebar entry"}, {"oid": "9d76676421f8f422fa7559f3ca34d9557bf7f8a0", "committedDate": "2020-07-21 09:50:20 +0200", "message": "Do not warn that all files are deleted when removing a local feed"}, {"oid": "d8674e8050fd98961f7eaa9fa844eb03d8bbfb48", "committedDate": "2020-08-15 19:48:23 +0200", "message": "Merge branch 'master' into develop"}, {"oid": "b25e0933ab606ac45ef9c26a745f25845d3af3fc", "committedDate": "2020-08-15 19:56:34 +0200", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "1324c81f22a30c80d267f447bd3213b94516d134", "committedDate": "2020-10-16 13:55:09 +0200", "message": "Add progress bar when loading feeds in sidebar (#4533)"}, {"oid": "e334b9cad6c627d5793898c110e7e0ad57613c20", "committedDate": "2020-10-16 13:56:43 +0200", "message": "Extended subscriptions filter (#4502)"}, {"oid": "35f0827f84d026a70c5df0598f3327c0f3c86c90", "committedDate": "2020-10-16 14:15:10 +0200", "message": "Fixed NavDrawer sometimes not updating"}, {"oid": "c8a2f20000032228226149500767ba903752e0a5", "committedDate": "2020-10-25 17:31:47 +0100", "message": "Merge branch 'develop' into add-local-feeds"}, {"oid": "2a2c4958358514ba5ca56ca4faafdd3bbb55767d", "committedDate": "2020-11-02 19:56:26 +0100", "message": "Added basic proof of concept for displaying folders"}, {"oid": "f978d307a9b62169b85fc3846f2c6a7b52ac5296", "committedDate": "2020-11-02 20:20:37 +0100", "message": "Converted nav list to RecyclerView"}, {"oid": "c9635473cb69acfb883f70868f6a8e04670241b1", "committedDate": "2020-11-03 16:22:02 +0100", "message": "Fixed checkstyle"}, {"oid": "101f4e34edf940636948505f6cf4411bedae01d7", "committedDate": "2020-12-02 11:11:13 +0100", "message": "Use RxJava for deleting feeds"}, {"oid": "3ed33794327f547c8892d30958a78770dae56d45", "committedDate": "2021-01-02 16:58:43 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "c4db0ffb1faf526e5e15ad4ed97dd579d05c32c4", "committedDate": "2021-01-02 17:25:53 +0100", "message": "Added support for folder counter"}, {"oid": "3104232e5d8c355aa090e13cc9ff871beb200b4e", "committedDate": "2021-01-02 20:17:17 +0100", "message": "Calculate layer in makeFlatDrawerData"}, {"oid": "32afda252ef09c73dc18cf27cd5c5ebc6c7c4515", "committedDate": "2021-02-16 22:20:11 +0100", "message": "Don't flicker with nav drawer loading indicator when refreshing"}, {"oid": "f76d3ad09e41c544b8af2f33db0529e3bcdabc0e", "committedDate": "2021-03-05 10:12:35 +0100", "message": "Merge branch 'develop' into folders"}, {"oid": "27c4364e9ba171a58c04c4099980e6761ec5084f", "committedDate": "2021-03-05 10:48:24 +0100", "message": "Fixed long-pressing drawer items"}, {"oid": "d1d5974cea24e90d2a6c7f211f8f0851b134bf34", "committedDate": "2021-03-05 11:18:01 +0100", "message": "Fix selection highlighting"}, {"oid": "20f4d9739d996921c9b1e6b840df6e7fe2136b59", "committedDate": "2021-03-05 13:23:48 +0100", "message": "Store opened folders across app launches"}, {"oid": "d54ce2f8b161acd5b7e68ade793e29674351ffa7", "committedDate": "2021-03-05 16:55:55 +0100", "message": "Code cleanup"}, {"oid": "fd569aefa8cdd8b70245123f1a05e2fe13a2cc37", "committedDate": "2021-03-06 20:51:36 +0100", "message": "Fix regression: flashing progress bar"}, {"oid": "a3da79235a5965d830b164834cc95d3a1c762071", "committedDate": "2021-03-07 10:52:26 +0100", "message": "Only react to onContextItemSelected if something was actually selected"}, {"oid": "9d2467a4e237608c192738357b659c13eff37379", "committedDate": "2021-03-07 11:18:36 +0100", "message": "Merge pull request #4998 from ByteHamster/fix-navdrawer-pressed"}, {"oid": "ba66ae76337133d92963fbf9c8ead27ee81ef148", "committedDate": "2021-04-22 23:17:11 +0200", "message": "Moved model to its own module"}, {"oid": "47ac240f56dd7cb3eab81b040bfbcae62d1341e8", "committedDate": "2021-07-22 16:49:50 -0400", "message": "Fix NonConstantResourceId code lint errors"}, {"oid": "7ebaa9f619e004c8f2231bce1d170007c9de1544", "committedDate": "2021-08-17 23:57:49 +0200", "message": "Fix: #5298 \"Add to folder\" in podcast contextual side menu (#5344)"}, {"oid": "dab44b68436601f415edb095da605811e985eb00", "committedDate": "2021-10-02 17:13:23 +0200", "message": "Rename folder to tag (#5381)"}, {"oid": "98830beee54bc6fb1e0763481cd18f549c6d6ec7", "committedDate": "2021-11-02 21:02:47 +0100", "message": "Move (most) events to their own module"}, {"oid": "de8496f37f826fb20ab415b68e62eb298e18ef5d", "committedDate": "2021-11-06 22:28:49 +0100", "message": "Fix crash when deleting feed"}, {"oid": "b00e14545d472ddd1f13f7467e973dc5365ac77f", "committedDate": "2021-11-21 21:27:23 +0100", "message": "Add 'add to tag' option to multiselect menu (#5553)"}, {"oid": "a399702da2e222c586f8f5697076d373b667929a", "committedDate": "2021-12-19 17:28:45 +0100", "message": "Rename tags (#5601)"}, {"oid": "eb16c794fcb25b1de72c7d146452ad0ad372868a", "committedDate": "2022-02-19 14:14:08 +0100", "message": "Fix side drawer detecting click on 'remove item'"}, {"oid": "48d6dc8eb8bbd2beb3d888a21ed205cff1639f1e", "committedDate": "2022-03-15 19:48:53 +0100", "message": "Fix context menu click ending up in wrong fragment"}, {"oid": "dfcc342c57e263754bf145501cd237c7570debd2", "committedDate": "2022-05-03 22:10:39 +0200", "message": "Rename 'new' screen to inbox (#5460)"}, {"oid": "01bddcc0a9c214d6432493f4a881370c9328cf11", "committedDate": "2022-05-06 22:52:02 +0200", "message": "Move download logs to a button on the downloads page instead of a tab (#5866)"}, {"oid": "5887a86cecea299e65569847f7dc02772934ec78", "committedDate": "2022-08-06 15:21:19 +0200", "message": "Remove favorites tab"}, {"oid": "77104c9038abf579bc5652fc0ec5f941c0f9799f", "committedDate": "2022-08-27 11:19:34 +0200", "message": "Home Screen (#5864)"}, {"oid": "ad9de4467bac4b8ca235010a6b8532621c3a03e1", "committedDate": "2022-09-10 16:09:26 +0200", "message": "Add 'default screen' setting (replaces 'back button behavior') (#6041)"}, {"oid": "d8a2dd5f83598fdde289e01994c5d2df1c6577fc", "committedDate": "2022-11-06 21:21:28 +0100", "message": "Move preferences to a new module"}, {"oid": "8248bc6bb1f5f71a1e6be3101e1b2173948bf516", "committedDate": "2023-02-12 21:05:24 +0100", "message": "Automatically switch to different screen when hiding current one from drawer (#6254)"}, {"oid": "c98194f519c66e5af1575b1c6ffac5af16594141", "committedDate": "2023-02-19 11:48:48 +0100", "message": "Remove another global callback object (#6316)"}, {"oid": "a828660b446fcc1a8a518c7a30622b905c7bf358", "committedDate": "2023-04-07 14:21:52 +0200", "message": "Do not switch screens when clicking \"Remove podcast\" (#6259)"}, {"oid": "aab19f3a5c35a30847cf6b3f50680a0269e795df", "committedDate": "2023-05-05 17:22:31 +0200", "message": "Ignore subscription filter when suggesting tags (#6453)"}, {"oid": "10c70dd5f1bd498de32e323cd2832e247df80db7", "committedDate": "2023-05-28 11:18:56 +0200", "message": "Make drawer's corners round (#6478)"}]}, {"oid": "c6852dec282b9c234a73fd623e121c9a05fd5538", "url": "https://github.com/AntennaPod/AntennaPod/commit/c6852dec282b9c234a73fd623e121c9a05fd5538", "message": "line is too long", "committedDate": "2020-08-08T14:06:43Z", "type": "commit"}]}