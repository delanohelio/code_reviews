{"pr_number": 1305, "pr_title": "GraphQL Many-to-many filter Bug Fix", "pr_author": "codingwhatever", "pr_createdAt": "2020-05-06T22:33:05Z", "pr_url": "https://github.com/yahoo/elide/pull/1305", "timeline": [{"oid": "7af5bd950d4096b5a5b011846ccb53e5f9075b81", "url": "https://github.com/yahoo/elide/commit/7af5bd950d4096b5a5b011846ccb53e5f9075b81", "message": "Adding many-to-many filter support for graphql with single test", "committedDate": "2020-05-06T21:12:08Z", "type": "commit"}, {"oid": "b2ee0f4b8a06b1e8c9575bf3891aa3f3592a6096", "url": "https://github.com/yahoo/elide/commit/b2ee0f4b8a06b1e8c9575bf3891aa3f3592a6096", "message": "Adding more many-to-many graphql tests", "committedDate": "2020-05-06T21:43:12Z", "type": "commit"}, {"oid": "004bba25b5fdf967731e1ceed1592785d31afd50", "url": "https://github.com/yahoo/elide/commit/004bba25b5fdf967731e1ceed1592785d31afd50", "message": "Error logging + spacing cleanup", "committedDate": "2020-05-06T22:05:45Z", "type": "commit"}, {"oid": "cfd79b8a9efd998a1d8f0c458f4b4bfa3dcccc41", "url": "https://github.com/yahoo/elide/commit/cfd79b8a9efd998a1d8f0c458f4b4bfa3dcccc41", "message": "Reorder imports", "committedDate": "2020-05-06T22:42:49Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIzOTQ4OA==", "url": "https://github.com/yahoo/elide/pull/1305#discussion_r421239488", "body": "Unnecessary initialization.\r\n```suggestion\r\n            String errorMessage;\r\n```", "bodyText": "Unnecessary initialization.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        String errorMessage = \"\";\n          \n          \n            \n                        String errorMessage;", "bodyHTML": "<p dir=\"auto\">Unnecessary initialization.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"583\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">String</span> errorMessage<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"pl-pds x x-last\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"583\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">String</span> errorMessage;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "wcekan", "createdAt": "2020-05-07T04:58:25Z", "path": "elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java", "diffHunk": "@@ -563,22 +562,38 @@ private ConnectionContainer replaceObjects(Environment context) {\n         return sort.map(Sorting::parseSortRule);\n     }\n \n+    private MultivaluedHashMap<String, String> getQueryParams(Optional<String> typeName, String filterStr) {\n+        return new MultivaluedHashMap<String, String>() {\n+            {\n+                String filterKey = \"filter\";\n+                if (typeName.isPresent()) {\n+                    filterKey += \"[\" + typeName + \"]\";\n+                }\n+                put(filterKey, Arrays.asList(filterStr));\n+            }\n+        };\n+    }\n+\n     private Optional<FilterExpression> buildFilter(String typeName,\n                                                    Optional<String> filter,\n                                                    RequestScope requestScope) {\n         // TODO: Refactor FilterDialect interfaces to accept string or List<String> instead of (or in addition to?)\n         // query params.\n         return filter.map(filterStr -> {\n-            MultivaluedMap<String, String> queryParams = new MultivaluedHashMap<String, String>() {\n-                {\n-                    put(\"filter[\" + typeName + \"]\", Arrays.asList(filterStr));\n-                }\n-            };\n+            String errorMessage = \"\";", "originalCommit": "cfd79b8a9efd998a1d8f0c458f4b4bfa3dcccc41", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIzOTc2Nw==", "url": "https://github.com/yahoo/elide/pull/1305#discussion_r421239767", "body": "@aklish will this conflict with #1304? ", "bodyText": "@aklish will this conflict with #1304?", "bodyHTML": "<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/aklish/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/aklish\">@aklish</a> will this conflict with <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"613570437\" data-permission-text=\"Title is private\" data-url=\"https://github.com/yahoo/elide/issues/1304\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/yahoo/elide/pull/1304/hovercard\" href=\"https://github.com/yahoo/elide/pull/1304\">#1304</a>?</p>", "author": "wcekan", "createdAt": "2020-05-07T04:59:19Z", "path": "elide-graphql/src/main/java/com/yahoo/elide/graphql/PersistentResourceFetcher.java", "diffHunk": "@@ -563,22 +562,38 @@ private ConnectionContainer replaceObjects(Environment context) {\n         return sort.map(Sorting::parseSortRule);\n     }\n \n+    private MultivaluedHashMap<String, String> getQueryParams(Optional<String> typeName, String filterStr) {\n+        return new MultivaluedHashMap<String, String>() {\n+            {\n+                String filterKey = \"filter\";\n+                if (typeName.isPresent()) {\n+                    filterKey += \"[\" + typeName + \"]\";\n+                }\n+                put(filterKey, Arrays.asList(filterStr));\n+            }\n+        };\n+    }\n+\n     private Optional<FilterExpression> buildFilter(String typeName,\n                                                    Optional<String> filter,\n                                                    RequestScope requestScope) {\n         // TODO: Refactor FilterDialect interfaces to accept string or List<String> instead of (or in addition to?)\n         // query params.\n         return filter.map(filterStr -> {\n-            MultivaluedMap<String, String> queryParams = new MultivaluedHashMap<String, String>() {\n-                {\n-                    put(\"filter[\" + typeName + \"]\", Arrays.asList(filterStr));\n-                }\n-            };\n+            String errorMessage = \"\";\n+            try {\n+                return requestScope.getFilterDialect()\n+                        .parseGlobalExpression(typeName, getQueryParams(Optional.empty(), filterStr));\n+            } catch (ParseException e) {\n+                errorMessage = e.getMessage();\n+            }\n+\n             try {\n-                return requestScope.getFilterDialect().parseTypedExpression(typeName, queryParams).get(typeName);\n+                return requestScope.getFilterDialect()\n+                        .parseTypedExpression(typeName, getQueryParams(Optional.of(typeName), filterStr))\n+                        .get(typeName);\n             } catch (ParseException e) {\n-                log.debug(\"Filter parse exception caught\", e);\n-                throw new InvalidPredicateException(\"Could not parse filter for type: \" + typeName);\n+                throw new InvalidPredicateException(errorMessage + \"\\n\" + e.getMessage());", "originalCommit": "cfd79b8a9efd998a1d8f0c458f4b4bfa3dcccc41", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTYwMjQxMw==", "url": "https://github.com/yahoo/elide/pull/1305#discussion_r421602413", "bodyText": "It will - but should be simple to merge.", "author": "aklish", "createdAt": "2020-05-07T15:39:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIzOTc2Nw=="}], "type": "inlineReview"}]}