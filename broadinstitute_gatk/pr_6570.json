{"pr_number": 6570, "pr_title": "CNN filtering should run for all-SNP VCF (#6411)", "pr_author": "ldgauthier", "pr_createdAt": "2020-04-24T15:47:42Z", "pr_url": "https://github.com/broadinstitute/gatk/pull/6570", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY3MzgyOQ==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416673829", "body": "We often just use a set `final Set uniqueAnnotations = new HashSet<>(annotationKeys);` to uniquify a list, but this is fine. ", "bodyText": "We often just use a set final Set uniqueAnnotations = new HashSet<>(annotationKeys); to uniquify a list, but this is fine.", "bodyHTML": "<p dir=\"auto\">We often just use a set <code>final Set uniqueAnnotations = new HashSet&lt;&gt;(annotationKeys);</code> to uniquify a list, but this is fine.</p>", "author": "cmnbroad", "createdAt": "2020-04-28T14:46:04Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());", "originalCommit": "3a13ac99b278d656ba0b3a8abcd244f126571517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4MzM2Mw==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416683363", "body": "Not sure if the emptiness is deliberate, but I'm pretty certain any test that uses this data provider will not be run at all.", "bodyText": "Not sure if the emptiness is deliberate, but I'm pretty certain any test that uses this data provider will not be run at all.", "bodyHTML": "<p dir=\"auto\">Not sure if the emptiness is deliberate, but I'm pretty certain any test that uses this data provider will not be run at all.</p>", "author": "cmnbroad", "createdAt": "2020-04-28T14:57:43Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -122,11 +185,18 @@ public void initializeVariantRecalTests() {\n         };\n     }\n \n+    @DataProvider(name=\"BadVarRecal\")\n+    public Object[][] BadVarRecal() {\n+        return new Object[][] {\n+\n+        };\n+    }\n+", "originalCommit": "3a13ac99b278d656ba0b3a8abcd244f126571517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4NzAyNw==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416687027", "body": "```suggestion\r\n            logger.warn(\"Ignoring duplicate annotations for recalibration %s.\", Utils.getDuplicatedItems(annotationKeys));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warn(\"Specified annotations for recalibration contain duplicates.\");\n          \n          \n            \n                        logger.warn(\"Ignoring duplicate annotations for recalibration %s.\", Utils.getDuplicatedItems(annotationKeys));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            logger<span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Specified </span>annotations for recalibration <span class=\"x x-first\">contain duplicates.</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            logger<span class=\"pl-k\">.</span>warn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"x x-first x-last\">Ignoring duplicate </span>annotations for recalibration <span class=\"x x-first\">%s.</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-smi x\">Utils</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">getDuplicatedItems(annotationKeys)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "cmnbroad", "createdAt": "2020-04-28T15:02:20Z", "path": "src/main/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantDataManager.java", "diffHunk": "@@ -35,7 +36,11 @@\n \n     public VariantDataManager( final List<String> annotationKeys, final VariantRecalibratorArgumentCollection VRAC ) {\n         this.data = Collections.emptyList();\n-        this.annotationKeys = new ArrayList<>( annotationKeys );\n+        final List<String> uniqueAnnotations = annotationKeys.stream().distinct().collect(Collectors.toList());\n+        if (annotationKeys.size() != uniqueAnnotations.size()) {\n+            logger.warn(\"Specified annotations for recalibration contain duplicates.\");", "originalCommit": "3a13ac99b278d656ba0b3a8abcd244f126571517", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTM1MQ==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r416689351", "body": "See comment above.", "bodyText": "See comment above.", "bodyHTML": "<p dir=\"auto\">See comment above.</p>", "author": "cmnbroad", "createdAt": "2020-04-28T15:05:27Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -187,6 +257,11 @@ public void testVariantRecalibratorSNP(final String[] params, final String tranc\n         doSNPTest(params, tranchesPath, recalPath);\n     }\n \n+    @Test(dataProvider = \"BadVarRecal\", expectedExceptions = {UserException.BadInput.class})", "originalCommit": "3a13ac99b278d656ba0b3a8abcd244f126571517", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgyNjAyNQ==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r426826025", "bodyText": "The \"bad\" cases are covered in other more specific tests.  I'll take it out.", "author": "ldgauthier", "createdAt": "2020-05-18T18:47:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjY4OTM1MQ=="}], "type": "inlineReview"}, {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "url": "https://github.com/broadinstitute/gatk/commit/17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "message": "CNN filtering should run for all-SNP VCF (#6411)\nNew test for multi-input BOTH mode\nUniquify annotations as for #2221", "committedDate": "2020-05-18T18:46:35Z", "type": "commit"}, {"oid": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "url": "https://github.com/broadinstitute/gatk/commit/17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "message": "CNN filtering should run for all-SNP VCF (#6411)\nNew test for multi-input BOTH mode\nUniquify annotations as for #2221", "committedDate": "2020-05-18T18:46:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTU1MzE3Nw==", "url": "https://github.com/broadinstitute/gatk/pull/6570#discussion_r451553177", "body": "Minor nit - it would be nice if the common part of the command line string was factored out of these, since it takes some staring to spot the subtle differences (ie, the duplicate annotation). Up to you. No good deed goes unpunished...", "bodyText": "Minor nit - it would be nice if the common part of the command line string was factored out of these, since it takes some staring to spot the subtle differences (ie, the duplicate annotation). Up to you. No good deed goes unpunished...", "bodyHTML": "<p dir=\"auto\">Minor nit - it would be nice if the common part of the command line string was factored out of these, since it takes some staring to spot the subtle differences (ie, the duplicate annotation). Up to you. No good deed goes unpunished...</p>", "author": "cmnbroad", "createdAt": "2020-07-08T13:41:54Z", "path": "src/test/java/org/broadinstitute/hellbender/tools/walkers/vqsr/VariantRecalibratorIntegrationTest.java", "diffHunk": "@@ -44,6 +45,64 @@\n             \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n         };\n \n+    private final String[] VQSRSNPsWithAnnotationDupe =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"SNP\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\"\n+            };\n+\n+    private final String[] VQSRBothParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+\n+    private final String[] VQSRBothAggregateParamsWithResources =\n+            new String[] {\n+                    \"--variant\",\n+                    getLargeVQSRTestDataDir() + \"phase1.projectConsensus.chr20.1M-10M.raw.snps.vcf\",\n+                    \"--aggregate\",\n+                    getLargeVQSRTestDataDir() + \"g94982_20_1m_10m_python_2dcnn.indels.vcf.gz\",\n+                    \"-L\",\"20:1,000,000-10,000,000\",\n+                    \"--resource:known,known=true,prior=10.0\",\n+                    getLargeVQSRTestDataDir() + \"dbsnp_132_b37.leftAligned.20.1M-10M.vcf\",\n+                    \"--resource:truth_training1,truth=true,training=true,prior=15.0\",\n+                    getLargeVQSRTestDataDir() + \"sites_r27_nr.b37_fwd.20.1M-10M.vcf\",\n+                    \"--resource:truth_training2,training=true,truth=true,prior=12.0\",\n+                    getLargeVQSRTestDataDir() + \"Omni25_sites_1525_samples.b37.20.1M-10M.vcf\",\n+                    \"-an\", \"QD\", \"-an\", \"HaplotypeScore\", \"-an\", \"HRun\",\n+                    \"--trust-all-polymorphic\", // for speed\n+                    \"-mode\", \"BOTH\",\n+                    \"--\" + StandardArgumentDefinitions.ADD_OUTPUT_VCF_COMMANDLINE, \"false\",\n+                    \" --output %s\" + \" -tranches-file %s\",\n+                    \"--max-gaussians\", \"6\"\n+            };\n+", "originalCommit": "17e5a70699ee3fc1dac7853fcaf23614986e2e4a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}