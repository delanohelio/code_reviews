{"pr_number": 15168, "pr_title": "Automatically switch to PAGEFILE format for hive unsupported type", "pr_author": "viczhang861", "pr_createdAt": "2020-09-14T19:47:23Z", "pr_url": "https://github.com/prestodb/presto/pull/15168", "timeline": [{"oid": "ec7b1df7b4636d0675c0674ff8896ba1c63eaa3d", "url": "https://github.com/prestodb/presto/commit/ec7b1df7b4636d0675c0674ff8896ba1c63eaa3d", "message": "Use PAGEFILE format for hive unsupported type", "committedDate": "2020-09-14T21:32:52Z", "type": "forcePushed"}, {"oid": "04d1ea87139447c4e5918d81e93b348657276ed2", "url": "https://github.com/prestodb/presto/commit/04d1ea87139447c4e5918d81e93b348657276ed2", "message": "Use PAGEFILE format for hive unsupported type", "committedDate": "2020-09-15T01:09:11Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NTExOQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r488865119", "body": "in general we don't want to rely normal execution path to rely on Exception and the message. What about using a separate method `isSupportedHiveType`, and switch to `PageFile` if some column is not supported by Hive? ", "bodyText": "in general we don't want to rely normal execution path to rely on Exception and the message. What about using a separate method isSupportedHiveType, and switch to PageFile if some column is not supported by Hive?", "bodyHTML": "<p dir=\"auto\">in general we don't want to rely normal execution path to rely on Exception and the message. What about using a separate method <code>isSupportedHiveType</code>, and switch to <code>PageFile</code> if some column is not supported by Hive?</p>", "author": "wenleix", "createdAt": "2020-09-15T18:06:44Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -962,17 +963,43 @@ public ConnectorTableHandle createTemporaryTable(ConnectorSession session, List<\n         // choose HIVE_BINARY as a default hive type to make it compatible with Hive connector\n         Optional<HiveType> defaultHiveType = storageFormat == PAGEFILE ? Optional.of(HIVE_BINARY) : Optional.empty();\n \n-        List<HiveColumnHandle> columnHandles = getColumnHandles(\n-                // Hive doesn't support anonymous rows and unknown type\n-                // Since this method doesn't create a real table, it is fine\n-                // to assign dummy field names to the anonymous rows and translate unknown\n-                // type to the boolean type that is binary compatible\n-                translateHiveUnsupportedTypesForTemporaryTable(columns, typeManager),\n-                ImmutableSet.of(),\n-                typeTranslator,\n-                defaultHiveType);\n+        List<HiveColumnHandle> columnHandles;\n+        try {\n+            columnHandles = getColumnHandles(\n+                    // Hive doesn't support anonymous rows and unknown type\n+                    // Since this method doesn't create a real table, it is fine\n+                    // to assign dummy field names to the anonymous rows and translate unknown\n+                    // type to the boolean type that is binary compatible\n+                    translateHiveUnsupportedTypesForTemporaryTable(columns, typeManager),\n+                    ImmutableSet.of(),\n+                    typeTranslator,\n+                    defaultHiveType);\n+        }\n+        catch (Exception e) {\n+            if (isUsePageFileForHiveUnsupportedType(session) &&\n+                    e instanceof PrestoException &&\n+                    ((PrestoException) e).getErrorCode().equals(NOT_SUPPORTED.toErrorCode()) &&\n+                    e.getMessage().contains(\"No default Hive type provided for unsupported Hive type\") &&", "originalCommit": "04d1ea87139447c4e5918d81e93b348657276ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NjI0OA==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r488866248", "body": "just double check: if the automatic switch happened, we should be able to tell from the plan right? ", "bodyText": "just double check: if the automatic switch happened, we should be able to tell from the plan right?", "bodyHTML": "<p dir=\"auto\">just double check: if the automatic switch happened, we should be able to tell from the plan right?</p>", "author": "wenleix", "createdAt": "2020-09-15T18:08:54Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveMetadata.java", "diffHunk": "@@ -982,7 +1009,7 @@ public ConnectorTableHandle createTemporaryTable(ConnectorSession session, List<\n                         .map(handle -> new Column(handle.getName(), handle.getHiveType(), handle.getComment()))\n                         .collect(toImmutableList()))\n                 .withStorage(storage -> storage\n-                        .setStorageFormat(fromHiveStorageFormat(storageFormat))\n+                        .setStorageFormat(fromHiveStorageFormat(finalStorageFormat))", "originalCommit": "04d1ea87139447c4e5918d81e93b348657276ed2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5Njg3OQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490596879", "bodyText": "@wenleix Very good point, now it is possible to have a mixed types of formats. I included format name to table name, like __presto_temporary_table_ORC...  or __presto_temporary_table_PAGEFILE... . Do you have other idea?", "author": "viczhang861", "createdAt": "2020-09-17T22:28:53Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NjI0OA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY5MjMwNg==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490692306", "bodyText": "@viczhang861 : Sounds reasonable. I am always thinking to refactor the temporary table name to have some hint over which stage it comes from (instead of an UUID). But let's keep it as is \ud83d\ude03", "author": "wenleix", "createdAt": "2020-09-18T04:15:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODg2NjI0OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI5NDM4NQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490294385", "body": "Should this also test the failure cases, IOWs to validate that the test will fail if these things don't work also test with ORC and false. ", "bodyText": "Should this also test the failure cases, IOWs to validate that the test will fail if these things don't work also test with ORC and false.", "bodyHTML": "<p dir=\"auto\">Should this also test the failure cases, IOWs to validate that the test will fail if these things don't work also test with ORC and false.</p>", "author": "aweisberg", "createdAt": "2020-09-17T14:31:23Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHiveDistributedQueriesWithExchangeMaterialization.java", "diffHunk": "@@ -42,9 +44,18 @@ public void testMaterializedExchangesEnabled()\n \n     @Test\n     public void testMaterializeHiveUnsupportedTypeForTemporaryTable()\n+    {\n+        testMaterializeHiveUnsupportedTypeForTemporaryTable(ORC, true);\n+        testMaterializeHiveUnsupportedTypeForTemporaryTable(PAGEFILE, false);", "originalCommit": "04d1ea87139447c4e5918d81e93b348657276ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMwMzc1Mg==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490303752", "body": "Help text could give info on when and why you would enable this option.\r\n\r\nLike `Automatically switch to PAGEFILE format for materialized exchange when encountering unsupported types`", "bodyText": "Help text could give info on when and why you would enable this option.\nLike Automatically switch to PAGEFILE format for materialized exchange when encountering unsupported types", "bodyHTML": "<p dir=\"auto\">Help text could give info on when and why you would enable this option.</p>\n<p dir=\"auto\">Like <code>Automatically switch to PAGEFILE format for materialized exchange when encountering unsupported types</code></p>", "author": "aweisberg", "createdAt": "2020-09-17T14:41:28Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java", "diffHunk": "@@ -415,6 +416,11 @@ public HiveSessionProperties(HiveClientConfig hiveClientConfig, OrcFileWriterCon\n                         false,\n                         value -> HiveCompressionCodec.valueOf(((String) value).toUpperCase()),\n                         HiveCompressionCodec::name),\n+                booleanProperty(\n+                        USE_PAGEFILE_FOR_HIVE_UNSUPPORTED_TYPE,\n+                        \"use PAGEFILE format for hive unsupported type\",", "originalCommit": "04d1ea87139447c4e5918d81e93b348657276ed2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4e6e1757102b8c3d4cc5a2f79a7e97bcc1ba7e95", "url": "https://github.com/prestodb/presto/commit/4e6e1757102b8c3d4cc5a2f79a7e97bcc1ba7e95", "message": "Add session property to automatically use PAGEFILE", "committedDate": "2020-09-17T22:23:38Z", "type": "commit"}, {"oid": "b62aeb3955679177fe72ae53a290512fa76092f1", "url": "https://github.com/prestodb/presto/commit/b62aeb3955679177fe72ae53a290512fa76092f1", "message": "Use PAGEFILE format for hive unsupported type", "committedDate": "2020-09-17T22:23:43Z", "type": "commit"}, {"oid": "2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "url": "https://github.com/prestodb/presto/commit/2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "message": "Include storage format name to temporary table name", "committedDate": "2020-09-17T22:23:43Z", "type": "commit"}, {"oid": "2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "url": "https://github.com/prestodb/presto/commit/2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "message": "Include storage format name to temporary table name", "committedDate": "2020-09-17T22:23:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5NzA1Mw==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490597053", "body": "```suggestion\r\n    public static boolean shouldUsePageFileForHiveUnsupportedType(ConnectorSession session)\r\n```\r\nor\r\n```suggestion\r\n    public static boolean usePageFileForHiveUnsupportedType(ConnectorSession session)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static boolean isUsePageFileForHiveUnsupportedType(ConnectorSession session)\n          \n          \n            \n                public static boolean shouldUsePageFileForHiveUnsupportedType(ConnectorSession session)\n          \n      \n    \n    \n  \n\nor\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static boolean isUsePageFileForHiveUnsupportedType(ConnectorSession session)\n          \n          \n            \n                public static boolean usePageFileForHiveUnsupportedType(ConnectorSession session)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"792\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isUsePageFileForHiveUnsupportedType</span>(<span class=\"pl-smi\">ConnectorSession</span> session)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"792\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">shouldUsePageFileForHiveUnsupportedType</span>(<span class=\"pl-smi\">ConnectorSession</span> session)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">or</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"792\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">isUsePageFileForHiveUnsupportedType</span>(<span class=\"pl-smi\">ConnectorSession</span> session)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"792\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> <span class=\"x x-first x-last\">usePageFileForHiveUnsupportedType</span>(<span class=\"pl-smi\">ConnectorSession</span> session)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "aweisberg", "createdAt": "2020-09-17T22:29:16Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveSessionProperties.java", "diffHunk": "@@ -783,6 +789,11 @@ public static HiveCompressionCodec getTemporaryTableCompressionCodec(ConnectorSe\n         return session.getProperty(TEMPORARY_TABLE_COMPRESSION_CODEC, HiveCompressionCodec.class);\n     }\n \n+    public static boolean isUsePageFileForHiveUnsupportedType(ConnectorSession session)", "originalCommit": "2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxNzA4OQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490617089", "bodyText": "I initially use usePageFileForHiveUnsupportedType too, then I realized most other functions started with is as prefix for boolean type.  For example isUseParquetColumnNames", "author": "viczhang861", "createdAt": "2020-09-17T23:30:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5NzA1Mw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5OTYxNQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490599615", "body": "Heh in some ways this duplication of logic with `translate` is also unfortunate.\r\n\r\nI like pushing the nastiness into this utility function, but @wenleix  would you rather not duplicate it and keep the exception handling?", "bodyText": "Heh in some ways this duplication of logic with translate is also unfortunate.\nI like pushing the nastiness into this utility function, but @wenleix  would you rather not duplicate it and keep the exception handling?", "bodyHTML": "<p dir=\"auto\">Heh in some ways this duplication of logic with <code>translate</code> is also unfortunate.</p>\n<p dir=\"auto\">I like pushing the nastiness into this utility function, but <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/wenleix/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/wenleix\">@wenleix</a>  would you rather not duplicate it and keep the exception handling?</p>", "author": "aweisberg", "createdAt": "2020-09-17T22:35:54Z", "path": "presto-hive/src/main/java/com/facebook/presto/hive/HiveTypeTranslator.java", "diffHunk": "@@ -152,7 +152,62 @@ else if (varcharLength == VarcharType.UNBOUNDED_LENGTH) {\n                             .collect(toList()));\n         }\n         return defaultHiveType\n-                .orElseThrow(() -> new PrestoException(NOT_SUPPORTED, format(\"Unsupported Hive type: %s\", type)))\n+                .orElseThrow(() -> new PrestoException(NOT_SUPPORTED, format(\"No default Hive type provided for unsupported Hive type: %s\", type)))\n                 .getTypeInfo();\n     }\n+\n+    public static boolean isSupportedHiveType(Type type)", "originalCommit": "2adbd80332ebefdf4777ae22324e0dd18cc3d6d9", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDYxOTU1OQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490619559", "bodyText": "Hopefully PAGEFILE will be used as default value for temporary file format, then we can turn off this session property and bypass this function.", "author": "viczhang861", "createdAt": "2020-09-17T23:39:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5OTYxNQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY5MzUzMQ==", "url": "https://github.com/prestodb/presto/pull/15168#discussion_r490693531", "bodyText": "I like pushing the nastiness into this utility function, but @wenleix would you rather not duplicate it and keep the exception handling?\n\n@aweisberg : I agree this is not ideal. But in general we don't want exception handling being used for normal (or expected) business logic. Exception handling code path should be unexpected situation.\nOne idea to avoid code duplication is to refactor translate to return an Optional, for example, and returns Optional.emtpy() to indicate there is no viable translation (and throw exception in caller). But I am OK to just keep the current code and hopefully we can remove them once NATIVE FORMAT is 100% rolled out (or, we refactor it).", "author": "wenleix", "createdAt": "2020-09-18T04:20:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU5OTYxNQ=="}], "type": "inlineReview"}]}