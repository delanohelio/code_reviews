{"pr_number": 14475, "pr_title": "FastutilSetHelper ObjectStrategy#equals result can be null.", "pr_author": "sujay-jain", "pr_createdAt": "2020-05-04T21:30:14Z", "pr_url": "https://github.com/prestodb/presto/pull/14475", "timeline": [{"oid": "95aad6a8cb6eacb2e0eee6e5c7ff9292acd3ab89", "url": "https://github.com/prestodb/presto/commit/95aad6a8cb6eacb2e0eee6e5c7ff9292acd3ab89", "message": "FastutilSetHelper ObjectStrategy equals result can be null.", "committedDate": "2020-05-04T22:42:44Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc3ODM3OQ==", "url": "https://github.com/prestodb/presto/pull/14475#discussion_r419778379", "body": "generate the ROW(1,%s)", "bodyText": "generate the ROW(1,%s)", "bodyHTML": "<p dir=\"auto\">generate the ROW(1,%s)</p>", "author": "bhhari", "createdAt": "2020-05-04T23:01:59Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -337,6 +337,17 @@ public void testFloats()\n         assertFilterProject(\"reals[1] > 0.01\", \"count(*)\");\n     }\n \n+    @Test\n+    public void testInComplexTypes()\n+    {\n+          String query = \"select * from (values('a'), (null)) as t (name) where ROW('1', name) IN ( ROW('1','2'), ROW('1','3'), \" +", "originalCommit": "95aad6a8cb6eacb2e0eee6e5c7ff9292acd3ab89", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a4a541df1a378f8c3c42e2bcec004963de937e66", "url": "https://github.com/prestodb/presto/commit/a4a541df1a378f8c3c42e2bcec004963de937e66", "message": "FastutilSetHelper ObjectStrategy equals result can be null.", "committedDate": "2020-05-05T00:19:00Z", "type": "forcePushed"}, {"oid": "5f72b87b3cbbeae1645ce553df3026d099ee42d5", "url": "https://github.com/prestodb/presto/commit/5f72b87b3cbbeae1645ce553df3026d099ee42d5", "message": "FastutilSetHelper ObjectStrategy equals result can be null.", "committedDate": "2020-05-05T16:06:57Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEzMjk4NQ==", "url": "https://github.com/prestodb/presto/pull/14475#discussion_r421132985", "body": "Please add this test case as well to make sure that correct answer (`NULL`) is returned.\r\n\r\n```\r\n        StringBuilder query = new StringBuilder(\"select ROW(null_value) IN ( \");\r\n        for (int i = 0; i < 32; i++) {\r\n            query.append(String.format(\"ROW(%s), \", i));\r\n        }\r\n        query.append(\"ROW(32)) \");\r\n        query.append(\"FROM (values(null)) as t (null_value)\");\r\n        assertQuery(query.toString(), \"SELECT NULL\");\r\n```\r\n\r\nThe `ROW(NULL) IN (ROW(0), ...) ` creates a collision required to get the equals path executed.\r\n\r\nAlso I would suggest moving this test to `AbstractTestQueries`, as there's nothing Hive specific about it.\r\n\r\nAlso please add a comment describing what kind of black magic are we doing here.", "bodyText": "Please add this test case as well to make sure that correct answer (NULL) is returned.\n        StringBuilder query = new StringBuilder(\"select ROW(null_value) IN ( \");\n        for (int i = 0; i < 32; i++) {\n            query.append(String.format(\"ROW(%s), \", i));\n        }\n        query.append(\"ROW(32)) \");\n        query.append(\"FROM (values(null)) as t (null_value)\");\n        assertQuery(query.toString(), \"SELECT NULL\");\n\nThe ROW(NULL) IN (ROW(0), ...)  creates a collision required to get the equals path executed.\nAlso I would suggest moving this test to AbstractTestQueries, as there's nothing Hive specific about it.\nAlso please add a comment describing what kind of black magic are we doing here.", "bodyHTML": "<p dir=\"auto\">Please add this test case as well to make sure that correct answer (<code>NULL</code>) is returned.</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"        StringBuilder query = new StringBuilder(&quot;select ROW(null_value) IN ( &quot;);\n        for (int i = 0; i &lt; 32; i++) {\n            query.append(String.format(&quot;ROW(%s), &quot;, i));\n        }\n        query.append(&quot;ROW(32)) &quot;);\n        query.append(&quot;FROM (values(null)) as t (null_value)&quot;);\n        assertQuery(query.toString(), &quot;SELECT NULL&quot;);\"><pre><code>        StringBuilder query = new StringBuilder(\"select ROW(null_value) IN ( \");\n        for (int i = 0; i &lt; 32; i++) {\n            query.append(String.format(\"ROW(%s), \", i));\n        }\n        query.append(\"ROW(32)) \");\n        query.append(\"FROM (values(null)) as t (null_value)\");\n        assertQuery(query.toString(), \"SELECT NULL\");\n</code></pre></div>\n<p dir=\"auto\">The <code>ROW(NULL) IN (ROW(0), ...) </code> creates a collision required to get the equals path executed.</p>\n<p dir=\"auto\">Also I would suggest moving this test to <code>AbstractTestQueries</code>, as there's nothing Hive specific about it.</p>\n<p dir=\"auto\">Also please add a comment describing what kind of black magic are we doing here.</p>", "author": "arhimondr", "createdAt": "2020-05-06T22:39:22Z", "path": "presto-hive/src/test/java/com/facebook/presto/hive/TestHivePushdownFilterQueries.java", "diffHunk": "@@ -337,6 +337,19 @@ public void testFloats()\n         assertFilterProject(\"reals[1] > 0.01\", \"count(*)\");\n     }\n \n+    @Test\n+    public void testInComplexTypes()", "originalCommit": "5f72b87b3cbbeae1645ce553df3026d099ee42d5", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "96322404ad428892ac025f73141d0b0c9d9634be", "url": "https://github.com/prestodb/presto/commit/96322404ad428892ac025f73141d0b0c9d9634be", "message": "FastutilSetHelper ObjectStrategy equals result can be null.", "committedDate": "2020-05-06T23:32:14Z", "type": "commit"}, {"oid": "96322404ad428892ac025f73141d0b0c9d9634be", "url": "https://github.com/prestodb/presto/commit/96322404ad428892ac025f73141d0b0c9d9634be", "message": "FastutilSetHelper ObjectStrategy equals result can be null.", "committedDate": "2020-05-06T23:32:14Z", "type": "forcePushed"}]}