{"pr_number": 1061, "pr_title": "TSK-1224: refactor the configuration of the custom holidays", "pr_author": "sfrevel", "pr_createdAt": "2020-05-11T14:15:04Z", "pr_url": "https://github.com/Taskana/taskana/pull/1061", "timeline": [{"oid": "54c04d579576caf604f55a57b895d5d0cd400e9a", "url": "https://github.com/Taskana/taskana/commit/54c04d579576caf604f55a57b895d5d0cd400e9a", "message": "TSK-1227: refactor the configuration of the custom holidays", "committedDate": "2020-05-11T15:15:40Z", "type": "forcePushed"}, {"oid": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "url": "https://github.com/Taskana/taskana/commit/f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "message": "TSK-1224: add/refactor tests", "committedDate": "2020-05-12T07:12:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTY2NA==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423529664", "body": "As discussed. Maybe it's cooler to generalize our `rolesSeparator` ", "bodyText": "As discussed. Maybe it's cooler to generalize our rolesSeparator", "bodyHTML": "<p dir=\"auto\">As discussed. Maybe it's cooler to generalize our <code>rolesSeparator</code></p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:47:20Z", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java", "diffHunk": "@@ -71,6 +72,10 @@\n   // TASKANA_SCHEMA_VERSION\n   private static final String DEFAULT_SCHEMA_NAME = \"TASKANA\";\n \n+  private static final String TASKANA_CUSTOM_HOLIDAY = \"taskana.custom.holidays\";\n+  private static final String TASKANA_CUSTOM_HOLIDAY_SEPERATOR = \";\";", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTg0OQ==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423529849", "body": "Why are you escaping the dot?", "bodyText": "Why are you escaping the dot?", "bodyHTML": "<p dir=\"auto\">Why are you escaping the dot?</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:47:39Z", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java", "diffHunk": "@@ -71,6 +72,10 @@\n   // TASKANA_SCHEMA_VERSION\n   private static final String DEFAULT_SCHEMA_NAME = \"TASKANA\";\n \n+  private static final String TASKANA_CUSTOM_HOLIDAY = \"taskana.custom.holidays\";\n+  private static final String TASKANA_CUSTOM_HOLIDAY_SEPERATOR = \";\";\n+  private static final String TASKANA_CUSTOM_HOLIDAY_DAY_MONTH_SEPERATOR = \"\\\\.\";", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzOTgzOA==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423539838", "bodyText": "Otherwise it is interpreted as an Regular expression, because String.split() method used regular expression patterns for splitting.", "author": "sfrevel", "createdAt": "2020-05-12T08:04:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTg0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU2MDc2OQ==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423560769", "bodyText": "OK, i see Pattern#quate does the job \ud83d\udc4d", "author": "sfrevel", "createdAt": "2020-05-12T08:37:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUyOTg0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzMDgxMw==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423530813", "body": "a set method which only adds feels a little odd..\r\nEither rename the method to `addCustomHolidays` or replace the existing lists (and thus override the property initalization).\r\n", "bodyText": "a set method which only adds feels a little odd..\nEither rename the method to addCustomHolidays or replace the existing lists (and thus override the property initalization).", "bodyHTML": "<p dir=\"auto\">a set method which only adds feels a little odd..<br>\nEither rename the method to <code>addCustomHolidays</code> or replace the existing lists (and thus override the property initalization).</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:49:22Z", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java", "diffHunk": "@@ -248,12 +254,12 @@ public void setGermanPublicHolidaysEnabled(boolean germanPublicHolidaysEnabled)\n     this.germanPublicHolidaysEnabled = germanPublicHolidaysEnabled;\n   }\n \n-  public List<LocalDate> getCustomHolidays() {\n+  public List<CustomHoliday> getCustomHolidays() {\n     return customHolidays;\n   }\n \n-  public void setCustomHolidays(List<LocalDate> customHolidays) {\n-    this.customHolidays = customHolidays;\n+  public void setCustomHolidays(List<CustomHoliday> customHolidays) {\n+    customHolidays.forEach(this.customHolidays::add);", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzMzUxMw==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423533513", "body": "I prefer escaping the `TASKANA_CUSTOM_HOLIDAY_SEPERATOR` programmatically with `Pattern#quote`\r\nBecause of this other developer don't get confused with the semantic of that constant", "bodyText": "I prefer escaping the TASKANA_CUSTOM_HOLIDAY_SEPERATOR programmatically with Pattern#quote\nBecause of this other developer don't get confused with the semantic of that constant", "bodyHTML": "<p dir=\"auto\">I prefer escaping the <code>TASKANA_CUSTOM_HOLIDAY_SEPERATOR</code> programmatically with <code>Pattern#quote</code><br>\nBecause of this other developer don't get confused with the semantic of that constant</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:53:51Z", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java", "diffHunk": "@@ -533,6 +539,34 @@ private void initTaskanaRoles(Properties props, String rolesSeparator) {\n     }\n   }\n \n+  private void initCustomHolidays(Properties props) {\n+    if (props.getProperty(TASKANA_CUSTOM_HOLIDAY) != null) {\n+      Arrays.asList(\n+              props.getProperty(TASKANA_CUSTOM_HOLIDAY).split(TASKANA_CUSTOM_HOLIDAY_SEPERATOR))", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNDc4Ng==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423534786", "body": "same as the comment above :)", "bodyText": "same as the comment above :)", "bodyHTML": "<p dir=\"auto\">same as the comment above :)</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:55:49Z", "path": "lib/taskana-core/src/main/java/pro/taskana/TaskanaEngineConfiguration.java", "diffHunk": "@@ -533,6 +539,34 @@ private void initTaskanaRoles(Properties props, String rolesSeparator) {\n     }\n   }\n \n+  private void initCustomHolidays(Properties props) {\n+    if (props.getProperty(TASKANA_CUSTOM_HOLIDAY) != null) {\n+      Arrays.asList(\n+              props.getProperty(TASKANA_CUSTOM_HOLIDAY).split(TASKANA_CUSTOM_HOLIDAY_SEPERATOR))\n+          .forEach(\n+              entry -> {\n+                try {\n+                  customHolidays.add(createCustomHolidayFromPropsEntry(entry));\n+                } catch (WrongCustomHolidayFormatException e) {\n+                  LOGGER.warn(e.getMessage());\n+                }\n+              });\n+    }\n+  }\n+\n+  private CustomHoliday createCustomHolidayFromPropsEntry(String customHolidayEntry)\n+      throws WrongCustomHolidayFormatException {\n+    String[] parts = customHolidayEntry.split(TASKANA_CUSTOM_HOLIDAY_DAY_MONTH_SEPERATOR);", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNTc1OA==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423535758", "body": "Please extend `TaskanaException` instead of `Exception`", "bodyText": "Please extend TaskanaException instead of Exception", "bodyHTML": "<p dir=\"auto\">Please extend <code>TaskanaException</code> instead of <code>Exception</code></p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:57:17Z", "path": "lib/taskana-core/src/main/java/pro/taskana/common/api/exceptions/WrongCustomHolidayFormatException.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package pro.taskana.common.api.exceptions;\n+\n+public class WrongCustomHolidayFormatException extends Exception {", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNzA0Nw==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423537047", "body": "I wouldn't put this class in internal, since this is necessary for the user to configure.\r\nThis is common/api/model.. Any other thoughts?", "bodyText": "I wouldn't put this class in internal, since this is necessary for the user to configure.\nThis is common/api/model.. Any other thoughts?", "bodyHTML": "<p dir=\"auto\">I wouldn't put this class in internal, since this is necessary for the user to configure.<br>\nThis is common/api/model.. Any other thoughts?</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:59:24Z", "path": "lib/taskana-core/src/main/java/pro/taskana/common/internal/util/CustomHoliday.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package pro.taskana.common.internal.util;", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNzE0Nw==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423537147", "bodyText": "Or just common/api", "author": "mustaphazorgati", "createdAt": "2020-05-12T07:59:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNzA0Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNzQxMg==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423537412", "body": "What do you think of reusing our generic Pair class? Or would that be confusing?", "bodyText": "What do you think of reusing our generic Pair class? Or would that be confusing?", "bodyHTML": "<p dir=\"auto\">What do you think of reusing our generic Pair class? Or would that be confusing?</p>", "author": "mustaphazorgati", "createdAt": "2020-05-12T08:00:02Z", "path": "lib/taskana-core/src/main/java/pro/taskana/common/internal/util/CustomHoliday.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package pro.taskana.common.internal.util;\n+\n+import java.util.Objects;\n+\n+public final class CustomHoliday {", "originalCommit": "f2c465b4ed05d9f6946f2af0a7de887bcb8d8dbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NjE2MQ==", "url": "https://github.com/Taskana/taskana/pull/1061#discussion_r423546161", "bodyText": "First I also thought about it, but I think it's better to be more strict with this object. And in the open source frameworks for similar task I found some examples where the use additional Information at the holidays object - like a description or a name. at this point it will be not a pair anymore. But you are right, the code looks very much the same right now.", "author": "sfrevel", "createdAt": "2020-05-12T08:14:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzUzNzQxMg=="}], "type": "inlineReview"}, {"oid": "e47b1c0cc061f81165358d8d4409f4499fa352a9", "url": "https://github.com/Taskana/taskana/commit/e47b1c0cc061f81165358d8d4409f4499fa352a9", "message": "TSK-1224: refactorings - rename methods, reuse roles/propertiesSeparator, use Pattern#quote", "committedDate": "2020-05-17T19:36:51Z", "type": "forcePushed"}, {"oid": "04429c2cfa9ce0798224b025929d2c7e33a763f2", "url": "https://github.com/Taskana/taskana/commit/04429c2cfa9ce0798224b025929d2c7e33a763f2", "message": "TSK-1224: refactor the configuration of the custom holidays", "committedDate": "2020-05-17T23:26:32Z", "type": "commit"}, {"oid": "d7b932b9acdc1a068d9bd4911b3f76386563f829", "url": "https://github.com/Taskana/taskana/commit/d7b932b9acdc1a068d9bd4911b3f76386563f829", "message": "TSK-1224: add/refactor tests", "committedDate": "2020-05-17T23:26:40Z", "type": "commit"}, {"oid": "d942211fec3edcb35046dad83cc885f0e20b2693", "url": "https://github.com/Taskana/taskana/commit/d942211fec3edcb35046dad83cc885f0e20b2693", "message": "TSK-1224: refactorings - rename methods, reuse roles/propertiesSeparator, use Pattern#quote", "committedDate": "2020-05-17T23:26:47Z", "type": "commit"}, {"oid": "d942211fec3edcb35046dad83cc885f0e20b2693", "url": "https://github.com/Taskana/taskana/commit/d942211fec3edcb35046dad83cc885f0e20b2693", "message": "TSK-1224: refactorings - rename methods, reuse roles/propertiesSeparator, use Pattern#quote", "committedDate": "2020-05-17T23:26:47Z", "type": "forcePushed"}, {"oid": "d687ce065153130d3927b7a7c7c4ea62d6ab27ef", "url": "https://github.com/Taskana/taskana/commit/d687ce065153130d3927b7a7c7c4ea62d6ab27ef", "message": "TSK-1224: removed unused import after history rewrite", "committedDate": "2020-05-18T08:49:17Z", "type": "commit"}]}