{"pr_number": 5515, "pr_title": "fix(TUP-25925): Cannot add external jar for routines in offline mode", "pr_author": "hzhao-talendbj", "pr_createdAt": "2020-11-16T12:01:48Z", "pr_url": "https://github.com/Talend/tdi-studio-se/pull/5515", "timeline": [{"oid": "0b88612b79cb28fc9365e6d0dbbcb28307fa8359", "url": "https://github.com/Talend/tdi-studio-se/commit/0b88612b79cb28fc9365e6d0dbbcb28307fa8359", "message": "fix TUP-25925", "committedDate": "2020-11-16T11:59:28Z", "type": "commit"}, {"oid": "db827bfdf222998920dbc3771c1aeb309d5e1971", "url": "https://github.com/Talend/tdi-studio-se/commit/db827bfdf222998920dbc3771c1aeb309d5e1971", "message": "code changes", "committedDate": "2020-11-17T12:10:08Z", "type": "commit"}, {"oid": "c89f89193788df9d2bf7946ca229aa3519f3056b", "url": "https://github.com/Talend/tdi-studio-se/commit/c89f89193788df9d2bf7946ca229aa3519f3056b", "message": "fix mistake code", "committedDate": "2020-11-17T13:43:40Z", "type": "commit"}, {"oid": "b155b79ade529d8891cab5a50af239a6e46cecb8", "url": "https://github.com/Talend/tdi-studio-se/commit/b155b79ade529d8891cab5a50af239a6e46cecb8", "message": "add case use readonly and tag", "committedDate": "2020-11-17T16:47:55Z", "type": "commit"}, {"oid": "816b84f0806a94d982915fb59efeccb5c29cde17", "url": "https://github.com/Talend/tdi-studio-se/commit/816b84f0806a94d982915fb59efeccb5c29cde17", "message": "add onTag for svn", "committedDate": "2020-11-18T06:14:18Z", "type": "commit"}, {"oid": "98361c2e8e33efcd1defd5b285f568cfab50ebe5", "url": "https://github.com/Talend/tdi-studio-se/commit/98361c2e8e33efcd1defd5b285f568cfab50ebe5", "message": "change conditions", "committedDate": "2020-11-18T11:48:14Z", "type": "commit"}, {"oid": "a46a47203bbe97993a2fe26911826fe1fc9fcdf9", "url": "https://github.com/Talend/tdi-studio-se/commit/a46a47203bbe97993a2fe26911826fe1fc9fcdf9", "message": "Merge remote-tracking branch 'origin/master' into hengzhao/TUP-25925", "committedDate": "2020-11-18T11:56:48Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDg0NTk0MQ==", "url": "https://github.com/Talend/tdi-studio-se/pull/5515#discussion_r524845941", "body": "should not remove the condition directly but check offline mode inside this method, project still could have ref projects in offline mode and also need to take care of git TAG mode(all readonly)", "bodyText": "should not remove the condition directly but check offline mode inside this method, project still could have ref projects in offline mode and also need to take care of git TAG mode(all readonly)", "bodyHTML": "<p dir=\"auto\">should not remove the condition directly but check offline mode inside this method, project still could have ref projects in offline mode and also need to take care of git TAG mode(all readonly)</p>", "author": "zwxue", "createdAt": "2020-11-17T02:33:47Z", "path": "main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java", "diffHunk": "@@ -56,8 +56,7 @@ public boolean isReadOnly() {\n         boolean readonly = false;\n         IProxyRepositoryFactory repFactory = ProxyRepositoryFactory.getInstance();\n         ERepositoryStatus status = repFactory.getStatus(getSelectedRepositoryNode().getObject());\n-        if (!repFactory.isPotentiallyEditable(getSelectedRepositoryNode().getObject())\n-                || status == ERepositoryStatus.LOCK_BY_OTHER || status == ERepositoryStatus.LOCK_BY_USER) {", "originalCommit": "0b88612b79cb28fc9365e6d0dbbcb28307fa8359", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "db827bfdf222998920dbc3771c1aeb309d5e1971", "changed_code": [{"header": "diff --git a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\nindex 60022a1769..b211270245 100644\n--- a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n+++ b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n", "chunk": "@@ -55,8 +61,22 @@ public abstract class ConfigExternalLibPage extends WizardPage {\n     public boolean isReadOnly() {\n         boolean readonly = false;\n         IProxyRepositoryFactory repFactory = ProxyRepositoryFactory.getInstance();\n-        ERepositoryStatus status = repFactory.getStatus(getSelectedRepositoryNode().getObject());\n-        if (status == ERepositoryStatus.LOCK_BY_OTHER || status == ERepositoryStatus.LOCK_BY_USER) {\n+        RepositoryNode selectedRepositoryNode = getSelectedRepositoryNode();\n+        ERepositoryStatus status = repFactory.getStatus(selectedRepositoryNode.getObject());\n+        Item item = selectedRepositoryNode.getObject().getProperty().getItem();\n+        ICoreService coreService = (ICoreService) GlobalServiceRegister.getDefault().getService(ICoreService.class);\n+        // node can't be lock in offline mode , so use isOpendItemInEidtor instead.\n+        boolean isOpened = coreService.isOpenedItemInEditor(selectedRepositoryNode.getObject());\n+        boolean mainProject = ProjectManager.getInstance().isInCurrentMainProject(selectedRepositoryNode);\n+        boolean isSysRoutine = false;\n+        if (item instanceof RoutineItem) {\n+            if (((RoutineItem) item).isBuiltIn()) {\n+                isSysRoutine = true;\n+            }\n+        }\n+        // when routine is system routne or in the ref project or routine is locked then set readonly\n+        if (!isOpened || isSysRoutine || !mainProject || status == ERepositoryStatus.LOCK_BY_OTHER\n+                || status == ERepositoryStatus.LOCK_BY_USER) {\n             readonly = true;\n         }\n         return readonly;\n", "next_change": {"commit": "c89f89193788df9d2bf7946ca229aa3519f3056b", "changed_code": [{"header": "diff --git a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\nindex b211270245..9ac03bb00a 100644\n--- a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n+++ b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n", "chunk": "@@ -75,7 +75,7 @@ public abstract class ConfigExternalLibPage extends WizardPage {\n             }\n         }\n         // when routine is system routne or in the ref project or routine is locked then set readonly\n-        if (!isOpened || isSysRoutine || !mainProject || status == ERepositoryStatus.LOCK_BY_OTHER\n+        if (isOpened || isSysRoutine || !mainProject || status == ERepositoryStatus.LOCK_BY_OTHER\n                 || status == ERepositoryStatus.LOCK_BY_USER) {\n             readonly = true;\n         }\n", "next_change": {"commit": "b155b79ade529d8891cab5a50af239a6e46cecb8", "changed_code": [{"header": "diff --git a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\nindex 9ac03bb00a..c524570250 100644\n--- a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n+++ b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n", "chunk": "@@ -74,14 +75,34 @@ public abstract class ConfigExternalLibPage extends WizardPage {\n                 isSysRoutine = true;\n             }\n         }\n-        // when routine is system routne or in the ref project or routine is locked then set readonly\n-        if (isOpened || isSysRoutine || !mainProject || status == ERepositoryStatus.LOCK_BY_OTHER\n+        boolean userReadOnlyOnCurrentProject = repFactory.isUserReadOnlyOnCurrentProject();\n+        // when routine is\n+        // 1. system routne\n+        // 2. in the ref project\n+        // 3. routine is locked\n+        // 4. user is readonly on current project\n+        // 5. Tag project\n+        // then set readonly\n+        if (isOnTag() || userReadOnlyOnCurrentProject || isOpened || isSysRoutine || !mainProject\n+                || status == ERepositoryStatus.LOCK_BY_OTHER\n                 || status == ERepositoryStatus.LOCK_BY_USER) {\n             readonly = true;\n         }\n         return readonly;\n     }\n \n+    private boolean isOnTag() {\n+        Project currentProject = ProjectManager.getInstance().getCurrentProject();\n+        String branch = ProjectManager.getCurrentBranchLabel(currentProject);\n+        return branch.startsWith(ProjectManager.NAME_TAGS + ProjectManager.SEP_CHAR);\n+    }\n+\n+    // @Override\n+    // public boolean isOnTag(Project project) {\n+    // String branch = ProjectManager.getCurrentBranchLabel(project);\n+    // return branch.startsWith(SVNConstants.SEP_CHAR + SVNConstants.NAME_TAGS + SVNConstants.SEP_CHAR)\n+    // || branch.startsWith(SVNConstants.NAME_TAGS + SVNConstants.SEP_CHAR);\n+    // }\n     /**\n      * Subclasses should implement this for its own business.\n      *\n", "next_change": {"commit": "816b84f0806a94d982915fb59efeccb5c29cde17", "changed_code": [{"header": "diff --git a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\nindex c524570250..a4f6b55e8e 100644\n--- a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n+++ b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n", "chunk": "@@ -94,15 +95,23 @@ public abstract class ConfigExternalLibPage extends WizardPage {\n     private boolean isOnTag() {\n         Project currentProject = ProjectManager.getInstance().getCurrentProject();\n         String branch = ProjectManager.getCurrentBranchLabel(currentProject);\n+        return isOnTagGit(branch) || isOnTagSvn(branch);\n+    }\n+\n+    private boolean isOnTagGit(String branch) {\n+        if (branch == null) {\n+            return false;\n+        }\n         return branch.startsWith(ProjectManager.NAME_TAGS + ProjectManager.SEP_CHAR);\n     }\n \n-    // @Override\n-    // public boolean isOnTag(Project project) {\n-    // String branch = ProjectManager.getCurrentBranchLabel(project);\n-    // return branch.startsWith(SVNConstants.SEP_CHAR + SVNConstants.NAME_TAGS + SVNConstants.SEP_CHAR)\n-    // || branch.startsWith(SVNConstants.NAME_TAGS + SVNConstants.SEP_CHAR);\n-    // }\n+    private boolean isOnTagSvn(String branch) {\n+        if (branch == null) {\n+            return false;\n+        }\n+        return branch.startsWith(SVNConstant.SEP_CHAR + SVNConstant.NAME_TAGS + SVNConstant.SEP_CHAR)\n+                || branch.startsWith(SVNConstant.NAME_TAGS + SVNConstant.SEP_CHAR);\n+    }\n     /**\n      * Subclasses should implement this for its own business.\n      *\n", "next_change": {"commit": "98361c2e8e33efcd1defd5b285f568cfab50ebe5", "changed_code": [{"header": "diff --git a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\nindex a4f6b55e8e..7674de74a8 100644\n--- a/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n+++ b/main/plugins/org.talend.repository/src/main/java/org/talend/repository/ui/wizards/ConfigExternalLib/ConfigExternalLibPage.java\n", "chunk": "@@ -112,6 +115,11 @@ public abstract class ConfigExternalLibPage extends WizardPage {\n         return branch.startsWith(SVNConstant.SEP_CHAR + SVNConstant.NAME_TAGS + SVNConstant.SEP_CHAR)\n                 || branch.startsWith(SVNConstant.NAME_TAGS + SVNConstant.SEP_CHAR);\n     }\n+\n+    private RepositoryContext getRepositoryContext() {\n+        Context ctx = CoreRuntimePlugin.getInstance().getContext();\n+        return (RepositoryContext) ctx.getProperty(Context.REPOSITORY_CONTEXT_KEY);\n+    }\n     /**\n      * Subclasses should implement this for its own business.\n      *\n", "next_change": null}]}}]}}]}}]}}]}}]}