{"pr_number": 6362, "pr_title": "Improve Card Browser Performance: Time to view first card", "pr_author": "Arthur-Milchior", "pr_createdAt": "2020-06-04T20:26:17Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6362", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MTU2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435541565", "body": "You can remove this comment now", "bodyText": "You can remove this comment now", "bodyHTML": "<p dir=\"auto\">You can remove this comment now</p>", "author": "david-allison-1", "createdAt": "2020-06-04T20:51:57Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java", "diffHunk": "@@ -1003,81 +998,4 @@ public static Integer ordForMid(Collection col, Map<Long, Integer> fields, long\n      * The methods below are not in LibAnki.", "originalCommit": "3b638b1e5356ea1642c12d14b517aec3b13c5c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0OTMxNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435549315", "bodyText": "Right.\u00a0I didn't pay attention to it", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:07:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MTU2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb983f23d1bdd251c2d5c8e28e1970ef5cbc0571", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 63c1a7bca..654c54a46 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n", "chunk": "@@ -992,10 +992,4 @@ public class Finder {\n         }\n         return dupes;\n     }\n-\n-    /*\n-     * ***********************************************************\n-     * The methods below are not in LibAnki.\n-     * ***********************************************************\n-     */\n }\n", "next_change": {"commit": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 654c54a46..7d7c789ad 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n", "chunk": "@@ -992,4 +997,86 @@ public class Finder {\n         }\n         return dupes;\n     }\n+\n+    /*\n+     * ***********************************************************\n+     * The methods below are not in LibAnki.\n+     * ***********************************************************\n+     */\n+\n+    public List<Map<String, String>> findCardsForCardBrowser(String query, boolean _order) {\n+        return _findCardsForCardBrowser(query, _order);\n+    }\n+\n+\n+    public List<Map<String, String>> findCardsForCardBrowser(String query, String _order) {\n+        return _findCardsForCardBrowser(query, _order);\n+    }\n+\n+\n+    /** Return a list of card ids for QUERY */\n+    private List<Map<String, String>> _findCardsForCardBrowser(String query, Object _order) {\n+        String[] tokens = _tokenize(query);\n+        Pair<String, String[]> res1 = _where(tokens);\n+        String preds = res1.first;\n+        String[] args = res1.second;\n+        List<Map<String, String>> res = new ArrayList<>();\n+        if (preds == null) {\n+            return res;\n+        }\n+        Pair<String, Boolean> res2 = _order instanceof Boolean ? _order((Boolean) _order) : _order((String) _order);\n+        String order = res2.first;\n+        boolean rev = res2.second;\n+        String sql = _queryForCardBrowser(preds, order);\n+        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n+            CollectionTask task = CollectionTask.getInstance();\n+            while (cur.moveToNext()) {\n+                // cancel if the launching task was cancelled. \n+                if (task.isCancelled()){\n+                    Timber.i(\"_findCardsForCardBrowser() cancelled...\");\n+                    return new ArrayList<>();\n+                }                \n+                Map<String, String> card = new HashMap<>();\n+                card.put(CardBrowser.ID, cur.getString(0));\n+                card.put(CardBrowser.SFLD, cur.getString(1));\n+                long did = cur.getLong(2);\n+                card.put(CardBrowser.DECK, mCol.getDecks().name(did));\n+                int queue = cur.getInt(3);\n+                String tags = cur.getString(4);\n+                card.put(CardBrowser.TAGS, tags);\n+                res.add(card);\n+                // add placeholder for question and answer\n+                card.put(CardBrowser.QUESTION, null);\n+                card.put(CardBrowser.ANSWER, null);\n+                card.put(CardBrowser.FLAGS, (new Integer(Card.intToFlag(cur.getInt(5)))).toString());\n+                card.put(CardBrowser.SUSPENDED, queue == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+            }\n+        } catch (SQLException e) {\n+            // invalid grouping\n+            Timber.e(\"Invalid grouping, sql: \" + sql);\n+            return new ArrayList<>();\n+        }\n+        if (rev) {\n+            Collections.reverse(res);\n+        }\n+        return res;\n+    }\n+    \n+    /**\n+     * A copy of _query() with a custom SQL query specific to the AnkiDroid card browser.\n+     */\n+    private String _queryForCardBrowser(String preds, String order) {\n+        String sql = \"select c.id, n.sfld, c.did, c.queue, n.tags, c.flags from cards c, notes n where c.nid=n.id and \";\n+        // combine with preds\n+        if (!TextUtils.isEmpty(preds)) {\n+            sql += \"(\" + preds + \")\";\n+        } else {\n+            sql += \"1\";\n+        }\n+        // order\n+        if (!TextUtils.isEmpty(order)) {\n+            sql += \" \" + order;\n+        }\n+        return sql;\n+    }\n }\n", "next_change": {"commit": "baa0ac4c03547dec5b71c44cf30a88b79cac434a", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\nindex 7d7c789ad..654c54a46 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/libanki/Finder.java\n", "chunk": "@@ -997,86 +992,4 @@ public class Finder {\n         }\n         return dupes;\n     }\n-\n-    /*\n-     * ***********************************************************\n-     * The methods below are not in LibAnki.\n-     * ***********************************************************\n-     */\n-\n-    public List<Map<String, String>> findCardsForCardBrowser(String query, boolean _order) {\n-        return _findCardsForCardBrowser(query, _order);\n-    }\n-\n-\n-    public List<Map<String, String>> findCardsForCardBrowser(String query, String _order) {\n-        return _findCardsForCardBrowser(query, _order);\n-    }\n-\n-\n-    /** Return a list of card ids for QUERY */\n-    private List<Map<String, String>> _findCardsForCardBrowser(String query, Object _order) {\n-        String[] tokens = _tokenize(query);\n-        Pair<String, String[]> res1 = _where(tokens);\n-        String preds = res1.first;\n-        String[] args = res1.second;\n-        List<Map<String, String>> res = new ArrayList<>();\n-        if (preds == null) {\n-            return res;\n-        }\n-        Pair<String, Boolean> res2 = _order instanceof Boolean ? _order((Boolean) _order) : _order((String) _order);\n-        String order = res2.first;\n-        boolean rev = res2.second;\n-        String sql = _queryForCardBrowser(preds, order);\n-        try (Cursor cur = mCol.getDb().getDatabase().query(sql, args)) {\n-            CollectionTask task = CollectionTask.getInstance();\n-            while (cur.moveToNext()) {\n-                // cancel if the launching task was cancelled. \n-                if (task.isCancelled()){\n-                    Timber.i(\"_findCardsForCardBrowser() cancelled...\");\n-                    return new ArrayList<>();\n-                }                \n-                Map<String, String> card = new HashMap<>();\n-                card.put(CardBrowser.ID, cur.getString(0));\n-                card.put(CardBrowser.SFLD, cur.getString(1));\n-                long did = cur.getLong(2);\n-                card.put(CardBrowser.DECK, mCol.getDecks().name(did));\n-                int queue = cur.getInt(3);\n-                String tags = cur.getString(4);\n-                card.put(CardBrowser.TAGS, tags);\n-                res.add(card);\n-                // add placeholder for question and answer\n-                card.put(CardBrowser.QUESTION, null);\n-                card.put(CardBrowser.ANSWER, null);\n-                card.put(CardBrowser.FLAGS, (new Integer(Card.intToFlag(cur.getInt(5)))).toString());\n-                card.put(CardBrowser.SUSPENDED, queue == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-            }\n-        } catch (SQLException e) {\n-            // invalid grouping\n-            Timber.e(\"Invalid grouping, sql: \" + sql);\n-            return new ArrayList<>();\n-        }\n-        if (rev) {\n-            Collections.reverse(res);\n-        }\n-        return res;\n-    }\n-    \n-    /**\n-     * A copy of _query() with a custom SQL query specific to the AnkiDroid card browser.\n-     */\n-    private String _queryForCardBrowser(String preds, String order) {\n-        String sql = \"select c.id, n.sfld, c.did, c.queue, n.tags, c.flags from cards c, notes n where c.nid=n.id and \";\n-        // combine with preds\n-        if (!TextUtils.isEmpty(preds)) {\n-            sql += \"(\" + preds + \")\";\n-        } else {\n-            sql += \"1\";\n-        }\n-        // order\n-        if (!TextUtils.isEmpty(order)) {\n-            sql += \" \" + order;\n-        }\n-        return sql;\n-    }\n }\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MjUyMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435542520", "body": "Nit: Could you move to the top of the class and fix the spacing around the  `=`", "bodyText": "Nit: Could you move to the top of the class and fix the spacing around the  =", "bodyHTML": "<p dir=\"auto\">Nit: Could you move to the top of the class and fix the spacing around the  <code>=</code></p>", "author": "david-allison-1", "createdAt": "2020-06-04T20:53:41Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1481,7 +1481,9 @@ public void onClick(View v) {\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c) {\n+    private static Pattern sMarkedPattern= Pattern.compile(\".*[Mm]arked.*\");", "originalCommit": "3b638b1e5356ea1642c12d14b517aec3b13c5c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0OTQyNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435549426", "bodyText": "If you want. I find it better to have it close to its usage, but that's okay with me", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:07:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MjUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0OTU3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435549576", "bodyText": "Except that the change should occur in another PR. I'll do it there", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:07:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MjUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1NjEzNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435556135", "bodyText": "Except that the change should occur in another PR. I'll do it there\n\nThere's really no need unless you want to", "author": "david-allison-1", "createdAt": "2020-06-04T21:17:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MjUyMA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzcyNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435573725", "bodyText": "My point was that sMarkedPattern was in #6358\nSo it's the natural place to follow your request. I actual force pushed this change on #6358", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:52:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0MjUyMA=="}], "type": "inlineReview", "revised_code": {"commit": "19a0e6bcff769fb2a79b4b0350d28774b7ceb335", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 55a90b1d1..8b349e74c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1481,8 +1482,6 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    private static Pattern sMarkedPattern= Pattern.compile(\".*[Mm]arked.*\");\n-\n     public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n         // render question and answer\n         Map<String, String> qa = c._getQA(true, true);\n", "next_change": {"commit": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 8b349e74c..a0a1ba715 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1482,7 +1481,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n+    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c) {\n         // render question and answer\n         Map<String, String> qa = c._getQA(true, true);\n         // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n", "next_change": {"commit": "e6e96b8a762942a18b24787a4ec3e91d6070479b", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex a0a1ba715..b73bbb906 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1481,7 +1482,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c) {\n+    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n         // render question and answer\n         Map<String, String> qa = c._getQA(true, true);\n         // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n", "next_change": {"commit": "7fccc05cde4e26216a73054bd61bd5278c507f6d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex b73bbb906..057645b49 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1482,64 +1469,6 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n-        // render question and answer\n-        Map<String, String> qa = c._getQA(true, true);\n-        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n-        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n-            HashMap<String, String> qaFull = c._getQA(true, false);\n-            if (\"\".equals(qa.get(\"q\"))) {\n-                qa.put(\"q\", qaFull.get(\"q\"));\n-            }\n-            if (\"\".equals(qa.get(\"a\"))) {\n-                qa.put(\"a\", qaFull.get(\"a\"));\n-            }\n-        }\n-        // update the original hash map to include rendered question & answer\n-        String q = qa.get(\"q\");\n-        String a = qa.get(\"a\");\n-        // remove the question from the start of the answer if it exists\n-        if (a.startsWith(q)) {\n-            a = a.replaceFirst(Pattern.quote(q), \"\");\n-        }\n-        // put all of the fields in except for those that have already been pulled out straight from the\n-        // database\n-        item.put(ANSWER, formatQA(a, context));\n-        item.put(CARD, c.template().optString(\"name\"));\n-        item.put(DUE, c.getDueString());\n-        if (c.getType() == Consts.CARD_TYPE_NEW) {\n-            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n-        } else {\n-            item.put(EASE, (c.getFactor()/10)+\"%\");\n-        }\n-\n-        Note note = c.note();\n-        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n-        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n-        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n-        // interval\n-        switch (c.getType()) {\n-            case Consts.CARD_TYPE_NEW:\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n-                break;\n-            case Consts.CARD_TYPE_LRN :\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n-                break;\n-            default:\n-                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n-                break;\n-        }\n-        item.put(LAPSES, Integer.toString(c.getLapses()));\n-        item.put(NOTE, c.model().optString(\"name\"));\n-        item.put(QUESTION, formatQA(q, context));\n-        item.put(REVIEWS, Integer.toString(c.getReps()));\n-        String tags = note.stringTags();\n-        item.put(TAGS, tags);\n-        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n-        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n-        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-    }\n-\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": {"commit": "2114aeedad26a5384d6d6a46289f72e405f8c9e9", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 057645b49..826edafd6 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1469,6 +1482,66 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n+    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n+        // render question and answer\n+        Map<String, String> qa = c._getQA(true, true);\n+        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n+        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n+            HashMap<String, String> qaFull = c._getQA(true, false);\n+            if (\"\".equals(qa.get(\"q\"))) {\n+                qa.put(\"q\", qaFull.get(\"q\"));\n+            }\n+            if (\"\".equals(qa.get(\"a\"))) {\n+                qa.put(\"a\", qaFull.get(\"a\"));\n+            }\n+        }\n+        // update the original hash map to include rendered question & answer\n+        String q = qa.get(\"q\");\n+        String a = qa.get(\"a\");\n+        // remove the question from the start of the answer if it exists\n+        if (a.startsWith(q)) {\n+            a = a.replaceFirst(Pattern.quote(q), \"\");\n+        }\n+        // put all of the fields in except for those that have already been pulled out straight from the\n+        // database\n+        item.put(ANSWER, formatQA(a, context));\n+        item.put(CARD, c.template().optString(\"name\"));\n+        item.put(DUE, c.getDueString());\n+        if (c.getType() == Consts.CARD_TYPE_NEW) {\n+            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n+        } else {\n+            item.put(EASE, (c.getFactor()/10)+\"%\");\n+        }\n+\n+        Note note = c.note();\n+        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n+        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n+        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n+        // interval\n+        switch (c.getType()) {\n+            case Consts.CARD_TYPE_NEW:\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n+                break;\n+            case Consts.CARD_TYPE_LRN :\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n+                break;\n+            default:\n+                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n+                break;\n+        }\n+        item.put(LAPSES, Integer.toString(c.getLapses()));\n+        item.put(NOTE, c.model().optString(\"name\"));\n+        item.put(QUESTION, formatQA(q, context));\n+        item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (Integer.toString(c.getUserFlag())));\n+        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+        item.put(DECK, col.getDecks().name(c.getDid()));\n+        item.put(SFLD, note.getSFld());\n+    }\n+\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435543759", "body": "Further performance: `Tags.join` should be static ", "bodyText": "Further performance: Tags.join should be static", "bodyHTML": "<p dir=\"auto\">Further performance: <code>Tags.join</code> should be static</p>", "author": "david-allison-1", "createdAt": "2020-06-04T20:56:01Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1531,6 +1534,13 @@ public static void updateSearchItemQA(Context context, Map<String, String> item,\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();", "originalCommit": "3b638b1e5356ea1642c12d14b517aec3b13c5c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MTkzMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435561933", "bodyText": "I don't understand this remark", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:25:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MzQ5Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435563493", "bodyText": "note.stringTags is implemented as:\n        return mCol.getTags().join(mCol.getTags().canonify(mTags));\nThis can be simplified to\n        return Tags.join(mCol.getTags().canonify(mTags));\nas Tags.join refers to no instance variables.", "author": "david-allison-1", "createdAt": "2020-06-04T21:28:50Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2Mzk3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435563976", "bodyText": "Actually... might be worth doing in a separate PR, as there's a few unrelated usages", "author": "david-allison-1", "createdAt": "2020-06-04T21:29:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NjY4MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435576680", "bodyText": "I don't think I've ever seen this one to be a bottle neck, but I'd certainly would be okay with such a change.", "author": "Arthur-Milchior", "createdAt": "2020-06-04T22:00:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3NzU4Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435577586", "bodyText": "It's a micro-optimisation that'll make the code easier to reason about, win-win :)", "author": "david-allison-1", "createdAt": "2020-06-04T22:02:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDk5OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435630999", "bodyText": "Let's leave this as TODO", "author": "david-allison-1", "createdAt": "2020-06-05T00:41:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0Mzc1OQ=="}], "type": "inlineReview", "revised_code": {"commit": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 55a90b1d1..a0a1ba715 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1534,13 +1531,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n-        String tags = note.stringTags();\n-        item.put(TAGS, tags);\n-        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n-        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n-        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-        item.put(DECK, col.getDecks().name(c.getDid()));\n-        item.put(SFLD, note.getSFld());\n+        item.put(MARKED, (item.get(TAGS).matches(\".*[Mm]arked.*\"))?\"marked\": null);\n     }\n \n     @CheckResult\n", "next_change": {"commit": "4570aeb1e44bd78877deee85d0b82019f355d1fb", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex a0a1ba715..5dd41cca0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1531,7 +1532,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n-        item.put(MARKED, (item.get(TAGS).matches(\".*[Mm]arked.*\"))?\"marked\": null);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n     }\n \n     @CheckResult\n", "next_change": {"commit": "f884e785d57513c684fa992df32dcd234078a385", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 5dd41cca0..c120b2c3c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1533,6 +1533,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n     }\n \n     @CheckResult\n", "next_change": {"commit": "ba3088dca4876c86e1feb0f0335ce8b218bbafac", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex c120b2c3c..82938885d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1532,6 +1533,8 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n     }\n", "next_change": {"commit": "654b5f00e2da527c2dea394210524cdce275a9ce", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 82938885d..3fcc2e2ec 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1537,6 +1537,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(TAGS, tags);\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n+        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n     }\n \n     @CheckResult\n", "next_change": {"commit": "d02c4af7f391992ac9ec3c7ed2d5e8113ad28f13", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 3fcc2e2ec..e21e7c3ae 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1538,6 +1538,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n         item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+        item.put(DECK, col.getDecks().name(c.getDid()));\n     }\n \n     @CheckResult\n", "next_change": {"commit": "db867c9006c24de3f8ad5ea0e6f68e35fe13e66c", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex e21e7c3ae..e64b9d4bd 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1539,6 +1539,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n         item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n         item.put(DECK, col.getDecks().name(c.getDid()));\n+        item.put(SFLD, note.getSFld());\n     }\n \n     @CheckResult\n", "next_change": {"commit": "7fccc05cde4e26216a73054bd61bd5278c507f6d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex e64b9d4bd..057645b49 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1482,66 +1469,6 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n-        // render question and answer\n-        Map<String, String> qa = c._getQA(true, true);\n-        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n-        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n-            HashMap<String, String> qaFull = c._getQA(true, false);\n-            if (\"\".equals(qa.get(\"q\"))) {\n-                qa.put(\"q\", qaFull.get(\"q\"));\n-            }\n-            if (\"\".equals(qa.get(\"a\"))) {\n-                qa.put(\"a\", qaFull.get(\"a\"));\n-            }\n-        }\n-        // update the original hash map to include rendered question & answer\n-        String q = qa.get(\"q\");\n-        String a = qa.get(\"a\");\n-        // remove the question from the start of the answer if it exists\n-        if (a.startsWith(q)) {\n-            a = a.replaceFirst(Pattern.quote(q), \"\");\n-        }\n-        // put all of the fields in except for those that have already been pulled out straight from the\n-        // database\n-        item.put(ANSWER, formatQA(a, context));\n-        item.put(CARD, c.template().optString(\"name\"));\n-        item.put(DUE, c.getDueString());\n-        if (c.getType() == Consts.CARD_TYPE_NEW) {\n-            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n-        } else {\n-            item.put(EASE, (c.getFactor()/10)+\"%\");\n-        }\n-\n-        Note note = c.note();\n-        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n-        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n-        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n-        // interval\n-        switch (c.getType()) {\n-            case Consts.CARD_TYPE_NEW:\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n-                break;\n-            case Consts.CARD_TYPE_LRN :\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n-                break;\n-            default:\n-                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n-                break;\n-        }\n-        item.put(LAPSES, Integer.toString(c.getLapses()));\n-        item.put(NOTE, c.model().optString(\"name\"));\n-        item.put(QUESTION, formatQA(q, context));\n-        item.put(REVIEWS, Integer.toString(c.getReps()));\n-        String tags = note.stringTags();\n-        item.put(TAGS, tags);\n-        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n-        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n-        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-        item.put(DECK, col.getDecks().name(c.getDid()));\n-        item.put(SFLD, note.getSFld());\n-    }\n-\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": {"commit": "2114aeedad26a5384d6d6a46289f72e405f8c9e9", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 057645b49..826edafd6 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1469,6 +1482,66 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n+    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n+        // render question and answer\n+        Map<String, String> qa = c._getQA(true, true);\n+        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n+        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n+            HashMap<String, String> qaFull = c._getQA(true, false);\n+            if (\"\".equals(qa.get(\"q\"))) {\n+                qa.put(\"q\", qaFull.get(\"q\"));\n+            }\n+            if (\"\".equals(qa.get(\"a\"))) {\n+                qa.put(\"a\", qaFull.get(\"a\"));\n+            }\n+        }\n+        // update the original hash map to include rendered question & answer\n+        String q = qa.get(\"q\");\n+        String a = qa.get(\"a\");\n+        // remove the question from the start of the answer if it exists\n+        if (a.startsWith(q)) {\n+            a = a.replaceFirst(Pattern.quote(q), \"\");\n+        }\n+        // put all of the fields in except for those that have already been pulled out straight from the\n+        // database\n+        item.put(ANSWER, formatQA(a, context));\n+        item.put(CARD, c.template().optString(\"name\"));\n+        item.put(DUE, c.getDueString());\n+        if (c.getType() == Consts.CARD_TYPE_NEW) {\n+            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n+        } else {\n+            item.put(EASE, (c.getFactor()/10)+\"%\");\n+        }\n+\n+        Note note = c.note();\n+        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n+        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n+        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n+        // interval\n+        switch (c.getType()) {\n+            case Consts.CARD_TYPE_NEW:\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n+                break;\n+            case Consts.CARD_TYPE_LRN :\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n+                break;\n+            default:\n+                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n+                break;\n+        }\n+        item.put(LAPSES, Integer.toString(c.getLapses()));\n+        item.put(NOTE, c.model().optString(\"name\"));\n+        item.put(QUESTION, formatQA(q, context));\n+        item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (Integer.toString(c.getUserFlag())));\n+        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+        item.put(DECK, col.getDecks().name(c.getDid()));\n+        item.put(SFLD, note.getSFld());\n+    }\n+\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435544382", "body": "I don't get `new Integer().toString()` - is this validation as it'll throw otherwise?", "bodyText": "I don't get new Integer().toString() - is this validation as it'll throw otherwise?", "bodyHTML": "<p dir=\"auto\">I don't get <code>new Integer().toString()</code> - is this validation as it'll throw otherwise?</p>", "author": "david-allison-1", "createdAt": "2020-06-04T20:57:08Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java", "diffHunk": "@@ -1531,6 +1534,13 @@ public static void updateSearchItemQA(Context context, Map<String, String> item,\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());", "originalCommit": "3b638b1e5356ea1642c12d14b517aec3b13c5c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MzQ0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435563441", "bodyText": "I honestly have no clue. I just copy-pasted the line\ncard.put(CardBrowser.FLAGS, (new Integer(Card.intToFlag(cur.getInt(5)))).toString());\n\nwhich already have the same strange line", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:28:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MjEyMg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435572122", "bodyText": "Oh, it's because it's creating an Integer out of an int, and then transforming it into a string. It's not transforming a int from a string and then back to string", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:48:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDMwMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435630300", "bodyText": "card.put(FLAGS, Integer.toString(c.getUserFlag())) ?", "author": "david-allison-1", "createdAt": "2020-06-05T00:38:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2NDYwNg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435964606", "bodyText": "It is now deleted anyway", "author": "Arthur-Milchior", "createdAt": "2020-06-05T14:36:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NDAxNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435974015", "bodyText": "Rebased to follow your advice", "author": "Arthur-Milchior", "createdAt": "2020-06-05T14:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NDM4Mg=="}], "type": "inlineReview", "revised_code": {"commit": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 55a90b1d1..a0a1ba715 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1534,13 +1531,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n-        String tags = note.stringTags();\n-        item.put(TAGS, tags);\n-        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n-        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n-        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-        item.put(DECK, col.getDecks().name(c.getDid()));\n-        item.put(SFLD, note.getSFld());\n+        item.put(MARKED, (item.get(TAGS).matches(\".*[Mm]arked.*\"))?\"marked\": null);\n     }\n \n     @CheckResult\n", "next_change": {"commit": "4570aeb1e44bd78877deee85d0b82019f355d1fb", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex a0a1ba715..5dd41cca0 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1531,7 +1532,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n-        item.put(MARKED, (item.get(TAGS).matches(\".*[Mm]arked.*\"))?\"marked\": null);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n     }\n \n     @CheckResult\n", "next_change": {"commit": "f884e785d57513c684fa992df32dcd234078a385", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 5dd41cca0..c120b2c3c 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1533,6 +1533,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n     }\n \n     @CheckResult\n", "next_change": {"commit": "ba3088dca4876c86e1feb0f0335ce8b218bbafac", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex c120b2c3c..82938885d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1532,6 +1533,8 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(NOTE, c.model().optString(\"name\"));\n         item.put(QUESTION, formatQA(q, context));\n         item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n     }\n", "next_change": {"commit": "654b5f00e2da527c2dea394210524cdce275a9ce", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 82938885d..3fcc2e2ec 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1537,6 +1537,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(TAGS, tags);\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n+        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n     }\n \n     @CheckResult\n", "next_change": {"commit": "d02c4af7f391992ac9ec3c7ed2d5e8113ad28f13", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 3fcc2e2ec..e21e7c3ae 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1538,6 +1538,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n         item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+        item.put(DECK, col.getDecks().name(c.getDid()));\n     }\n \n     @CheckResult\n", "next_change": {"commit": "db867c9006c24de3f8ad5ea0e6f68e35fe13e66c", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex e21e7c3ae..e64b9d4bd 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1539,6 +1539,7 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n         item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n         item.put(DECK, col.getDecks().name(c.getDid()));\n+        item.put(SFLD, note.getSFld());\n     }\n \n     @CheckResult\n", "next_change": {"commit": "7fccc05cde4e26216a73054bd61bd5278c507f6d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex e64b9d4bd..057645b49 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1482,66 +1469,6 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n-    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n-        // render question and answer\n-        Map<String, String> qa = c._getQA(true, true);\n-        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n-        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n-            HashMap<String, String> qaFull = c._getQA(true, false);\n-            if (\"\".equals(qa.get(\"q\"))) {\n-                qa.put(\"q\", qaFull.get(\"q\"));\n-            }\n-            if (\"\".equals(qa.get(\"a\"))) {\n-                qa.put(\"a\", qaFull.get(\"a\"));\n-            }\n-        }\n-        // update the original hash map to include rendered question & answer\n-        String q = qa.get(\"q\");\n-        String a = qa.get(\"a\");\n-        // remove the question from the start of the answer if it exists\n-        if (a.startsWith(q)) {\n-            a = a.replaceFirst(Pattern.quote(q), \"\");\n-        }\n-        // put all of the fields in except for those that have already been pulled out straight from the\n-        // database\n-        item.put(ANSWER, formatQA(a, context));\n-        item.put(CARD, c.template().optString(\"name\"));\n-        item.put(DUE, c.getDueString());\n-        if (c.getType() == Consts.CARD_TYPE_NEW) {\n-            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n-        } else {\n-            item.put(EASE, (c.getFactor()/10)+\"%\");\n-        }\n-\n-        Note note = c.note();\n-        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n-        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n-        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n-        // interval\n-        switch (c.getType()) {\n-            case Consts.CARD_TYPE_NEW:\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n-                break;\n-            case Consts.CARD_TYPE_LRN :\n-                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n-                break;\n-            default:\n-                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n-                break;\n-        }\n-        item.put(LAPSES, Integer.toString(c.getLapses()));\n-        item.put(NOTE, c.model().optString(\"name\"));\n-        item.put(QUESTION, formatQA(q, context));\n-        item.put(REVIEWS, Integer.toString(c.getReps()));\n-        String tags = note.stringTags();\n-        item.put(TAGS, tags);\n-        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n-        item.put(FLAGS, (new Integer(c.getUserFlag())).toString());\n-        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n-        item.put(DECK, col.getDecks().name(c.getDid()));\n-        item.put(SFLD, note.getSFld());\n-    }\n-\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": {"commit": "2114aeedad26a5384d6d6a46289f72e405f8c9e9", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\nindex 057645b49..826edafd6 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/CardBrowser.java\n", "chunk": "@@ -1469,6 +1482,66 @@ public class CardBrowser extends NavigationDrawerActivity implements\n         }\n     };\n \n+    public static void updateSearchItemQA(Context context, Map<String, String> item, Card c, Collection col) {\n+        // render question and answer\n+        Map<String, String> qa = c._getQA(true, true);\n+        // Render full question / answer if the bafmt (i.e. \"browser appearance\") setting forced blank result\n+        if (\"\".equals(qa.get(\"q\")) || \"\".equals(qa.get(\"a\"))) {\n+            HashMap<String, String> qaFull = c._getQA(true, false);\n+            if (\"\".equals(qa.get(\"q\"))) {\n+                qa.put(\"q\", qaFull.get(\"q\"));\n+            }\n+            if (\"\".equals(qa.get(\"a\"))) {\n+                qa.put(\"a\", qaFull.get(\"a\"));\n+            }\n+        }\n+        // update the original hash map to include rendered question & answer\n+        String q = qa.get(\"q\");\n+        String a = qa.get(\"a\");\n+        // remove the question from the start of the answer if it exists\n+        if (a.startsWith(q)) {\n+            a = a.replaceFirst(Pattern.quote(q), \"\");\n+        }\n+        // put all of the fields in except for those that have already been pulled out straight from the\n+        // database\n+        item.put(ANSWER, formatQA(a, context));\n+        item.put(CARD, c.template().optString(\"name\"));\n+        item.put(DUE, c.getDueString());\n+        if (c.getType() == Consts.CARD_TYPE_NEW) {\n+            item.put(EASE, context.getString(R.string.card_browser_ease_new_card));\n+        } else {\n+            item.put(EASE, (c.getFactor()/10)+\"%\");\n+        }\n+\n+        Note note = c.note();\n+        item.put(CHANGED, LanguageUtil.getShortDateFormatFromS(c.getMod()));\n+        item.put(CREATED, LanguageUtil.getShortDateFormatFromMs(note.getId()));\n+        item.put(EDITED, LanguageUtil.getShortDateFormatFromS(note.getMod()));\n+        // interval\n+        switch (c.getType()) {\n+            case Consts.CARD_TYPE_NEW:\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_new_card));\n+                break;\n+            case Consts.CARD_TYPE_LRN :\n+                item.put(INTERVAL, context.getString(R.string.card_browser_interval_learning_card));\n+                break;\n+            default:\n+                item.put(INTERVAL, Utils.roundedTimeSpanUnformatted(context, c.getIvl()*86400));\n+                break;\n+        }\n+        item.put(LAPSES, Integer.toString(c.getLapses()));\n+        item.put(NOTE, c.model().optString(\"name\"));\n+        item.put(QUESTION, formatQA(q, context));\n+        item.put(REVIEWS, Integer.toString(c.getReps()));\n+        String tags = note.stringTags();\n+        item.put(TAGS, tags);\n+        item.put(MARKED, (sMarkedPattern.matcher(item.get(TAGS)).matches())?\"marked\": null);\n+        item.put(FLAGS, (Integer.toString(c.getUserFlag())));\n+        item.put(SUSPENDED, c.getQueue() == Consts.QUEUE_TYPE_SUSPENDED ? \"True\": \"False\");\n+        item.put(DECK, col.getDecks().name(c.getDid()));\n+        item.put(SFLD, note.getSFld());\n+    }\n+\n     @CheckResult\n     private static String formatQA(String text, Context context) {\n         boolean showFilenames = AnkiDroidApp.getSharedPrefs(context).getBoolean(\"card_browser_show_media_filenames\", false);\n", "next_change": null}]}}]}}]}}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzA2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435547061", "body": "Would be nice to `Timber.d` the count", "bodyText": "Would be nice to Timber.d the count", "bodyHTML": "<p dir=\"auto\">Would be nice to <code>Timber.d</code> the count</p>", "author": "david-allison-1", "createdAt": "2020-06-04T21:02:32Z", "path": "AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java", "diffHunk": "@@ -895,11 +895,17 @@ private TaskData doInBackgroundSearchCards(TaskData... params) {\n         String query = (String) params[0].getObjArray()[0];\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n-        List<Map<String,String>> searchResult = col.findCardsForCardBrowser(query, order);\n+        List<Long> searchResult_ = col.findCards(query, order);\n+        List<Map<String,String>> searchResult = new ArrayList<>(searchResult_.size());", "originalCommit": "3b638b1e5356ea1642c12d14b517aec3b13c5c67", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU3MzExNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6362#discussion_r435573117", "bodyText": "Okay", "author": "Arthur-Milchior", "createdAt": "2020-06-04T21:51:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzA2MQ=="}], "type": "inlineReview", "revised_code": {"commit": "fb983f23d1bdd251c2d5c8e28e1970ef5cbc0571", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex c27d097da..cfb64083e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -896,7 +896,9 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n         List<Long> searchResult_ = col.findCards(query, order);\n-        List<Map<String,String>> searchResult = new ArrayList<>(searchResult_.size());\n+        int resultSize = searchResult_.size();\n+        Timber.d(\"The search found %d cards\", resultSize);\n+        List<Map<String,String>> searchResult = new ArrayList<>(resultSize);\n         for (Long cid: searchResult_) {\n             Map<String, String> card = new HashMap<>();\n             card.put(CardBrowser.ID, cid.toString());\n", "next_change": {"commit": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex cfb64083e..6348a0f42 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -895,19 +895,11 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         String query = (String) params[0].getObjArray()[0];\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n-        List<Long> searchResult_ = col.findCards(query, order);\n-        int resultSize = searchResult_.size();\n-        Timber.d(\"The search found %d cards\", resultSize);\n-        List<Map<String,String>> searchResult = new ArrayList<>(resultSize);\n-        for (Long cid: searchResult_) {\n-            Map<String, String> card = new HashMap<>();\n-            card.put(CardBrowser.ID, cid.toString());\n-            searchResult.add(card);\n-        }\n+        List<Map<String,String>> searchResult = col.findCardsForCardBrowser(query, order);\n         // Render the first few items\n         for (int i = 0; i < Math.min(numCardsToRender, searchResult.size()); i++) {\n             Card c = col.getCard(Long.parseLong(searchResult.get(i).get(\"id\")));\n-            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c, col);\n+            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c);\n         }\n         // Finish off the task\n         if (isCancelled()) {\n", "next_change": {"commit": "e6e96b8a762942a18b24787a4ec3e91d6070479b", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex 6348a0f42..18b228a03 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -899,7 +899,7 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         // Render the first few items\n         for (int i = 0; i < Math.min(numCardsToRender, searchResult.size()); i++) {\n             Card c = col.getCard(Long.parseLong(searchResult.get(i).get(\"id\")));\n-            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c);\n+            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c, col);\n         }\n         // Finish off the task\n         if (isCancelled()) {\n", "next_change": {"commit": "8293ad235b65d93695ed4d8eeb1b4b421d8c2d56", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex 18b228a03..c27d097da 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -895,7 +895,13 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         String query = (String) params[0].getObjArray()[0];\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n-        List<Map<String,String>> searchResult = col.findCardsForCardBrowser(query, order);\n+        List<Long> searchResult_ = col.findCards(query, order);\n+        List<Map<String,String>> searchResult = new ArrayList<>(searchResult_.size());\n+        for (Long cid: searchResult_) {\n+            Map<String, String> card = new HashMap<>();\n+            card.put(CardBrowser.ID, cid.toString());\n+            searchResult.add(card);\n+        }\n         // Render the first few items\n         for (int i = 0; i < Math.min(numCardsToRender, searchResult.size()); i++) {\n             Card c = col.getCard(Long.parseLong(searchResult.get(i).get(\"id\")));\n", "next_change": {"commit": "7fccc05cde4e26216a73054bd61bd5278c507f6d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex c27d097da..1752248de 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -896,16 +896,15 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         Boolean order = (Boolean) params[0].getObjArray()[1];\n         int numCardsToRender = (int) params[0].getObjArray()[2];\n         List<Long> searchResult_ = col.findCards(query, order);\n-        List<Map<String,String>> searchResult = new ArrayList<>(searchResult_.size());\n+        int resultSize = searchResult_.size();\n+        Timber.d(\"The search found %d cards\", resultSize);\n+        List<CardBrowser.CardCache> searchResult = new ArrayList<>(resultSize);\n         for (Long cid: searchResult_) {\n-            Map<String, String> card = new HashMap<>();\n-            card.put(CardBrowser.ID, cid.toString());\n-            searchResult.add(card);\n+            searchResult.add(new CardBrowser.CardCache(cid, col));\n         }\n         // Render the first few items\n         for (int i = 0; i < Math.min(numCardsToRender, searchResult.size()); i++) {\n-            Card c = col.getCard(Long.parseLong(searchResult.get(i).get(\"id\")));\n-            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c, col);\n+            searchResult.get(i).load(false);\n         }\n         // Finish off the task\n         if (isCancelled()) {\n", "next_change": {"commit": "2114aeedad26a5384d6d6a46289f72e405f8c9e9", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\nindex 1752248de..cfb64083e 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/async/CollectionTask.java\n", "chunk": "@@ -898,13 +898,16 @@ public class CollectionTask extends BaseAsyncTask<CollectionTask.TaskData, Colle\n         List<Long> searchResult_ = col.findCards(query, order);\n         int resultSize = searchResult_.size();\n         Timber.d(\"The search found %d cards\", resultSize);\n-        List<CardBrowser.CardCache> searchResult = new ArrayList<>(resultSize);\n+        List<Map<String,String>> searchResult = new ArrayList<>(resultSize);\n         for (Long cid: searchResult_) {\n-            searchResult.add(new CardBrowser.CardCache(cid, col));\n+            Map<String, String> card = new HashMap<>();\n+            card.put(CardBrowser.ID, cid.toString());\n+            searchResult.add(card);\n         }\n         // Render the first few items\n         for (int i = 0; i < Math.min(numCardsToRender, searchResult.size()); i++) {\n-            searchResult.get(i).load(false);\n+            Card c = col.getCard(Long.parseLong(searchResult.get(i).get(\"id\")));\n+            CardBrowser.updateSearchItemQA(mContext, searchResult.get(i), c, col);\n         }\n         // Finish off the task\n         if (isCancelled()) {\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"oid": "fb983f23d1bdd251c2d5c8e28e1970ef5cbc0571", "url": "https://github.com/ankidroid/Anki-Android/commit/fb983f23d1bdd251c2d5c8e28e1970ef5cbc0571", "message": "Timber size of result of search", "committedDate": "2020-06-04T22:02:10Z", "type": "forcePushed"}, {"oid": "19a0e6bcff769fb2a79b4b0350d28774b7ceb335", "url": "https://github.com/ankidroid/Anki-Android/commit/19a0e6bcff769fb2a79b4b0350d28774b7ceb335", "message": "Timber size of result of search", "committedDate": "2020-06-04T23:00:59Z", "type": "forcePushed"}, {"oid": "783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "url": "https://github.com/ankidroid/Anki-Android/commit/783609ad81e5b933cd8b93bdc4a5d8ed0596029e", "message": "checking which cards are marked is moved to CardBrowser\n\nCurrently, asking the browser to show the whole collection takes\nmultiple minutes. On a smaller deck, it takes 40 seconds, out of which\n15 are spent executing the regexp and looking for marked cards.\n\nMoving it to updateSearchItemQA ensure it is executed only for card we\nintend to display and save most of this time.\n\nSince \"marked\" is computed later, the color of the browser line is\ncomputed at the same time than the text, instead of being\npre-computed. So it makes the following difference:\n* before this commit, all lines are directly colored\n* after this commit, if you scroll quickly, all lines are white and\n  they become colored at the moment when they get their text.\n\n(To be even more precise, the text is filled or not depending on the\ncolumns. \"sort field\" is always filled while \"question\" is filled only\nafter the line appear on screen.)", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "4570aeb1e44bd78877deee85d0b82019f355d1fb", "url": "https://github.com/ankidroid/Anki-Android/commit/4570aeb1e44bd78877deee85d0b82019f355d1fb", "message": "NF: compile pattern for marked cards", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "7f3377f414da2c71ef50b87b1b6c209d0c8b2945", "url": "https://github.com/ankidroid/Anki-Android/commit/7f3377f414da2c71ef50b87b1b6c209d0c8b2945", "message": "NF: Finder._where is private", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "3e276fc2272e917b7fec775761eda846b8f387fb", "url": "https://github.com/ankidroid/Anki-Android/commit/3e276fc2272e917b7fec775761eda846b8f387fb", "message": "NF: unused findCardsForCardBrowser with String", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "6306e410f54d38069690d0bf7f784bbe853b3797", "url": "https://github.com/ankidroid/Anki-Android/commit/6306e410f54d38069690d0bf7f784bbe853b3797", "message": "NF: findCardsForCardBrowser removes an useless indirection", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "c675255c2dd305af7da3b6d8730de04c9684ef91", "url": "https://github.com/ankidroid/Anki-Android/commit/c675255c2dd305af7da3b6d8730de04c9684ef91", "message": "NF: remove useless findCards", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "f884e785d57513c684fa992df32dcd234078a385", "url": "https://github.com/ankidroid/Anki-Android/commit/f884e785d57513c684fa992df32dcd234078a385", "message": "NF: move computation of flag string to card browser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "4a178ba8419c9ca4da29fecd639f2e00c0ba141c", "url": "https://github.com/ankidroid/Anki-Android/commit/4a178ba8419c9ca4da29fecd639f2e00c0ba141c", "message": "NF: add variable note in updateSearchItemQA", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "ba3088dca4876c86e1feb0f0335ce8b218bbafac", "url": "https://github.com/ankidroid/Anki-Android/commit/ba3088dca4876c86e1feb0f0335ce8b218bbafac", "message": "NF: tags put in cardbrowser and not finder", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "654b5f00e2da527c2dea394210524cdce275a9ce", "url": "https://github.com/ankidroid/Anki-Android/commit/654b5f00e2da527c2dea394210524cdce275a9ce", "message": "NF: move suspended to cardbrowser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "e6e96b8a762942a18b24787a4ec3e91d6070479b", "url": "https://github.com/ankidroid/Anki-Android/commit/e6e96b8a762942a18b24787a4ec3e91d6070479b", "message": "NF: add col parameter to updateSearchItemQA", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "d02c4af7f391992ac9ec3c7ed2d5e8113ad28f13", "url": "https://github.com/ankidroid/Anki-Android/commit/d02c4af7f391992ac9ec3c7ed2d5e8113ad28f13", "message": "NF: Deck name is put in card browser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "db867c9006c24de3f8ad5ea0e6f68e35fe13e66c", "url": "https://github.com/ankidroid/Anki-Android/commit/db867c9006c24de3f8ad5ea0e6f68e35fe13e66c", "message": "NF: SFLD put in cardbrowser and not Finder", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "3bec1daed99ac459f39a7ab311ea6b85565b9fe1", "url": "https://github.com/ankidroid/Anki-Android/commit/3bec1daed99ac459f39a7ab311ea6b85565b9fe1", "message": "NF: remove place holders for Question/Answer\n\nSeems they are not checked anymore anyplace", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "00e1bb835fd81d304cb4c709947e480725fe8bca", "url": "https://github.com/ankidroid/Anki-Android/commit/00e1bb835fd81d304cb4c709947e480725fe8bca", "message": "NF: find cards with boolean", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "8293ad235b65d93695ed4d8eeb1b4b421d8c2d56", "url": "https://github.com/ankidroid/Anki-Android/commit/8293ad235b65d93695ed4d8eeb1b4b421d8c2d56", "message": "NF: uses findCards and not forCardBrowser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "d57fc520792964beb32dbd95761f30a48f2e39a4", "url": "https://github.com/ankidroid/Anki-Android/commit/d57fc520792964beb32dbd95761f30a48f2e39a4", "message": "NF: remove unused findCardsForCardBrowser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "085b1b0fcd928f4417b784d6874a51fcfbf26d25", "url": "https://github.com/ankidroid/Anki-Android/commit/085b1b0fcd928f4417b784d6874a51fcfbf26d25", "message": "NF: remove unused findCardsForCardBrowser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "baa0ac4c03547dec5b71c44cf30a88b79cac434a", "url": "https://github.com/ankidroid/Anki-Android/commit/baa0ac4c03547dec5b71c44cf30a88b79cac434a", "message": "NF: Remove unused _queryForCardBrowser", "committedDate": "2020-06-05T11:30:27Z", "type": "commit"}, {"oid": "7fccc05cde4e26216a73054bd61bd5278c507f6d", "url": "https://github.com/ankidroid/Anki-Android/commit/7fccc05cde4e26216a73054bd61bd5278c507f6d", "message": "NF: use enum for column", "committedDate": "2020-06-05T14:34:04Z", "type": "forcePushed"}, {"oid": "2114aeedad26a5384d6d6a46289f72e405f8c9e9", "url": "https://github.com/ankidroid/Anki-Android/commit/2114aeedad26a5384d6d6a46289f72e405f8c9e9", "message": "NF: Integer.toString instead of new Integer().toString", "committedDate": "2020-06-05T14:55:29Z", "type": "forcePushed"}, {"oid": "c47f1e596152a515866c87d7098d9d269709fea5", "url": "https://github.com/ankidroid/Anki-Android/commit/c47f1e596152a515866c87d7098d9d269709fea5", "message": "Timber size of result of search", "committedDate": "2020-06-05T15:13:37Z", "type": "commit"}, {"oid": "daa3086e96b6ef50a1e526f126920025a2c28c6f", "url": "https://github.com/ankidroid/Anki-Android/commit/daa3086e96b6ef50a1e526f126920025a2c28c6f", "message": "NF: Integer.toString instead of new Integer().toString", "committedDate": "2020-06-05T15:13:37Z", "type": "commit"}, {"oid": "daa3086e96b6ef50a1e526f126920025a2c28c6f", "url": "https://github.com/ankidroid/Anki-Android/commit/daa3086e96b6ef50a1e526f126920025a2c28c6f", "message": "NF: Integer.toString instead of new Integer().toString", "committedDate": "2020-06-05T15:13:37Z", "type": "forcePushed"}]}