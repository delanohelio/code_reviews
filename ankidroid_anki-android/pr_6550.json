{"pr_number": 6550, "pr_title": "Change whiteboard pen color while reviewing ", "pr_createdAt": "2020-06-25T06:42:35Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6550", "merge_commit": "b988f5ab6f28c73c4b77b227914ce199f1c0929c", "timeline": [{"oid": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "url": "https://github.com/ankidroid/Anki-Android/commit/77d6abfbb12a4898098d59bb06670aa9aaec63f6", "message": "\tWhiteboard pen color", "committedDate": "2020-06-25T06:36:58Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MTg5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445381894", "body": "You can make this a local variable", "bodyText": "You can make this a local variable", "bodyHTML": "<p dir=\"auto\">You can make this a local variable</p>", "author": "david-allison-1", "createdAt": "2020-06-25T08:09:01Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -79,6 +79,7 @@\n     private boolean mPrefFullscreenReview = false;\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n+    private LinearLayout colorPalette;", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b20fd9c1b4..b78135bb33 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -79,7 +79,6 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private boolean mPrefFullscreenReview = false;\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n-    private LinearLayout colorPalette;\n \n     // Deck picker reset scheduler before opening the reviewer. So\n     // first reset is useless.\n", "next_change": {"commit": "82c7d650943603dcedadb7e1a9d13bfb00050fcd", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b78135bb33..3ddfc9ce8d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -79,6 +79,7 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private boolean mPrefFullscreenReview = false;\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n+    private LinearLayout colorPalette;\n \n     // Deck picker reset scheduler before opening the reviewer. So\n     // first reset is useless.\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex 3ddfc9ce8d..c9b49ee1bb 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -79,7 +79,6 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private boolean mPrefFullscreenReview = false;\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n-    private LinearLayout colorPalette;\n \n     // Deck picker reset scheduler before opening the reviewer. So\n     // first reset is useless.\n", "next_change": {"commit": "6a3339cf2689a619dc96747fa51768c24f417c95", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex c9b49ee1bb..21ab1cb8ec 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -80,9 +80,6 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n \n-    // Deck picker reset scheduler before opening the reviewer. So\n-    // first reset is useless.\n-    private boolean mSchedResetDone = false;\n \n     private ActionButtons mActionButtons = new ActionButtons(this);\n \n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex 21ab1cb8ec..b25ae11687 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -79,7 +79,11 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private boolean mPrefFullscreenReview = false;\n     private static final int ADD_NOTE = 12;\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n+    private LinearLayout colorPalette;\n \n+    // Deck picker reset scheduler before opening the reviewer. So\n+    // first reset is useless.\n+    private boolean mSchedResetDone = false;\n \n     private ActionButtons mActionButtons = new ActionButtons(this);\n \n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b25ae11687..fe439beef3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -81,10 +81,6 @@ public class Reviewer extends AbstractFlashcardViewer {\n     private static final int REQUEST_AUDIO_PERMISSION = 0;\n     private LinearLayout colorPalette;\n \n-    // Deck picker reset scheduler before opening the reviewer. So\n-    // first reset is useless.\n-    private boolean mSchedResetDone = false;\n-\n     private ActionButtons mActionButtons = new ActionButtons(this);\n \n \n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjE3Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445382176", "body": "```suggestion\r\n    private LinearLayout mColorPalette;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private LinearLayout colorPalette;\n          \n          \n            \n                private LinearLayout mColorPalette;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">LinearLayout</span> <span class=\"x x-first x-last\">colorPalette</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">LinearLayout</span> <span class=\"x x-first x-last\">mColorPalette</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-06-25T08:09:31Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -66,6 +68,7 @@\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n \n+    private LinearLayout colorPalette;", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af3..0e819ac3ce 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -68,7 +68,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n \n-    private LinearLayout colorPalette;\n+    private LinearLayout mColorPalette;\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "c8574991523c26f02fe367f6b0849a6458d2423d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 0e819ac3ce..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -68,7 +68,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n \n-    private LinearLayout mColorPalette;\n+    private final LinearLayout mColorPalette;\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -67,8 +73,8 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-\n-    private final LinearLayout mColorPalette;\n+    private final int foregroundColor;\n+    private SystemTime mTime = new SystemTime();\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -73,8 +67,8 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-    private final int foregroundColor;\n-    private SystemTime mTime = new SystemTime();\n+\n+    private final LinearLayout mColorPalette;\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -67,8 +75,9 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-\n+    private final int foregroundColor;\n     private final LinearLayout mColorPalette;\n+    private SystemTime mTime = new SystemTime();\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": null}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -82,7 +76,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-\n+        int foregroundColor;\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}]}}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +82,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -82,7 +76,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-\n+        int foregroundColor;\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjU0MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445382540", "body": "Why was this commented out?", "bodyText": "Why was this commented out?", "bodyHTML": "<p dir=\"auto\">Why was this commented out?</p>", "author": "david-allison-1", "createdAt": "2020-06-25T08:10:10Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -241,11 +260,13 @@ private void createBitmap() {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_8888);\n+        /*\n         if (mMonochrome && !mInvertedColors) {", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MDU2MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445490560", "bodyText": "When not commented out then pen color change but after drawing complete. The drawn figure change to black color.", "author": "infinyte7", "createdAt": "2020-06-25T11:30:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYwOTc4Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445609783", "bodyText": "Wouldn't that the be mPaint line?\nDoes this feature still work in night mode?", "author": "david-allison-1", "createdAt": "2020-06-25T14:39:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyOTE3OA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445629178", "bodyText": "Yes, this work in night mode.  But in normal mode drawn figure color change to black.", "author": "infinyte7", "createdAt": "2020-06-25T15:05:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjU0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0NjY1Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445746656", "bodyText": "Could you try 4444, so we conserve memory.", "author": "david-allison-1", "createdAt": "2020-06-25T18:12:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjU0MA=="}], "type": "inlineReview", "revised_code": {"commit": "c8574991523c26f02fe367f6b0849a6458d2423d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af3..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -260,13 +260,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_8888);\n-        /*\n-        if (mMonochrome && !mInvertedColors) {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n-        } else {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n-        }*/\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -260,7 +250,11 @@ public class Whiteboard extends View {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n+        if (mMonochrome && !mInvertedColors) {\n+            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n+        } else {\n+            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n+        }\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -250,11 +260,7 @@ public class Whiteboard extends View {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        if (mMonochrome && !mInvertedColors) {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n-        } else {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n-        }\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjkyMQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445382921", "body": "Move all of these into the case statements (surround the cases with `{}` if they're declaring variables)", "bodyText": "Move all of these into the case statements (surround the cases with {} if they're declaring variables)", "bodyHTML": "<p dir=\"auto\">Move all of these into the case statements (surround the cases with <code>{}</code> if they're declaring variables)</p>", "author": "david-allison-1", "createdAt": "2020-06-25T08:10:47Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -356,6 +377,44 @@ private static Point getDisplayDimenions() {\n         return point;\n     }\n \n+    @Override\n+    public void onClick(View view) {\n+\n+        int redPenColor = Color.parseColor(\"#f44336\");", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5NTE0Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445495142", "bodyText": "The default colours seem sensible. At some point we might want to move to a colour picker.\nCould you rebase this to remove references to the .png images and use a vector instead?\n\nSome thing like this can be done. Google Keep\n\nI have used .png for color palette icon in Action Bar as Undo icon used. Undo icon have four png iconhdpi, mdpi, xdpi, xxdpi. So I have created four png icon for color palette icon.", "author": "infinyte7", "createdAt": "2020-06-25T11:40:09Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTU5Njc1OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445596759", "bodyText": "We plan to (eventually) remove the four pngs: #5134", "author": "david-allison-1", "createdAt": "2020-06-25T14:22:22Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjkyMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYyOTk0NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445629945", "bodyText": "To be updated.", "author": "infinyte7", "createdAt": "2020-06-25T15:06:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4MjkyMQ=="}], "type": "inlineReview", "revised_code": {"commit": "cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af3..0e819ac3ce 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -380,35 +380,34 @@ public class Whiteboard extends View implements View.OnClickListener {\n     @Override\n     public void onClick(View view) {\n \n-        int redPenColor = Color.parseColor(\"#f44336\");\n-        int greenPenColor = Color.parseColor(\"#4caf50\");\n-        int bluePenColor = Color.parseColor(\"#2196f3\");\n-        int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n-\n         switch (view.getId()) {\n             case R.id.pen_color_white:\n                 mPaint.setColor(Color.WHITE);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_black:\n                 mPaint.setColor(Color.BLACK);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_red:\n+                int redPenColor = Color.parseColor(\"#f44336\");\n                 mPaint.setColor(redPenColor);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_green:\n+                int greenPenColor = Color.parseColor(\"#4caf50\");\n                 mPaint.setColor(greenPenColor);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_blue:\n+                int bluePenColor = Color.parseColor(\"#2196f3\");\n                 mPaint.setColor(bluePenColor);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_yellow:\n+                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n                 mPaint.setColor(yellowPenColor);\n-                colorPalette.setVisibility(View.GONE);\n+                mColorPalette.setVisibility(View.GONE);\n                 break;\n             default:\n                 break;\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 0e819ac3ce..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -377,43 +365,6 @@ public class Whiteboard extends View implements View.OnClickListener {\n         return point;\n     }\n \n-    @Override\n-    public void onClick(View view) {\n-\n-        switch (view.getId()) {\n-            case R.id.pen_color_white:\n-                mPaint.setColor(Color.WHITE);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_black:\n-                mPaint.setColor(Color.BLACK);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_red:\n-                int redPenColor = Color.parseColor(\"#f44336\");\n-                mPaint.setColor(redPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_green:\n-                int greenPenColor = Color.parseColor(\"#4caf50\");\n-                mPaint.setColor(greenPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_blue:\n-                int bluePenColor = Color.parseColor(\"#2196f3\");\n-                mPaint.setColor(bluePenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_yellow:\n-                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n-                mPaint.setColor(yellowPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            default:\n-                break;\n-        }\n-    }\n-\n     /**\n      * Keep a stack of all points and paths so that the last stroke can be undone\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -365,93 +368,121 @@ public class Whiteboard extends View {\n         return point;\n     }\n \n+\n+    public void onClick(View view) {\n+\n+        switch (view.getId()) {\n+            case R.id.pen_color_white:\n+                mPaint.setColor(Color.WHITE);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_black:\n+                mPaint.setColor(Color.BLACK);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_red:\n+                int redPenColor = Color.parseColor(\"#f44336\");\n+                mPaint.setColor(redPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_green:\n+                int greenPenColor = Color.parseColor(\"#4caf50\");\n+                mPaint.setColor(greenPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_blue:\n+                int bluePenColor = Color.parseColor(\"#2196f3\");\n+                mPaint.setColor(bluePenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_yellow:\n+                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n+                mPaint.setColor(yellowPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n     /**\n      * Keep a stack of all points and paths so that the last stroke can be undone\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n      */\n     private class UndoStack {\n-        private final Stack<Path> mPathStack = new Stack<>();\n-        private final Stack<PointF> mPointStack = new Stack<>();\n-        private final Stack<Integer> mWhichStack = new Stack<>();\n+        private final Stack<WhiteboardAction> mStack = new Stack<>();\n \n-        public void add(Path path) {\n-            mPathStack.add(new Path(path));\n-            mWhichStack.add(0);\n-        }\n-        public void add(float x, float y) {\n-            mPointStack.add(new PointF(x, y));\n-            mWhichStack.add(1);\n+        public void add(WhiteboardAction action) {\n+            mStack.add(action);\n         }\n \n         public void clear() {\n-            mPathStack.clear();\n-            mPointStack.clear();\n-            mWhichStack.clear();\n+            mStack.clear();\n         }\n \n         public int size() {\n-            return mWhichStack.size();\n+            return mStack.size();\n         }\n \n         public void pop() {\n-            if (mWhichStack.size() == 0) return;\n-            switch (mWhichStack.peek()) {\n-                case 0:\n-                    mPathStack.pop();\n-                    break;\n-                case 1:\n-                    mPointStack.pop();\n-                    break;\n-            }\n-            mWhichStack.pop();\n+            mStack.pop();\n         }\n \n         public void apply() {\n             mBitmap.eraseColor(0);\n-            for (Path path : mPathStack) {\n-                mCanvas.drawPath(path, mPaint);\n-            }\n-            for (PointF point : mPointStack) {\n-                mCanvas.drawPoint(point.x, point.y, mPaint);\n+\n+            for (WhiteboardAction action : mStack) {\n+                action.apply(mCanvas);\n             }\n             invalidate();\n         }\n \n         public boolean empty() {\n-            return mWhichStack.empty();\n+            return mStack.empty();\n         }\n     }\n \n-    public boolean isCurrentlyDrawing() {\n-        return mCurrentlyDrawing;\n+    private interface WhiteboardAction {\n+        void apply(@NonNull Canvas canvas);\n     }\n \n-    protected String saveWhiteboard() throws FileNotFoundException {\n+    private static class DrawPoint implements WhiteboardAction {\n \n-        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n-        Canvas canvas = new Canvas(bitmap);\n+        private final float mX;\n+        private final float mY;\n+        private final Paint mPaint;\n+\n+\n+        public DrawPoint(float x, float y, Paint paint) {\n+            mX = x;\n+            mY = y;\n+            mPaint = paint;\n+        }\n \n-        File pictures = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n-        File ankiDroidFolder = new File(pictures, \"AnkiDroid\");\n \n-        if (!ankiDroidFolder.exists()) {\n-            ankiDroidFolder.mkdirs();\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPoint(mX, mY, mPaint);\n         }\n+    }\n \n-        String baseFileName = \"Whiteboard\";\n-        String timeStamp = TimeUtils.getTimestamp(mTime);\n-        String finalFileName = baseFileName + timeStamp + \".png\";\n+    private static class DrawPath implements WhiteboardAction {\n+        private final Path mPath;\n+        private final Paint mPaint;\n \n-        File saveWhiteboardImagFile = new File(ankiDroidFolder, finalFileName);\n+        public DrawPath(Path path, Paint paint) {\n+            mPath = path;\n+            mPaint = paint;\n+        }\n \n-        if (foregroundColor != Color.BLACK) {\n-            canvas.drawColor(Color.BLACK);\n-        } else {\n-            canvas.drawColor(Color.WHITE);\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPath(mPath, mPaint);\n         }\n+    }\n \n-        this.draw(canvas);\n-        bitmap.compress(Bitmap.CompressFormat.JPEG, 95, new FileOutputStream(saveWhiteboardImagFile));\n-        return saveWhiteboardImagFile.getAbsolutePath();\n+    public boolean isCurrentlyDrawing() {\n+        return mCurrentlyDrawing;\n     }\n }\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -485,4 +488,33 @@ public class Whiteboard extends View {\n     public boolean isCurrentlyDrawing() {\n         return mCurrentlyDrawing;\n     }\n+\n+    protected String saveWhiteboard() throws FileNotFoundException {\n+\n+        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n+        Canvas canvas = new Canvas(bitmap);\n+\n+        File pictures = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n+        File ankiDroidFolder = new File(pictures, \"AnkiDroid\");\n+\n+        if (!ankiDroidFolder.exists()) {\n+            ankiDroidFolder.mkdirs();\n+        }\n+\n+        String baseFileName = \"Whiteboard\";\n+        String timeStamp = TimeUtils.getTimestamp(mTime);\n+        String finalFileName = baseFileName + timeStamp + \".png\";\n+\n+        File saveWhiteboardImagFile = new File(ankiDroidFolder, finalFileName);\n+\n+        if (foregroundColor != Color.BLACK) {\n+            canvas.drawColor(Color.BLACK);\n+        } else {\n+            canvas.drawColor(Color.WHITE);\n+        }\n+\n+        this.draw(canvas);\n+        bitmap.compress(Bitmap.CompressFormat.JPEG, 95, new FileOutputStream(saveWhiteboardImagFile));\n+        return saveWhiteboardImagFile.getAbsolutePath();\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM4ODE4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445388181", "body": "might as well remove rather than commenting out", "bodyText": "might as well remove rather than commenting out", "bodyHTML": "<p dir=\"auto\">might as well remove rather than commenting out</p>", "author": "david-allison-1", "createdAt": "2020-06-25T08:19:45Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -91,7 +94,7 @@ public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean\n         mPaint = new Paint();\n         mPaint.setAntiAlias(true);\n         mPaint.setDither(true);\n-        mPaint.setColor(foregroundColor);\n+        //mPaint.setColor(foregroundColor);", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af3..0e819ac3ce 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -94,7 +94,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n         mPaint = new Paint();\n         mPaint.setAntiAlias(true);\n         mPaint.setDither(true);\n-        //mPaint.setColor(foregroundColor);\n+        mPaint.setColor(foregroundColor);\n         mPaint.setStyle(Paint.Style.STROKE);\n         mPaint.setStrokeJoin(Paint.Join.ROUND);\n         mPaint.setStrokeCap(Paint.Cap.ROUND);\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 0e819ac3ce..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -103,22 +109,6 @@ public class Whiteboard extends View implements View.OnClickListener {\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n-\n-        // selecting pen color to draw\n-        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n-\n-        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n-        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n-        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n-        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n-        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n-        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n-        penColorWhite.setOnClickListener(this);\n-        penColorBlack.setOnClickListener(this);\n-        penColorRed.setOnClickListener(this);\n-        penColorGreen.setOnClickListener(this);\n-        penColorBlue.setOnClickListener(this);\n-        penColorYellow.setOnClickListener(this);\n     }\n \n \n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -109,6 +103,22 @@ public class Whiteboard extends View {\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n+\n+        // selecting pen color to draw\n+        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n+\n+        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n+        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n+        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n+        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n+        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n+        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n+        penColorWhite.setOnClickListener(this::onClick);\n+        penColorBlack.setOnClickListener(this::onClick);\n+        penColorRed.setOnClickListener(this::onClick);\n+        penColorGreen.setOnClickListener(this::onClick);\n+        penColorBlue.setOnClickListener(this::onClick);\n+        penColorYellow.setOnClickListener(this::onClick);\n     }\n \n \n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -107,18 +116,12 @@ public class Whiteboard extends View {\n         // selecting pen color to draw\n         mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n \n-        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n-        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n-        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n-        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n-        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n-        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n-        penColorWhite.setOnClickListener(this::onClick);\n-        penColorBlack.setOnClickListener(this::onClick);\n-        penColorRed.setOnClickListener(this::onClick);\n-        penColorGreen.setOnClickListener(this::onClick);\n-        penColorBlue.setOnClickListener(this::onClick);\n-        penColorYellow.setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_white)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_black)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_red)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_green)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_blue)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_yellow)).setOnClickListener(this::onClick);\n     }\n \n \n", "next_change": null}]}}]}}]}}]}, "revised_code_in_main": {"commit": "b988f5ab6f28c73c4b77b227914ce199f1c0929c", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af..0f4fcd932 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -94,7 +103,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n         mPaint = new Paint();\n         mPaint.setAntiAlias(true);\n         mPaint.setDither(true);\n-        //mPaint.setColor(foregroundColor);\n+        mPaint.setColor(foregroundColor);\n         mPaint.setStyle(Paint.Style.STROKE);\n         mPaint.setStrokeJoin(Paint.Join.ROUND);\n         mPaint.setStrokeCap(Paint.Cap.ROUND);\n", "next_change": {"commit": "164200255997ac4750493118c24cec649191b630", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 0f4fcd932..9839e2295 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -72,38 +84,34 @@ public class Whiteboard extends View {\n \n     private boolean mSecondFingerWithinTapTolerance;\n     private boolean mCurrentlyDrawing = false;\n-    private boolean mInvertedColors;\n-    private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-    private final int foregroundColor;\n+    private final int mForegroundColor;\n     private final LinearLayout mColorPalette;\n-    private SystemTime mTime = new SystemTime();\n \n-    public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n+    @Nullable\n+    private OnPaintColorChangeListener mOnPaintColorChangeListener;\n+\n+    public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted) {\n         super(cardViewer, null);\n         mCardViewer = new WeakReference<>(cardViewer);\n-        mInvertedColors = inverted;\n-        mMonochrome = monochrome;\n \n+        Button whitePenColorButton = cardViewer.findViewById(R.id.pen_color_white);\n+        Button blackPenColorButton = cardViewer.findViewById(R.id.pen_color_black);\n \n-        if (!mInvertedColors) {\n-            if (mMonochrome) {\n-                foregroundColor = Color.BLACK;\n-            } else {\n-                foregroundColor = ContextCompat.getColor(cardViewer, R.color.wb_fg_color);\n-            }\n+        if (!inverted) {\n+                whitePenColorButton.setVisibility(View.GONE);\n+                blackPenColorButton.setOnClickListener(this::onClick);\n+                mForegroundColor = Color.BLACK;\n         } else {\n-            if (mMonochrome) {\n-                foregroundColor = Color.WHITE;\n-            } else {\n-                foregroundColor = ContextCompat.getColor(cardViewer, R.color.wb_fg_color_inv);\n-            }\n+                blackPenColorButton.setVisibility(View.GONE);\n+                whitePenColorButton.setOnClickListener(this::onClick);\n+                mForegroundColor = Color.WHITE;\n         }\n \n         mPaint = new Paint();\n         mPaint.setAntiAlias(true);\n         mPaint.setDither(true);\n-        mPaint.setColor(foregroundColor);\n+        mPaint.setColor(mForegroundColor);\n         mPaint.setStyle(Paint.Style.STROKE);\n         mPaint.setStrokeJoin(Paint.Join.ROUND);\n         mPaint.setStrokeCap(Paint.Cap.ROUND);\n", "next_change": {"commit": "425701eb65d8f58267c2d289998fe33b5eeda3ba", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9839e2295..bb9f12e33 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -115,21 +117,24 @@ public class Whiteboard extends View {\n         mPaint.setStyle(Paint.Style.STROKE);\n         mPaint.setStrokeJoin(Paint.Join.ROUND);\n         mPaint.setStrokeCap(Paint.Cap.ROUND);\n-        int wbStrokeWidth = AnkiDroidApp.getSharedPrefs(cardViewer).getInt(\"whiteBoardStrokeWidth\", 6);\n-        mPaint.setStrokeWidth((float) wbStrokeWidth);\n+        mPaint.setStrokeWidth((float) getCurrentStrokeWidth());\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n \n         // selecting pen color to draw\n-        mColorPalette = cardViewer.findViewById(R.id.whiteboard_pen_color);\n+        mColorPalette = cardViewer.findViewById(R.id.whiteboard_editor);\n \n         cardViewer.findViewById(R.id.pen_color_red).setOnClickListener(this::onClick);\n         cardViewer.findViewById(R.id.pen_color_green).setOnClickListener(this::onClick);\n         cardViewer.findViewById(R.id.pen_color_blue).setOnClickListener(this::onClick);\n         cardViewer.findViewById(R.id.pen_color_yellow).setOnClickListener(this::onClick);\n+        cardViewer.findViewById(R.id.stroke_width).setOnClickListener(this::onClick);\n     }\n \n+    public int getCurrentStrokeWidth() {\n+        return AnkiDroidApp.getSharedPrefs(mCardViewer.get()).getInt(\"whiteBoardStrokeWidth\", 6);\n+    }\n \n     @Override\n     protected void onDraw(Canvas canvas) {\n", "next_change": {"commit": "8d7a6813c88276d2c4d8d97d14e43996ebdf65fe", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex bb9f12e33..9953065c7 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -136,6 +138,24 @@ public class Whiteboard extends View {\n         return AnkiDroidApp.getSharedPrefs(mCardViewer.get()).getInt(\"whiteBoardStrokeWidth\", 6);\n     }\n \n+\n+    public static Whiteboard createInstance(AbstractFlashcardViewer cardViewer) {\n+\n+        SharedPreferences sharedPrefs = AnkiDroidApp.getSharedPrefs(cardViewer);\n+        Whiteboard whiteboard = new Whiteboard(cardViewer, isInNightMode(sharedPrefs));\n+\n+        FrameLayout.LayoutParams lp2 = new FrameLayout.LayoutParams(\n+                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n+\n+        whiteboard.setLayoutParams(lp2);\n+        FrameLayout fl = cardViewer.findViewById(R.id.whiteboard);\n+        fl.addView(whiteboard);\n+\n+        whiteboard.setEnabled(true);\n+\n+        return whiteboard;\n+    }\n+\n     @Override\n     protected void onDraw(Canvas canvas) {\n         super.onDraw(canvas);\n", "next_change": {"commit": "3d141fd0a98d879640a4e3c4e60879040977e6c0", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\ndeleted file mode 100644\nindex 9953065c7..000000000\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ /dev/null\n", "chunk": "@@ -1,634 +0,0 @@\n-/*\n- * Copyright (c) 2009 Andrew <andrewdubya@gmail.com>\n- * Copyright (c) 2009 Nicolas Raoul <nicolas.raoul@gmail.com>\n- * Copyright (c) 2009 Edu Zamora <edu.zasu@gmail.com>\n- * Copyright (c) 2021 Nicolai Weitkemper <kontakt@nicolaiweitkemper.de>\n- *\n- * This program is free software; you can redistribute it and/or modify it under\n- * the terms of the GNU General Public License as published by the Free Software\n- * Foundation; either version 3 of the License, or (at your option) any later\n- * version.\n- *\n- * This program is distributed in the hope that it will be useful, but WITHOUT ANY\n- * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n- * PARTICULAR PURPOSE. See the GNU General Public License for more details.\n- *\n- * You should have received a copy of the GNU General Public License along with\n- * this program.  If not, see <http://www.gnu.org/licenses/>.\n- */\n-\n-package com.ichi2.anki;\n-\n-import android.annotation.SuppressLint;\n-import android.content.Context;\n-import android.content.SharedPreferences;\n-import android.graphics.Bitmap;\n-import android.graphics.Canvas;\n-import android.graphics.Color;\n-import android.graphics.Paint;\n-import android.graphics.Path;\n-import android.graphics.PathMeasure;\n-import android.graphics.Point;\n-import android.graphics.Rect;\n-import android.graphics.RectF;\n-import android.graphics.Region;\n-import android.net.Uri;\n-import android.view.MotionEvent;\n-import android.view.View;\n-import android.view.ViewGroup;\n-import android.widget.Button;\n-import android.widget.FrameLayout;\n-import android.widget.LinearLayout;\n-\n-import com.ichi2.anki.dialogs.WhiteBoardWidthDialog;\n-import com.ichi2.compat.CompatHelper;\n-import com.ichi2.libanki.utils.Time;\n-import com.ichi2.libanki.utils.TimeUtils;\n-import com.ichi2.utils.DisplayUtils;\n-\n-import java.io.FileNotFoundException;\n-import java.lang.ref.WeakReference;\n-import java.util.ArrayList;\n-import java.util.Iterator;\n-import java.util.List;\n-\n-import androidx.annotation.CheckResult;\n-import androidx.annotation.NonNull;\n-import androidx.annotation.Nullable;\n-import androidx.annotation.VisibleForTesting;\n-import androidx.core.content.ContextCompat;\n-import timber.log.Timber;\n-\n-import static com.ichi2.anki.cardviewer.CardAppearance.isInNightMode;\n-\n-/**\n- * Whiteboard allowing the user to draw the card's answer on the touchscreen.\n- */\n-@SuppressLint(\"ViewConstructor\")\n-public class Whiteboard extends View {\n-\n-    private static final float TOUCH_TOLERANCE = 4;\n-\n-    private final Paint mPaint;\n-    private final UndoList mUndo = new UndoList();\n-    private Bitmap mBitmap;\n-    private Canvas mCanvas;\n-    private final Path mPath;\n-    private final Paint mBitmapPaint;\n-    private final WeakReference<AbstractFlashcardViewer> mCardViewer;\n-\n-    private float mX;\n-    private float mY;\n-    private float mSecondFingerX0;\n-    private float mSecondFingerY0;\n-    private float mSecondFingerX;\n-    private float mSecondFingerY;\n-\n-    private int mSecondFingerPointerId;\n-\n-    private boolean mSecondFingerWithinTapTolerance;\n-    private boolean mCurrentlyDrawing = false;\n-    private boolean mUndoModeActive = false;\n-    private final int mForegroundColor;\n-    private final LinearLayout mColorPalette;\n-\n-    @Nullable\n-    private OnPaintColorChangeListener mOnPaintColorChangeListener;\n-\n-    public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted) {\n-        super(cardViewer, null);\n-        mCardViewer = new WeakReference<>(cardViewer);\n-\n-        Button whitePenColorButton = cardViewer.findViewById(R.id.pen_color_white);\n-        Button blackPenColorButton = cardViewer.findViewById(R.id.pen_color_black);\n-\n-        if (!inverted) {\n-                whitePenColorButton.setVisibility(View.GONE);\n-                blackPenColorButton.setOnClickListener(this::onClick);\n-                mForegroundColor = Color.BLACK;\n-        } else {\n-                blackPenColorButton.setVisibility(View.GONE);\n-                whitePenColorButton.setOnClickListener(this::onClick);\n-                mForegroundColor = Color.WHITE;\n-        }\n-\n-        mPaint = new Paint();\n-        mPaint.setAntiAlias(true);\n-        mPaint.setDither(true);\n-        mPaint.setColor(mForegroundColor);\n-        mPaint.setStyle(Paint.Style.STROKE);\n-        mPaint.setStrokeJoin(Paint.Join.ROUND);\n-        mPaint.setStrokeCap(Paint.Cap.ROUND);\n-        mPaint.setStrokeWidth((float) getCurrentStrokeWidth());\n-        createBitmap();\n-        mPath = new Path();\n-        mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n-\n-        // selecting pen color to draw\n-        mColorPalette = cardViewer.findViewById(R.id.whiteboard_editor);\n-\n-        cardViewer.findViewById(R.id.pen_color_red).setOnClickListener(this::onClick);\n-        cardViewer.findViewById(R.id.pen_color_green).setOnClickListener(this::onClick);\n-        cardViewer.findViewById(R.id.pen_color_blue).setOnClickListener(this::onClick);\n-        cardViewer.findViewById(R.id.pen_color_yellow).setOnClickListener(this::onClick);\n-        cardViewer.findViewById(R.id.stroke_width).setOnClickListener(this::onClick);\n-    }\n-\n-    public int getCurrentStrokeWidth() {\n-        return AnkiDroidApp.getSharedPrefs(mCardViewer.get()).getInt(\"whiteBoardStrokeWidth\", 6);\n-    }\n-\n-\n-    public static Whiteboard createInstance(AbstractFlashcardViewer cardViewer) {\n-\n-        SharedPreferences sharedPrefs = AnkiDroidApp.getSharedPrefs(cardViewer);\n-        Whiteboard whiteboard = new Whiteboard(cardViewer, isInNightMode(sharedPrefs));\n-\n-        FrameLayout.LayoutParams lp2 = new FrameLayout.LayoutParams(\n-                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n-\n-        whiteboard.setLayoutParams(lp2);\n-        FrameLayout fl = cardViewer.findViewById(R.id.whiteboard);\n-        fl.addView(whiteboard);\n-\n-        whiteboard.setEnabled(true);\n-\n-        return whiteboard;\n-    }\n-\n-    @Override\n-    protected void onDraw(Canvas canvas) {\n-        super.onDraw(canvas);\n-        canvas.drawColor(0);\n-        canvas.drawBitmap(mBitmap, 0, 0, mBitmapPaint);\n-        canvas.drawPath(mPath, mPaint);\n-    }\n-\n-\n-    /** Handle motion events to draw using the touch screen or to interact with the flashcard behind\n-     * the whiteboard by using a second finger.\n-     *\n-     * @param event The motion event.\n-     * @return True if the event was handled, false otherwise\n-     */\n-    public boolean handleTouchEvent(MotionEvent event) {\n-        return handleDrawEvent(event) || handleMultiTouchEvent(event);\n-    }\n-\n-\n-    /**\n-     * Handle motion events to draw using the touch screen. Only simple touch events are processed,\n-     * a multitouch event aborts to current stroke.\n-     *\n-     * @param event The motion event.\n-     * @return True if the event was handled, false otherwise or when drawing was aborted due to\n-     *              detection of a multitouch event.\n-     */\n-    private boolean handleDrawEvent(MotionEvent event) {\n-        float x = event.getX();\n-        float y = event.getY();\n-\n-        switch (event.getActionMasked()) {\n-            case MotionEvent.ACTION_DOWN:\n-                drawStart(x, y);\n-                invalidate();\n-                return true;\n-            case MotionEvent.ACTION_MOVE:\n-                if (mCurrentlyDrawing) {\n-                    for (int i = 0; i < event.getHistorySize(); i++) {\n-                        drawAlong(event.getHistoricalX(i), event.getHistoricalY(i));\n-                    }\n-                    drawAlong(x, y);\n-                    invalidate();\n-                    return true;\n-                }\n-                return false;\n-            case MotionEvent.ACTION_UP:\n-                if (mCurrentlyDrawing) {\n-                    drawFinish();\n-                    invalidate();\n-                    return true;\n-                }\n-                return false;\n-            case MotionEvent.ACTION_POINTER_DOWN:\n-                if (mCurrentlyDrawing) {\n-                    drawAbort();\n-                }\n-                return false;\n-            // not present in docs: https://developer.android.com/reference/android/view/MotionEvent\n-            case 211: // POINTER_DOWN with S-Pen-button\n-            case 213: // MOVE with S-Pen-button\n-                if (event.getButtonState() == MotionEvent.BUTTON_STYLUS_PRIMARY && !undoEmpty()) {\n-                    boolean didErase = mUndo.erase((int) event.getX(), (int) event.getY());\n-                    if (didErase) {\n-                        mUndo.apply();\n-                        if (undoEmpty() && mCardViewer.get() != null) {\n-                            mCardViewer.get().supportInvalidateOptionsMenu();\n-                        }\n-                    }\n-                }\n-                return true;\n-            default:\n-                return false;\n-        }\n-    }\n-\n-    // Parse multitouch input to scroll the card behind the whiteboard or click on elements\n-    private boolean handleMultiTouchEvent(MotionEvent event) {\n-        if (event.getPointerCount() == 2) {\n-            switch (event.getActionMasked()) {\n-                case MotionEvent.ACTION_POINTER_DOWN:\n-                    reinitializeSecondFinger(event);\n-                    return true;\n-                case MotionEvent.ACTION_MOVE:\n-                    return trySecondFingerScroll(event);\n-                case MotionEvent.ACTION_POINTER_UP:\n-                    return trySecondFingerClick(event);\n-                default:\n-                    return false;\n-            }\n-        }\n-        return false;\n-    }\n-\n-\n-    /**\n-     * Clear the whiteboard.\n-     */\n-    public void clear() {\n-        mUndoModeActive = false;\n-        mBitmap.eraseColor(0);\n-        mUndo.clear();\n-        invalidate();\n-        if (mCardViewer.get() != null) {\n-            mCardViewer.get().supportInvalidateOptionsMenu();\n-        }\n-    }\n-\n-\n-    /**\n-     * Undo the last stroke\n-     */\n-    public void undo() {\n-        mUndo.pop();\n-        mUndo.apply();\n-        if (undoEmpty() && mCardViewer.get() != null) {\n-            mCardViewer.get().supportInvalidateOptionsMenu();\n-        }\n-    }\n-\n-\n-    /** @return Whether there are strokes to undo */\n-    public boolean undoEmpty() {\n-        return mUndo.empty();\n-    }\n-\n-    /**\n-     * @return true if the undo queue has had any strokes added to it since the last clear\n-     */\n-    public boolean isUndoModeActive() {\n-        return mUndoModeActive;\n-    }\n-\n-    private void createBitmap(int w, int h) {\n-        mBitmap = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);\n-        mCanvas = new Canvas(mBitmap);\n-        clear();\n-    }\n-\n-\n-    private void createBitmap() {\n-        // To fix issue #1336, just make the whiteboard big and square.\n-        final Point p = getDisplayDimensions();\n-        int bitmapSize = Math.max(p.x, p.y);\n-        createBitmap(bitmapSize, bitmapSize);\n-    }\n-\n-    private void drawStart(float x, float y) {\n-        mCurrentlyDrawing = true;\n-        mPath.reset();\n-        mPath.moveTo(x, y);\n-        mX = x;\n-        mY = y;\n-    }\n-\n-\n-    private void drawAlong(float x, float y) {\n-        float dx = Math.abs(x - mX);\n-        float dy = Math.abs(y - mY);\n-        if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {\n-            mPath.quadTo(mX, mY, (x + mX) / 2, (y + mY) / 2);\n-            mX = x;\n-            mY = y;\n-        }\n-    }\n-\n-\n-    private void drawFinish() {\n-        mCurrentlyDrawing = false;\n-        PathMeasure pm = new PathMeasure(mPath, false);\n-        mPath.lineTo(mX, mY);\n-        Paint paint = new Paint(mPaint);\n-        WhiteboardAction action = pm.getLength() > 0 ? new DrawPath(new Path(mPath), paint) : new DrawPoint(mX, mY, paint);\n-        action.apply(mCanvas);\n-        mUndo.add(action);\n-        mUndoModeActive = true;\n-        // kill the path so we don't double draw\n-        mPath.reset();\n-        if (mUndo.size() == 1 && mCardViewer.get() != null) {\n-            mCardViewer.get().supportInvalidateOptionsMenu();\n-        }\n-    }\n-\n-\n-    private void drawAbort() {\n-        drawFinish();\n-        undo();\n-    }\n-\n-\n-    // call this with an ACTION_POINTER_DOWN event to start a new round of detecting drag or tap with\n-    // a second finger\n-    private void reinitializeSecondFinger(MotionEvent event) {\n-        mSecondFingerWithinTapTolerance = true;\n-        mSecondFingerPointerId = event.getPointerId(event.getActionIndex());\n-        mSecondFingerX0 = event.getX(event.findPointerIndex(mSecondFingerPointerId));\n-        mSecondFingerY0 = event.getY(event.findPointerIndex(mSecondFingerPointerId));\n-    }\n-\n-    private boolean updateSecondFinger(MotionEvent event) {\n-        int pointerIndex = event.findPointerIndex(mSecondFingerPointerId);\n-        if (pointerIndex > -1) {\n-            mSecondFingerX = event.getX(pointerIndex);\n-            mSecondFingerY = event.getY(pointerIndex);\n-            float dx = Math.abs(mSecondFingerX0 - mSecondFingerX);\n-            float dy = Math.abs(mSecondFingerY0 - mSecondFingerY);\n-            if (dx >= TOUCH_TOLERANCE || dy >= TOUCH_TOLERANCE) {\n-                mSecondFingerWithinTapTolerance = false;\n-            }\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    // call this with an ACTION_POINTER_UP event to check whether it matches a tap of the second finger\n-    // if so, forward a click action and return true\n-    private boolean trySecondFingerClick(MotionEvent event) {\n-        if (mSecondFingerPointerId == event.getPointerId(event.getActionIndex())) {\n-            updateSecondFinger(event);\n-            AbstractFlashcardViewer cardViewer = mCardViewer.get();\n-            if (mSecondFingerWithinTapTolerance && cardViewer != null) {\n-                cardViewer.tapOnCurrentCard((int) mSecondFingerX, (int) mSecondFingerY);\n-                return true;\n-            }\n-        }\n-        return false;\n-    }\n-\n-    // call this with an ACTION_MOVE event to check whether it is within the threshold for a tap of the second finger\n-    // in this case perform a scroll action\n-    private boolean trySecondFingerScroll(MotionEvent event) {\n-        if (updateSecondFinger(event) && !mSecondFingerWithinTapTolerance) {\n-            int dy = (int) (mSecondFingerY0 - mSecondFingerY);\n-            AbstractFlashcardViewer cardViewer = mCardViewer.get();\n-            if (dy != 0 && cardViewer != null) {\n-                cardViewer.scrollCurrentCardBy(dy);\n-                mSecondFingerX0 = mSecondFingerX;\n-                mSecondFingerY0 = mSecondFingerY;\n-            }\n-            return true;\n-        }\n-        return false;\n-    }\n-\n-    private static Point getDisplayDimensions() {\n-        return DisplayUtils.getDisplayDimensions(AnkiDroidApp.getInstance().getApplicationContext());\n-    }\n-\n-\n-    public void onClick(View view) {\n-\n-        int id = view.getId();\n-        if (id == R.id.pen_color_white) {\n-            setPenColor(Color.WHITE);\n-        } else if (id == R.id.pen_color_black) {\n-            setPenColor(Color.BLACK);\n-        } else if (id == R.id.pen_color_red) {\n-            int redPenColor = ContextCompat.getColor(getContext(), R.color.material_red_500);\n-            setPenColor(redPenColor);\n-        } else if (id == R.id.pen_color_green) {\n-            int greenPenColor = ContextCompat.getColor(getContext(), R.color.material_green_500);\n-            setPenColor(greenPenColor);\n-        } else if (id == R.id.pen_color_blue) {\n-            int bluePenColor = ContextCompat.getColor(getContext(), R.color.material_blue_500);\n-            setPenColor(bluePenColor);\n-        } else if (id == R.id.pen_color_yellow) {\n-            int yellowPenColor = ContextCompat.getColor(getContext(), R.color.material_yellow_500);\n-            setPenColor(yellowPenColor);\n-        } else if (id == R.id.stroke_width) {\n-            handleWidthChangeDialog();\n-        }\n-    }\n-\n-\n-    private void handleWidthChangeDialog() {\n-        WhiteBoardWidthDialog whiteBoardWidthDialog = new WhiteBoardWidthDialog(mCardViewer.get(), getCurrentStrokeWidth());\n-        whiteBoardWidthDialog.onStrokeWidthChanged(this::saveStrokeWidth);\n-        whiteBoardWidthDialog.showStrokeWidthDialog();\n-    }\n-\n-    private void saveStrokeWidth(int wbStrokeWidth) {\n-        mPaint.setStrokeWidth((float) wbStrokeWidth);\n-        SharedPreferences.Editor edit = AnkiDroidApp.getSharedPrefs(mCardViewer.get()).edit();\n-        edit.putInt(\"whiteBoardStrokeWidth\", wbStrokeWidth);\n-        edit.apply();\n-    }\n-\n-    public void setPenColor(int color) {\n-        Timber.d(\"Setting pen color to %d\", color);\n-        mPaint.setColor(color);\n-        mColorPalette.setVisibility(View.GONE);\n-        if (mOnPaintColorChangeListener != null) {\n-            mOnPaintColorChangeListener.onPaintColorChange(color);\n-        }\n-    }\n-\n-    @VisibleForTesting\n-    public int getPenColor() {\n-        return mPaint.getColor();\n-    }\n-\n-\n-    public void setOnPaintColorChangeListener(@Nullable OnPaintColorChangeListener mOnPaintColorChangeListener) {\n-        this.mOnPaintColorChangeListener = mOnPaintColorChangeListener;\n-    }\n-\n-\n-    /**\n-     * Keep a list of all points and paths so that the last stroke can be undone\n-     * pop() removes the last stroke from the list, and apply() redraws it to whiteboard.\n-     */\n-    private class UndoList {\n-        private final List<WhiteboardAction> mList = new ArrayList<>();\n-\n-        public void add(WhiteboardAction action) {\n-            mList.add(action);\n-        }\n-\n-        public void clear() {\n-            mList.clear();\n-        }\n-\n-        public int size() {\n-            return mList.size();\n-        }\n-\n-        public void pop() {\n-            mList.remove(mList.size() - 1);\n-        }\n-\n-        public void apply() {\n-            mBitmap.eraseColor(0);\n-\n-            for (WhiteboardAction action : mList) {\n-                action.apply(mCanvas);\n-            }\n-            invalidate();\n-        }\n-\n-        public boolean erase(int x, int y) {\n-            boolean didErase = false;\n-            Region clip = new Region(0, 0, getDisplayDimensions().x, getDisplayDimensions().y);\n-            Path eraserPath = new Path();\n-            eraserPath.addRect(x - 10, y - 10, x + 10, y + 10, Path.Direction.CW);\n-            Region eraserRegion = new Region();\n-            eraserRegion.setPath(eraserPath, clip);\n-\n-            // used inside the loop \u2013 created here to make things a little more efficient\n-            RectF bounds = new RectF();\n-            Region lineRegion = new Region();\n-\n-            // we delete elements while iterating, so we need to use an iterator in order to avoid java.util.ConcurrentModificationException\n-            for (Iterator<WhiteboardAction> iterator = mList.iterator(); iterator.hasNext(); ) {\n-                WhiteboardAction action = iterator.next();\n-\n-                Path mPath = action.getPath();\n-                if (mPath != null) { // \u2192 line\n-                    boolean lineRegionSuccess = lineRegion.setPath(mPath, clip);\n-                    if (!lineRegionSuccess) {\n-                        // Small lines can be perfectly vertical/horizontal,\n-                        // thus giving us an empty region, which would make them undeletable.\n-                        // For this edge case, we create a Region ourselves.\n-                        mPath.computeBounds(bounds, true);\n-                        lineRegion = new Region(new Rect((int) bounds.left, (int) bounds.top, (int) bounds.right + 1, (int) bounds.bottom + 1));\n-                    }\n-                } else { // \u2192 point\n-                    Point p = action.getPoint();\n-                    lineRegion = new Region(p.x, p.y, p.x + 1, p.y + 1);\n-                }\n-\n-                if (!lineRegion.quickReject(eraserRegion) && lineRegion.op(eraserRegion, Region.Op.INTERSECT)) {\n-                    iterator.remove();\n-                    didErase = true;\n-                }\n-            }\n-            return didErase;\n-        }\n-\n-        public boolean empty() {\n-            return mList.size() == 0;\n-        }\n-    }\n-\n-    private interface WhiteboardAction {\n-        void apply(@NonNull Canvas canvas);\n-\n-        Path getPath();\n-\n-        Point getPoint();\n-    }\n-\n-    private static class DrawPoint implements WhiteboardAction {\n-\n-        private final float mX;\n-        private final float mY;\n-        private final Paint mPaint;\n-\n-\n-        public DrawPoint(float x, float y, Paint paint) {\n-            mX = x;\n-            mY = y;\n-            mPaint = paint;\n-        }\n-\n-\n-        @Override\n-        public void apply(@NonNull Canvas canvas) {\n-            canvas.drawPoint(mX, mY, mPaint);\n-        }\n-\n-        @Override\n-        public Path getPath() {\n-            return null;\n-        }\n-\n-\n-        public Point getPoint() {\n-            return new Point((int) mX, (int) mY);\n-        }\n-    }\n-\n-    private static class DrawPath implements WhiteboardAction {\n-        private final Path mPath;\n-        private final Paint mPaint;\n-\n-        public DrawPath(Path path, Paint paint) {\n-            mPath = path;\n-            mPaint = paint;\n-        }\n-\n-\n-        @Override\n-        public void apply(@NonNull Canvas canvas) {\n-            canvas.drawPath(mPath, mPaint);\n-        }\n-\n-        @Override\n-        public Path getPath() {\n-            return mPath;\n-        }\n-\n-        @Override\n-        public Point getPoint() {\n-            return null;\n-        }\n-    }\n-\n-    public boolean isCurrentlyDrawing() {\n-        return mCurrentlyDrawing;\n-    }\n-\n-    protected Uri saveWhiteboard(Time time) throws FileNotFoundException {\n-        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n-        Canvas canvas = new Canvas(bitmap);\n-        if (mForegroundColor != Color.BLACK) {\n-            canvas.drawColor(Color.BLACK);\n-        } else {\n-            canvas.drawColor(Color.WHITE);\n-        }\n-        this.draw(canvas);\n-        String baseFileName = \"Whiteboard\" + TimeUtils.getTimestamp(time);\n-        // TODO: Fix inconsistent CompressFormat 'JPEG' and file extension 'png'\n-        return CompatHelper.getCompat().saveImage(getContext(), bitmap, baseFileName, \"png\", Bitmap.CompressFormat.JPEG, 95);\n-    }\n-\n-    @VisibleForTesting\n-    @CheckResult\n-    protected int getForegroundColor() {\n-        return mForegroundColor;\n-    }\n-\n-    public interface OnPaintColorChangeListener {\n-        void onPaintColorChange(@Nullable Integer color);\n-    }\n-}\n", "next_change": null}]}}]}}]}}]}}]}, "commits_in_main": [{"oid": "b988f5ab6f28c73c4b77b227914ce199f1c0929c", "message": "Merge commit", "committedDate": null}, {"oid": "2a1b50a210789e9a20064de3cb5ece59ca0be456", "committedDate": "2020-08-23 16:11:57 -0500", "message": "NF: Use col's time instead of `new SystemTime`"}, {"oid": "3e8148c2deb5cea4afb1e7de2b7523d8f6244a91", "committedDate": "2020-08-30 18:24:56 -0500", "message": "Supress lint for Whiteboard View"}, {"oid": "bd2fb549a2e827068ae3d3bd03623d4a549fe16d", "committedDate": "2020-09-21 09:32:28 -0500", "message": "NF: remove useless mInvertedColors"}, {"oid": "bf209dc67aa56c94d84a173d10aa415fb4470aaf", "committedDate": "2020-09-21 09:32:28 -0500", "message": "NF: remove useless member mMonochrome"}, {"oid": "1f785c1b8c324266fdf652e84c9d9309d7278392", "committedDate": "2020-09-23 11:08:06 -0500", "message": "NF: Remove warning about parameter that could be final"}, {"oid": "4935ac517deb2d784bba0a9f7793fd2e65f99712", "committedDate": "2020-09-23 11:19:42 -0500", "message": "NF: Sort imports"}, {"oid": "42b92180120040299e590634f5b03d6f352c0a4f", "committedDate": "2020-09-24 11:41:08 -0500", "message": "NF: remove useless casts"}, {"oid": "69dba64459dc466daad2d81012c55b9d66b721bb", "committedDate": "2020-10-02 11:17:10 -0500", "message": "API 29 Dependency Updates (#7332)"}, {"oid": "ada67bc3d304193eab15d42badaafe9863d340cf", "committedDate": "2020-10-14 06:06:10 -0500", "message": "Adjust resoure reference usage to handle future non-final state"}, {"oid": "2ca67492ab0086e02e9fecc9085102399e6cfdec", "committedDate": "2020-12-08 09:34:56 -0500", "message": "TEST: Add tests for getForegroundColor"}, {"oid": "24a01ecfe55797fdb2011f49fb2c903b1528f075", "committedDate": "2020-12-08 09:34:56 -0500", "message": "LINT: Fix Whiteboard Lint Errors"}, {"oid": "9597e35418e8923a12cfe5915dad2f71fa4d5aa5", "committedDate": "2020-12-08 09:34:56 -0500", "message": "NF: Extract setPenColor"}, {"oid": "27f10d57c86fe2e8ad3e66c969b48b92b5e594f1", "committedDate": "2020-12-08 09:34:56 -0500", "message": "Persist Whiteboard Pen Color"}, {"oid": "8311d47fc2d4886fc62efef882fb2264e63fa4a5", "committedDate": "2020-12-12 17:14:13 -0500", "message": "Remove legacy Whiteboard settings (#7858)"}, {"oid": "591407338b226ecadd93f33446a807514d228d0f", "committedDate": "2021-03-03 15:52:33 -0500", "message": "Add support for S Pen erase to whiteboard (#8138)"}, {"oid": "164200255997ac4750493118c24cec649191b630", "committedDate": "2021-04-10 07:53:08 -0500", "message": "m prefix non-public, non-static fields #8387 (#8532)"}, {"oid": "425701eb65d8f58267c2d289998fe33b5eeda3ba", "committedDate": "2021-05-01 16:33:55 -0500", "message": "WhiteBoard : Improve UX - color, width, (#8715)"}, {"oid": "b6ccfd9aae9721a40f121a06979bfc80ec1c49cc", "committedDate": "2021-07-29 20:39:05 -0500", "message": "nf: extract DisplayUtils.getDisplayDimensions"}, {"oid": "9bdf38906bd7954fd443bf92de4199f42a00c1d6", "committedDate": "2021-08-08 13:20:25 -0500", "message": "Use MediaStore to save whiteboard for API > 28"}, {"oid": "a607e46055ad967d587fb26b0c9a824759dfe3c4", "committedDate": "2021-08-18 16:12:27 -0500", "message": "Compat saveImage: return Uri instead path"}, {"oid": "8d7a6813c88276d2c4d8d97d14e43996ebdf65fe", "committedDate": "2021-08-25 08:52:08 -0500", "message": "Extracted createInstance in a method of whiteboard"}, {"oid": "840dbe4dca484b8ef7baa5d5d4800f519f2c07f9", "committedDate": "2021-08-25 08:52:08 -0500", "message": "Changed WeakReference to AnkiActivity in whiteboard to let other activities use whiteboard view"}, {"oid": "250097f54e0bf28371770275b613bc0e5e5b3248", "committedDate": "2021-08-27 08:15:20 -0500", "message": "nf: Avoid use of field prefixes for variable names"}, {"oid": "e546c9ac7bfc2d33afee48da4e3e77666a438149", "committedDate": "2021-08-27 08:19:38 -0500", "message": "nf: Use isEmpty in place of checking size to be zero when possible"}, {"oid": "3d141fd0a98d879640a4e3c4e60879040977e6c0", "committedDate": "2021-10-09 16:59:56 -0500", "message": "Rename Whiteboard.java to .kt"}]}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445399065", "body": "You'll need to update the UndoStack class to allow for colours.\r\n\r\nLikely moving it to a class-based model at this stage, so you'd have one undo stack rather than 3 (potentially 4 with adding in the colour).", "bodyText": "You'll need to update the UndoStack class to allow for colours.\nLikely moving it to a class-based model at this stage, so you'd have one undo stack rather than 3 (potentially 4 with adding in the colour).", "bodyHTML": "<p dir=\"auto\">You'll need to update the UndoStack class to allow for colours.</p>\n<p dir=\"auto\">Likely moving it to a class-based model at this stage, so you'd have one undo stack rather than 3 (potentially 4 with adding in the colour).</p>", "author": "david-allison-1", "createdAt": "2020-06-25T08:38:36Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -356,6 +377,44 @@ private static Point getDisplayDimenions() {\n         return point;\n     }\n \n+    @Override\n+    public void onClick(View view) {\n+\n+        int redPenColor = Color.parseColor(\"#f44336\");\n+        int greenPenColor = Color.parseColor(\"#4caf50\");\n+        int bluePenColor = Color.parseColor(\"#2196f3\");\n+        int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n+\n+        switch (view.getId()) {\n+            case R.id.pen_color_white:\n+                mPaint.setColor(Color.WHITE);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_black:\n+                mPaint.setColor(Color.BLACK);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_red:\n+                mPaint.setColor(redPenColor);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_green:\n+                mPaint.setColor(greenPenColor);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_blue:\n+                mPaint.setColor(bluePenColor);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_yellow:\n+                mPaint.setColor(yellowPenColor);\n+                colorPalette.setVisibility(View.GONE);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n     /**\n      * Keep a stack of all points and paths so that the last stroke can be undone\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.", "originalCommit": "77d6abfbb12a4898098d59bb06670aa9aaec63f6", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5Mzg2Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445493862", "bodyText": "Please explain it more.", "author": "infinyte7", "createdAt": "2020-06-25T11:37:25Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYwMzM4Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445603382", "bodyText": "Currently, UndoStack uses 3 stacks to handle undo/redo.\nWhen an undo is performed, two stacks are popped, the canvas is reset, and the stacks are iterated to redraw the canvas.\nTo add colour to this feature, you'll need to add more data to these stacks. This can either be done by using a Pair class (or making a new object), or adding a new stack containing the Paint which was used at the time to draw the lines.\nBoth of the above options aren't great and add complexity.\n\nIt'd be much better to simplify the class to have one stack, and having the object in the stack being an interface which has an `apply(Canvas)`` operation.\nImplement the interface/object with two subclasses: Point and Line\nOnce this is done, you can supply a Paint object to the classes and use it in apply(Canvas) so they can handle different colours.\nThis has the added benefit of simplifying the UndoStack class", "author": "david-allison-1", "createdAt": "2020-06-25T14:31:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYzNjkzNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445636934", "bodyText": "I understand it. But implementing this is difficult for me.", "author": "infinyte7", "createdAt": "2020-06-25T15:16:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY2Njg1Ng==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445666856", "bodyText": "I'll send over some code... give me 5 mins\nEDIT: Just testing... can't be sending over broken code ;)", "author": "david-allison-1", "createdAt": "2020-06-25T16:00:00Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4MTUzNA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445681534", "bodyText": "GitHub's file processing seems broken. Copy to a text file, rename to .patch and apply it (VCS - Apply Patch)\nwhiteboard.patch\nIndex: AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nIDEA additional info:\nSubsystem: com.intellij.openapi.diff.impl.patch.CharsetEP\n<+>UTF-8\n===================================================================\n--- AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\t(revision 8236599b1db98f774a45c4f84de308e16affd0c3)\n+++ AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\t(date 1593101965792)\n@@ -26,7 +26,7 @@\n import android.graphics.Path;\n import android.graphics.PathMeasure;\n import android.graphics.Point;\n-import android.graphics.PointF;\n+import androidx.annotation.NonNull;\n import androidx.core.content.ContextCompat;\n import android.view.Display;\n import android.view.MotionEvent;\n@@ -272,13 +272,10 @@\n         mCurrentlyDrawing = false;\n         PathMeasure pm = new PathMeasure(mPath, false);\n         mPath.lineTo(mX, mY);\n-        if (pm.getLength() > 0) {\n-            mCanvas.drawPath(mPath, mPaint);\n-            mUndo.add(mPath);\n-        } else {\n-            mCanvas.drawPoint(mX, mY, mPaint);\n-            mUndo.add(mX, mY);\n-        }\n+        Paint paint = new Paint(mPaint);\n+        WhiteboardAction action = pm.getLength() > 0 ? new DrawPath(new Path(mPath), paint) : new DrawPoint(mX, mY, paint);\n+        action.apply(mCanvas);\n+        mUndo.add(action);\n         mUndoModeActive = true;\n         // kill the path so we don't double draw\n         mPath.reset();\n@@ -361,55 +358,75 @@\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n      */\n     private class UndoStack {\n-        private final Stack<Path> mPathStack = new Stack<>();\n-        private final Stack<PointF> mPointStack = new Stack<>();\n-        private final Stack<Integer> mWhichStack = new Stack<>();\n+        private final Stack<WhiteboardAction> mStack = new Stack<>();\n \n-        public void add(Path path) {\n-            mPathStack.add(new Path(path));\n-            mWhichStack.add(0);\n-        }\n-        public void add(float x, float y) {\n-            mPointStack.add(new PointF(x, y));\n-            mWhichStack.add(1);\n+        public void add(WhiteboardAction action) {\n+            mStack.add(action);\n         }\n \n         public void clear() {\n-            mPathStack.clear();\n-            mPointStack.clear();\n-            mWhichStack.clear();\n+            mStack.clear();\n         }\n \n         public int size() {\n-            return mWhichStack.size();\n+            return mStack.size();\n         }\n \n         public void pop() {\n-            if (mWhichStack.size() == 0) return;\n-            switch (mWhichStack.peek()) {\n-                case 0:\n-                    mPathStack.pop();\n-                    break;\n-                case 1:\n-                    mPointStack.pop();\n-                    break;\n-            }\n-            mWhichStack.pop();\n+            mStack.pop();\n         }\n \n         public void apply() {\n             mBitmap.eraseColor(0);\n-            for (Path path : mPathStack) {\n-                mCanvas.drawPath(path, mPaint);\n-            }\n-            for (PointF point : mPointStack) {\n-                mCanvas.drawPoint(point.x, point.y, mPaint);\n+\n+            for (WhiteboardAction action : mStack) {\n+                action.apply(mCanvas);\n             }\n             invalidate();\n         }\n \n         public boolean empty() {\n-            return mWhichStack.empty();\n+            return mStack.empty();\n+        }\n+    }\n+\n+    private interface WhiteboardAction {\n+        void apply(@NonNull Canvas canvas);\n+    }\n+\n+    private static class DrawPoint implements WhiteboardAction {\n+\n+        private final float mX;\n+        private final float mY;\n+        private final Paint mPaint;\n+\n+\n+        public DrawPoint(float x, float y, Paint paint) {\n+            mX = x;\n+            mY = y;\n+            mPaint = paint;\n+        }\n+\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPoint(mX, mY, mPaint);\n+        }\n+    }\n+\n+    private static class DrawPath implements WhiteboardAction {\n+        private final Path mPath;\n+        private final Paint mPaint;\n+\n+        public DrawPath(Path path, Paint paint) {\n+            mPath = path;\n+            mPaint = paint;\n+        }\n+\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPath(mPath, mPaint);\n         }\n     }", "author": "david-allison-1", "createdAt": "2020-06-25T16:22:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzI1Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445693252", "bodyText": "Thank you,\nI have added the patch.\nIt is working as expected.", "author": "infinyte7", "createdAt": "2020-06-25T16:40:29Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM5OTA2NQ=="}], "type": "inlineReview", "revised_code": {"commit": "7f2dcf75fe1f523cb2333b364f84ac2e6fd335e7", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e1b2054af3..e3c8a1e12d 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -420,55 +416,75 @@ public class Whiteboard extends View implements View.OnClickListener {\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n      */\n     private class UndoStack {\n-        private final Stack<Path> mPathStack = new Stack<>();\n-        private final Stack<PointF> mPointStack = new Stack<>();\n-        private final Stack<Integer> mWhichStack = new Stack<>();\n+        private final Stack<WhiteboardAction> mStack = new Stack<>();\n \n-        public void add(Path path) {\n-            mPathStack.add(new Path(path));\n-            mWhichStack.add(0);\n-        }\n-        public void add(float x, float y) {\n-            mPointStack.add(new PointF(x, y));\n-            mWhichStack.add(1);\n+        public void add(WhiteboardAction action) {\n+            mStack.add(action);\n         }\n \n         public void clear() {\n-            mPathStack.clear();\n-            mPointStack.clear();\n-            mWhichStack.clear();\n+            mStack.clear();\n         }\n \n         public int size() {\n-            return mWhichStack.size();\n+            return mStack.size();\n         }\n \n         public void pop() {\n-            if (mWhichStack.size() == 0) return;\n-            switch (mWhichStack.peek()) {\n-                case 0:\n-                    mPathStack.pop();\n-                    break;\n-                case 1:\n-                    mPointStack.pop();\n-                    break;\n-            }\n-            mWhichStack.pop();\n+            mStack.pop();\n         }\n \n         public void apply() {\n             mBitmap.eraseColor(0);\n-            for (Path path : mPathStack) {\n-                mCanvas.drawPath(path, mPaint);\n-            }\n-            for (PointF point : mPointStack) {\n-                mCanvas.drawPoint(point.x, point.y, mPaint);\n+\n+            for (WhiteboardAction action : mStack) {\n+                action.apply(mCanvas);\n             }\n             invalidate();\n         }\n \n         public boolean empty() {\n-            return mWhichStack.empty();\n+            return mStack.empty();\n+        }\n+    }\n+\n+    private interface WhiteboardAction {\n+        void apply(@NonNull Canvas canvas);\n+    }\n+\n+    private static class DrawPoint implements WhiteboardAction {\n+\n+        private final float mX;\n+        private final float mY;\n+        private final Paint mPaint;\n+\n+\n+        public DrawPoint(float x, float y, Paint paint) {\n+            mX = x;\n+            mY = y;\n+            mPaint = paint;\n+        }\n+\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPoint(mX, mY, mPaint);\n+        }\n+    }\n+\n+    private static class DrawPath implements WhiteboardAction {\n+        private final Path mPath;\n+        private final Paint mPaint;\n+\n+        public DrawPath(Path path, Paint paint) {\n+            mPath = path;\n+            mPaint = paint;\n+        }\n+\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPath(mPath, mPaint);\n         }\n     }\n \n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e3c8a1e12d..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -374,121 +365,93 @@ public class Whiteboard extends View implements View.OnClickListener {\n         return point;\n     }\n \n-    @Override\n-    public void onClick(View view) {\n-\n-        switch (view.getId()) {\n-            case R.id.pen_color_white:\n-                mPaint.setColor(Color.WHITE);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_black:\n-                mPaint.setColor(Color.BLACK);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_red:\n-                int redPenColor = Color.parseColor(\"#f44336\");\n-                mPaint.setColor(redPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_green:\n-                int greenPenColor = Color.parseColor(\"#4caf50\");\n-                mPaint.setColor(greenPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_blue:\n-                int bluePenColor = Color.parseColor(\"#2196f3\");\n-                mPaint.setColor(bluePenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            case R.id.pen_color_yellow:\n-                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n-                mPaint.setColor(yellowPenColor);\n-                mColorPalette.setVisibility(View.GONE);\n-                break;\n-            default:\n-                break;\n-        }\n-    }\n-\n     /**\n      * Keep a stack of all points and paths so that the last stroke can be undone\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n      */\n     private class UndoStack {\n-        private final Stack<WhiteboardAction> mStack = new Stack<>();\n+        private final Stack<Path> mPathStack = new Stack<>();\n+        private final Stack<PointF> mPointStack = new Stack<>();\n+        private final Stack<Integer> mWhichStack = new Stack<>();\n \n-        public void add(WhiteboardAction action) {\n-            mStack.add(action);\n+        public void add(Path path) {\n+            mPathStack.add(new Path(path));\n+            mWhichStack.add(0);\n+        }\n+        public void add(float x, float y) {\n+            mPointStack.add(new PointF(x, y));\n+            mWhichStack.add(1);\n         }\n \n         public void clear() {\n-            mStack.clear();\n+            mPathStack.clear();\n+            mPointStack.clear();\n+            mWhichStack.clear();\n         }\n \n         public int size() {\n-            return mStack.size();\n+            return mWhichStack.size();\n         }\n \n         public void pop() {\n-            mStack.pop();\n+            if (mWhichStack.size() == 0) return;\n+            switch (mWhichStack.peek()) {\n+                case 0:\n+                    mPathStack.pop();\n+                    break;\n+                case 1:\n+                    mPointStack.pop();\n+                    break;\n+            }\n+            mWhichStack.pop();\n         }\n \n         public void apply() {\n             mBitmap.eraseColor(0);\n-\n-            for (WhiteboardAction action : mStack) {\n-                action.apply(mCanvas);\n+            for (Path path : mPathStack) {\n+                mCanvas.drawPath(path, mPaint);\n+            }\n+            for (PointF point : mPointStack) {\n+                mCanvas.drawPoint(point.x, point.y, mPaint);\n             }\n             invalidate();\n         }\n \n         public boolean empty() {\n-            return mStack.empty();\n+            return mWhichStack.empty();\n         }\n     }\n \n-    private interface WhiteboardAction {\n-        void apply(@NonNull Canvas canvas);\n+    public boolean isCurrentlyDrawing() {\n+        return mCurrentlyDrawing;\n     }\n \n-    private static class DrawPoint implements WhiteboardAction {\n+    protected String saveWhiteboard() throws FileNotFoundException {\n \n-        private final float mX;\n-        private final float mY;\n-        private final Paint mPaint;\n+        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n+        Canvas canvas = new Canvas(bitmap);\n \n+        File pictures = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n+        File ankiDroidFolder = new File(pictures, \"AnkiDroid\");\n \n-        public DrawPoint(float x, float y, Paint paint) {\n-            mX = x;\n-            mY = y;\n-            mPaint = paint;\n+        if (!ankiDroidFolder.exists()) {\n+            ankiDroidFolder.mkdirs();\n         }\n \n+        String baseFileName = \"Whiteboard\";\n+        String timeStamp = TimeUtils.getTimestamp(mTime);\n+        String finalFileName = baseFileName + timeStamp + \".png\";\n \n-        @Override\n-        public void apply(@NonNull Canvas canvas) {\n-            canvas.drawPoint(mX, mY, mPaint);\n-        }\n-    }\n-\n-    private static class DrawPath implements WhiteboardAction {\n-        private final Path mPath;\n-        private final Paint mPaint;\n+        File saveWhiteboardImagFile = new File(ankiDroidFolder, finalFileName);\n \n-        public DrawPath(Path path, Paint paint) {\n-            mPath = path;\n-            mPaint = paint;\n+        if (foregroundColor != Color.BLACK) {\n+            canvas.drawColor(Color.BLACK);\n+        } else {\n+            canvas.drawColor(Color.WHITE);\n         }\n \n-\n-        @Override\n-        public void apply(@NonNull Canvas canvas) {\n-            canvas.drawPath(mPath, mPaint);\n-        }\n-    }\n-\n-    public boolean isCurrentlyDrawing() {\n-        return mCurrentlyDrawing;\n+        this.draw(canvas);\n+        bitmap.compress(Bitmap.CompressFormat.JPEG, 95, new FileOutputStream(saveWhiteboardImagFile));\n+        return saveWhiteboardImagFile.getAbsolutePath();\n     }\n }\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -365,93 +368,121 @@ public class Whiteboard extends View {\n         return point;\n     }\n \n+\n+    public void onClick(View view) {\n+\n+        switch (view.getId()) {\n+            case R.id.pen_color_white:\n+                mPaint.setColor(Color.WHITE);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_black:\n+                mPaint.setColor(Color.BLACK);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_red:\n+                int redPenColor = Color.parseColor(\"#f44336\");\n+                mPaint.setColor(redPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_green:\n+                int greenPenColor = Color.parseColor(\"#4caf50\");\n+                mPaint.setColor(greenPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_blue:\n+                int bluePenColor = Color.parseColor(\"#2196f3\");\n+                mPaint.setColor(bluePenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_yellow:\n+                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n+                mPaint.setColor(yellowPenColor);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            default:\n+                break;\n+        }\n+    }\n+\n     /**\n      * Keep a stack of all points and paths so that the last stroke can be undone\n      * pop() removes the last stroke from the stack, and apply() redraws it to whiteboard.\n      */\n     private class UndoStack {\n-        private final Stack<Path> mPathStack = new Stack<>();\n-        private final Stack<PointF> mPointStack = new Stack<>();\n-        private final Stack<Integer> mWhichStack = new Stack<>();\n+        private final Stack<WhiteboardAction> mStack = new Stack<>();\n \n-        public void add(Path path) {\n-            mPathStack.add(new Path(path));\n-            mWhichStack.add(0);\n-        }\n-        public void add(float x, float y) {\n-            mPointStack.add(new PointF(x, y));\n-            mWhichStack.add(1);\n+        public void add(WhiteboardAction action) {\n+            mStack.add(action);\n         }\n \n         public void clear() {\n-            mPathStack.clear();\n-            mPointStack.clear();\n-            mWhichStack.clear();\n+            mStack.clear();\n         }\n \n         public int size() {\n-            return mWhichStack.size();\n+            return mStack.size();\n         }\n \n         public void pop() {\n-            if (mWhichStack.size() == 0) return;\n-            switch (mWhichStack.peek()) {\n-                case 0:\n-                    mPathStack.pop();\n-                    break;\n-                case 1:\n-                    mPointStack.pop();\n-                    break;\n-            }\n-            mWhichStack.pop();\n+            mStack.pop();\n         }\n \n         public void apply() {\n             mBitmap.eraseColor(0);\n-            for (Path path : mPathStack) {\n-                mCanvas.drawPath(path, mPaint);\n-            }\n-            for (PointF point : mPointStack) {\n-                mCanvas.drawPoint(point.x, point.y, mPaint);\n+\n+            for (WhiteboardAction action : mStack) {\n+                action.apply(mCanvas);\n             }\n             invalidate();\n         }\n \n         public boolean empty() {\n-            return mWhichStack.empty();\n+            return mStack.empty();\n         }\n     }\n \n-    public boolean isCurrentlyDrawing() {\n-        return mCurrentlyDrawing;\n+    private interface WhiteboardAction {\n+        void apply(@NonNull Canvas canvas);\n     }\n \n-    protected String saveWhiteboard() throws FileNotFoundException {\n+    private static class DrawPoint implements WhiteboardAction {\n \n-        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n-        Canvas canvas = new Canvas(bitmap);\n+        private final float mX;\n+        private final float mY;\n+        private final Paint mPaint;\n+\n+\n+        public DrawPoint(float x, float y, Paint paint) {\n+            mX = x;\n+            mY = y;\n+            mPaint = paint;\n+        }\n \n-        File pictures = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n-        File ankiDroidFolder = new File(pictures, \"AnkiDroid\");\n \n-        if (!ankiDroidFolder.exists()) {\n-            ankiDroidFolder.mkdirs();\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPoint(mX, mY, mPaint);\n         }\n+    }\n \n-        String baseFileName = \"Whiteboard\";\n-        String timeStamp = TimeUtils.getTimestamp(mTime);\n-        String finalFileName = baseFileName + timeStamp + \".png\";\n+    private static class DrawPath implements WhiteboardAction {\n+        private final Path mPath;\n+        private final Paint mPaint;\n \n-        File saveWhiteboardImagFile = new File(ankiDroidFolder, finalFileName);\n+        public DrawPath(Path path, Paint paint) {\n+            mPath = path;\n+            mPaint = paint;\n+        }\n \n-        if (foregroundColor != Color.BLACK) {\n-            canvas.drawColor(Color.BLACK);\n-        } else {\n-            canvas.drawColor(Color.WHITE);\n+\n+        @Override\n+        public void apply(@NonNull Canvas canvas) {\n+            canvas.drawPath(mPath, mPaint);\n         }\n+    }\n \n-        this.draw(canvas);\n-        bitmap.compress(Bitmap.CompressFormat.JPEG, 95, new FileOutputStream(saveWhiteboardImagFile));\n-        return saveWhiteboardImagFile.getAbsolutePath();\n+    public boolean isCurrentlyDrawing() {\n+        return mCurrentlyDrawing;\n     }\n }\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -485,4 +488,33 @@ public class Whiteboard extends View {\n     public boolean isCurrentlyDrawing() {\n         return mCurrentlyDrawing;\n     }\n+\n+    protected String saveWhiteboard() throws FileNotFoundException {\n+\n+        Bitmap bitmap = Bitmap.createBitmap(this.getWidth(), this.getHeight(), Bitmap.Config.ARGB_8888);\n+        Canvas canvas = new Canvas(bitmap);\n+\n+        File pictures = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES);\n+        File ankiDroidFolder = new File(pictures, \"AnkiDroid\");\n+\n+        if (!ankiDroidFolder.exists()) {\n+            ankiDroidFolder.mkdirs();\n+        }\n+\n+        String baseFileName = \"Whiteboard\";\n+        String timeStamp = TimeUtils.getTimestamp(mTime);\n+        String finalFileName = baseFileName + timeStamp + \".png\";\n+\n+        File saveWhiteboardImagFile = new File(ankiDroidFolder, finalFileName);\n+\n+        if (foregroundColor != Color.BLACK) {\n+            canvas.drawColor(Color.BLACK);\n+        } else {\n+            canvas.drawColor(Color.WHITE);\n+        }\n+\n+        this.draw(canvas);\n+        bitmap.compress(Bitmap.CompressFormat.JPEG, 95, new FileOutputStream(saveWhiteboardImagFile));\n+        return saveWhiteboardImagFile.getAbsolutePath();\n+    }\n }\n", "next_change": null}]}}]}}]}}]}}, {"oid": "cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "url": "https://github.com/ankidroid/Anki-Android/commit/cd46f7c4ca8eb6a2380b7f4b7f2ba73164f10e3f", "message": "\tUpdated Reviewer.java, Whiteboard.java", "committedDate": "2020-06-25T11:36:08Z", "type": "commit"}, {"oid": "526c0db92ac8c7010007a7649e4da14ecc2f7362", "url": "https://github.com/ankidroid/Anki-Android/commit/526c0db92ac8c7010007a7649e4da14ecc2f7362", "message": "    Added vector icon for select pen color icon", "committedDate": "2020-06-25T16:08:47Z", "type": "commit"}, {"oid": "7f2dcf75fe1f523cb2333b364f84ac2e6fd335e7", "url": "https://github.com/ankidroid/Anki-Android/commit/7f2dcf75fe1f523cb2333b364f84ac2e6fd335e7", "message": "    Added patch to Whiteboard.java", "committedDate": "2020-06-25T16:41:26Z", "type": "commit"}, {"oid": "ddf40a5eb5fcaef10fe07f9a7cd638bf54f59243", "url": "https://github.com/ankidroid/Anki-Android/commit/ddf40a5eb5fcaef10fe07f9a7cd638bf54f59243", "message": "\tAdded button to ActionButtonStatus.java", "committedDate": "2020-06-25T16:57:51Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTcwNTIxMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445705213", "body": "There's also some logic in Reviewer about enabling whitebaord buttons status depending on whether the whiteboard is available or not.", "bodyText": "There's also some logic in Reviewer about enabling whitebaord buttons status depending on whether the whiteboard is available or not.", "bodyHTML": "<p dir=\"auto\">There's also some logic in Reviewer about enabling whitebaord buttons status depending on whether the whiteboard is available or not.</p>", "author": "david-allison-1", "createdAt": "2020-06-25T16:59:48Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java", "diffHunk": "@@ -61,6 +61,7 @@ public void setup(SharedPreferences preferences) {\n         setupButton(preferences, R.id.action_mark_card, \"customButtonMarkCard\", SHOW_AS_ACTION_IF_ROOM);\n         setupButton(preferences, R.id.action_delete, \"customButtonDelete\", SHOW_AS_ACTION_NEVER);\n         setupButton(preferences, R.id.action_toggle_mic_tool_bar, \"customButtonToggleMicToolBar\", SHOW_AS_ACTION_NEVER);\n+        setupButton(preferences, R.id.action_change_whiteboard_pen_color, \"customButtonWhiteboardPenColor\", SHOW_AS_ACTION_ALWAYS);", "originalCommit": "ddf40a5eb5fcaef10fe07f9a7cd638bf54f59243", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\nindex 23dc107478..723fc45df3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n", "chunk": "@@ -61,7 +61,7 @@ public class ActionButtonStatus {\n         setupButton(preferences, R.id.action_mark_card, \"customButtonMarkCard\", SHOW_AS_ACTION_IF_ROOM);\n         setupButton(preferences, R.id.action_delete, \"customButtonDelete\", SHOW_AS_ACTION_NEVER);\n         setupButton(preferences, R.id.action_toggle_mic_tool_bar, \"customButtonToggleMicToolBar\", SHOW_AS_ACTION_NEVER);\n-        setupButton(preferences, R.id.action_change_whiteboard_pen_color, \"customButtonWhiteboardPenColor\", SHOW_AS_ACTION_ALWAYS);\n+        setupButton(preferences, R.id.action_save_whiteboard, \"customButtonSaveWhiteboard\", SHOW_AS_ACTION_NEVER);\n     }\n \n \n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\nindex 723fc45df3..23dc107478 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n", "chunk": "@@ -61,7 +61,7 @@ public class ActionButtonStatus {\n         setupButton(preferences, R.id.action_mark_card, \"customButtonMarkCard\", SHOW_AS_ACTION_IF_ROOM);\n         setupButton(preferences, R.id.action_delete, \"customButtonDelete\", SHOW_AS_ACTION_NEVER);\n         setupButton(preferences, R.id.action_toggle_mic_tool_bar, \"customButtonToggleMicToolBar\", SHOW_AS_ACTION_NEVER);\n-        setupButton(preferences, R.id.action_save_whiteboard, \"customButtonSaveWhiteboard\", SHOW_AS_ACTION_NEVER);\n+        setupButton(preferences, R.id.action_change_whiteboard_pen_color, \"customButtonWhiteboardPenColor\", SHOW_AS_ACTION_ALWAYS);\n     }\n \n \n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\nindex 23dc107478..f40c7271cd 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/reviewer/ActionButtonStatus.java\n", "chunk": "@@ -61,6 +61,7 @@ public class ActionButtonStatus {\n         setupButton(preferences, R.id.action_mark_card, \"customButtonMarkCard\", SHOW_AS_ACTION_IF_ROOM);\n         setupButton(preferences, R.id.action_delete, \"customButtonDelete\", SHOW_AS_ACTION_NEVER);\n         setupButton(preferences, R.id.action_toggle_mic_tool_bar, \"customButtonToggleMicToolBar\", SHOW_AS_ACTION_NEVER);\n+        setupButton(preferences, R.id.action_save_whiteboard, \"customButtonSaveWhiteboard\", SHOW_AS_ACTION_NEVER);\n         setupButton(preferences, R.id.action_change_whiteboard_pen_color, \"customButtonWhiteboardPenColor\", SHOW_AS_ACTION_ALWAYS);\n     }\n \n", "next_change": null}]}}]}}]}}, {"oid": "82c7d650943603dcedadb7e1a9d13bfb00050fcd", "url": "https://github.com/ankidroid/Anki-Android/commit/82c7d650943603dcedadb7e1a9d13bfb00050fcd", "message": "   Updated Reviewer.java", "committedDate": "2020-06-25T17:36:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczMDQyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445730429", "body": "```suggestion\r\n            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp);\n          \n          \n            \n                        Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-smi\">Drawable</span> whiteboardColorPaletteIcon <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ContextCompat</span><span class=\"pl-k\">.</span>getDrawable(<span class=\"pl-c1\">this</span>, <span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>drawable<span class=\"pl-k\">.</span>ic_color_lens_white_24dp);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Drawable</span> whiteboardColorPaletteIcon <span class=\"pl-k\">=</span> <span class=\"pl-smi\">ContextCompat</span><span class=\"pl-k\">.</span>getDrawable(<span class=\"pl-c1\">this</span>, <span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>drawable<span class=\"pl-k\">.</span>ic_color_lens_white_24dp)<span class=\"pl-k x x-first\">.</span><span class=\"x x-last\">mutate()</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-06-25T17:44:10Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -544,14 +545,24 @@ public boolean onCreateOptionsMenu(Menu menu) {\n             menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n \n             Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp);", "originalCommit": "82c7d650943603dcedadb7e1a9d13bfb00050fcd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "174065d896cbfdf5d420f3cacda9a82b476b917f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex 3ddfc9ce8d..b25ae11687 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -545,7 +545,7 @@ public class Reviewer extends AbstractFlashcardViewer {\n             menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n \n             Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n-            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp);\n+            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n \n             if (mShowWhiteboard) {\n                 whiteboardIcon.setAlpha(255);\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b25ae11687..c9b49ee1bb 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -542,27 +545,17 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n-            menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n-\n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n-            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n+            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n \n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(255);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n-\n-                whiteboardColorPaletteIcon.setAlpha(255);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(77);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n-\n-                whiteboardColorPaletteIcon.setAlpha(77);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n-                colorPalette.setVisibility(View.GONE);\n             }\n         } else {\n             menu.findItem(R.id.action_enable_whiteboard).setTitle(R.string.enable_whiteboard);\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex c9b49ee1bb..b25ae11687 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -545,17 +542,27 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n-            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n+            menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n+\n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n \n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n+                whiteboardIcon.setAlpha(255);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n+\n+                whiteboardColorPaletteIcon.setAlpha(255);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n+                whiteboardIcon.setAlpha(77);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n+\n+                whiteboardColorPaletteIcon.setAlpha(77);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n+                colorPalette.setVisibility(View.GONE);\n             }\n         } else {\n             menu.findItem(R.id.action_enable_whiteboard).setTitle(R.string.enable_whiteboard);\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b25ae11687..fe439beef3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -542,24 +544,25 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n+            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n             menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n \n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n \n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(255);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n \n-                whiteboardColorPaletteIcon.setAlpha(255);\n+                whiteboardColorPaletteIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(77);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n \n-                whiteboardColorPaletteIcon.setAlpha(77);\n+                whiteboardColorPaletteIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n                 colorPalette.setVisibility(View.GONE);\n", "next_change": null}]}}]}}]}}]}}, {"oid": "174065d896cbfdf5d420f3cacda9a82b476b917f", "url": "https://github.com/ankidroid/Anki-Android/commit/174065d896cbfdf5d420f3cacda9a82b476b917f", "message": "\tUpdated Reviewer.java", "committedDate": "2020-06-25T17:50:30Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0Mzc0MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445743740", "body": "if you're just implementing the interface to allow `setOnClickListener(this)`, then you can would be better define it as a lambda inside the method and remove the interface impementation\r\n\r\nI believe the syntax would be `btn.setOnClickListener(this::onClick)`. Then you can rename the method to something more readable.", "bodyText": "if you're just implementing the interface to allow setOnClickListener(this), then you can would be better define it as a lambda inside the method and remove the interface impementation\nI believe the syntax would be btn.setOnClickListener(this::onClick). Then you can rename the method to something more readable.", "bodyHTML": "<p dir=\"auto\">if you're just implementing the interface to allow <code>setOnClickListener(this)</code>, then you can would be better define it as a lambda inside the method and remove the interface impementation</p>\n<p dir=\"auto\">I believe the syntax would be <code>btn.setOnClickListener(this::onClick)</code>. Then you can rename the method to something more readable.</p>", "author": "david-allison-1", "createdAt": "2020-06-25T18:07:44Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -26,20 +26,22 @@\n import android.graphics.Path;\n import android.graphics.PathMeasure;\n import android.graphics.Point;\n-import android.graphics.PointF;\n+import androidx.annotation.NonNull;\n import androidx.core.content.ContextCompat;\n import android.view.Display;\n import android.view.MotionEvent;\n import android.view.View;\n import android.view.WindowManager;\n+import android.widget.Button;\n+import android.widget.LinearLayout;\n \n import java.lang.ref.WeakReference;\n import java.util.Stack;\n \n /**\n  * Whiteboard allowing the user to draw the card's answer on the touchscreen.\n  */\n-public class Whiteboard extends View {\n+public class Whiteboard extends View implements View.OnClickListener {", "originalCommit": "174065d896cbfdf5d420f3cacda9a82b476b917f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8574991523c26f02fe367f6b0849a6458d2423d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e3c8a1e12d..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -41,7 +41,7 @@ import java.util.Stack;\n /**\n  * Whiteboard allowing the user to draw the card's answer on the touchscreen.\n  */\n-public class Whiteboard extends View implements View.OnClickListener {\n+public class Whiteboard extends View {\n \n     private static final float TOUCH_TOLERANCE = 4;\n \n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0NDQ3OQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445744479", "body": "```suggestion\r\n    private final LinearLayout mColorPalette;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private LinearLayout mColorPalette;\n          \n          \n            \n                private final LinearLayout mColorPalette;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">LinearLayout</span> mColorPalette;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">LinearLayout</span> mColorPalette;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-06-25T18:09:02Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -66,6 +68,7 @@\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n \n+    private LinearLayout mColorPalette;", "originalCommit": "174065d896cbfdf5d420f3cacda9a82b476b917f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8574991523c26f02fe367f6b0849a6458d2423d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e3c8a1e12d..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -68,7 +68,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n \n-    private LinearLayout mColorPalette;\n+    private final LinearLayout mColorPalette;\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -67,8 +73,8 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-\n-    private final LinearLayout mColorPalette;\n+    private final int foregroundColor;\n+    private SystemTime mTime = new SystemTime();\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -73,8 +67,8 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-    private final int foregroundColor;\n-    private SystemTime mTime = new SystemTime();\n+\n+    private final LinearLayout mColorPalette;\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -67,8 +75,9 @@ public class Whiteboard extends View {\n     private boolean mInvertedColors;\n     private boolean mMonochrome;\n     private boolean mUndoModeActive = false;\n-\n+    private final int foregroundColor;\n     private final LinearLayout mColorPalette;\n+    private SystemTime mTime = new SystemTime();\n \n     public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean monochrome) {\n         super(cardViewer, null);\n", "next_change": null}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -82,7 +76,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-\n+        int foregroundColor;\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}]}}, {"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +82,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -82,7 +76,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-\n+        int foregroundColor;\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -76,7 +85,7 @@ public class Whiteboard extends View {\n         mInvertedColors = inverted;\n         mMonochrome = monochrome;\n \n-        int foregroundColor;\n+\n         if (!mInvertedColors) {\n             if (mMonochrome) {\n                 foregroundColor = Color.BLACK;\n", "next_change": null}]}}]}}]}}]}}, {"oid": "46727015c90598ed8ae7fa7d91b67d024a718537", "url": "https://github.com/ankidroid/Anki-Android/commit/46727015c90598ed8ae7fa7d91b67d024a718537", "message": "\tUpdated reviewer_fullscreen.xml, reviewer_fullscreen_noanswers.xml", "committedDate": "2020-06-25T18:09:28Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0Njg1MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445746851", "body": "Might as well remove the code rather than commenting it out", "bodyText": "Might as well remove the code rather than commenting it out", "bodyHTML": "<p dir=\"auto\">Might as well remove the code rather than commenting it out</p>", "author": "david-allison-1", "createdAt": "2020-06-25T18:13:14Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -241,11 +260,13 @@ private void createBitmap() {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_8888);\n+        /*\n         if (mMonochrome && !mInvertedColors) {\n             createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n         } else {\n             createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);", "originalCommit": "174065d896cbfdf5d420f3cacda9a82b476b917f", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "c8574991523c26f02fe367f6b0849a6458d2423d", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex e3c8a1e12d..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -260,13 +260,7 @@ public class Whiteboard extends View implements View.OnClickListener {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_8888);\n-        /*\n-        if (mMonochrome && !mInvertedColors) {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n-        } else {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n-        }*/\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -260,7 +250,11 @@ public class Whiteboard extends View {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n+        if (mMonochrome && !mInvertedColors) {\n+            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n+        } else {\n+            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n+        }\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -250,11 +260,7 @@ public class Whiteboard extends View {\n         // To fix issue #1336, just make the whiteboard big and square.\n         final Point p = getDisplayDimenions();\n         int bitmapSize = Math.max(p.x, p.y);\n-        if (mMonochrome && !mInvertedColors) {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ALPHA_8);\n-        } else {\n-            createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n-        }\n+        createBitmap(bitmapSize, bitmapSize, Bitmap.Config.ARGB_4444);\n     }\n \n     private void drawStart(float x, float y) {\n", "next_change": null}]}}]}}]}}, {"oid": "c8574991523c26f02fe367f6b0849a6458d2423d", "url": "https://github.com/ankidroid/Anki-Android/commit/c8574991523c26f02fe367f6b0849a6458d2423d", "message": "\tUpdated Whiteboard.java", "committedDate": "2020-06-25T18:17:34Z", "type": "commit"}, {"oid": "c8574991523c26f02fe367f6b0849a6458d2423d", "url": "https://github.com/ankidroid/Anki-Android/commit/c8574991523c26f02fe367f6b0849a6458d2423d", "message": "\tUpdated Whiteboard.java", "committedDate": "2020-06-25T18:17:34Z", "type": "forcePushed"}, {"oid": "c8574991523c26f02fe367f6b0849a6458d2423d", "url": "https://github.com/ankidroid/Anki-Android/commit/c8574991523c26f02fe367f6b0849a6458d2423d", "message": "\tUpdated Whiteboard.java", "committedDate": "2020-06-25T18:17:34Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5Njc4Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445796783", "body": "There are constants in the `Themes` class, can you use these?", "bodyText": "There are constants in the Themes class, can you use these?", "bodyHTML": "<p dir=\"auto\">There are constants in the <code>Themes</code> class, can you use these?</p>", "author": "david-allison-1", "createdAt": "2020-06-25T19:43:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -534,15 +542,27 @@ public boolean onCreateOptionsMenu(Menu menu) {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n+            menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n+\n             Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n+\n             if (mShowWhiteboard) {\n                 whiteboardIcon.setAlpha(255);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n+\n+                whiteboardColorPaletteIcon.setAlpha(255);", "originalCommit": "c8574991523c26f02fe367f6b0849a6458d2423d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b25ae11687..c9b49ee1bb 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -542,27 +545,17 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n-            menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n-\n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n-            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n+            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n \n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(255);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n-\n-                whiteboardColorPaletteIcon.setAlpha(255);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(77);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n-\n-                whiteboardColorPaletteIcon.setAlpha(77);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n-                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n-                colorPalette.setVisibility(View.GONE);\n             }\n         } else {\n             menu.findItem(R.id.action_enable_whiteboard).setTitle(R.string.enable_whiteboard);\n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex c9b49ee1bb..b25ae11687 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -545,17 +542,27 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n-            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n+            menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n+\n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n \n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n+                whiteboardIcon.setAlpha(255);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n+\n+                whiteboardColorPaletteIcon.setAlpha(255);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n+                whiteboardIcon.setAlpha(77);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n+\n+                whiteboardColorPaletteIcon.setAlpha(77);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n+                menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n+                colorPalette.setVisibility(View.GONE);\n             }\n         } else {\n             menu.findItem(R.id.action_enable_whiteboard).setTitle(R.string.enable_whiteboard);\n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\nindex b25ae11687..fe439beef3 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java\n", "chunk": "@@ -542,24 +544,25 @@ public class Reviewer extends AbstractFlashcardViewer {\n                 menu.findItem(R.id.action_clear_whiteboard).setVisible(true);\n             }\n \n+            menu.findItem(R.id.action_save_whiteboard).setVisible(true);\n             menu.findItem(R.id.action_change_whiteboard_pen_color).setVisible(true);\n \n-            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp);\n+            Drawable whiteboardIcon = ContextCompat.getDrawable(this, R.drawable.ic_gesture_white_24dp).mutate();\n             Drawable whiteboardColorPaletteIcon = ContextCompat.getDrawable(this, R.drawable.ic_color_lens_white_24dp).mutate();\n \n             if (mShowWhiteboard) {\n-                whiteboardIcon.setAlpha(255);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.hide_whiteboard);\n \n-                whiteboardColorPaletteIcon.setAlpha(255);\n+                whiteboardColorPaletteIcon.setAlpha(Themes.ALPHA_ICON_ENABLED_LIGHT);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n             } else {\n-                whiteboardIcon.setAlpha(77);\n+                whiteboardIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_hide_whiteboard).setIcon(whiteboardIcon);\n                 menu.findItem(R.id.action_hide_whiteboard).setTitle(R.string.show_whiteboard);\n \n-                whiteboardColorPaletteIcon.setAlpha(77);\n+                whiteboardColorPaletteIcon.setAlpha(Themes.ALPHA_ICON_DISABLED_LIGHT);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setEnabled(false);\n                 menu.findItem(R.id.action_change_whiteboard_pen_color).setIcon(whiteboardColorPaletteIcon);\n                 colorPalette.setVisibility(View.GONE);\n", "next_change": null}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc5OTA0MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r445799041", "body": "Implementer's choice: Can be shortened to: \r\n```suggestion\r\n        ((Button) cardViewer.findViewById(R.id.pen_color_white)).setOnClickListener(this::onClick);\r\n```", "bodyText": "Implementer's choice: Can be shortened to:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n          \n          \n            \n                    ((Button) cardViewer.findViewById(R.id.pen_color_white)).setOnClickListener(this::onClick);", "bodyHTML": "<p dir=\"auto\">Implementer's choice: Can be shortened to:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi x x-first\">Button</span><span class=\"x\"> penColorWhite </span><span class=\"pl-k x\">=</span><span class=\"x x-last\"> (</span><span class=\"pl-smi\">Button</span>) cardViewer<span class=\"pl-k\">.</span>findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>pen_color_white);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">((</span><span class=\"pl-smi\">Button</span>) cardViewer<span class=\"pl-k\">.</span>findViewById(<span class=\"pl-smi\">R</span><span class=\"pl-k\">.</span>id<span class=\"pl-k\">.</span>pen_color_white<span class=\"x x-first\">))</span><span class=\"pl-k x\">.</span><span class=\"x\">setOnClickListener(</span><span class=\"pl-c1 x\">this</span><span class=\"pl-k x\">::</span><span class=\"x x-last\">onClick</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-06-25T19:48:13Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -100,6 +103,22 @@ public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n+\n+        // selecting pen color to draw\n+        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n+\n+        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);", "originalCommit": "c8574991523c26f02fe367f6b0849a6458d2423d", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "bc30c1dab10e0e8a60623a76817589ad9961c113", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..1c4a154f24 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -103,22 +109,6 @@ public class Whiteboard extends View {\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n-\n-        // selecting pen color to draw\n-        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n-\n-        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n-        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n-        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n-        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n-        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n-        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n-        penColorWhite.setOnClickListener(this::onClick);\n-        penColorBlack.setOnClickListener(this::onClick);\n-        penColorRed.setOnClickListener(this::onClick);\n-        penColorGreen.setOnClickListener(this::onClick);\n-        penColorBlue.setOnClickListener(this::onClick);\n-        penColorYellow.setOnClickListener(this::onClick);\n     }\n \n \n", "next_change": {"commit": "e660d320dbe1da2d540725138ac3eab07d353f7f", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 1c4a154f24..9aa2af2514 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -109,6 +103,22 @@ public class Whiteboard extends View {\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n+\n+        // selecting pen color to draw\n+        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n+\n+        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n+        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n+        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n+        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n+        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n+        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n+        penColorWhite.setOnClickListener(this::onClick);\n+        penColorBlack.setOnClickListener(this::onClick);\n+        penColorRed.setOnClickListener(this::onClick);\n+        penColorGreen.setOnClickListener(this::onClick);\n+        penColorBlue.setOnClickListener(this::onClick);\n+        penColorYellow.setOnClickListener(this::onClick);\n     }\n \n \n", "next_change": {"commit": "a104048452cd6b64eccdea1081af0e215107e1a8", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 9aa2af2514..8a1f82ca01 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -107,18 +116,12 @@ public class Whiteboard extends View {\n         // selecting pen color to draw\n         mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n \n-        Button penColorWhite = (Button) cardViewer.findViewById(R.id.pen_color_white);\n-        Button penColorBlack = (Button) cardViewer.findViewById(R.id.pen_color_black);\n-        Button penColorRed = (Button) cardViewer.findViewById(R.id.pen_color_red);\n-        Button penColorGreen = (Button) cardViewer.findViewById(R.id.pen_color_green);\n-        Button penColorBlue = (Button) cardViewer.findViewById(R.id.pen_color_blue);\n-        Button penColorYellow = (Button) cardViewer.findViewById(R.id.pen_color_yellow);\n-        penColorWhite.setOnClickListener(this::onClick);\n-        penColorBlack.setOnClickListener(this::onClick);\n-        penColorRed.setOnClickListener(this::onClick);\n-        penColorGreen.setOnClickListener(this::onClick);\n-        penColorBlue.setOnClickListener(this::onClick);\n-        penColorYellow.setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_white)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_black)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_red)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_green)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_blue)).setOnClickListener(this::onClick);\n+        ((Button) cardViewer.findViewById(R.id.pen_color_yellow)).setOnClickListener(this::onClick);\n     }\n \n \n", "next_change": null}]}}]}}]}}, {"oid": "bc30c1dab10e0e8a60623a76817589ad9961c113", "url": "https://github.com/ankidroid/Anki-Android/commit/bc30c1dab10e0e8a60623a76817589ad9961c113", "message": "Revert \"Fork Update\"", "committedDate": "2020-06-26T03:06:58Z", "type": "commit"}, {"oid": "6a3339cf2689a619dc96747fa51768c24f417c95", "url": "https://github.com/ankidroid/Anki-Android/commit/6a3339cf2689a619dc96747fa51768c24f417c95", "message": "\tUpdate fork", "committedDate": "2020-06-26T03:36:53Z", "type": "commit"}, {"oid": "e660d320dbe1da2d540725138ac3eab07d353f7f", "url": "https://github.com/ankidroid/Anki-Android/commit/e660d320dbe1da2d540725138ac3eab07d353f7f", "message": "Merge remote-tracking branch 'origin/master' into feature-pen-color", "committedDate": "2020-06-26T03:56:34Z", "type": "commit"}, {"oid": "a104048452cd6b64eccdea1081af0e215107e1a8", "url": "https://github.com/ankidroid/Anki-Android/commit/a104048452cd6b64eccdea1081af0e215107e1a8", "message": "\tUpdated", "committedDate": "2020-06-26T05:05:45Z", "type": "commit"}, {"oid": "a104048452cd6b64eccdea1081af0e215107e1a8", "url": "https://github.com/ankidroid/Anki-Android/commit/a104048452cd6b64eccdea1081af0e215107e1a8", "message": "\tUpdated", "committedDate": "2020-06-26T05:05:45Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjEyMTg0Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r446121842", "body": "Much nicer \ud83d\udc4d ", "bodyText": "Much nicer \ud83d\udc4d", "bodyHTML": "<p dir=\"auto\">Much nicer <g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "david-allison-1", "createdAt": "2020-06-26T11:15:36Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -109,6 +112,16 @@ public Whiteboard(AbstractFlashcardViewer cardViewer, boolean inverted, boolean\n         createBitmap();\n         mPath = new Path();\n         mBitmapPaint = new Paint(Paint.DITHER_FLAG);\n+\n+        // selecting pen color to draw\n+        mColorPalette = (LinearLayout) cardViewer.findViewById(R.id.whiteboard_pen_color);\n+\n+        ((Button) cardViewer.findViewById(R.id.pen_color_white)).setOnClickListener(this::onClick);", "originalCommit": "a104048452cd6b64eccdea1081af0e215107e1a8", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": null}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NTYwMw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r446395603", "body": "If we are using colors that do not have a universal definition, and we are using them both in Java and in XML I think we can define the RGB hex code in XML:\r\n\r\nhttps://developer.android.com/guide/topics/resources/more-resources#Color\r\n\r\nThen reference them by a single name to make sure the colors stay consistent - otherwise we repeat these constants instead of referring to a single definition", "bodyText": "If we are using colors that do not have a universal definition, and we are using them both in Java and in XML I think we can define the RGB hex code in XML:\nhttps://developer.android.com/guide/topics/resources/more-resources#Color\nThen reference them by a single name to make sure the colors stay consistent - otherwise we repeat these constants instead of referring to a single definition", "bodyHTML": "<p dir=\"auto\">If we are using colors that do not have a universal definition, and we are using them both in Java and in XML I think we can define the RGB hex code in XML:</p>\n<p dir=\"auto\"><a href=\"https://developer.android.com/guide/topics/resources/more-resources#Color\" rel=\"nofollow\">https://developer.android.com/guide/topics/resources/more-resources#Color</a></p>\n<p dir=\"auto\">Then reference them by a single name to make sure the colors stay consistent - otherwise we repeat these constants instead of referring to a single definition</p>", "author": "mikehardy", "createdAt": "2020-06-26T20:30:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java", "diffHunk": "@@ -365,60 +371,117 @@ private static Point getDisplayDimenions() {\n         return point;\n     }\n \n+\n+    public void onClick(View view) {\n+\n+        switch (view.getId()) {\n+            case R.id.pen_color_white:\n+                mPaint.setColor(Color.WHITE);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_black:\n+                mPaint.setColor(Color.BLACK);\n+                mColorPalette.setVisibility(View.GONE);\n+                break;\n+            case R.id.pen_color_red:\n+                int redPenColor = Color.parseColor(\"#f44336\");", "originalCommit": "a104048452cd6b64eccdea1081af0e215107e1a8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ4OTQ4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6550#discussion_r446489487", "bodyText": "I used that one but deprecated. So I used ContextCompat.getColor();\nhttps://stackoverflow.com/questions/31590714/getcolorint-id-deprecated-on-android-6-0-marshmallow-api-23", "author": "infinyte7", "createdAt": "2020-06-27T05:54:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjM5NTYwMw=="}], "type": "inlineReview", "revised_code": {"commit": "1aa90865f94d98b9fb901dbe9751ca0564d3ef8e", "changed_code": [{"header": "diff --git a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\nindex 8a1f82ca01..0f4fcd9326 100644\n--- a/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n+++ b/AnkiDroid/src/main/java/com/ichi2/anki/Whiteboard.java\n", "chunk": "@@ -384,22 +384,22 @@ public class Whiteboard extends View {\n                 mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_red:\n-                int redPenColor = Color.parseColor(\"#f44336\");\n+                int redPenColor = ContextCompat.getColor(getContext(), R.color.material_red_500);\n                 mPaint.setColor(redPenColor);\n                 mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_green:\n-                int greenPenColor = Color.parseColor(\"#4caf50\");\n+                int greenPenColor = ContextCompat.getColor(getContext(), R.color.material_green_500);\n                 mPaint.setColor(greenPenColor);\n                 mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_blue:\n-                int bluePenColor = Color.parseColor(\"#2196f3\");\n+                int bluePenColor = ContextCompat.getColor(getContext(), R.color.material_blue_500);\n                 mPaint.setColor(bluePenColor);\n                 mColorPalette.setVisibility(View.GONE);\n                 break;\n             case R.id.pen_color_yellow:\n-                int yellowPenColor = Color.parseColor(\"#ffeb3b\");\n+                int yellowPenColor = ContextCompat.getColor(getContext(), R.color.material_yellow_500);\n                 mPaint.setColor(yellowPenColor);\n                 mColorPalette.setVisibility(View.GONE);\n                 break;\n", "next_change": null}]}}, {"oid": "1aa90865f94d98b9fb901dbe9751ca0564d3ef8e", "url": "https://github.com/ankidroid/Anki-Android/commit/1aa90865f94d98b9fb901dbe9751ca0564d3ef8e", "message": "\tUpdated Whiteboard.java, colors.xml", "committedDate": "2020-06-27T05:53:15Z", "type": "commit"}, {"oid": "2539fa3db1cc4af60937a9e41d1e1ff8419127ef", "url": "https://github.com/ankidroid/Anki-Android/commit/2539fa3db1cc4af60937a9e41d1e1ff8419127ef", "message": "\tUpdated reviewer_whiteboard_pen_color.xml", "committedDate": "2020-06-27T05:59:31Z", "type": "commit"}]}