{"pr_number": 5978, "pr_title": "Extract and modify: GetNextClozeIndex", "pr_author": "david-allison-1", "pr_createdAt": "2020-04-11T20:56:27Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/5978", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyODAyNw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407128027", "body": "why not have the comment actually be javadoc? I actually like javadoc ", "bodyText": "why not have the comment actually be javadoc? I actually like javadoc", "bodyHTML": "<p dir=\"auto\">why not have the comment actually be javadoc? I actually like javadoc</p>", "author": "mikehardy", "createdAt": "2020-04-12T00:42:52Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -389,4 +391,27 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return (int) (mId ^ (mId >>> 32));\n     }\n+\n+\n+    public static class ClozeUtils {\n+        private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n+\n+        public static int getNextClozeIndex(Iterable<String> fieldValues) {\n+            // Search in all fields of the current note for the cloze reference with the highest value", "originalCommit": "d0ea2325f062dce80403a6a6949d64de78526576", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEyODE5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407128195", "body": "this would be more interesting if they were out of order, I'm sure it works based on the code but as long as I\"m nit-picking on javadoc up above and you're in here anyway, maybe swap c2 and c1 for grins", "bodyText": "this would be more interesting if they were out of order, I'm sure it works based on the code but as long as I\"m nit-picking on javadoc up above and you're in here anyway, maybe swap c2 and c1 for grins", "bodyHTML": "<p dir=\"auto\">this would be more interesting if they were out of order, I'm sure it works based on the code but as long as I\"m nit-picking on javadoc up above and you're in here anyway, maybe swap c2 and c1 for grins</p>", "author": "mikehardy", "createdAt": "2020-04-12T00:45:06Z", "path": "AnkiDroid/src/test/java/com/ichi2/libanki/NoteTest.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package com.ichi2.libanki;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import static com.ichi2.libanki.Note.ClozeUtils.getNextClozeIndex;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class NoteTest {\n+    @Test\n+    public void noFieldDataReturnsFirstClozeIndex() {\n+        int expected = getNextClozeIndex(Collections.emptyList());\n+\n+        assertThat(\"No data should return a cloze index of 1 the next.\", expected, is(1));\n+    }\n+\n+    @Test\n+    public void negativeFieldIsIgnored() {\n+        String fieldValue = \"{{c-1::foo}}\";\n+        int actual = getNextClozeIndex(Collections.singletonList(fieldValue));\n+\n+        assertThat(\"The next consecutive value should be returned.\", actual, is(1));\n+    }\n+\n+    @Test\n+    public void singleFieldReturnsNextValue() {\n+        String fieldValue = \"{{c1::foo}}{{c2::bar}}\";", "originalCommit": "d0ea2325f062dce80403a6a6949d64de78526576", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a6078569067ef34264144b3dd698cbcc9d4016f7", "url": "https://github.com/ankidroid/Anki-Android/commit/a6078569067ef34264144b3dd698cbcc9d4016f7", "message": "Extract and modify: getNextClozeIndex\n\nI want to access this functionality from the Visual Editor without a\nreference to FieldEditText.\n\nThis also likely improves performance, taking the Regex.Compile from an\ninstance variable into a static.", "committedDate": "2020-04-12T07:13:23Z", "type": "commit"}, {"oid": "a6078569067ef34264144b3dd698cbcc9d4016f7", "url": "https://github.com/ankidroid/Anki-Android/commit/a6078569067ef34264144b3dd698cbcc9d4016f7", "message": "Extract and modify: getNextClozeIndex\n\nI want to access this functionality from the Visual Editor without a\nreference to FieldEditText.\n\nThis also likely improves performance, taking the Regex.Compile from an\ninstance variable into a static.", "committedDate": "2020-04-12T07:13:23Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNDI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407204253", "body": "```suggestion\r\n        /**\r\n         * Calculate the next number that should be used if inserting a new cloze deletion.\r\n         * Per the manual the next number should be greater than any existing cloze deletion\r\n         * even if there are gaps in the sequence, and regardless of existing cloze ordering\r\n         *\r\n         * @param fieldValues Iterable of field values that may contain existing cloze deletions\r\n         * @return the next index that a cloze should be inserted at\r\n         */\r\n```\r\n\r\nThat's javadoc - it un-muddles the param and return by pulling them out in a specific format, and starts with a double-asterisk", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    /*\n          \n          \n            \n                    Returns the next index that a cloze should be inserted at, given a list of fields.\n          \n          \n            \n                    Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n          \n          \n            \n                    The next index is index after the highest existing cloze deletion, gaps are not considered.\n          \n          \n            \n                     */\n          \n          \n            \n                    /**\n          \n          \n            \n                     * Calculate the next number that should be used if inserting a new cloze deletion.\n          \n          \n            \n                     * Per the manual the next number should be greater than any existing cloze deletion\n          \n          \n            \n                     * even if there are gaps in the sequence, and regardless of existing cloze ordering\n          \n          \n            \n                     *\n          \n          \n            \n                     * @param fieldValues Iterable of field values that may contain existing cloze deletions\n          \n          \n            \n                     * @return the next index that a cloze should be inserted at\n          \n          \n            \n                     */\n          \n      \n    \n    \n  \n\nThat's javadoc - it un-muddles the param and return by pulling them out in a specific format, and starts with a double-asterisk", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"406\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-c\"><span class=\"pl-c\">/*</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"407\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Returns</span> the next index that a cloze should be inserted at, given a list of fields.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"408\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Per</span> the manual, cloze references are the name of the delimiters <span class=\"pl-k\">for</span> cloze deletions e<span class=\"pl-k\">.</span>g. {{c1<span class=\"pl-k\">::</span>text}}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"409\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">The</span> next index is index after the highest existing cloze deletion, gaps are not considered.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"410\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">         <span class=\"pl-k\">*/</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"406\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"407\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Calculate</span> the next number that should be used <span class=\"pl-k\">if</span> inserting a <span class=\"pl-k\">new</span> cloze deletion.</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"408\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span> <span class=\"pl-smi\">Per</span> the manual the next number should be greater than any existing cloze deletion</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"409\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span> even <span class=\"pl-k\">if</span> there are gaps in the sequence, and regardless of existing cloze ordering</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"410\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"411\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span> <span class=\"pl-k\">@param</span> fieldValues <span class=\"pl-smi\">Iterable</span> of field values that may contain existing cloze deletions</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"412\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> the next index that a cloze should be inserted at</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"413\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">         <span class=\"pl-k\">*/</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">That's javadoc - it un-muddles the param and return by pulling them out in a specific format, and starts with a double-asterisk</p>", "author": "mikehardy", "createdAt": "2020-04-12T14:15:09Z", "path": "AnkiDroid/src/main/java/com/ichi2/libanki/Note.java", "diffHunk": "@@ -389,4 +391,31 @@ public boolean equals(Object o) {\n     public int hashCode() {\n         return (int) (mId ^ (mId >>> 32));\n     }\n+\n+\n+    public static class ClozeUtils {\n+        private static final Pattern mClozeRegexPattern = Pattern.compile(\"\\\\{\\\\{c(\\\\d+)::\");\n+\n+        /*\n+        Returns the next index that a cloze should be inserted at, given a list of fields.\n+        Per the manual, cloze references are the name of the delimiters for cloze deletions e.g. {{c1::text}}\n+        The next index is index after the highest existing cloze deletion, gaps are not considered.\n+         */", "originalCommit": "a6078569067ef34264144b3dd698cbcc9d4016f7", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNTM5NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/5978#discussion_r407205395", "bodyText": "Wasn't aware. Thanks! LGTM", "author": "david-allison-1", "createdAt": "2020-04-12T14:23:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIwNDI1Mw=="}], "type": "inlineReview"}, {"oid": "941a437a2c41fed809014e0fa10671a4ef1a22ba", "url": "https://github.com/ankidroid/Anki-Android/commit/941a437a2c41fed809014e0fa10671a4ef1a22ba", "message": "NF: Fix Javadoc\n\nCo-Authored-By: Mike Hardy <github@mikehardy.net>", "committedDate": "2020-04-12T14:24:05Z", "type": "commit"}]}