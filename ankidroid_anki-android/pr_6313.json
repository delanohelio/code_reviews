{"pr_number": 6313, "pr_title": "Handle 3-letter language roots correctly", "pr_author": "mikehardy", "pr_createdAt": "2020-05-31T04:43:39Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6313", "timeline": [{"oid": "04b0b61a1714a2c7180a99000c93af55b6e390a4", "url": "https://github.com/ankidroid/Anki-Android/commit/04b0b61a1714a2c7180a99000c93af55b6e390a4", "message": "Handle 3-letter language roots correctly\n\nPreviously there was an expectation in the importer script that all\nlanguage codes had a 2-letter root, but many valid codes that Android\naccepts have 3-letter codes *and* collide with the 2-letter codes (fi vs fil)\n\nAdditionally, the 'yu' (Cantonese) custom code needed to map to 'yue'\n\nThis cleans up the import done earlier while adding Sorani that produced\ntruncated (3-letter to 2-letter) languages while adding all updated translations\nfrom crowdin", "committedDate": "2020-05-31T04:49:14Z", "type": "forcePushed"}, {"oid": "a57ebe5312afa7c0d4950604e4f5f9a43be3a8cc", "url": "https://github.com/ankidroid/Anki-Android/commit/a57ebe5312afa7c0d4950604e4f5f9a43be3a8cc", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:08:43Z", "type": "forcePushed"}, {"oid": "aeb0686f713cb0139d8975cf0519b51a49029b62", "url": "https://github.com/ankidroid/Anki-Android/commit/aeb0686f713cb0139d8975cf0519b51a49029b62", "message": "Handle 3-letter language roots correctly\n\nThere was an expectation in the importer script that all\nlanguage codes had a 2-letter root, but many valid codes that Android\naccepts have 3-letter codes *and* collide with the 2-letter codes (fi vs fil)\n\nThere was the expectation in the LanguageUtil object that languages\nall had 2-letter roots as well, it was altered to split on '-' instead\nof on specific character indices, with associated unit testing to verify\n\nAdditionally, the 'yu' (Cantonese) custom code needed to map to 'yue'", "committedDate": "2020-05-31T19:48:42Z", "type": "commit"}, {"oid": "2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "url": "https://github.com/ankidroid/Anki-Android/commit/2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:51:10Z", "type": "commit"}, {"oid": "2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "url": "https://github.com/ankidroid/Anki-Android/commit/2a1d914dd665bd0adecd2aadf13bd7e4c90a2b0e", "message": "Updated strings from Crowdin", "committedDate": "2020-05-31T19:51:10Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTg4NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432979884", "body": "Nit: No need to call `.toString()`, let the logging framework do it for efficiency.", "bodyText": "Nit: No need to call .toString(), let the logging framework do it for efficiency.", "bodyHTML": "<p dir=\"auto\">Nit: No need to call <code>.toString()</code>, let the logging framework do it for efficiency.</p>", "author": "david-allison-1", "createdAt": "2020-05-31T20:11:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/AnkiDroidApp.java", "diffHunk": "@@ -398,6 +398,7 @@ public static Context updateContextWithLanguage(@NonNull Context remoteContext)\n     private static Configuration getLanguageConfig(@NonNull Configuration remoteConfig, @NonNull SharedPreferences prefs) {\n         Configuration newConfig = new Configuration(remoteConfig);\n         Locale newLocale = LanguageUtil.getLocale(prefs.getString(Preferences.LANGUAGE, \"\"), prefs);\n+        Timber.d(\"AnkiDroidApp::getLanguageConfig - setting locale to %s\", newLocale.toString());", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3OTkyOQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432979929", "body": "Best to log the input", "bodyText": "Best to log the input", "bodyHTML": "<p dir=\"auto\">Best to log the input</p>", "author": "david-allison-1", "createdAt": "2020-05-31T20:12:07Z", "path": "AnkiDroid/src/main/java/com/ichi2/utils/LanguageUtil.java", "diffHunk": "@@ -81,10 +83,13 @@ public static Locale getLocale(@Nullable String localeCode, @NonNull SharedPrefe\n             // Fall back to (system) default only if that fails.\n             localeCode = Locale.getDefault().toString();\n         }\n-        if (localeCode.length() > 2) {\n+        // Language separators are '_' or '-' at different times in display/resource fetch\n+        if (localeCode != null && (localeCode.contains(\"_\") || localeCode.contains(\"-\"))) {\n             try {\n-                locale = new Locale(localeCode.substring(0, 2), localeCode.substring(3, 5));\n-            } catch (StringIndexOutOfBoundsException e) {\n+                String[] localeParts = localeCode.split(\"[_-]\", 2);\n+                locale = new Locale(localeParts[0], localeParts[1]);\n+            } catch (ArrayIndexOutOfBoundsException e) {\n+                Timber.w(e, \"LanguageUtil::getLocale regional variant split failed. Using code raw.\");", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA1NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980054", "body": "Do we need/intend to handle ISO 639 here? `zh-Hant-TW` for example?\r\n\r\nhttps://android.googlesource.com/platform/external/icu4c.git/+/master/data/locales/ - not sure if this is relevant", "bodyText": "Do we need/intend to handle ISO 639 here? zh-Hant-TW for example?\nhttps://android.googlesource.com/platform/external/icu4c.git/+/master/data/locales/ - not sure if this is relevant", "bodyHTML": "<p dir=\"auto\">Do we need/intend to handle ISO 639 here? <code>zh-Hant-TW</code> for example?</p>\n<p dir=\"auto\"><a href=\"https://android.googlesource.com/platform/external/icu4c.git/+/master/data/locales/\" rel=\"nofollow\">https://android.googlesource.com/platform/external/icu4c.git/+/master/data/locales/</a> - not sure if this is relevant</p>", "author": "david-allison-1", "createdAt": "2020-05-31T20:13:42Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue_TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue-TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+    }", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjMwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982305", "bodyText": "I have no intention of going farther than supported functionality at this point which is two part codes only", "author": "mikehardy", "createdAt": "2020-05-31T20:41:12Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA3Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980073", "body": "```suggestion\r\n        assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n          \n          \n            \n                    assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>A locale with a 3-letter <span class=\"x x-first x-last\">coe</span> and regional variant resolves correctly<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>A locale with a 3-letter <span class=\"x x-first x-last\">code</span> and regional variant resolves correctly<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-05-31T20:14:06Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"yue_TW\").getDisplayName().equals(\"yue (Taiwan)\"));\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDA4MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980081", "body": "```suggestion\r\n        assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",\n          \n          \n            \n                    assertThat(\"A locale with a 3-letter code and regional variant resolves correctly\",", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        assertThat(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>A locale with a 3-letter <span class=\"x x-first x-last\">coe</span> and regional variant resolves correctly<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        assertThat(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>A locale with a 3-letter <span class=\"x x-first x-last\">code</span> and regional variant resolves correctly<span class=\"pl-pds\">\"</span></span>,</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-05-31T20:14:12Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"af\").getDisplayLanguage().equals(\"Afrikaans\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterCodeResolves() {\n+        assertThat(\"A locale with a 3-letter code resolves correctly\",\n+                LanguageUtil.getLocale(\"fil\").getDisplayLanguage().equals(\"Filipino\"));\n+    }\n+\n+    @Test\n+    public void localeTwoLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt-BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+        assertThat(\"A locale with a 2-letter code and regional variant resolves correctly\",\n+                LanguageUtil.getLocale(\"pt_BR\").getDisplayName().equals(\"Portuguese (Brazil)\"));\n+    }\n+\n+    @Test\n+    public void localeThreeLetterRegionalVariantResolves() {\n+        assertThat(\"A locale with a 3-letter coe and regional variant resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432980153", "body": "Will these tests pass if the users locale is non-English? I think all of our non-instrumented test runs are still in English.", "bodyText": "Will these tests pass if the users locale is non-English? I think all of our non-instrumented test runs are still in English.", "bodyHTML": "<p dir=\"auto\">Will these tests pass if the users locale is non-English? I think all of our non-instrumented test runs are still in English.</p>", "author": "david-allison-1", "createdAt": "2020-05-31T20:15:04Z", "path": "AnkiDroid/src/test/java/com/ichi2/utils/LanguageUtilsTest.java", "diffHunk": "@@ -71,4 +76,32 @@ public void testCurrentLanguagesHaveNotChanged() {\n         assertThat(\"Languages have been updated, please modify test variables: \" +\n                 \"PREVIOUS_LANGUAGES and CURRENT_LANGUAGES\", actual, contains(CURRENT_LANGUAGES));\n     }\n+\n+    @Test\n+    public void localeTwoLetterCodeResolves() {\n+        assertThat(\"A locale with a 2-letter code resolves correctly\",", "originalCommit": "aeb0686f713cb0139d8975cf0519b51a49029b62", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MjI2MQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432982261", "bodyText": "Robolectric has locale-changing power but I've not used it, an extension to the tests to do so could be a separate PR if you want to investigate. I have used Robolectric API switching so I know it's effective, it's just an annotation IIRC", "author": "mikehardy", "createdAt": "2020-05-31T20:40:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4NDkwNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r432984905", "bodyText": "My concern is ensuring that new contributors coming into the project won't have broken tests. In a normal circumstance, this should change, but we should ensure this doesn't happen for foreign developers.\ngetDisplayLanguage Comments\n/**\n     * Returns a name for the locale's language that is appropriate for display to the\n     * user.\n     * If possible, the name returned will be localized for the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale.\n     * For example, if the locale is fr_FR and the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale\n     * is en_US, getDisplayLanguage() will return \"French\"; if the locale is en_US and\n     * the default {@link Locale.Category#DISPLAY DISPLAY} locale is fr_FR,\n     * getDisplayLanguage() will return \"anglais\".\n     * If the name returned cannot be localized for the default\n     * {@link Locale.Category#DISPLAY DISPLAY} locale,\n     * (say, we don't have a Japanese name for Croatian),\n     * this function falls back on the English name, and uses the ISO code as a last-resort\n     * value.  If the locale doesn't specify a language, this function returns the empty string.\n     *\n     * @return The name of the display language.\n     */", "author": "david-allison-1", "createdAt": "2020-05-31T21:14:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzI5MTM4MA==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433291380", "bodyText": "I now have a strong dislike for the Hamcrest matchers. On failure between expected/actual they don't spit out the actual or expected so you can't visually inspect immediately. You have to instrument, waste of time. Switching to junit Assert. I'm adding resource loading configs on robolectric and SDK skew though, as this would have tripped new developers with non-'en' system langauge", "author": "mikehardy", "createdAt": "2020-06-01T15:08:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzMzMDI1Mw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6313#discussion_r433330253", "bodyText": "Hamcrest definitely outputs the failures, that's the point of a fluent library.\nYou shouldn't be using assertThat(message, bool)\nYou should use assertThat(message, \"string\", is(\"string\"))\nSorry I missed this in the initial review.", "author": "david-allison-1", "createdAt": "2020-06-01T15:56:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4MDE1Mw=="}], "type": "inlineReview"}, {"oid": "a326db144648052c4ab67e0c5f6ffb984bc3f039", "url": "https://github.com/ankidroid/Anki-Android/commit/a326db144648052c4ab67e0c5f6ffb984bc3f039", "message": "NF: Improve logging, Improve test, Document I18N variant add", "committedDate": "2020-06-01T15:54:05Z", "type": "forcePushed"}, {"oid": "89620aad36e3445af3cff3917e6fca7db07646a2", "url": "https://github.com/ankidroid/Anki-Android/commit/89620aad36e3445af3cff3917e6fca7db07646a2", "message": "NF: Improve logging, Improve test, Document I18N variant add", "committedDate": "2020-06-01T16:04:39Z", "type": "commit"}, {"oid": "e7517e550609ddc6fe8e299493dcb2ddc419b67c", "url": "https://github.com/ankidroid/Anki-Android/commit/e7517e550609ddc6fe8e299493dcb2ddc419b67c", "message": "Improve error attribution in broken I18N finder", "committedDate": "2020-06-01T16:22:28Z", "type": "commit"}, {"oid": "3ffab75a3f07327cc944bc6991367696deeb851d", "url": "https://github.com/ankidroid/Anki-Android/commit/3ffab75a3f07327cc944bc6991367696deeb851d", "message": "Updated strings from crowdin\n\nThis includes one manual/local fix to values-nl/02-strings.xml but\nI also fixed it in crowdin for next export and informed the translator", "committedDate": "2020-06-01T16:22:51Z", "type": "commit"}, {"oid": "3ffab75a3f07327cc944bc6991367696deeb851d", "url": "https://github.com/ankidroid/Anki-Android/commit/3ffab75a3f07327cc944bc6991367696deeb851d", "message": "Updated strings from crowdin\n\nThis includes one manual/local fix to values-nl/02-strings.xml but\nI also fixed it in crowdin for next export and informed the translator", "committedDate": "2020-06-01T16:22:51Z", "type": "forcePushed"}]}