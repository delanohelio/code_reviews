{"pr_number": 6080, "pr_title": "Convert Keyboard Input Map Code to Config", "pr_author": "david-allison-1", "pr_createdAt": "2020-04-25T22:28:46Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/6080", "timeline": [{"oid": "a703469e53861886dcb4ebf4d47333233d4d784f", "url": "https://github.com/ankidroid/Anki-Android/commit/a703469e53861886dcb4ebf4d47333233d4d784f", "message": "Peripheral Input Mappings: convert code to config\n\nConverting from code to coded config will later allow us to convert from\nconfig to preferences. This is another layer of abstraction in order to\nintegrate a custom keymap with the Reviewer.", "committedDate": "2020-05-23T15:03:15Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1NzU5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6080#discussion_r429657592", "body": "whitespace nit\r\n\r\n```suggestion\r\n    private PeripheralKeymap mProcessor = new PeripheralKeymap(this, this);\r\n```", "bodyText": "whitespace nit\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private PeripheralKeymap mProcessor = new PeripheralKeymap(this,this);\n          \n          \n            \n                private PeripheralKeymap mProcessor = new PeripheralKeymap(this, this);", "bodyHTML": "<p dir=\"auto\">whitespace nit</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">PeripheralKeymap</span> mProcessor <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PeripheralKeymap</span>(<span class=\"pl-c1\">this</span>,<span class=\"pl-c1\">this</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi\">PeripheralKeymap</span> mProcessor <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">PeripheralKeymap</span>(<span class=\"pl-c1\">this</span>,<span class=\"x x-first x-last\"> </span><span class=\"pl-c1\">this</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "mikehardy", "createdAt": "2020-05-24T17:24:34Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -86,6 +86,8 @@ protected int getToastResourceId() {\n         }\n     };\n \n+    private PeripheralKeymap mProcessor = new PeripheralKeymap(this,this);", "originalCommit": "b7fc0bdbaaaf2766e6ffc9997b8285659998ecf7", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1Nzg3Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/6080#discussion_r429657872", "body": "should just chain this to the other constructor with null for unicodeCharacter argument?", "bodyText": "should just chain this to the other constructor with null for unicodeCharacter argument?", "bodyHTML": "<p dir=\"auto\">should just chain this to the other constructor with null for unicodeCharacter argument?</p>", "author": "mikehardy", "createdAt": "2020-05-24T17:27:43Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/PeripheralCommand.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.reviewer;\n+\n+import android.view.KeyEvent;\n+\n+import com.ichi2.anki.cardviewer.ViewerCommand.ViewerCommandDef;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import static com.ichi2.anki.cardviewer.ViewerCommand.*;\n+\n+public class PeripheralCommand {\n+    @Nullable\n+    private final Integer mKeyCode;\n+\n+    @Nullable\n+    private final Character mUnicodeCharacter;\n+\n+    @NonNull\n+    private final CardSide mCardSide;\n+\n+    private final @ViewerCommandDef int mCommand;\n+\n+    private PeripheralCommand(int keyCode, @ViewerCommandDef int command, @NonNull CardSide side) {", "originalCommit": "a703469e53861886dcb4ebf4d47333233d4d784f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1OTU0NQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6080#discussion_r429659545", "bodyText": "No.\n        this.mKeyCode = null;\n        this.mUnicodeCharacter = unicodeCharacter;\n\nVs\n        this.mKeyCode = keyCode;\n        this.mUnicodeCharacter = null;\n\nWould consider adding two subclasses, but it doesn't feel worth it. Your call", "author": "david-allison-1", "createdAt": "2020-05-24T17:49:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1Nzg3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1OTg4Nw==", "url": "https://github.com/ankidroid/Anki-Android/pull/6080#discussion_r429659887", "bodyText": "Oh - missed the prior null yes - I see they're going different directions - no problem", "author": "mikehardy", "createdAt": "2020-05-24T17:54:32Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1Nzg3Mg=="}], "type": "inlineReview"}, {"oid": "a527ac5d4cea869d04c43a6daa6c4607a5867d76", "url": "https://github.com/ankidroid/Anki-Android/commit/a527ac5d4cea869d04c43a6daa6c4607a5867d76", "message": "Extract Peripheral Keymap", "committedDate": "2020-05-24T17:46:24Z", "type": "commit"}, {"oid": "73a5e9e8de34867ad8af1df8d74aca566a1a0933", "url": "https://github.com/ankidroid/Anki-Android/commit/73a5e9e8de34867ad8af1df8d74aca566a1a0933", "message": "Peripheral Input Mappings: convert code to config\n\nConverting from code to coded config will later allow us to convert from\nconfig to preferences. This is another layer of abstraction in order to\nintegrate a custom keymap with the Reviewer.", "committedDate": "2020-05-24T17:48:49Z", "type": "commit"}, {"oid": "73a5e9e8de34867ad8af1df8d74aca566a1a0933", "url": "https://github.com/ankidroid/Anki-Android/commit/73a5e9e8de34867ad8af1df8d74aca566a1a0933", "message": "Peripheral Input Mappings: convert code to config\n\nConverting from code to coded config will later allow us to convert from\nconfig to preferences. This is another layer of abstraction in order to\nintegrate a custom keymap with the Reviewer.", "committedDate": "2020-05-24T17:48:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY1OTgzNQ==", "url": "https://github.com/ankidroid/Anki-Android/pull/6080#discussion_r429659835", "body": "![Codacy](https://app.codacy.com/assets/images/favicon.png) Issue found: [Avoid unused imports such as 'com.ichi2.anki.cardviewer.ViewerCommand'](https://app.codacy.com/manual/timrae/Anki-Android/pullRequest?prid=5420335)", "bodyText": "Issue found: Avoid unused imports such as 'com.ichi2.anki.cardviewer.ViewerCommand'", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\"><img src=\"https://camo.githubusercontent.com/ddf013cbb1295b347431f8757e505fb295e9c7dd5043d9a3a0bf610dd0bb0da7/68747470733a2f2f6170702e636f646163792e636f6d2f6173736574732f696d616765732f66617669636f6e2e706e67\" alt=\"Codacy\" data-canonical-src=\"https://app.codacy.com/assets/images/favicon.png\" style=\"max-width: 100%;\"></a> Issue found: <a href=\"https://app.codacy.com/manual/timrae/Anki-Android/pullRequest?prid=5420335\" rel=\"nofollow\">Avoid unused imports such as 'com.ichi2.anki.cardviewer.ViewerCommand'</a></p>", "author": "timrae", "createdAt": "2020-05-24T17:53:46Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/reviewer/PeripheralCommand.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+\n+ This program is free software; you can redistribute it and/or modify it under\n+ the terms of the GNU General Public License as published by the Free Software\n+ Foundation; either version 3 of the License, or (at your option) any later\n+ version.\n+\n+ This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+\n+ You should have received a copy of the GNU General Public License along with\n+ this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.anki.reviewer;\n+\n+import android.view.KeyEvent;\n+\n+import com.ichi2.anki.cardviewer.ViewerCommand.ViewerCommandDef;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import static com.ichi2.anki.cardviewer.ViewerCommand.*;", "originalCommit": "73a5e9e8de34867ad8af1df8d74aca566a1a0933", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}