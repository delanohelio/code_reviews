{"pr_number": 7061, "pr_title": "Enable TV Support for Reviewer", "pr_author": "david-allison-1", "pr_createdAt": "2020-09-11T17:09:41Z", "pr_url": "https://github.com/ankidroid/Anki-Android/pull/7061", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3ODk5NA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7061#discussion_r487178994", "body": "```suggestion\r\n            // COULD_BE_BETTER: This crashes inside the framework if \"left\" is pressed when a submenu is open\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // COULD_BE_BETTER: This crashes inside the framework if right is pressed on the\n          \n          \n            \n                        // COULD_BE_BETTER: This crashes inside the framework if \"left\" is pressed when a submenu is open", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> COULD_BE_BETTER: This crashes inside the framework if <span class=\"x x-first x-last\">right</span> is pressed <span class=\"x x-first x-last\">on the</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"87\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> COULD_BE_BETTER: This crashes inside the framework if <span class=\"x x-first x-last\">\"left\"</span> is pressed <span class=\"x x-first x-last\">when a submenu is open</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "david-allison-1", "createdAt": "2020-09-11T17:11:57Z", "path": "AnkiDroid/src/main/java/com/ichi2/ui/TvNavigationElement.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.ui;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.ContextWrapper;\n+import android.graphics.Rect;\n+import android.os.Build;\n+import android.util.AttributeSet;\n+import android.view.View;\n+\n+import com.ichi2.anki.NavigationDrawerActivity;\n+\n+import androidx.annotation.Nullable;\n+import androidx.annotation.RequiresApi;\n+import androidx.appcompat.app.ActionBar;\n+import androidx.appcompat.app.AppCompatActivity;\n+import timber.log.Timber;\n+\n+/** Hack to allow the navigation and options menu to appear when on a TV\n+ *  This is a view to handle dispatchUnhandledMove without using onKeyUp/Down\n+ *  (which interferes with other view events) */\n+public class TvNavigationElement extends View {\n+    public TvNavigationElement(Context context) {\n+        super(context);\n+    }\n+\n+\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+    }\n+\n+\n+    @SuppressWarnings( {\"unused\", \"RedundantSuppression\"})\n+    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n+        super(context, attrs, defStyleAttr, defStyleRes);\n+    }\n+\n+\n+    @Override\n+    protected void onFocusChanged(boolean gainFocus, int direction, @Nullable Rect previouslyFocusedRect) {\n+        Timber.d(\"onFocusChanged %d\", direction);\n+        super.onFocusChanged(gainFocus, direction, previouslyFocusedRect);\n+    }\n+\n+\n+    @Override\n+    public boolean dispatchUnhandledMove(View focused, int direction) {\n+        Timber.d(\"dispatchUnhandledMove %d\", direction);\n+\n+        AppCompatActivity activity = getActivity();\n+        if (activity == null) {\n+            return super.dispatchUnhandledMove(focused, direction);\n+        }\n+\n+        if (direction == FOCUS_LEFT && activity instanceof NavigationDrawerActivity) {\n+            // COULD_BE_BETTER: This leaves focus on the top item when navigation occurs.\n+            NavigationDrawerActivity navigationDrawerActivity = (NavigationDrawerActivity) activity;\n+            navigationDrawerActivity.toggleDrawer();\n+            navigationDrawerActivity.focusNavigation();\n+            return true;\n+        }\n+\n+        if (direction == FOCUS_RIGHT) {\n+            Timber.d(\"Opening options menu\");\n+            // COULD_BE_BETTER: This crashes inside the framework if right is pressed on the", "originalCommit": "49dca20951b2465447b0a22804739dc098cd9dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzE3OTEzMA==", "url": "https://github.com/ankidroid/Anki-Android/pull/7061#discussion_r487179130", "body": "I couldn't repro a second time", "bodyText": "I couldn't repro a second time", "bodyHTML": "<p dir=\"auto\">I couldn't repro a second time</p>", "author": "david-allison-1", "createdAt": "2020-09-11T17:12:15Z", "path": "AnkiDroid/src/main/java/com/ichi2/ui/TvNavigationElement.java", "diffHunk": "@@ -0,0 +1,115 @@\n+/*\n+ *  Copyright (c) 2020 David Allison <davidallisongithub@gmail.com>\n+ *\n+ *  This program is free software; you can redistribute it and/or modify it under\n+ *  the terms of the GNU General Public License as published by the Free Software\n+ *  Foundation; either version 3 of the License, or (at your option) any later\n+ *  version.\n+ *\n+ *  This program is distributed in the hope that it will be useful, but WITHOUT ANY\n+ *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n+ *  PARTICULAR PURPOSE. See the GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License along with\n+ *  this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package com.ichi2.ui;\n+\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.ContextWrapper;\n+import android.graphics.Rect;\n+import android.os.Build;\n+import android.util.AttributeSet;\n+import android.view.View;\n+\n+import com.ichi2.anki.NavigationDrawerActivity;\n+\n+import androidx.annotation.Nullable;\n+import androidx.annotation.RequiresApi;\n+import androidx.appcompat.app.ActionBar;\n+import androidx.appcompat.app.AppCompatActivity;\n+import timber.log.Timber;\n+\n+/** Hack to allow the navigation and options menu to appear when on a TV\n+ *  This is a view to handle dispatchUnhandledMove without using onKeyUp/Down\n+ *  (which interferes with other view events) */\n+public class TvNavigationElement extends View {\n+    public TvNavigationElement(Context context) {\n+        super(context);\n+    }\n+\n+\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs) {\n+        super(context, attrs);\n+    }\n+\n+\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n+        super(context, attrs, defStyleAttr);\n+    }\n+\n+\n+    @SuppressWarnings( {\"unused\", \"RedundantSuppression\"})\n+    @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)\n+    public TvNavigationElement(Context context, @Nullable AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n+        super(context, attrs, defStyleAttr, defStyleRes);\n+    }\n+\n+\n+    @Override\n+    protected void onFocusChanged(boolean gainFocus, int direction, @Nullable Rect previouslyFocusedRect) {\n+        Timber.d(\"onFocusChanged %d\", direction);\n+        super.onFocusChanged(gainFocus, direction, previouslyFocusedRect);\n+    }\n+\n+\n+    @Override\n+    public boolean dispatchUnhandledMove(View focused, int direction) {\n+        Timber.d(\"dispatchUnhandledMove %d\", direction);\n+\n+        AppCompatActivity activity = getActivity();\n+        if (activity == null) {\n+            return super.dispatchUnhandledMove(focused, direction);\n+        }\n+\n+        if (direction == FOCUS_LEFT && activity instanceof NavigationDrawerActivity) {\n+            // COULD_BE_BETTER: This leaves focus on the top item when navigation occurs.\n+            NavigationDrawerActivity navigationDrawerActivity = (NavigationDrawerActivity) activity;\n+            navigationDrawerActivity.toggleDrawer();\n+            navigationDrawerActivity.focusNavigation();\n+            return true;\n+        }\n+\n+        if (direction == FOCUS_RIGHT) {\n+            Timber.d(\"Opening options menu\");\n+            // COULD_BE_BETTER: This crashes inside the framework if right is pressed on the\n+            openOptionsMenu(activity);\n+            return true;\n+        }\n+        return super.dispatchUnhandledMove(focused, direction);\n+    }\n+\n+\n+    @SuppressLint(\"RestrictedApi\")\n+    private void openOptionsMenu(AppCompatActivity activity) {\n+        // This occasionally glitches graphically on my emulator", "originalCommit": "49dca20951b2465447b0a22804739dc098cd9dff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "18fcc55f7767df6f2b222727b800526cec8ca502", "url": "https://github.com/ankidroid/Anki-Android/commit/18fcc55f7767df6f2b222727b800526cec8ca502", "message": "Android TV: Work around AOSP Menu Bug\n\nSubmenus crashed when pressing the left arrow\n\nWe flatten the Reviewer Options Menu to work around this\n\nRelated: 7227", "committedDate": "2020-09-21T20:43:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNjQ5Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7061#discussion_r492336492", "body": "Actually, now the WebView is out of the picture, this can probably go away", "bodyText": "Actually, now the WebView is out of the picture, this can probably go away", "bodyHTML": "<p dir=\"auto\">Actually, now the WebView is out of the picture, this can probably go away</p>", "author": "david-allison-1", "createdAt": "2020-09-21T20:47:05Z", "path": "AnkiDroid/src/main/java/com/ichi2/anki/Reviewer.java", "diffHunk": "@@ -658,14 +683,72 @@ public boolean onCreateOptionsMenu(Menu menu) {\n         bury_icon.getIcon().mutate().setAlpha(alpha);\n         suspend_icon.getIcon().mutate().setAlpha(alpha);\n \n-        MenuItemCompat.setActionProvider(menu.findItem(R.id.action_schedule), new ScheduleProvider(this));\n+        setupSubMenu(menu, R.id.action_schedule, new ScheduleProvider(this));\n         return super.onCreateOptionsMenu(menu);\n     }\n \n \n+    @SuppressLint(\"RestrictedApi\") // setIconTintList\n+    private void displayIconsOnTv(Menu menu) {\n+        try {\n+            if (AndroidUiUtils.isRunningOnTv(this) && menu instanceof MenuBuilder) {\n+                MenuBuilder m = (MenuBuilder) menu;\n+                m.setOptionalIconsVisible(true);\n+            }\n+\n+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n+                for (int i = 0; i < menu.size(); i++) {\n+                    MenuItem m = menu.getItem(i);\n+\n+                    if (m == null || isFlagResource(m.getItemId())) {\n+                        continue;\n+                    }\n+\n+                    int color = Themes.getColorFromAttr(this, R.attr.navDrawerItemColor);\n+                    m.setIconTintList(ColorStateList.valueOf(color));\n+\n+                }\n+            }\n+\n+        } catch (Exception e) {\n+            Timber.w(e, \"Failed to display icons\");\n+        } catch (Error e) {\n+            Timber.w(e, \"Failed to display icons\");\n+        }\n+    }\n+\n+\n+    private boolean isFlagResource(int itemId) {\n+        return itemId == R.id.action_flag_four\n+                || itemId == R.id.action_flag_three\n+                || itemId == R.id.action_flag_two\n+                || itemId == R.id.action_flag_one;\n+    }\n     @Override\n     public boolean onKeyDown(int keyCode, KeyEvent event) {\n-        return mProcessor.onKeyDown(keyCode, event) || super.onKeyDown(keyCode, event);\n+        if (mProcessor.onKeyDown(keyCode, event) || super.onKeyDown(keyCode, event)) {\n+            return true;\n+        }\n+\n+        // Process DPAD Up/Down to focus the TV Controls\n+        if (keyCode != KeyEvent.KEYCODE_DPAD_DOWN && keyCode != KeyEvent.KEYCODE_DPAD_UP) {\n+            return false;\n+        }\n+\n+        // HACK: This shouldn't be required, as the navigation should handle this.\n+        if (isDrawerOpen()) {\n+            return false;\n+        }\n+\n+        // HACK: We should be performing this in the base class, or allowing the view to be focused by the keyboard.", "originalCommit": "18fcc55f7767df6f2b222727b800526cec8ca502", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NTk3Mg==", "url": "https://github.com/ankidroid/Anki-Android/pull/7061#discussion_r492365972", "bodyText": "Nope \ud83d\udc4e", "author": "david-allison-1", "createdAt": "2020-09-21T21:50:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMzNjQ5Mg=="}], "type": "inlineReview"}, {"oid": "04e964872e8672bbcf2a7f4d1fd8ef3c64acca02", "url": "https://github.com/ankidroid/Anki-Android/commit/04e964872e8672bbcf2a7f4d1fd8ef3c64acca02", "message": "Android TV: Work around AOSP Menu Bug\n\nSubmenus crashed when pressing the left arrow\n\nWe flatten the Reviewer Options Menu to work around this\n\nRelated: 7227", "committedDate": "2020-09-21T21:47:00Z", "type": "forcePushed"}, {"oid": "1efb51b49140d47d9e7fd324b473714eb8571dea", "url": "https://github.com/ankidroid/Anki-Android/commit/1efb51b49140d47d9e7fd324b473714eb8571dea", "message": "Enable TV Support for Reviewer\n\nThis is fairly hacky - we use a hidden view to handle the additional nav events\nto show the nav drawer/options.\n\nWe get a crash from the framework when navigating back with submenus\n(flags, for example) - 7227\n\nFixes 1643", "committedDate": "2020-09-22T00:49:01Z", "type": "commit"}, {"oid": "13aecc913657f47bf212c165ebd55fc0f94866b2", "url": "https://github.com/ankidroid/Anki-Android/commit/13aecc913657f47bf212c165ebd55fc0f94866b2", "message": "TV: Add Icons to Menu", "committedDate": "2020-09-22T00:49:02Z", "type": "commit"}, {"oid": "f73a888545aa7777c8489ab3e61ebb6f6862d27c", "url": "https://github.com/ankidroid/Anki-Android/commit/f73a888545aa7777c8489ab3e61ebb6f6862d27c", "message": "Android TV: Work around AOSP Menu Bug\n\nSubmenus crashed when pressing the left arrow\n\nWe flatten the Reviewer Options Menu to work around this\n\nRelated: 7227", "committedDate": "2020-09-22T00:49:03Z", "type": "commit"}, {"oid": "f73a888545aa7777c8489ab3e61ebb6f6862d27c", "url": "https://github.com/ankidroid/Anki-Android/commit/f73a888545aa7777c8489ab3e61ebb6f6862d27c", "message": "Android TV: Work around AOSP Menu Bug\n\nSubmenus crashed when pressing the left arrow\n\nWe flatten the Reviewer Options Menu to work around this\n\nRelated: 7227", "committedDate": "2020-09-22T00:49:03Z", "type": "forcePushed"}]}