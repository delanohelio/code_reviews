{"pr_number": 3551, "pr_title": "CAMEL-14514: Improve performance of Camel Google Pub/Sub", "pr_author": "alvinkwekel", "pr_createdAt": "2020-02-06T23:38:41Z", "pr_url": "https://github.com/apache/camel/pull/3551", "merge_commit": "5ef63390a07ac6aace7162718b98344897c90aa8", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI0MDIzNQ==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376240235", "body": "Please use explicit imports", "bodyText": "Please use explicit imports", "bodyHTML": "<p dir=\"auto\">Please use explicit imports</p>", "author": "oscerd", "createdAt": "2020-02-07T07:03:23Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -16,14 +16,11 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n-import java.util.concurrent.ExecutorService;\n-\n-import com.google.api.services.pubsub.Pubsub;\n-import org.apache.camel.Component;\n-import org.apache.camel.Consumer;\n-import org.apache.camel.ExchangePattern;\n-import org.apache.camel.Processor;\n-import org.apache.camel.Producer;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+import org.apache.camel.*;", "originalCommit": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "cc1408d7804ffd8b4564633753d513d09f8a92e3", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex eaf6345c9f2..732f78d664a 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -20,7 +20,11 @@ import com.google.cloud.pubsub.v1.Publisher;\n import com.google.common.cache.Cache;\n import com.google.common.cache.CacheBuilder;\n import com.google.common.cache.RemovalListener;\n-import org.apache.camel.*;\n+import org.apache.camel.Component;\n+import org.apache.camel.Consumer;\n+import org.apache.camel.ExchangePattern;\n+import org.apache.camel.Processor;\n+import org.apache.camel.Producer;\n import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.UriEndpoint;\n import org.apache.camel.spi.UriParam;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5MzUyMQ==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376293521", "body": "Can you please run your build using the source check `mvn -Psourcecheck clean install` to fix the checkstyle issues, for example the missing license header in this class", "bodyText": "Can you please run your build using the source check mvn -Psourcecheck clean install to fix the checkstyle issues, for example the missing license header in this class", "bodyHTML": "<p dir=\"auto\">Can you please run your build using the source check <code>mvn -Psourcecheck clean install</code> to fix the checkstyle issues, for example the missing license header in this class</p>", "author": "omarsmak", "createdAt": "2020-02-07T09:31:41Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.apache.camel.component.google.pubsub.consumer;", "originalCommit": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "03147989f1349179e4695e487c47f70b6e4116e6", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java\nindex 6f7de0d3219..0e851416d3a 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/consumer/CamelMessageReceiver.java\n", "chunk": "@@ -1,3 +1,19 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n package org.apache.camel.component.google.pubsub.consumer;\n \n import com.google.cloud.pubsub.v1.AckReplyConsumer;\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376296677", "body": "Any reason to remove the private constructor since it was meant to be a singleton class? ", "bodyText": "Any reason to remove the private constructor since it was meant to be a singleton class?", "bodyHTML": "<p dir=\"auto\">Any reason to remove the private constructor since it was meant to be a singleton class?</p>", "author": "omarsmak", "createdAt": "2020-02-07T09:38:46Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java", "diffHunk": "@@ -19,16 +19,12 @@\n public final class GooglePubsubConstants {\n \n     public static final String MESSAGE_ID = \"CamelGooglePubsub.MessageId\";\n-    public static final String ACK_ID = \"CamelGooglePubsub.MsgAckId\";\n     public static final String PUBLISH_TIME = \"CamelGooglePubsub.PublishTime\";\n     public static final String ATTRIBUTES = \"CamelGooglePubsub.Attributes\";\n-    public static final String ACK_DEADLINE = \"CamelGooglePubsub.AckDeadline\";\n \n     public enum AckMode {\n         AUTO, NONE\n     }\n \n-    private GooglePubsubConstants() {", "originalCommit": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMjI2Nw==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376612267", "bodyText": "Right, I've introduced it again", "author": "alvinkwekel", "createdAt": "2020-02-07T21:18:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMjU2OA==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376612568", "bodyText": "Failing tests were due to missing @BindToRegistry(\"prop\")", "author": "alvinkwekel", "createdAt": "2020-02-07T21:19:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI5NjY3Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2b1ff013ebca78e8943037799fbc5d06291175db", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java\nindex 877b800f982..b3515e80611 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubConstants.java\n", "chunk": "@@ -26,5 +26,7 @@ public final class GooglePubsubConstants {\n         AUTO, NONE\n     }\n \n+    private GooglePubsubConstants() {\n+        // not called\n+    }\n }\n-\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMwMDAwOA==", "url": "https://github.com/apache/camel/pull/3551#discussion_r376300008", "body": "My IDE reports that `publisher` reports this could be `null`, does it make sense to check for nullity here?", "bodyText": "My IDE reports that publisher reports this could be null, does it make sense to check for nullity here?", "bodyHTML": "<p dir=\"auto\">My IDE reports that <code>publisher</code> reports this could be <code>null</code>, does it make sense to check for nullity here?</p>", "author": "omarsmak", "createdAt": "2020-02-07T09:45:57Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +58,24 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        publisher.shutdown();", "originalCommit": "d2af501f744247cf6b035d9f78e2ba8584d5e3c2", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "81853692cb264a4928eecfbe0cec0a6be39fa39b", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex eaf6345c9f2..d003f8a8132 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -63,6 +67,9 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n \n     private RemovalListener<String, Publisher> removalListener = removal -> {\n         Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n         publisher.shutdown();\n         try {\n             publisher.awaitTermination(1, TimeUnit.MINUTES);\n", "next_change": {"commit": "564d67656c6f5ce1963d5276202ebdabea367515", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex d003f8a8132..3da7156f50e 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -65,25 +65,6 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private RemovalListener<String, Publisher> removalListener = removal -> {\n-        Publisher publisher = removal.getValue();\n-        if (publisher == null) {\n-            return;\n-        }\n-        publisher.shutdown();\n-        try {\n-            publisher.awaitTermination(1, TimeUnit.MINUTES);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    };\n-\n-    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n-            .expireAfterWrite(3, TimeUnit.MINUTES)\n-            .maximumSize(100)\n-            .removalListener(removalListener)\n-            .build();\n-\n     public GooglePubsubEndpoint(String uri, Component component, String remaining) {\n         super(uri, component);\n \n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 3da7156f50e..ccf021d8bd1 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -62,6 +62,12 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n+    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n+    private Integer maxMessagesPerPoll = 1;\n+\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;\n+\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n", "next_change": {"commit": "93b21429f5ec301d441b26111ff5d43507e46973", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex ccf021d8bd1..2b6ffaffc79 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private Boolean synchronousPull = false;\n+    private boolean synchronousPull = false;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": {"commit": "1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 2b6ffaffc79..73e34f4911b 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private boolean synchronousPull = false;\n+    private boolean synchronousPull;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTE5Nw==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369197", "body": "There is some API on CamelContext via ExecutorServiceStrategy that can shutdown thread pools graceful and is recommened to use", "bodyText": "There is some API on CamelContext via ExecutorServiceStrategy that can shutdown thread pools graceful and is recommened to use", "bodyHTML": "<p dir=\"auto\">There is some API on CamelContext via ExecutorServiceStrategy that can shutdown thread pools graceful and is recommened to use</p>", "author": "davsclaus", "createdAt": "2020-02-14T10:55:30Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();", "originalCommit": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzA4OQ==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933089", "bodyText": "This is cleanup of the cached publisher with no associated thread pool.\nIf you are referring to the consumer thread pool. I've changed that to use the graceful shutdown: https://github.com/apache/camel/pull/3551/files#diff-8becc735c075d032757f24805f234520R70", "author": "alvinkwekel", "createdAt": "2020-02-16T21:01:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTE5Nw=="}], "type": "inlineReview", "revised_code": {"commit": "2b1ff013ebca78e8943037799fbc5d06291175db", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 5d4a2ce696b..eaf6345c9f2 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -67,9 +63,6 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n \n     private RemovalListener<String, Publisher> removalListener = removal -> {\n         Publisher publisher = removal.getValue();\n-        if (publisher == null) {\n-            return;\n-        }\n         publisher.shutdown();\n         try {\n             publisher.awaitTermination(1, TimeUnit.MINUTES);\n", "next_change": {"commit": "81853692cb264a4928eecfbe0cec0a6be39fa39b", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex eaf6345c9f2..d003f8a8132 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -63,6 +67,9 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n \n     private RemovalListener<String, Publisher> removalListener = removal -> {\n         Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n         publisher.shutdown();\n         try {\n             publisher.awaitTermination(1, TimeUnit.MINUTES);\n", "next_change": {"commit": "564d67656c6f5ce1963d5276202ebdabea367515", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex d003f8a8132..3da7156f50e 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -65,25 +65,6 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private RemovalListener<String, Publisher> removalListener = removal -> {\n-        Publisher publisher = removal.getValue();\n-        if (publisher == null) {\n-            return;\n-        }\n-        publisher.shutdown();\n-        try {\n-            publisher.awaitTermination(1, TimeUnit.MINUTES);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    };\n-\n-    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n-            .expireAfterWrite(3, TimeUnit.MINUTES)\n-            .maximumSize(100)\n-            .removalListener(removalListener)\n-            .build();\n-\n     public GooglePubsubEndpoint(String uri, Component component, String remaining) {\n         super(uri, component);\n \n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 3da7156f50e..ccf021d8bd1 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -62,6 +62,12 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n+    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n+    private Integer maxMessagesPerPoll = 1;\n+\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;\n+\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n", "next_change": {"commit": "93b21429f5ec301d441b26111ff5d43507e46973", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex ccf021d8bd1..2b6ffaffc79 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private Boolean synchronousPull = false;\n+    private boolean synchronousPull = false;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": {"commit": "1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 2b6ffaffc79..73e34f4911b 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private boolean synchronousPull = false;\n+    private boolean synchronousPull;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": null}]}}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369546", "body": "These are hardcoded values, why these values? And would it make sense for users to be able to cofigure them", "bodyText": "These are hardcoded values, why these values? And would it make sense for users to be able to cofigure them", "bodyHTML": "<p dir=\"auto\">These are hardcoded values, why these values? And would it make sense for users to be able to cofigure them</p>", "author": "davsclaus", "createdAt": "2020-02-14T10:56:14Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -57,16 +62,27 @@\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private Pubsub pubsub;\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(1, TimeUnit.MINUTES);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()", "originalCommit": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM3MDY2MA==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379370660", "bodyText": "Its possible better to have such cache on the component so there is a single cache for all endpoints. And also shutdown the cache whe the componet stop", "author": "davsclaus", "createdAt": "2020-02-14T10:58:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzE0Mg==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933142", "bodyText": "I've moved the cache to the component and made the values configurable.", "author": "alvinkwekel", "createdAt": "2020-02-16T21:02:59Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTU0Ng=="}], "type": "inlineReview", "revised_code": {"commit": "564d67656c6f5ce1963d5276202ebdabea367515", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 5d4a2ce696b..3da7156f50e 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -65,25 +65,6 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private RemovalListener<String, Publisher> removalListener = removal -> {\n-        Publisher publisher = removal.getValue();\n-        if (publisher == null) {\n-            return;\n-        }\n-        publisher.shutdown();\n-        try {\n-            publisher.awaitTermination(1, TimeUnit.MINUTES);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    };\n-\n-    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n-            .expireAfterWrite(3, TimeUnit.MINUTES)\n-            .maximumSize(100)\n-            .removalListener(removalListener)\n-            .build();\n-\n     public GooglePubsubEndpoint(String uri, Component component, String remaining) {\n         super(uri, component);\n \n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 3da7156f50e..ccf021d8bd1 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -62,6 +62,12 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n+    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n+    private Integer maxMessagesPerPoll = 1;\n+\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;\n+\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n", "next_change": {"commit": "93b21429f5ec301d441b26111ff5d43507e46973", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex ccf021d8bd1..2b6ffaffc79 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private Boolean synchronousPull = false;\n+    private boolean synchronousPull = false;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": {"commit": "1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 2b6ffaffc79..73e34f4911b 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private boolean synchronousPull = false;\n+    private boolean synchronousPull;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": null}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTg2OA==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379369868", "body": "You need to call configureConsumer", "bodyText": "You need to call configureConsumer", "bodyHTML": "<p dir=\"auto\">You need to call configureConsumer</p>", "author": "davsclaus", "createdAt": "2020-02-14T10:56:57Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -108,9 +122,7 @@ public Producer createProducer() throws Exception {\n     public Consumer createConsumer(Processor processor) throws Exception {\n         afterPropertiesSet();\n         setExchangePattern(ExchangePattern.InOnly);\n-        GooglePubsubConsumer consumer = new GooglePubsubConsumer(this, processor);\n-        configureConsumer(consumer);\n-        return consumer;\n+        return new GooglePubsubConsumer(this, processor);", "originalCommit": "e9f6745757c24e62f9f0f094c4bf0a18c25bf3f2", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzMzE1OQ==", "url": "https://github.com/apache/camel/pull/3551#discussion_r379933159", "bodyText": "Whoops, corrected", "author": "alvinkwekel", "createdAt": "2020-02-16T21:03:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM2OTg2OA=="}], "type": "inlineReview", "revised_code": {"commit": "733e207c1496739751bce48eb9d6e0e6af696fc7", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 5d4a2ce696b..ba0b6d164d7 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -122,7 +122,9 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     public Consumer createConsumer(Processor processor) throws Exception {\n         afterPropertiesSet();\n         setExchangePattern(ExchangePattern.InOnly);\n-        return new GooglePubsubConsumer(this, processor);\n+        GooglePubsubConsumer consumer = new GooglePubsubConsumer(this, processor);\n+        configureConsumer(consumer);\n+        return consumer;\n     }\n \n     public ExecutorService createExecutor() {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMDkxOA==", "url": "https://github.com/apache/camel/pull/3551#discussion_r384310918", "body": "boolean", "bodyText": "boolean", "bodyHTML": "<p dir=\"auto\">boolean</p>", "author": "davsclaus", "createdAt": "2020-02-26T07:22:57Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java", "diffHunk": "@@ -60,14 +65,12 @@\n     @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n     private Integer maxMessagesPerPoll = 1;\n \n-    @UriParam(name = \"connectionFactory\", description = \"ConnectionFactory to obtain connection to PubSub Service. If non provided the default one will be used\")\n-    private GooglePubsubConnectionFactory connectionFactory;\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;", "originalCommit": "6ee7d191b6b1433d2014002fc74404c08938a441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d163cb161b7f440c7b068e63416850de0f4a0f89", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex ccf021d8bd1..eaf6345c9f2 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -62,15 +58,25 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n-    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n-    private Integer maxMessagesPerPoll = 1;\n-\n-    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private Boolean synchronousPull = false;\n-\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(1, TimeUnit.MINUTES);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n+            .expireAfterWrite(3, TimeUnit.MINUTES)\n+            .maximumSize(100)\n+            .removalListener(removalListener)\n+            .build();\n+\n     public GooglePubsubEndpoint(String uri, Component component, String remaining) {\n         super(uri, component);\n \n", "next_change": {"commit": "564d67656c6f5ce1963d5276202ebdabea367515", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex eaf6345c9f2..3da7156f50e 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -61,22 +65,6 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n-    private RemovalListener<String, Publisher> removalListener = removal -> {\n-        Publisher publisher = removal.getValue();\n-        publisher.shutdown();\n-        try {\n-            publisher.awaitTermination(1, TimeUnit.MINUTES);\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    };\n-\n-    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n-            .expireAfterWrite(3, TimeUnit.MINUTES)\n-            .maximumSize(100)\n-            .removalListener(removalListener)\n-            .build();\n-\n     public GooglePubsubEndpoint(String uri, Component component, String remaining) {\n         super(uri, component);\n \n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 3da7156f50e..ccf021d8bd1 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -62,6 +62,12 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     @UriParam(name = \"concurrentConsumers\", description = \"The number of parallel streams consuming from the subscription\", defaultValue = \"1\")\n     private Integer concurrentConsumers = 1;\n \n+    @UriParam(name = \"maxMessagesPerPoll\", description = \"The max number of messages to receive from the server in a single API call\", defaultValue = \"1\")\n+    private Integer maxMessagesPerPoll = 1;\n+\n+    @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n+    private Boolean synchronousPull = false;\n+\n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n \n", "next_change": {"commit": "93b21429f5ec301d441b26111ff5d43507e46973", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex ccf021d8bd1..2b6ffaffc79 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private Boolean synchronousPull = false;\n+    private boolean synchronousPull = false;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": {"commit": "1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\nindex 2b6ffaffc79..73e34f4911b 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubEndpoint.java\n", "chunk": "@@ -66,7 +66,7 @@ public class GooglePubsubEndpoint extends DefaultEndpoint {\n     private Integer maxMessagesPerPoll = 1;\n \n     @UriParam(name = \"synchronousPull\", description = \"Synchronously pull batches of messages\", defaultValue = \"false\")\n-    private boolean synchronousPull = false;\n+    private boolean synchronousPull;\n \n     @UriParam(defaultValue = \"AUTO\", enums = \"AUTO,NONE\", description = \"AUTO = exchange gets ack'ed/nack'ed on completion. NONE = downstream process has to ack/nack explicitly\")\n     private GooglePubsubConstants.AckMode ackMode = GooglePubsubConstants.AckMode.AUTO;\n", "next_change": null}]}}]}}]}}]}}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxMjY5Mw==", "url": "https://github.com/apache/camel/pull/3551#discussion_r384312693", "body": "Avoid using commons lang - Camel has API also for checking if string is empty - StringHelper / ObjectHelper etc.", "bodyText": "Avoid using commons lang - Camel has API also for checking if string is empty - StringHelper / ObjectHelper etc.", "bodyHTML": "<p dir=\"auto\">Avoid using commons lang - Camel has API also for checking if string is empty - StringHelper / ObjectHelper etc.</p>", "author": "davsclaus", "createdAt": "2020-02-26T07:28:23Z", "path": "components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java", "diffHunk": "@@ -16,19 +16,80 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n+import java.io.IOException;\n import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n \n+import com.google.api.gax.core.CredentialsProvider;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.MessageReceiver;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.Subscriber;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStub;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStubSettings;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n import org.apache.camel.Endpoint;\n+import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n+import org.apache.commons.lang3.StringUtils;", "originalCommit": "6ee7d191b6b1433d2014002fc74404c08938a441", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "d163cb161b7f440c7b068e63416850de0f4a0f89", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex 70983e24ff2..c1c9dedb4f6 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -16,31 +16,11 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n-import java.io.IOException;\n import java.util.Map;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.TimeUnit;\n \n-import com.google.api.gax.core.CredentialsProvider;\n-import com.google.api.gax.core.NoCredentialsProvider;\n-import com.google.api.gax.grpc.GrpcTransportChannel;\n-import com.google.api.gax.rpc.FixedTransportChannelProvider;\n-import com.google.api.gax.rpc.TransportChannelProvider;\n-import com.google.cloud.pubsub.v1.MessageReceiver;\n-import com.google.cloud.pubsub.v1.Publisher;\n-import com.google.cloud.pubsub.v1.Subscriber;\n-import com.google.cloud.pubsub.v1.stub.SubscriberStub;\n-import com.google.cloud.pubsub.v1.stub.SubscriberStubSettings;\n-import com.google.common.cache.Cache;\n-import com.google.common.cache.CacheBuilder;\n-import com.google.common.cache.RemovalListener;\n-import io.grpc.ManagedChannel;\n-import io.grpc.ManagedChannelBuilder;\n import org.apache.camel.Endpoint;\n-import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n-import org.apache.commons.lang3.StringUtils;\n \n /**\n  * Represents the component that manages {@link GooglePubsubEndpoint}.\n", "next_change": {"commit": "564d67656c6f5ce1963d5276202ebdabea367515", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex c1c9dedb4f6..a27a9176a2d 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -17,8 +17,15 @@\n package org.apache.camel.component.google.pubsub;\n \n import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n \n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import com.google.common.cache.RemovalListener;\n import org.apache.camel.Endpoint;\n+import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n \n", "next_change": {"commit": "f50fabd4ee9ecc7abe2392be2bc7091e4679ea71", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex a27a9176a2d..cd2a4416ef7 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -16,18 +16,29 @@\n  */\n package org.apache.camel.component.google.pubsub;\n \n+import java.io.IOException;\n import java.util.Map;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.TimeUnit;\n \n+import com.google.api.gax.core.CredentialsProvider;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.MessageReceiver;\n import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.Subscriber;\n import com.google.common.cache.Cache;\n import com.google.common.cache.CacheBuilder;\n import com.google.common.cache.RemovalListener;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n import org.apache.camel.Endpoint;\n import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n+import org.apache.commons.lang3.StringUtils;\n \n /**\n  * Represents the component that manages {@link GooglePubsubEndpoint}.\n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex cd2a4416ef7..fd1d89405af 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -40,6 +37,11 @@ import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n import org.apache.commons.lang3.StringUtils;\n \n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+\n /**\n  * Represents the component that manages {@link GooglePubsubEndpoint}.\n  */\n", "next_change": {"commit": "777a80d1bd7419efd2392cabfb55995724436af2", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex fd1d89405af..abf8800e2d8 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -37,11 +42,6 @@ import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n import org.apache.commons.lang3.StringUtils;\n \n-import java.io.IOException;\n-import java.util.Map;\n-import java.util.concurrent.ExecutionException;\n-import java.util.concurrent.TimeUnit;\n-\n /**\n  * Represents the component that manages {@link GooglePubsubEndpoint}.\n  */\n", "next_change": {"commit": "93b21429f5ec301d441b26111ff5d43507e46973", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex abf8800e2d8..f775b123dd4 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -40,7 +40,7 @@ import org.apache.camel.Endpoint;\n import org.apache.camel.spi.Metadata;\n import org.apache.camel.spi.annotations.Component;\n import org.apache.camel.support.DefaultComponent;\n-import org.apache.commons.lang3.StringUtils;\n+import org.apache.camel.util.StringHelper;\n \n /**\n  * Represents the component that manages {@link GooglePubsubEndpoint}.\n", "next_change": null}]}}]}}]}}]}}, {"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex c1c9dedb4f6..a27a9176a2d 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -28,6 +35,43 @@ import org.apache.camel.support.DefaultComponent;\n @Component(\"google-pubsub\")\n public class GooglePubsubComponent extends DefaultComponent {\n \n+    @Metadata(\n+            label = \"producer\",\n+            description = \"Maximum number of producers to cache. This could be increased if you have producers for lots of different topics.\"\n+    )\n+    private int publisherCacheSize = 100;\n+\n+    @Metadata(\n+            label = \"producer\",\n+            description = \"How many milliseconds should each producer stay alive in the cache.\"\n+    )\n+    private int publisherCacheTimeout = 180000;\n+\n+    @Metadata(\n+            label = \"producer\",\n+            description = \"How many milliseconds should a producer be allowed to terminate.\"\n+    )\n+    private int publisherTerminationTimeout = 60000;\n+\n+    private RemovalListener<String, Publisher> removalListener = removal -> {\n+        Publisher publisher = removal.getValue();\n+        if (publisher == null) {\n+            return;\n+        }\n+        publisher.shutdown();\n+        try {\n+            publisher.awaitTermination(publisherTerminationTimeout, TimeUnit.MILLISECONDS);\n+        } catch (Exception e) {\n+            throw new RuntimeException(e);\n+        }\n+    };\n+\n+    private Cache<String, Publisher> cachedPublishers = CacheBuilder.newBuilder()\n+            .expireAfterWrite(publisherCacheTimeout, TimeUnit.MILLISECONDS)\n+            .maximumSize(publisherCacheSize)\n+            .removalListener(removalListener)\n+            .build();\n+\n     public GooglePubsubComponent() {\n     }\n \n", "next_change": {"commit": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex a27a9176a2d..fd1d89405af 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -72,6 +91,8 @@ public class GooglePubsubComponent extends DefaultComponent {\n             .removalListener(removalListener)\n             .build();\n \n+    SubscriberStub subscriberStub;\n+\n     public GooglePubsubComponent() {\n     }\n \n", "next_change": {"commit": "777a80d1bd7419efd2392cabfb55995724436af2", "changed_code": [{"header": "diff --git a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\nindex fd1d89405af..abf8800e2d8 100644\n--- a/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n+++ b/components/camel-google-pubsub/src/main/java/org/apache/camel/component/google/pubsub/GooglePubsubComponent.java\n", "chunk": "@@ -91,8 +93,6 @@ public class GooglePubsubComponent extends DefaultComponent {\n             .removalListener(removalListener)\n             .build();\n \n-    SubscriberStub subscriberStub;\n-\n     public GooglePubsubComponent() {\n     }\n \n", "next_change": null}]}}]}}]}}]}}, {"oid": "d163cb161b7f440c7b068e63416850de0f4a0f89", "url": "https://github.com/apache/camel/commit/d163cb161b7f440c7b068e63416850de0f4a0f89", "message": "CAMEL-14514: Improve performance of Camel Google Pub/Sub\n\nUse google-cloud-pubsub library\nAsynchronous pull\nCache producers", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "2b1ff013ebca78e8943037799fbc5d06291175db", "url": "https://github.com/apache/camel/commit/2b1ff013ebca78e8943037799fbc5d06291175db", "message": "CAMEL-14514: Private constructor to constants class", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "cc1408d7804ffd8b4564633753d513d09f8a92e3", "url": "https://github.com/apache/camel/commit/cc1408d7804ffd8b4564633753d513d09f8a92e3", "message": "CAMEL-14514: Cleanup and make imports explicit", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "81853692cb264a4928eecfbe0cec0a6be39fa39b", "url": "https://github.com/apache/camel/commit/81853692cb264a4928eecfbe0cec0a6be39fa39b", "message": "CAMEL-14514: Null check in removal listener", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "03147989f1349179e4695e487c47f70b6e4116e6", "url": "https://github.com/apache/camel/commit/03147989f1349179e4695e487c47f70b6e4116e6", "message": "CAMEL-14514: Add class licence headers", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "f34c7d4a29031053fff964e68da63e1c4e223c81", "url": "https://github.com/apache/camel/commit/f34c7d4a29031053fff964e68da63e1c4e223c81", "message": "CAMEL-14514: Correct test properties", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "2b7a411f7301a7f5c3c030efddcc11e680049189", "url": "https://github.com/apache/camel/commit/2b7a411f7301a7f5c3c030efddcc11e680049189", "message": "CAMEL-14514: Update documentation", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "b92cbfa9b3d632c93c3ab0b88fca625b74c8c77a", "url": "https://github.com/apache/camel/commit/b92cbfa9b3d632c93c3ab0b88fca625b74c8c77a", "message": "CAMEL-14514: Imports ordering", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "6e42e70e638d4e91223b2fcf7c72d6f23265a398", "url": "https://github.com/apache/camel/commit/6e42e70e638d4e91223b2fcf7c72d6f23265a398", "message": "CAMEL-14514: Update Karaf feature", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "0b9a5a043ad8c3baee855d68289c04c0b93ba841", "url": "https://github.com/apache/camel/commit/0b9a5a043ad8c3baee855d68289c04c0b93ba841", "message": "fixup! CAMEL-14514: Update Karaf feature", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "f48ac70d4450849067e0434b0572d01737faad29", "url": "https://github.com/apache/camel/commit/f48ac70d4450849067e0434b0572d01737faad29", "message": "CAMEL-14514: Explicitly manage GRPC dependencies\n\nTo avoid conflicts between the GRPC component and Google Pub/Sub component", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "733e207c1496739751bce48eb9d6e0e6af696fc7", "url": "https://github.com/apache/camel/commit/733e207c1496739751bce48eb9d6e0e6af696fc7", "message": "CAMEL-14514: Call configureConsumer", "committedDate": "2020-02-26T22:32:47Z", "type": "commit"}, {"oid": "564d67656c6f5ce1963d5276202ebdabea367515", "url": "https://github.com/apache/camel/commit/564d67656c6f5ce1963d5276202ebdabea367515", "message": "CAMEL-14514: Move producer cache from endpoint to component and make it configurable", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "198997647e0f22388da784064fd09b09d8e94212", "url": "https://github.com/apache/camel/commit/198997647e0f22388da784064fd09b09d8e94212", "message": "CAMEL-14514: Don't wrap OSGi bundles", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "8eae1ebc4330861004215bc6c1170aa6dffb8c43", "url": "https://github.com/apache/camel/commit/8eae1ebc4330861004215bc6c1170aa6dffb8c43", "message": "CAMEL-14514: Graceful shutdown consumer thread pool", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "0b293fc7d466eb5bab5d85a79266b49d1f39296a", "url": "https://github.com/apache/camel/commit/0b293fc7d466eb5bab5d85a79266b49d1f39296a", "message": "CAMEL-14514: Unnecessary set parallel count to default", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "5f5efd0f0fb3ec52b2a71607fedcf532fc684851", "url": "https://github.com/apache/camel/commit/5f5efd0f0fb3ec52b2a71607fedcf532fc684851", "message": "CAMEL-14514: Update Google Guava", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "69b2b36171c30a026b402891a059eb573b94e47b", "url": "https://github.com/apache/camel/commit/69b2b36171c30a026b402891a059eb573b94e47b", "message": "CAMEL-14514: Generated documentation update", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "da62c17dccfb5e20f02e5e564f85048ef2e64ce9", "url": "https://github.com/apache/camel/commit/da62c17dccfb5e20f02e5e564f85048ef2e64ce9", "message": "CAMEL-14514: Handle null message attributes", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "67f9ae97f5c032ba19e8d3205cea337cae8fa5dd", "url": "https://github.com/apache/camel/commit/67f9ae97f5c032ba19e8d3205cea337cae8fa5dd", "message": "fixup! CAMEL-14514: Handle null message attributes", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "f50fabd4ee9ecc7abe2392be2bc7091e4679ea71", "url": "https://github.com/apache/camel/commit/f50fabd4ee9ecc7abe2392be2bc7091e4679ea71", "message": "CAMEL-14514: Draft implementation of configurable endpoint\n\nTo use with local Pub/Sub emulator", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "457889b3c744bd5ede699e133063eecd85744fe5", "url": "https://github.com/apache/camel/commit/457889b3c744bd5ede699e133063eecd85744fe5", "message": "CAMEL-14514: Rename async acknowledge", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "fbe49746e3facbcf5f60871b5d752f5d430515ac", "url": "https://github.com/apache/camel/commit/fbe49746e3facbcf5f60871b5d752f5d430515ac", "message": "CAMEL-14514: Add sync pull", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "4ac4eb9077e67325843e1ce49502ad879bdf55c5", "url": "https://github.com/apache/camel/commit/4ac4eb9077e67325843e1ce49502ad879bdf55c5", "message": "CAMEL-14514: Ignore exceptions when creating test topics and subscriptions", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "1c160af9cd51047612ab2ddd44057fd533edbf2e", "url": "https://github.com/apache/camel/commit/1c160af9cd51047612ab2ddd44057fd533edbf2e", "message": "CAMEL-14514: Integration test with synchronous pull to avoid issues", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "ed5fd531a74aadeadb77f2a33155ae0122cf6f85", "url": "https://github.com/apache/camel/commit/ed5fd531a74aadeadb77f2a33155ae0122cf6f85", "message": "CAMEL-14514: Minor code formatting", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "5fee3702ac0219c22d85eb1613885404335968bf", "url": "https://github.com/apache/camel/commit/5fee3702ac0219c22d85eb1613885404335968bf", "message": "CAMEL-14514: Serialize payload", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "272b3983e00487da99f99828e71cb27bd4b563e9", "url": "https://github.com/apache/camel/commit/272b3983e00487da99f99828e71cb27bd4b563e9", "message": "CAMEL-14514: Correct working of grouped exchange", "committedDate": "2020-02-26T22:32:48Z", "type": "commit"}, {"oid": "777a80d1bd7419efd2392cabfb55995724436af2", "url": "https://github.com/apache/camel/commit/777a80d1bd7419efd2392cabfb55995724436af2", "message": "CAMEL-14514: Correct source check issues", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "6df7a6ceb5f3a5cba44461d1c480cfc6b2135a7c", "url": "https://github.com/apache/camel/commit/6df7a6ceb5f3a5cba44461d1c480cfc6b2135a7c", "message": "CAMEL-14514: Pass subscription name when acknowledging synchronously", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "3ef5ecf93269742ce17cfa6d64d41d7eb7dbb05d", "url": "https://github.com/apache/camel/commit/3ef5ecf93269742ce17cfa6d64d41d7eb7dbb05d", "message": "CAMEL-14514: Don't reuse subscriber stub", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "626c7614478a79fc5a3b189e4455cb80bd8fbb5b", "url": "https://github.com/apache/camel/commit/626c7614478a79fc5a3b189e4455cb80bd8fbb5b", "message": "CAMEL-14514: Stop all async subscribers on consumer stop", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "5da0fb04b8246fa9b4918c0fe5ff77e2af9c3168", "url": "https://github.com/apache/camel/commit/5da0fb04b8246fa9b4918c0fe5ff77e2af9c3168", "message": "CAMEL-14514: Remove unused test properties", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "61e334c1ea7abe3f689a3dac54f5169c3097f456", "url": "https://github.com/apache/camel/commit/61e334c1ea7abe3f689a3dac54f5169c3097f456", "message": "CAMEL-14514: Revert parent Google guava version to 19.0", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "e7b592b7830656f7649cdb2671d69b0caf6b7c6a", "url": "https://github.com/apache/camel/commit/e7b592b7830656f7649cdb2671d69b0caf6b7c6a", "message": "CAMEL-14514: Acknowledge test with synchronous pull", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "93b21429f5ec301d441b26111ff5d43507e46973", "url": "https://github.com/apache/camel/commit/93b21429f5ec301d441b26111ff5d43507e46973", "message": "CAMEL-14514: Don't use StringUtils", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "url": "https://github.com/apache/camel/commit/1c23a753f94a1e19ea6fa624f08074a27f3ca2a6", "message": "CAMEL-14514: Synchronous pull boolean default value", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "9258480976d3793fae7ca460af161fd6c50292d0", "url": "https://github.com/apache/camel/commit/9258480976d3793fae7ca460af161fd6c50292d0", "message": "CAMEL-14514: Properly shutdown test resources", "committedDate": "2020-02-26T22:32:49Z", "type": "commit"}, {"oid": "cdc27381646658bfe70a5074850257957c26c078", "url": "https://github.com/apache/camel/commit/cdc27381646658bfe70a5074850257957c26c078", "message": "fixup! CAMEL-14514: Revert parent Google guava version to 19.0", "committedDate": "2020-02-26T22:36:45Z", "type": "commit"}, {"oid": "5b7e357f66311d0a20f0e4f748751ad566b6e867", "url": "https://github.com/apache/camel/commit/5b7e357f66311d0a20f0e4f748751ad566b6e867", "message": "CAMEL-14514: Explicit Google PubSub Guava version property", "committedDate": "2020-02-26T22:40:54Z", "type": "commit"}]}