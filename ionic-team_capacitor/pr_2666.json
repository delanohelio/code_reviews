{"pr_number": 2666, "pr_title": "feat(android): implement BridgeFragment for easier embedding using Fragments", "pr_author": "mlynch", "pr_createdAt": "2020-03-31T01:18:08Z", "pr_url": "https://github.com/ionic-team/capacitor/pull/2666", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxMTU5Nw==", "url": "https://github.com/ionic-team/capacitor/pull/2666#discussion_r400811597", "body": "```suggestion\r\n/**\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            /*\n          \n          \n            \n            /**", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-c\"><span class=\"pl-c\">/*</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-c\"><span class=\"pl-c\">/*<span class=\"x x-first x-last\">*</span></span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jcesarmobile", "createdAt": "2020-03-31T10:37:49Z", "path": "android/capacitor/src/main/java/com/getcapacitor/Bridge.java", "diffHunk": "@@ -58,7 +58,7 @@\n import java.util.ArrayList;\n \n \n-/**\n+/*", "originalCommit": "993fbec22aee11efccd369400371b9feb667108d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "987d0acfb1bf151a41dc5eb723f4431bace2deba", "url": "https://github.com/ionic-team/capacitor/commit/987d0acfb1bf151a41dc5eb723f4431bace2deba", "message": "Merged in master", "committedDate": "2020-03-31T14:46:36Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2OTE5Nw==", "url": "https://github.com/ionic-team/capacitor/pull/2666#discussion_r401569197", "body": "Why do you do this? the preferences are being set on line 125, so this reset them", "bodyText": "Why do you do this? the preferences are being set on line 125, so this reset them", "bodyHTML": "<p dir=\"auto\">Why do you do this? the preferences are being set on line 125, so this reset them</p>", "author": "jcesarmobile", "createdAt": "2020-04-01T12:16:11Z", "path": "android/capacitor/src/main/java/com/getcapacitor/BridgeFragment.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package com.getcapacitor;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.webkit.WebView;\n+\n+import androidx.fragment.app.Fragment;\n+\n+import com.getcapacitor.android.R;\n+import com.getcapacitor.cordova.MockCordovaInterfaceImpl;\n+import com.getcapacitor.cordova.MockCordovaWebViewImpl;\n+\n+import org.apache.cordova.ConfigXmlParser;\n+import org.apache.cordova.CordovaPreferences;\n+import org.apache.cordova.PluginEntry;\n+import org.apache.cordova.PluginManager;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link BridgeFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link BridgeFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class BridgeFragment extends Fragment {\n+  private static final String ARG_START_DIR = \"startDir\";\n+\n+  private String startDir;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  private WebView webView;\n+  protected Bridge bridge;\n+  protected MockCordovaInterfaceImpl cordovaInterface;\n+  protected boolean keepRunning = true;\n+  private ArrayList<PluginEntry> pluginEntries;\n+  private PluginManager pluginManager;\n+  private CordovaPreferences preferences;\n+  private MockCordovaWebViewImpl mockWebView;\n+  private int activityDepth = 0;\n+  private String bridgeStartDir;\n+\n+  private String lastActivityPlugin;\n+\n+  private List<Class<? extends Plugin>> initialPlugins = new ArrayList<>();\n+\n+\n+  public BridgeFragment() {\n+    // Required empty public constructor\n+  }\n+\n+  /**\n+   * Use this factory method to create a new instance of\n+   * this fragment using the provided parameters.\n+   *\n+   * @param startDir the directory to serve content from\n+   * @return A new instance of fragment BridgeFragment.\n+   */\n+  public static BridgeFragment newInstance(String startDir) {\n+    BridgeFragment fragment = new BridgeFragment();\n+    Bundle args = new Bundle();\n+    args.putString(ARG_START_DIR, startDir);\n+    fragment.setArguments(args);\n+    return fragment;\n+  }\n+\n+  protected void init(Bundle savedInstanceState) {\n+    loadConfig(this.getActivity().getApplicationContext(), this.getActivity());\n+  }\n+\n+  /**\n+   * Load the WebView and create the Bridge\n+   */\n+  protected void load(Bundle savedInstanceState) {\n+    Log.d(LogUtils.getCoreTag(), \"Starting BridgeActivity\");\n+\n+    Bundle args = getArguments();\n+    String startDir = null;\n+\n+    if (args != null) {\n+      startDir = getArguments().getString(ARG_START_DIR);\n+    }\n+\n+    webView = getView().findViewById(R.id.webview);\n+    cordovaInterface = new MockCordovaInterfaceImpl(this.getActivity());\n+    if (savedInstanceState != null) {\n+      cordovaInterface.restoreInstanceState(savedInstanceState);\n+    }\n+\n+    mockWebView = new MockCordovaWebViewImpl(getActivity().getApplicationContext());\n+    mockWebView.init(cordovaInterface, pluginEntries, preferences, webView);\n+\n+    pluginManager = mockWebView.getPluginManager();\n+    cordovaInterface.onCordovaInit(pluginManager);\n+\n+    preferences = new CordovaPreferences();", "originalCommit": "f0b7707054dc640da33a1919677c786af932d52b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3MDE0Mg==", "url": "https://github.com/ionic-team/capacitor/pull/2666#discussion_r401570142", "body": "is this needed or forgot to uncomment? If not needed just delete it", "bodyText": "is this needed or forgot to uncomment? If not needed just delete it", "bodyHTML": "<p dir=\"auto\">is this needed or forgot to uncomment? If not needed just delete it</p>", "author": "jcesarmobile", "createdAt": "2020-04-01T12:17:52Z", "path": "android/capacitor/src/main/java/com/getcapacitor/BridgeFragment.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package com.getcapacitor;\n+\n+import android.app.Activity;\n+import android.content.Context;\n+import android.content.res.TypedArray;\n+import android.net.Uri;\n+import android.os.Bundle;\n+import android.util.AttributeSet;\n+import android.util.Log;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.webkit.WebView;\n+\n+import androidx.fragment.app.Fragment;\n+\n+import com.getcapacitor.android.R;\n+import com.getcapacitor.cordova.MockCordovaInterfaceImpl;\n+import com.getcapacitor.cordova.MockCordovaWebViewImpl;\n+\n+import org.apache.cordova.ConfigXmlParser;\n+import org.apache.cordova.CordovaPreferences;\n+import org.apache.cordova.PluginEntry;\n+import org.apache.cordova.PluginManager;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * A simple {@link Fragment} subclass.\n+ * Activities that contain this fragment must implement the\n+ * {@link BridgeFragment.OnFragmentInteractionListener} interface\n+ * to handle interaction events.\n+ * Use the {@link BridgeFragment#newInstance} factory method to\n+ * create an instance of this fragment.\n+ */\n+public class BridgeFragment extends Fragment {\n+  private static final String ARG_START_DIR = \"startDir\";\n+\n+  private String startDir;\n+\n+  private OnFragmentInteractionListener mListener;\n+\n+  private WebView webView;\n+  protected Bridge bridge;\n+  protected MockCordovaInterfaceImpl cordovaInterface;\n+  protected boolean keepRunning = true;\n+  private ArrayList<PluginEntry> pluginEntries;\n+  private PluginManager pluginManager;\n+  private CordovaPreferences preferences;\n+  private MockCordovaWebViewImpl mockWebView;\n+  private int activityDepth = 0;\n+  private String bridgeStartDir;\n+\n+  private String lastActivityPlugin;\n+\n+  private List<Class<? extends Plugin>> initialPlugins = new ArrayList<>();\n+\n+\n+  public BridgeFragment() {\n+    // Required empty public constructor\n+  }\n+\n+  /**\n+   * Use this factory method to create a new instance of\n+   * this fragment using the provided parameters.\n+   *\n+   * @param startDir the directory to serve content from\n+   * @return A new instance of fragment BridgeFragment.\n+   */\n+  public static BridgeFragment newInstance(String startDir) {\n+    BridgeFragment fragment = new BridgeFragment();\n+    Bundle args = new Bundle();\n+    args.putString(ARG_START_DIR, startDir);\n+    fragment.setArguments(args);\n+    return fragment;\n+  }\n+\n+  protected void init(Bundle savedInstanceState) {\n+    loadConfig(this.getActivity().getApplicationContext(), this.getActivity());\n+  }\n+\n+  /**\n+   * Load the WebView and create the Bridge\n+   */\n+  protected void load(Bundle savedInstanceState) {\n+    Log.d(LogUtils.getCoreTag(), \"Starting BridgeActivity\");\n+\n+    Bundle args = getArguments();\n+    String startDir = null;\n+\n+    if (args != null) {\n+      startDir = getArguments().getString(ARG_START_DIR);\n+    }\n+\n+    webView = getView().findViewById(R.id.webview);\n+    cordovaInterface = new MockCordovaInterfaceImpl(this.getActivity());\n+    if (savedInstanceState != null) {\n+      cordovaInterface.restoreInstanceState(savedInstanceState);\n+    }\n+\n+    mockWebView = new MockCordovaWebViewImpl(getActivity().getApplicationContext());\n+    mockWebView.init(cordovaInterface, pluginEntries, preferences, webView);\n+\n+    pluginManager = mockWebView.getPluginManager();\n+    cordovaInterface.onCordovaInit(pluginManager);\n+\n+    preferences = new CordovaPreferences();\n+    bridge = new Bridge(this.getActivity(), webView, initialPlugins, cordovaInterface, pluginManager, preferences);\n+\n+    if (startDir != null) {\n+      bridge.setServerAssetPath(startDir);\n+    }\n+\n+    if (savedInstanceState != null) {\n+      bridge.restoreInstanceState(savedInstanceState);\n+    }\n+    this.keepRunning = preferences.getBoolean(\"KeepRunning\", true);\n+    // this.onNewIntent(getIntent());", "originalCommit": "f0b7707054dc640da33a1919677c786af932d52b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU3OTU2MQ==", "url": "https://github.com/ionic-team/capacitor/pull/2666#discussion_r401579561", "body": "I guess this is to prevent some crash, but if the splash is not found it still crash on line 267\r\nCan be prevented by changing to \r\n\r\n```\r\n} catch (IllegalStateException | IllegalArgumentException ex) {\r\n  Log.d(LogUtils.getCoreTag(), \"Could not add splash view\");\r\n  return;\r\n}\r\n```", "bodyText": "I guess this is to prevent some crash, but if the splash is not found it still crash on line 267\nCan be prevented by changing to\n} catch (IllegalStateException | IllegalArgumentException ex) {\n  Log.d(LogUtils.getCoreTag(), \"Could not add splash view\");\n  return;\n}", "bodyHTML": "<p dir=\"auto\">I guess this is to prevent some crash, but if the splash is not found it still crash on line 267<br>\nCan be prevented by changing to</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"} catch (IllegalStateException | IllegalArgumentException ex) {\n  Log.d(LogUtils.getCoreTag(), &quot;Could not add splash view&quot;);\n  return;\n}\n\"><pre><code>} catch (IllegalStateException | IllegalArgumentException ex) {\n  Log.d(LogUtils.getCoreTag(), \"Could not add splash view\");\n  return;\n}\n</code></pre></div>", "author": "jcesarmobile", "createdAt": "2020-04-01T12:34:29Z", "path": "android/capacitor/src/main/java/com/getcapacitor/Splash.java", "diffHunk": "@@ -47,7 +48,14 @@ private static void buildViews(Context c) {\n       String splashResourceName = Config.getString(CONFIG_KEY_PREFIX + \"androidSplashResourceName\", \"splash\");\n \n       int splashId = c.getResources().getIdentifier(splashResourceName, \"drawable\", c.getPackageName());\n-      Drawable splash = c.getResources().getDrawable(splashId, c.getTheme());\n+", "originalCommit": "f0b7707054dc640da33a1919677c786af932d52b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "d865d623895dac4efb7afb710e210ccbce92d7e1", "url": "https://github.com/ionic-team/capacitor/commit/d865d623895dac4efb7afb710e210ccbce92d7e1", "message": "Add android fragment", "committedDate": "2020-04-01T21:53:05Z", "type": "commit"}, {"oid": "d865d623895dac4efb7afb710e210ccbce92d7e1", "url": "https://github.com/ionic-team/capacitor/commit/d865d623895dac4efb7afb710e210ccbce92d7e1", "message": "Add android fragment", "committedDate": "2020-04-01T21:53:05Z", "type": "forcePushed"}, {"oid": "84e6eb958469938456b7476d6071c5a3e0085e0a", "url": "https://github.com/ionic-team/capacitor/commit/84e6eb958469938456b7476d6071c5a3e0085e0a", "message": "add head tag so Capacitor can be injected", "committedDate": "2020-04-03T15:19:45Z", "type": "commit"}, {"oid": "90f8a0cb4990084c28de9ea2ecac23608be12177", "url": "https://github.com/ionic-team/capacitor/commit/90f8a0cb4990084c28de9ea2ecac23608be12177", "message": "use MainActivity", "committedDate": "2020-04-03T15:27:46Z", "type": "commit"}, {"oid": "c2753a83850c71bd0a59efd3a2d6611e9351eaca", "url": "https://github.com/ionic-team/capacitor/commit/c2753a83850c71bd0a59efd3a2d6611e9351eaca", "message": "Avoid crash if splash is not found", "committedDate": "2020-04-03T15:28:12Z", "type": "commit"}, {"oid": "983425862e1476af3c68c0373c41527479c577ec", "url": "https://github.com/ionic-team/capacitor/commit/983425862e1476af3c68c0373c41527479c577ec", "message": "remove unused line", "committedDate": "2020-04-03T15:28:40Z", "type": "commit"}]}