{"pr_number": 1614, "pr_title": "Add failing compatibility reason in rest response ", "pr_author": "xiaoyali97", "pr_createdAt": "2020-09-02T16:56:51Z", "pr_url": "https://github.com/confluentinc/schema-registry/pull/1614", "timeline": [{"oid": "4edfceaed3e7c6d0dc843491ee09d1870e2e37c2", "url": "https://github.com/confluentinc/schema-registry/commit/4edfceaed3e7c6d0dc843491ee09d1870e2e37c2", "message": "Revert style change; Use Collections.emptyList() to indicate is-compatible", "committedDate": "2020-09-03T21:52:42Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExMTc4NQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485111785", "body": "nit: other wise -> otherwise", "bodyText": "nit: other wise -> otherwise", "bodyHTML": "<p dir=\"auto\">nit: other wise -&gt; otherwise</p>", "author": "rayokota", "createdAt": "2020-09-08T18:21:00Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/SchemaValidationStrategy.java", "diffHunk": "@@ -34,6 +36,7 @@\n    *\n    * @param toValidate The schema to validate\n    * @param existing The schema to validate against\n+   * @return List of error message, other wise empty list", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExMzY1Nw==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485113657", "body": "Change to\r\n\r\n```\r\nList<String> result = new ArrayList<>();\r\nresult.addAll(existing.isBackwardCompatible(toValidate);\r\nresult.addAll(toValidate.isBackwardCompatible(existing);\r\nreturn result;\r\n```", "bodyText": "Change to\nList<String> result = new ArrayList<>();\nresult.addAll(existing.isBackwardCompatible(toValidate);\nresult.addAll(toValidate.isBackwardCompatible(existing);\nreturn result;", "bodyHTML": "<p dir=\"auto\">Change to</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"List&lt;String&gt; result = new ArrayList&lt;&gt;();\nresult.addAll(existing.isBackwardCompatible(toValidate);\nresult.addAll(toValidate.isBackwardCompatible(existing);\nreturn result;\n\"><pre><code>List&lt;String&gt; result = new ArrayList&lt;&gt;();\nresult.addAll(existing.isBackwardCompatible(toValidate);\nresult.addAll(toValidate.isBackwardCompatible(existing);\nreturn result;\n</code></pre></div>", "author": "rayokota", "createdAt": "2020-09-08T18:24:33Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/SchemaValidatorBuilder.java", "diffHunk": "@@ -53,8 +55,21 @@ public SchemaValidatorBuilder canBeReadStrategy() {\n    * and vice-versa, according to the JSON default schema resolution.\n    */\n   public SchemaValidatorBuilder mutualReadStrategy() {\n-    this.strategy = (toValidate, existing) -> existing.isBackwardCompatible(toValidate)\n-        && toValidate.isBackwardCompatible(existing);\n+\n+    this.strategy = (toValidate, existing) -> {\n+      List<String> backward = existing.isBackwardCompatible(toValidate);", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNDY0Ng==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485114646", "body": "Replace with `Collections.singletonList(...)`", "bodyText": "Replace with Collections.singletonList(...)", "bodyHTML": "<p dir=\"auto\">Replace with <code>Collections.singletonList(...)</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:26:22Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNDY5Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485114692", "body": "Replace with `Collections.singletonList(...)`", "bodyText": "Replace with Collections.singletonList(...)", "bodyHTML": "<p dir=\"auto\">Replace with <code>Collections.singletonList(...)</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:26:29Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(e.toString()));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNDgwMw==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485114803", "body": "Replace with `Collections.singletonList(...)`", "bodyText": "Replace with Collections.singletonList(...)", "bodyHTML": "<p dir=\"auto\">Replace with <code>Collections.singletonList(...)</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:26:44Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(e.toString()));\n     } catch (Exception e) {\n       log.error(\"Unexpected exception during compatibility check\", e);\n-      return false;\n+      return new LinkedList<>(Arrays.asList(", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExNjg2MQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485116861", "body": "This is not the correct usage of `String.format`, you can replace with \r\n```\r\n\"Unexpected exception during compatibility check: \" + e.getMessage()\r\n```", "bodyText": "This is not the correct usage of String.format, you can replace with\n\"Unexpected exception during compatibility check: \" + e.getMessage()", "bodyHTML": "<p dir=\"auto\">This is not the correct usage of <code>String.format</code>, you can replace with</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&quot;Unexpected exception during compatibility check: &quot; + e.getMessage()\"><pre><code>\"Unexpected exception during compatibility check: \" + e.getMessage()\n</code></pre></div>", "author": "rayokota", "createdAt": "2020-09-08T18:30:29Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(e.toString()));\n     } catch (Exception e) {\n       log.error(\"Unexpected exception during compatibility check\", e);\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\n+              String.format(\"Unexpected exception during compatibility check\", e)));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExODAwMA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485118000", "body": "Change public -> default and have the implementation `throw new UnsupportedOperationException()`", "bodyText": "Change public -> default and have the implementation throw new UnsupportedOperationException()", "bodyHTML": "<p dir=\"auto\">Change public -&gt; default and have the implementation <code>throw new UnsupportedOperationException()</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:32:43Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/SchemaRegistryClient.java", "diffHunk": "@@ -121,6 +121,9 @@ default boolean testCompatibility(String subject, org.apache.avro.Schema schema)\n   public boolean testCompatibility(String subject, ParsedSchema schema)\n       throws IOException, RestClientException;\n \n+  public List<String> testCompatibilityVerbose(String subject, ParsedSchema schema)", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExOTQ3MA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485119470", "body": "Let's call this property `\"messages\"` and `getMessages`, this will allow us to put other messages in the future.", "bodyText": "Let's call this property \"messages\" and getMessages, this will allow us to put other messages in the future.", "bodyHTML": "<p dir=\"auto\">Let's call this property <code>\"messages\"</code> and <code>getMessages</code>, this will allow us to put other messages in the future.</p>", "author": "rayokota", "createdAt": "2020-09-08T18:35:22Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/entities/requests/CompatibilityCheckResponse.java", "diffHunk": "@@ -45,6 +50,16 @@ public String toJson() throws IOException {\n     return JacksonMapper.INSTANCE.writeValueAsString(this);\n   }\n \n+  @JsonProperty(\"error_messages\")", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTExOTY0Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485119642", "body": "Let's call this property `\"messages\"` and `getMessages`, this will allow us to put other messages in the future.", "bodyText": "Let's call this property \"messages\" and getMessages, this will allow us to put other messages in the future.", "bodyHTML": "<p dir=\"auto\">Let's call this property <code>\"messages\"</code> and <code>getMessages</code>, this will allow us to put other messages in the future.</p>", "author": "rayokota", "createdAt": "2020-09-08T18:35:43Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/entities/requests/CompatibilityCheckResponse.java", "diffHunk": "@@ -45,6 +50,16 @@ public String toJson() throws IOException {\n     return JacksonMapper.INSTANCE.writeValueAsString(this);\n   }\n \n+  @JsonProperty(\"error_messages\")\n+  public List<String> getErrorMessages() {\n+    return errorMessages;\n+  }\n+\n+  @JsonProperty(\"error_messages\")", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyMzQxNg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485123416", "body": "Let's call this property `messages`, this will allow us to put other messages in the future.", "bodyText": "Let's call this property messages, this will allow us to put other messages in the future.", "bodyHTML": "<p dir=\"auto\">Let's call this property <code>messages</code>, this will allow us to put other messages in the future.</p>", "author": "rayokota", "createdAt": "2020-09-08T18:43:03Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/entities/requests/CompatibilityCheckResponse.java", "diffHunk": "@@ -16,16 +16,21 @@\n \n package io.confluent.kafka.schemaregistry.client.rest.entities.requests;\n \n+import com.fasterxml.jackson.annotation.JsonInclude;\n import com.fasterxml.jackson.annotation.JsonProperty;\n \n import java.io.IOException;\n \n import io.confluent.kafka.schemaregistry.utils.JacksonMapper;\n+\n+import java.util.List;\n import java.util.Objects;\n \n+@JsonInclude(JsonInclude.Include.NON_NULL)\n public class CompatibilityCheckResponse {\n \n   private boolean isCompatible;\n+  private List<String> errorMessages = null;", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTA4NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125084", "body": "nit: fix indentation", "bodyText": "nit: fix indentation", "bodyHTML": "<p dir=\"auto\">nit: fix indentation</p>", "author": "rayokota", "createdAt": "2020-09-08T18:46:04Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1281,7 +1282,7 @@ public CompatibilityLevel getCompatibilityLevelInScope(String subject)\n   }\n \n   @Override\n-  public boolean isCompatible(String subject,\n+  public List<String> isCompatible(String subject,\n                               Schema newSchema,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTE0OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125148", "body": "nit: fix indentation", "bodyText": "nit: fix indentation", "bodyHTML": "<p dir=\"auto\">nit: fix indentation</p>", "author": "rayokota", "createdAt": "2020-09-08T18:46:10Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1296,7 +1297,7 @@ public boolean isCompatible(String subject,\n    * @param previousSchemas Full schema history in chronological order\n    */\n   @Override\n-  public boolean isCompatible(String subject,\n+  public List<String> isCompatible(String subject,\n                               Schema newSchema,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTIyNA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125224", "body": "nit: fix indentation", "bodyText": "nit: fix indentation", "bodyHTML": "<p dir=\"auto\">nit: fix indentation</p>", "author": "rayokota", "createdAt": "2020-09-08T18:46:17Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/KafkaSchemaRegistry.java", "diffHunk": "@@ -1316,7 +1317,7 @@ public boolean isCompatible(String subject,\n     return isCompatibleWithPrevious(subject, parsedSchema, prevParsedSchemas);\n   }\n \n-  private boolean isCompatibleWithPrevious(String subject,\n+  private List<String> isCompatibleWithPrevious(String subject,\n                                            ParsedSchema parsedSchema,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTI5Mw==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125293", "body": "nit: fix indentation", "bodyText": "nit: fix indentation", "bodyHTML": "<p dir=\"auto\">nit: fix indentation</p>", "author": "rayokota", "createdAt": "2020-09-08T18:46:26Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/SchemaRegistry.java", "diffHunk": "@@ -71,11 +71,11 @@ Schema get(String subject, int version, boolean returnDeletedSchema)\n   Schema lookUpSchemaUnderSubject(String subject, Schema schema, boolean lookupDeletedSchema)\n       throws SchemaRegistryException;\n \n-  boolean isCompatible(String subject,\n+  List<String> isCompatible(String subject,\n                        Schema newSchema,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTQ4OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125488", "body": "nit: fix indentation", "bodyText": "nit: fix indentation", "bodyHTML": "<p dir=\"auto\">nit: fix indentation</p>", "author": "rayokota", "createdAt": "2020-09-08T18:46:47Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/storage/SchemaRegistry.java", "diffHunk": "@@ -71,11 +71,11 @@ Schema get(String subject, int version, boolean returnDeletedSchema)\n   Schema lookUpSchemaUnderSubject(String subject, Schema schema, boolean lookupDeletedSchema)\n       throws SchemaRegistryException;\n \n-  boolean isCompatible(String subject,\n+  List<String> isCompatible(String subject,\n                        Schema newSchema,\n                        Schema targetSchema) throws SchemaRegistryException;\n \n-  boolean isCompatible(String subject,\n+  List<String> isCompatible(String subject,\n                        Schema newSchema,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNTk5NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485125994", "body": "Use `Collections.singletonList`", "bodyText": "Use Collections.singletonList", "bodyHTML": "<p dir=\"auto\">Use <code>Collections.singletonList</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:47:44Z", "path": "json-schema-provider/src/main/java/io/confluent/kafka/schemaregistry/json/JsonSchema.java", "diffHunk": "@@ -300,9 +302,9 @@ private static boolean isPrimitive(Object value) {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNjU3Ng==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485126576", "body": "Use `ArrayList` instead of `LinkedList`", "bodyText": "Use ArrayList instead of LinkedList", "bodyHTML": "<p dir=\"auto\">Use <code>ArrayList</code> instead of <code>LinkedList</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:48:48Z", "path": "json-schema-provider/src/main/java/io/confluent/kafka/schemaregistry/json/JsonSchema.java", "diffHunk": "@@ -314,17 +316,22 @@ public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n     boolean isCompatible = incompatibleDiffs.isEmpty();\n     if (!isCompatible) {\n       boolean first = true;\n+      List<String> errorMessages = new LinkedList<>();", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNzQ4Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485127482", "body": "Use `Collections.singletonList`", "bodyText": "Use Collections.singletonList", "bodyHTML": "<p dir=\"auto\">Use <code>Collections.singletonList</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:50:18Z", "path": "protobuf-provider/src/main/java/io/confluent/kafka/schemaregistry/protobuf/ProtobufSchema.java", "diffHunk": "@@ -785,9 +787,9 @@ public void validate() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyNzU2OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485127568", "body": "Use `ArrayList`", "bodyText": "Use ArrayList", "bodyHTML": "<p dir=\"auto\">Use <code>ArrayList</code></p>", "author": "rayokota", "createdAt": "2020-09-08T18:50:28Z", "path": "protobuf-provider/src/main/java/io/confluent/kafka/schemaregistry/protobuf/ProtobufSchema.java", "diffHunk": "@@ -798,17 +800,22 @@ public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n     boolean isCompatible = incompatibleDiffs.isEmpty();\n     if (!isCompatible) {\n       boolean first = true;\n+      List<String> errorMessages = new LinkedList<>();", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEyODg0Mw==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485128843", "body": "Actually `RestService` is more like an internal class (`SchemaRegistryClient` wraps it), so we can change this interface by adding a `boolean verbose` flag to the existing `testCompatibility` method", "bodyText": "Actually RestService is more like an internal class (SchemaRegistryClient wraps it), so we can change this interface by adding a boolean verbose flag to the existing testCompatibility method", "bodyHTML": "<p dir=\"auto\">Actually <code>RestService</code> is more like an internal class (<code>SchemaRegistryClient</code> wraps it), so we can change this interface by adding a <code>boolean verbose</code> flag to the existing <code>testCompatibility</code> method</p>", "author": "rayokota", "createdAt": "2020-09-08T18:52:56Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/RestService.java", "diffHunk": "@@ -549,6 +549,47 @@ public boolean testCompatibility(Map<String, String> requestProperties,\n     return response.getIsCompatible();\n   }\n \n+  public List<String> testCompatibilityVerbose(String schemaString,", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTEzNDM3OQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485134379", "body": "A few lines above this line, we catch `InvalidSchemaException`.  If `verbose` is true, instead of throwing an exception, let's put the error message from `InvalidSchemaException` in a `CompatibilityCheckResponse` and return that.", "bodyText": "A few lines above this line, we catch InvalidSchemaException.  If verbose is true, instead of throwing an exception, let's put the error message from InvalidSchemaException in a CompatibilityCheckResponse and return that.", "bodyHTML": "<p dir=\"auto\">A few lines above this line, we catch <code>InvalidSchemaException</code>.  If <code>verbose</code> is true, instead of throwing an exception, let's put the error message from <code>InvalidSchemaException</code> in a <code>CompatibilityCheckResponse</code> and return that.</p>", "author": "rayokota", "createdAt": "2020-09-08T19:02:57Z", "path": "core/src/main/java/io/confluent/kafka/schemaregistry/rest/resources/CompatibilityResource.java", "diffHunk": "@@ -137,11 +141,22 @@ public void testCompatibilityBySubjectName(\n       throw Errors.schemaRegistryException(", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MTE4Ng==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485051186", "body": "I guess the whole \"if else\" block can be replaced by a single if given the other collection is empty in the else if we change a bit the condition.\r\n```suggestion\r\n      if (!backward.isEmpty() || !forward.isEmpty()) {\r\n        backward.addAll(forward);\r\n        return backward;\r\n      } else {\r\n        return Collections.emptyList();\r\n      }\r\n```", "bodyText": "I guess the whole \"if else\" block can be replaced by a single if given the other collection is empty in the else if we change a bit the condition.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (!backward.isEmpty() && !forward.isEmpty()) {\n          \n          \n            \n                    backward.addAll(forward);\n          \n          \n            \n                    return backward;\n          \n          \n            \n                  } else if (!backward.isEmpty()) {\n          \n          \n            \n                    return backward;\n          \n          \n            \n                  } else if (!forward.isEmpty())  {\n          \n          \n            \n                    return forward;\n          \n          \n            \n                  } else {\n          \n          \n            \n                    return Collections.emptyList();\n          \n          \n            \n                  }\n          \n          \n            \n                  if (!backward.isEmpty() || !forward.isEmpty()) {\n          \n          \n            \n                    backward.addAll(forward);\n          \n          \n            \n                    return backward;\n          \n          \n            \n                  } else {\n          \n          \n            \n                    return Collections.emptyList();\n          \n          \n            \n                  }", "bodyHTML": "<p dir=\"auto\">I guess the whole \"if else\" block can be replaced by a single if given the other collection is empty in the else if we change a bit the condition.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>backward<span class=\"pl-k\">.</span>isEmpty() <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>forward<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        backward<span class=\"pl-k\">.</span>addAll(forward);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> backward;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>backward<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> backward;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>forward<span class=\"pl-k\">.</span>isEmpty())  {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> forward;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>emptyList();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>backward<span class=\"pl-k\">.</span>isEmpty() <span class=\"pl-k\">||</span> <span class=\"pl-k\">!</span>forward<span class=\"pl-k\">.</span>isEmpty()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        backward<span class=\"pl-k\">.</span>addAll(forward);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> backward;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Collections</span><span class=\"pl-k\">.</span>emptyList();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T16:31:29Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/SchemaValidatorBuilder.java", "diffHunk": "@@ -53,8 +55,21 @@ public SchemaValidatorBuilder canBeReadStrategy() {\n    * and vice-versa, according to the JSON default schema resolution.\n    */\n   public SchemaValidatorBuilder mutualReadStrategy() {\n-    this.strategy = (toValidate, existing) -> existing.isBackwardCompatible(toValidate)\n-        && toValidate.isBackwardCompatible(existing);\n+\n+    this.strategy = (toValidate, existing) -> {\n+      List<String> backward = existing.isBackwardCompatible(toValidate);\n+      List<String> forward = toValidate.isBackwardCompatible(existing);\n+      if (!backward.isEmpty() && !forward.isEmpty()) {\n+        backward.addAll(forward);\n+        return backward;\n+      } else if (!backward.isEmpty()) {\n+        return backward;\n+      } else if (!forward.isEmpty())  {\n+        return forward;\n+      } else {\n+        return Collections.emptyList();\n+      }", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1Mjk0NQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485052945", "body": "```suggestion\r\n   * @return List of error message, otherwise empty list\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @return List of error message, other wise empty list\n          \n          \n            \n               * @return List of error message, otherwise empty list", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">List</span> of error message, <span class=\"x x-first x-last\">other wise</span> empty list</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi\">List</span> of error message, <span class=\"x x-first x-last\">otherwise</span> empty list</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T16:34:29Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/SchemaValidationStrategy.java", "diffHunk": "@@ -34,6 +36,7 @@\n    *\n    * @param toValidate The schema to validate\n    * @param existing The schema to validate against\n+   * @return List of error message, other wise empty list", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1MzEyOA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485053128", "body": "```suggestion\r\n   * @return List of error message, otherwise empty list\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               * @return empty list if the schema is compatible with the provided schema, other wise the list\n          \n          \n            \n               * @return List of error message, otherwise empty list", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"x x-first\">empty list </span><span class=\"pl-k x\">if</span><span class=\"x x-last\"> the schema is compatible with the provided schema, other wise the</span> list</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">   <span class=\"pl-k\">*</span> <span class=\"pl-k\">@return</span> <span class=\"pl-smi x x-first\">List</span><span class=\"x x-last\"> of error message, otherwise empty</span> list</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T16:34:50Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/SchemaValidator.java", "diffHunk": "@@ -42,6 +44,8 @@\n    * @param toValidate The schema to validate\n    * @param existing The schemas to validate against, in order from most recent to latest if\n    *     applicable\n+   * @return empty list if the schema is compatible with the provided schema, other wise the list", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA1NjY4Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485056682", "body": "```suggestion\r\n      return new LinkedList<>(Arrays.asList(\"Compatibility level not specified.\"));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Compatibility level not specify.\"));\n          \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Compatibility level not specified.\"));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">LinkedList&lt;&gt;</span>(<span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Compatibility level not <span class=\"x x-first x-last\">specify</span>.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">LinkedList&lt;&gt;</span>(<span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Compatibility level not <span class=\"x x-first x-last\">specified</span>.<span class=\"pl-pds\">\"</span></span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T16:40:56Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/MockSchemaRegistryClient.java", "diffHunk": "@@ -364,6 +365,29 @@ public boolean testCompatibility(String subject, ParsedSchema newSchema) throws\n           schemaMetadata.getId()));\n     }\n \n+    return newSchema.isCompatible(compatibilityLevel, schemaHistory).isEmpty();\n+  }\n+\n+  @Override\n+  public List<String> testCompatibilityVerbose(String subject, ParsedSchema newSchema)\n+          throws IOException, RestClientException {\n+    String compatibility = compatibilityCache.get(subject);\n+    if (compatibility == null) {\n+      compatibility = defaultCompatibility;\n+    }\n+\n+    CompatibilityLevel compatibilityLevel = CompatibilityLevel.forName(compatibility);\n+    if (compatibilityLevel == null) {\n+      return new LinkedList<>(Arrays.asList(\"Compatibility level not specify.\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3OTU2OQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485079569", "body": "```suggestion\r\n      return Arrays.asList(\"Incompatible because of different schema type\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n          \n          \n            \n                  return Arrays.asList(\"Incompatible because of different schema type\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T17:21:25Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3OTcyOA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485079728", "body": "```suggestion\r\n      return Arrays.asList(e.toString());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(e.toString()));\n          \n          \n            \n                  return Arrays.asList(e.toString());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(e<span class=\"pl-k\">.</span>toString(<span class=\"x x-first x-last\">)</span>));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(e<span class=\"pl-k\">.</span>toString());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T17:21:42Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(e.toString()));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3OTk3MQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485079971", "body": "```suggestion\r\n      return Arrays.asList(\r\n              String.format(\"Unexpected exception during compatibility check\", e));\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\n          \n          \n            \n                          String.format(\"Unexpected exception during compatibility check\", e)));\n          \n          \n            \n                  return Arrays.asList(\n          \n          \n            \n                          String.format(\"Unexpected exception during compatibility check\", e));", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unexpected exception during compatibility check<span class=\"pl-pds\">\"</span></span>, e))<span class=\"x x-first x-last\">)</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">              <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Unexpected exception during compatibility check<span class=\"pl-pds\">\"</span></span>, e));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T17:22:09Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(e.toString()));\n     } catch (Exception e) {\n       log.error(\"Unexpected exception during compatibility check\", e);\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\n+              String.format(\"Unexpected exception during compatibility check\", e)));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4MDQwOA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485080408", "body": "```suggestion\r\n      return Arrays.asList(\"Compatibility level not specified.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Compatibility level not specify.\"));\n          \n          \n            \n                  return Arrays.asList(\"Compatibility level not specified.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Compatibility level not <span class=\"x x-first\">specify.</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Compatibility level not <span class=\"x x-first\">specified.</span><span class=\"pl-pds x x-last\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T17:22:51Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/MockSchemaRegistryClient.java", "diffHunk": "@@ -364,6 +365,29 @@ public boolean testCompatibility(String subject, ParsedSchema newSchema) throws\n           schemaMetadata.getId()));\n     }\n \n+    return newSchema.isCompatible(compatibilityLevel, schemaHistory).isEmpty();\n+  }\n+\n+  @Override\n+  public List<String> testCompatibilityVerbose(String subject, ParsedSchema newSchema)\n+          throws IOException, RestClientException {\n+    String compatibility = compatibilityCache.get(subject);\n+    if (compatibility == null) {\n+      compatibility = defaultCompatibility;\n+    }\n+\n+    CompatibilityLevel compatibilityLevel = CompatibilityLevel.forName(compatibility);\n+    if (compatibilityLevel == null) {\n+      return new LinkedList<>(Arrays.asList(\"Compatibility level not specify.\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4Mzc3Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485083772", "body": "I guess this could be put in common with the existing compatibility check rest call from the testCompatibility method.\r\nAlso adding a new field to the response should not break compatibility so maybe we could remove the queryParam. WDYT ?\r\nCC @rayokota ", "bodyText": "I guess this could be put in common with the existing compatibility check rest call from the testCompatibility method.\nAlso adding a new field to the response should not break compatibility so maybe we could remove the queryParam. WDYT ?\nCC @rayokota", "bodyHTML": "<p dir=\"auto\">I guess this could be put in common with the existing compatibility check rest call from the testCompatibility method.<br>\nAlso adding a new field to the response should not break compatibility so maybe we could remove the queryParam. WDYT ?<br>\nCC <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/rayokota/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/rayokota\">@rayokota</a></p>", "author": "ImFlog", "createdAt": "2020-09-08T17:28:47Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/client/rest/RestService.java", "diffHunk": "@@ -549,6 +549,47 @@ public boolean testCompatibility(Map<String, String> requestProperties,\n     return response.getIsCompatible();\n   }\n \n+  public List<String> testCompatibilityVerbose(String schemaString,\n+                                               String schemaType,\n+                                               List<SchemaReference> references,\n+                                               String subject,\n+                                               String version)\n+      throws IOException, RestClientException {\n+    RegisterSchemaRequest request = new RegisterSchemaRequest();\n+    request.setSchema(schemaString);\n+    request.setSchemaType(schemaType);\n+    request.setReferences(references);\n+    return testCompatibilityVerbose(request, subject, version);\n+  }\n+\n+  public List<String> testCompatibilityVerbose(RegisterSchemaRequest registerSchemaRequest,\n+                                               String subject,\n+                                               String version)\n+      throws IOException, RestClientException {\n+    return testCompatibilityVerbose(\n+        DEFAULT_REQUEST_PROPERTIES, registerSchemaRequest, subject, version);\n+  }\n+\n+  public List<String> testCompatibilityVerbose(Map<String, String> requestProperties,\n+                                               RegisterSchemaRequest registerSchemaRequest,\n+                                               String subject,\n+                                               String version)\n+      throws IOException, RestClientException {\n+    UriBuilder builder =\n+        UriBuilder.fromPath(\"/compatibility/subjects/{subject}/versions/{version}\");\n+    builder.queryParam(\"verbose\", true);\n+    String path = builder.build(subject, version).toString();\n+\n+    CompatibilityCheckResponse response =\n+        httpRequest(\n+            path,\n+            \"POST\",\n+            registerSchemaRequest.toJson().getBytes(StandardCharsets.UTF_8),\n+            requestProperties,\n+            COMPATIBILITY_CHECK_RESPONSE_TYPE_REFERENCE);", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxMjU2Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485212562", "bodyText": "Unfortunately the CompatibilityCheckResponse was not declared with @JsonIgnoreProperties(ignoreUnknown = true) so older clients will break if we add a new field to the response.", "author": "rayokota", "createdAt": "2020-09-08T21:42:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4Mzc3Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ2NDYwOQ==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485464609", "bodyText": "Oh yes, good catch.\nWe could add this annotation in the PR to avoid issues like this in the future ?", "author": "ImFlog", "createdAt": "2020-09-09T09:16:27Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4Mzc3Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA4OTcxMA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485089710", "body": "```suggestion\r\n      return Arrays.asList(\"Incompatible because of different schema type\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n          \n          \n            \n                  return Arrays.asList(\"Incompatible because of different schema type\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x x-last\">(</span><span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Arrays</span><span class=\"pl-k\">.</span>asList(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T17:39:45Z", "path": "json-schema-provider/src/main/java/io/confluent/kafka/schemaregistry/json/JsonSchema.java", "diffHunk": "@@ -300,9 +302,9 @@ private static boolean isPrimitive(Object value) {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MDU2Mg==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485090562", "body": "You can move the two `errorMessages.add(..)` after the `if / else` block to remove the duplicated lines.", "bodyText": "You can move the two errorMessages.add(..) after the if / else block to remove the duplicated lines.", "bodyHTML": "<p dir=\"auto\">You can move the two <code>errorMessages.add(..)</code> after the <code>if / else</code> block to remove the duplicated lines.</p>", "author": "ImFlog", "createdAt": "2020-09-08T17:41:16Z", "path": "protobuf-provider/src/main/java/io/confluent/kafka/schemaregistry/protobuf/ProtobufSchema.java", "diffHunk": "@@ -798,17 +800,22 @@ public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n     boolean isCompatible = incompatibleDiffs.isEmpty();\n     if (!isCompatible) {\n       boolean first = true;\n+      List<String> errorMessages = new LinkedList<>();\n       for (Difference incompatibleDiff : incompatibleDiffs) {\n         if (first) {\n           // Log first incompatible change as warning\n           log.warn(\"Found incompatible change: {}\", incompatibleDiff);\n+          errorMessages.add(String.format(\"Found incompatible change: {}\", incompatibleDiff));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNDQ2NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485834464", "bodyText": "Good suggestion", "author": "rayokota", "createdAt": "2020-09-09T18:41:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA5MDU2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MTI4NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485141284", "body": "```suggestion\r\n        return Collections.singletonList(\"Incompatible because of different schema type\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n          \n          \n            \n                    return Collections.singletonList(\"Incompatible because of different schema type\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x\">(</span><span class=\"pl-smi x\">Arrays</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">asList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi x x-first\">Collections</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">singletonList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T19:16:38Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/ParsedSchema.java", "diffHunk": "@@ -95,13 +97,14 @@ default void validate() {\n    *\n    * @param level the compatibility level\n    * @param previousSchemas full schema history in chronological order\n-   * @return whether this schema is compatible with the previous schemas\n+   * @return an empty list if this schema is backward compatible with the previous schema, otherwise\n+   *         the list of error messages\n    */\n-  default boolean isCompatible(CompatibilityLevel level,\n-                               List<? extends ParsedSchema> previousSchemas) {\n+  default List<String> isCompatible(\n+      CompatibilityLevel level, List<? extends ParsedSchema> previousSchemas) {\n     for (ParsedSchema previousSchema : previousSchemas) {\n       if (!schemaType().equals(previousSchema.schemaType())) {\n-        return false;\n+        return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE0MjAzNA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485142034", "body": "```suggestion\r\n      return Collections.singletonList(\"Incompatible because of different schema type\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));\n          \n          \n            \n                  return Collections.singletonList(\"Incompatible because of different schema type\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">return</span> <span class=\"pl-k x x-first\">new</span><span class=\"x\"> </span><span class=\"pl-k x\">LinkedList&lt;&gt;</span><span class=\"x\">(</span><span class=\"pl-smi x\">Arrays</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">asList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-smi x x-first\">Collections</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">singletonList</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Incompatible because of different schema type<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "ImFlog", "createdAt": "2020-09-08T19:18:14Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +159,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "88416cfcecd87c2c5c5bff5c28f449b1c2540bd3", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1aba4bf7fd5d5b3448d192e11787196cc03b5c5d", "url": "https://github.com/confluentinc/schema-registry/commit/1aba4bf7fd5d5b3448d192e11787196cc03b5c5d", "message": "typo fix, style fix, add boolean verbose flag to RestService.testCompatibility() and tests update", "committedDate": "2020-09-08T22:06:51Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgyOTk2OA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485829968", "body": "Use `Collections.singletonList`", "bodyText": "Use Collections.singletonList", "bodyHTML": "<p dir=\"auto\">Use <code>Collections.singletonList</code></p>", "author": "rayokota", "createdAt": "2020-09-09T18:32:42Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/ParsedSchema.java", "diffHunk": "@@ -95,13 +97,14 @@ default void validate() {\n    *\n    * @param level the compatibility level\n    * @param previousSchemas full schema history in chronological order\n-   * @return whether this schema is compatible with the previous schemas\n+   * @return an empty list if this schema is backward compatible with the previous schema, otherwise\n+   *         the list of error messages\n    */\n-  default boolean isCompatible(CompatibilityLevel level,\n-                               List<? extends ParsedSchema> previousSchemas) {\n+  default List<String> isCompatible(\n+      CompatibilityLevel level, List<? extends ParsedSchema> previousSchemas) {\n     for (ParsedSchema previousSchema : previousSchemas) {\n       if (!schemaType().equals(previousSchema.schemaType())) {\n-        return false;\n+        return new LinkedList<>(Arrays.asList(\"Incompatible because of different schema type\"));", "originalCommit": "1aba4bf7fd5d5b3448d192e11787196cc03b5c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzMDQyMw==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485830423", "body": "`e.toString` -> `e.getMessage`", "bodyText": "e.toString -> e.getMessage", "bodyHTML": "<p dir=\"auto\"><code>e.toString</code> -&gt; <code>e.getMessage</code></p>", "author": "rayokota", "createdAt": "2020-09-09T18:33:34Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/avro/AvroSchema.java", "diffHunk": "@@ -156,19 +157,20 @@ public Integer version() {\n   }\n \n   @Override\n-  public boolean isBackwardCompatible(ParsedSchema previousSchema) {\n+  public List<String> isBackwardCompatible(ParsedSchema previousSchema) {\n     if (!schemaType().equals(previousSchema.schemaType())) {\n-      return false;\n+      return Collections.singletonList(\"Incompatible because of different schema type\");\n     }\n     try {\n       BACKWARD_VALIDATOR.validate(this.schemaObj,\n           Collections.singleton(((AvroSchema) previousSchema).schemaObj));\n-      return true;\n+      return Collections.emptyList();\n     } catch (SchemaValidationException e) {\n-      return false;\n+      return Collections.singletonList(e.toString());", "originalCommit": "1aba4bf7fd5d5b3448d192e11787196cc03b5c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTgzNjM3NA==", "url": "https://github.com/confluentinc/schema-registry/pull/1614#discussion_r485836374", "body": "Checkstyle is complaining that this has the wrong indentation", "bodyText": "Checkstyle is complaining that this has the wrong indentation", "bodyHTML": "<p dir=\"auto\">Checkstyle is complaining that this has the wrong indentation</p>", "author": "rayokota", "createdAt": "2020-09-09T18:44:45Z", "path": "client/src/main/java/io/confluent/kafka/schemaregistry/CompatibilityChecker.java", "diffHunk": "@@ -63,7 +63,9 @@\n   public static final CompatibilityChecker FULL_TRANSITIVE_CHECKER = new CompatibilityChecker(\n       FULL_TRANSITIVE_VALIDATOR);\n \n-  private static final SchemaValidator NO_OP_VALIDATOR = (schema, schemas) -> true;\n+  private static final SchemaValidator NO_OP_VALIDATOR =\n+          (schema, schemas) -> Collections.emptyList();", "originalCommit": "1aba4bf7fd5d5b3448d192e11787196cc03b5c5d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "be8b8e6981eb9d4161ea3dd7c65bb2e8df6e8415", "url": "https://github.com/confluentinc/schema-registry/commit/be8b8e6981eb9d4161ea3dd7c65bb2e8df6e8415", "message": "Revert style change; Use Collections.emptyList() to indicate is-compatible", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "edf5ec6f2a3ffed8a5e339b97bd904e2b637628b", "url": "https://github.com/confluentinc/schema-registry/commit/edf5ec6f2a3ffed8a5e339b97bd904e2b637628b", "message": "bugs fix", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "df0e2046c1acdf5109fd7b704098f75221bb9769", "url": "https://github.com/confluentinc/schema-registry/commit/df0e2046c1acdf5109fd7b704098f75221bb9769", "message": "add ?verbose queryparam to CompatibilityResource.testCompatibilityBySubjectName()", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "0d127c093800206fd6623ad71a71223b0c4b1a0e", "url": "https://github.com/confluentinc/schema-registry/commit/0d127c093800206fd6623ad71a71223b0c4b1a0e", "message": "bug fix", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "a6cb68a6c2a3ba1f9689ebb361137f9ab2c90e6a", "url": "https://github.com/confluentinc/schema-registry/commit/a6cb68a6c2a3ba1f9689ebb361137f9ab2c90e6a", "message": "Revert style change; Use Collections.emptyList() to indicate is-compatible", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "785778a438c7589cd3d9e5c1ec7083f7bcc55bae", "url": "https://github.com/confluentinc/schema-registry/commit/785778a438c7589cd3d9e5c1ec7083f7bcc55bae", "message": "add ?verbose queryparam to CompatibilityResource.testCompatibilityBySubjectName()", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "8fd3cebb4c92955a982d8fb6c3358fe9c8ea553b", "url": "https://github.com/confluentinc/schema-registry/commit/8fd3cebb4c92955a982d8fb6c3358fe9c8ea553b", "message": "typo fix, style fix, add boolean verbose flag to RestService.testCompatibility() and tests update", "committedDate": "2020-09-09T20:02:40Z", "type": "commit"}, {"oid": "bbff6869be4edc038c057c2cfbe9ec21ab724657", "url": "https://github.com/confluentinc/schema-registry/commit/bbff6869be4edc038c057c2cfbe9ec21ab724657", "message": "fix indentation, bug fix", "committedDate": "2020-09-09T20:09:08Z", "type": "commit"}, {"oid": "bbff6869be4edc038c057c2cfbe9ec21ab724657", "url": "https://github.com/confluentinc/schema-registry/commit/bbff6869be4edc038c057c2cfbe9ec21ab724657", "message": "fix indentation, bug fix", "committedDate": "2020-09-09T20:09:08Z", "type": "forcePushed"}]}