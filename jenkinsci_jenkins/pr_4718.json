{"pr_number": 4718, "pr_title": "[JENKINS-62231] OldDataMonitor avoids Jenkins from loading a plugin", "pr_author": "MRamonLeon", "pr_createdAt": "2020-05-10T15:14:00Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4718", "timeline": [{"oid": "f621e5b68b59219394e8b0fc1d56d46d557f0619", "url": "https://github.com/jenkinsci/jenkins/commit/f621e5b68b59219394e8b0fc1d56d46d557f0619", "message": "[JENKINS-62231] Avoid OldDataMonitor avoids Jenkins load a plugin", "committedDate": "2020-05-10T15:06:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDk5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r422660990", "body": "is this worth logging somewhere even at fine?", "bodyText": "is this worth logging somewhere even at fine?", "bodyHTML": "<p dir=\"auto\">is this worth logging somewhere even at fine?</p>", "author": "timja", "createdAt": "2020-05-10T15:33:20Z", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +365,15 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable ignored) {\n+                // it should be already reported", "originalCommit": "f621e5b68b59219394e8b0fc1d56d46d557f0619", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjk1MTIzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r422951238", "bodyText": "done", "author": "MRamonLeon", "createdAt": "2020-05-11T10:45:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2MDk5MA=="}], "type": "inlineReview"}, {"oid": "943fbcd40c50ac0808f765fd064a2397584ebd7a", "url": "https://github.com/jenkinsci/jenkins/commit/943fbcd40c50ac0808f765fd064a2397584ebd7a", "message": "[JENKINS-62231] Log a report problem with info", "committedDate": "2020-05-11T10:43:02Z", "type": "commit"}, {"oid": "5d40c424f02fc511f5e9096ca9c16162c9fd862a", "url": "https://github.com/jenkinsci/jenkins/commit/5d40c424f02fc511f5e9096ca9c16162c9fd862a", "message": "[JENKINS-61920] Add more information", "committedDate": "2020-05-11T15:33:33Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTEzMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545133", "body": "```suggestion\r\n                String additionalMessage = \". Make sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";\n          \n          \n            \n                            String additionalMessage = \". Make sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                <span class=\"pl-smi\">String</span> additionalMessage <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>. <span class=\"x x-first x-last\">Be</span> sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-smi\">String</span> additionalMessage <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>. <span class=\"x x-first x-last\">Make</span> sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "varyvol", "createdAt": "2020-05-12T08:13:07Z", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "originalCommit": "5d40c424f02fc511f5e9096ca9c16162c9fd862a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3Mzg0Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423573843", "bodyText": "Changed, thanks", "author": "MRamonLeon", "createdAt": "2020-05-12T08:56:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTEzMw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTMxMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423545312", "body": "Better if you declare the variable inside the if clase, where you are actually using it?", "bodyText": "Better if you declare the variable inside the if clase, where you are actually using it?", "bodyHTML": "<p dir=\"auto\">Better if you declare the variable inside the if clase, where you are actually using it?</p>", "author": "varyvol", "createdAt": "2020-05-12T08:13:26Z", "path": "core/src/main/java/hudson/util/RobustReflectionConverter.java", "diffHunk": "@@ -365,7 +367,22 @@ public Object doUnmarshal(final Object result, final HierarchicalStreamReader re\n \n         // Report any class/field errors in Saveable objects\n         if (context.get(\"ReadError\") != null && context.get(\"Saveable\") == result) {\n-            OldDataMonitor.report((Saveable)result, (ArrayList<Throwable>)context.get(\"ReadError\"));\n+            // Avoid any error in OldDataMonitor to be catastrophic. See JENKINS-62231 and JENKINS-59582\n+            // The root cause is the OldDataMonitor extension is not ready before a plugin triggers an error, for \n+            // example when trying to load a field that was created by a new version and you downgrade to the previous\n+            // one.\n+            try {\n+                OldDataMonitor.report((Saveable) result, (ArrayList<Throwable>) context.get(\"ReadError\"));\n+            } catch (Throwable t) {\n+                // it should be already reported, but we report with INFO just in case\n+                StringBuilder message = new StringBuilder(\"There was a problem reporting unmarshalling field errors\");\n+                String additionalMessage = \". Be sure this code is executed after InitMilestone.EXTENSIONS_AUGMENTED stage, for example in Plugin#postInitialize instead of Plugin#start\";", "originalCommit": "5d40c424f02fc511f5e9096ca9c16162c9fd862a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU3NDA4MQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4718#discussion_r423574081", "bodyText": "done by removing the var and using the string directly", "author": "MRamonLeon", "createdAt": "2020-05-12T08:57:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU0NTMxMg=="}], "type": "inlineReview"}, {"oid": "a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef", "url": "https://github.com/jenkinsci/jenkins/commit/a69a9a24e9b369fa9b54c008f0a9ca4f5c956cef", "message": "[JENKINS-62231] Optimize catch code", "committedDate": "2020-05-12T08:55:46Z", "type": "commit"}, {"oid": "f914170e32aaa67c1734a003dcbdcf8e21e80b03", "url": "https://github.com/jenkinsci/jenkins/commit/f914170e32aaa67c1734a003dcbdcf8e21e80b03", "message": "[JENKINS-62231] Adjust level depending on the case", "committedDate": "2020-05-15T06:57:43Z", "type": "commit"}]}