{"pr_number": 4851, "pr_title": "Tests: Refactoring of various things", "pr_author": "StefanSpieker", "pr_createdAt": "2020-07-19T08:35:58Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4851", "timeline": [{"oid": "fd402294e54763db975f93b2beb3be5793569507", "url": "https://github.com/jenkinsci/jenkins/commit/fd402294e54763db975f93b2beb3be5793569507", "message": "fixed deprecation warnings, simplified JUnit assertions and removed obsolete throws Exception statements", "committedDate": "2020-07-19T08:33:22Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTExMg==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889112", "body": "There are some * imports that can also be refactored, and `isEmptyString()` matcher can probably be not imported.", "bodyText": "There are some * imports that can also be refactored, and isEmptyString() matcher can probably be not imported.", "bodyHTML": "<p dir=\"auto\">There are some * imports that can also be refactored, and <code>isEmptyString()</code> matcher can probably be not imported.</p>", "author": "stellargo", "createdAt": "2020-07-19T10:10:11Z", "path": "test/src/test/java/hudson/LauncherTest.java", "diffHunk": "@@ -271,10 +273,10 @@ private void assertMultipleStdioCalls(String message, Node node, boolean emitStd\n         assertEquals(message, 0, ps.join());\n         if (outputIn2) {\n             assertThat(message, baos2.toString(), containsString(\"hello\"));\n-            assertThat(message, baos1.toString(), isEmptyString());\n+            assertThat(message, baos1.toString(), is(emptyString()));", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTY2Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889667", "body": "What would be the motivation behind this?", "bodyText": "What would be the motivation behind this?", "bodyHTML": "<p dir=\"auto\">What would be the motivation behind this?</p>", "author": "stellargo", "createdAt": "2020-07-19T10:16:03Z", "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -80,7 +82,7 @@ public void testUpdateByXmlDoesNotFail() throws Exception {\n                 \"</project>\";\n \n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n-        project.updateByXml((StreamSource) new StreamSource(new StringReader(xml)));", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDIzNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944237", "bodyText": "see above.", "author": "StefanSpieker", "createdAt": "2020-07-19T19:14:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTY2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTc3NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456889775", "body": "What would be the motivation behind this?", "bodyText": "What would be the motivation behind this?", "bodyHTML": "<p dir=\"auto\">What would be the motivation behind this?</p>", "author": "stellargo", "createdAt": "2020-07-19T10:16:54Z", "path": "test/src/test/java/hudson/model/AbstractItemSecurityTest.java", "diffHunk": "@@ -59,7 +61,7 @@ public void testUpdateByXmlDoesNotProcessForeignResources() throws Exception {\n         FreeStyleProject project = jenkinsRule.createFreeStyleProject(\"security-167\");\n         project.setDescription(\"Wibble\");\n         try {\n-            project.updateByXml(new StreamSource(new StringReader(xml)));\n+            project.updateByXml((Source)new StreamSource(new StringReader(xml)));", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDE5NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944195", "bodyText": "public void updateByXml(StreamSource source) is deprecated, and the call within this deprecated method is updateByXml((Source)source);", "author": "StefanSpieker", "createdAt": "2020-07-19T19:13:44Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg4OTc3NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDE3NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890174", "body": "Why not remove this entirely? Also in the other edited files, and move completely to hamcrest.", "bodyText": "Why not remove this entirely? Also in the other edited files, and move completely to hamcrest.", "bodyHTML": "<p dir=\"auto\">Why not remove this entirely? Also in the other edited files, and move completely to hamcrest.</p>", "author": "stellargo", "createdAt": "2020-07-19T10:21:01Z", "path": "test/src/test/java/hudson/model/DirectoryBrowserSupportTest.java", "diffHunk": "@@ -60,6 +62,7 @@\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDQ2NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890465", "body": "What would be the motivation behind this?", "bodyText": "What would be the motivation behind this?", "bodyHTML": "<p dir=\"auto\">What would be the motivation behind this?</p>", "author": "stellargo", "createdAt": "2020-07-19T10:23:43Z", "path": "test/src/test/java/hudson/model/ItemsTest.java", "diffHunk": "@@ -242,7 +242,7 @@ private void cannotOverwrite(String target) throws Exception {\n                         .withRedirectEnabled(false)\n                         .withThrowExceptionOnFailingStatusCode(false);\n                 WebResponse webResponse = wc.getPage(new WebRequest(new URL(wc.getContextPath() + \"createItem?name=\" + target + \"&mode=hudson.model.FreeStyleProject\"), HttpMethod.POST)).getWebResponse();\n-                if (webResponse.getStatusCode() != HttpStatus.SC_MOVED_TEMPORARILY) {\n+                if (webResponse.getStatusCode() != HttpURLConnection.HTTP_MOVED_TEMP) {", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0MzkxNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456943915", "bodyText": "HttpStatus is deprecated, so I chose the newer version from java.net", "author": "StefanSpieker", "createdAt": "2020-07-19T19:10:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDQ2NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc1NA==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890754", "body": "```suggestion\r\n        assertThat(booleanParameterInput.isChecked(), is(true));\r\n```\r\nYou can move this to hamcrest too like previous files.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(booleanParameterInput.isChecked());\n          \n          \n            \n                    assertThat(booleanParameterInput.isChecked(), is(true));\n          \n      \n    \n    \n  \n\nYou can move this to hamcrest too like previous files.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"x x-first x-last\">assertTrue</span>(booleanParameterInput<span class=\"pl-k\">.</span>isChecked());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"79\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"x x-first x-last\">assertThat</span>(booleanParameterInput<span class=\"pl-k\">.</span>isChecked(<span class=\"x x-first\">), is(</span><span class=\"pl-c1 x x-last\">true</span>));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">You can move this to hamcrest too like previous files.</p>", "author": "stellargo", "createdAt": "2020-07-19T10:26:26Z", "path": "test/src/test/java/hudson/model/ParametersTest.java", "diffHunk": "@@ -75,7 +76,7 @@ public void parameterTypes() throws Exception {\n         Object o = DomNodeUtil.selectSingleNode(element, \".//input[@name='value']\");\n         System.out.println(o);\n         HtmlCheckBoxInput booleanParameterInput = (HtmlCheckBoxInput) o;\n-        assertEquals(true, booleanParameterInput.isChecked());\n+        assertTrue(booleanParameterInput.isChecked());", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njk0NDQwNw==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456944407", "bodyText": "I really like the simplicity of assertTrue", "author": "StefanSpieker", "createdAt": "2020-07-19T19:15:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc1NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDc5Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890792", "body": "Here too hamcrest maybe?", "bodyText": "Here too hamcrest maybe?", "bodyHTML": "<p dir=\"auto\">Here too hamcrest maybe?</p>", "author": "stellargo", "createdAt": "2020-07-19T10:26:51Z", "path": "test/src/test/java/hudson/security/HudsonPrivateSecurityRealmTest.java", "diffHunk": "@@ -294,7 +294,7 @@ public void selfRegistrationTriggerLoggedIn() throws Exception {\n \n         createAccountByAdmin(\"alice\");\n         // no new event in such case\n-        assertEquals(true, spySecurityListener.loggedInUsernames.isEmpty());\n+        assertTrue(spySecurityListener.loggedInUsernames.isEmpty());", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njg5MDg0Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4851#discussion_r456890843", "body": "Here also use hamcrest?", "bodyText": "Here also use hamcrest?", "bodyHTML": "<p dir=\"auto\">Here also use hamcrest?</p>", "author": "stellargo", "createdAt": "2020-07-19T10:27:28Z", "path": "test/src/test/java/hudson/tasks/FingerprinterTest.java", "diffHunk": "@@ -259,8 +259,8 @@ public boolean perform(AbstractBuild<?, ?> build, Launcher launcher, BuildListen\n         Collection<Fingerprint> fingerprints = action.getFingerprints().values();\n         for (Fingerprint f: fingerprints) {\n             assertTrue(f.getOriginal().is(upstream));\n-            assertTrue(f.getOriginal().getName().equals(renamedProject1));\n-            assertFalse(f.getOriginal().getName().equals(oldUpstreamName));\n+            assertEquals(f.getOriginal().getName(), renamedProject1);", "originalCommit": "fd402294e54763db975f93b2beb3be5793569507", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "7878cd727755c19193295ed62c97678f276fffd6", "url": "https://github.com/jenkinsci/jenkins/commit/7878cd727755c19193295ed62c97678f276fffd6", "message": "removed star imports", "committedDate": "2020-07-19T19:17:08Z", "type": "commit"}]}