{"pr_number": 4460, "pr_title": "[JENKINS-33596, JENKINS-60913] Remove network discovery services ", "pr_author": "jeffret-b", "pr_createdAt": "2020-01-29T23:02:05Z", "pr_url": "https://github.com/jenkinsci/jenkins/pull/4460", "timeline": [{"oid": "9afc63fb0c26ee3a0da7c344f06f9b01369baaef", "url": "https://github.com/jenkinsci/jenkins/commit/9afc63fb0c26ee3a0da7c344f06f9b01369baaef", "message": "Remove multicast discovery services.", "committedDate": "2020-01-29T20:26:43Z", "type": "commit"}, {"oid": "61d9c675de24d97d19b01e7a9963a0d8a51ca7d8", "url": "https://github.com/jenkinsci/jenkins/commit/61d9c675de24d97d19b01e7a9963a0d8a51ca7d8", "message": "Refine clean up with DNSMultiCast.\n\nDoesn't need to be referenced in the other pom any more.\nWe need to keep the class and the property around for a while.\nJenkins Test Harness sets the property. Until we can get all\nversions aligned so it isn't needed, it's best to keep the property\ndoing nothing.", "committedDate": "2020-01-29T22:12:41Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAwNDM1Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373004352", "body": "Might be worth marking this field (or the class in general) as deprecated?", "bodyText": "Might be worth marking this field (or the class in general) as deprecated?", "bodyHTML": "<p dir=\"auto\">Might be worth marking this field (or the class in general) as deprecated?</p>", "author": "jvz", "createdAt": "2020-01-30T15:08:08Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,20 @@\n package hudson;\n \n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n import java.io.Closeable;\n import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n \n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ *\n  */\n public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {\n-        if (disabled)   return; // escape hatch\n-        \n-        // the registerService call can be slow. run these asynchronously\n-        MasterComputer.threadPoolForRemoting.submit(new Callable<Object>() {\n-            public Object call() {\n-                try {\n-                    jmdns = new JenkinsJmDNS(null, null);\n-\n-                    Map<String,String> props = new HashMap<>();\n-                    String rootURL = jenkins.getRootUrl();\n-                    if (rootURL==null)  return null;\n-\n-                    props.put(\"url\", rootURL);\n-                    try {\n-                        props.put(\"version\",String.valueOf(Jenkins.getVersion()));\n-                    } catch (IllegalArgumentException e) {\n-                        // failed to parse the version number\n-                    }\n-\n-                    TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-                    if (tal!=null)\n-                        props.put(\"slave-port\",String.valueOf(tal.getPort()));\n-\n-                    props.put(\"server-id\", jenkins.getLegacyInstanceId());\n-\n-                    URL jenkins_url = new URL(rootURL);\n-                    int jenkins_port = jenkins_url.getPort();\n-                    if (jenkins_port == -1) {\n-                        jenkins_port = 80;\n-                    }\n-                    if (jenkins_url.getPath().length() > 0) {\n-                        props.put(\"path\", jenkins_url.getPath());\n-                    }\n-\n-                    jmdns.registerService(ServiceInfo.create(\"_hudson._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\t// for backward compatibility\n-                    jmdns.registerService(ServiceInfo.create(\"_jenkins._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\n-\n-                    // Make Jenkins appear in Safari's Bonjour bookmarks\n-                    jmdns.registerService(ServiceInfo.create(\"_http._tcp.local.\",\"Jenkins\",\n-                            jenkins_port,0,0,props));\n-                } catch (IOException e) {\n-                    LOGGER.log(Level.INFO, \"Cannot advertise service to DNS multi-cast, skipping: {0}\", e);\n-                    LOGGER.log(Level.FINE, null, e);\n-                }\n-                return null;\n-            }\n-        });\n-    }\n-\n-    public void close() {\n-        if (jmdns!=null) {\n-            try {\n-                jmdns.abort();\n-                jmdns = null;\n-            } catch (final IOException e) {\n-                LOGGER.log(Level.WARNING,\"Failed to close down JmDNS instance!\",e);\n-            }\n-        }\n-    }\n-\n-    private static final Logger LOGGER = Logger.getLogger(DNSMultiCast.class.getName());\n-\n-    /**\n-     * Class that extends {@link JmDNSImpl} to add an abort method. Since {@link javax.jmdns.JmDNS#close()} might\n-     * make the instance hang during the shutdown, the abort method terminate uncleanly, but rapidly and\n-     * without blocking.\n-     *\n-     * Initially it was part of the jenkinsci/jmdns forked library, but now this class is responsible for aborting,\n-     * allowing to have a direct and clean dependency to the original library.\n-     *\n-     * The abort() method is pretty similar to close() method. To access private methods and fields uses\n-     * reflection.\n-     *\n-     * @since 2.178\n-     *\n-     * See JENKINS-25369 for further details\n-     */\n-    private static class JenkinsJmDNS extends JmDNSImpl {\n-        private static Logger logger = Logger.getLogger(JmDNSImpl.class.getName());\n-        private final Class parent;\n-\n-        /**\n-         * Create an instance of JmDNS and bind it to a specific network interface given its IP-address.\n-         *\n-         * @param address IP address to bind to.\n-         * @param name    name of the newly created JmDNS\n-         * @throws IOException\n-         */\n-        public JenkinsJmDNS(InetAddress address, String name) throws IOException {\n-            super(address, name);\n-            this.parent = this.getClass().getSuperclass();\n-        }\n-\n-        /**\n-         * Works like {@link #close()} but terminate uncleanly, but rapidly and without blocking.\n-         */\n-        public void abort() throws IOException {\n-            if (this.isClosing()) {\n-                return;\n-            }\n-\n-           if (logger.isLoggable(Level.FINER)) {\n-                logger.finer(\"Aborting JmDNS: \" + this);\n-            }\n-            // Stop JmDNS\n-            // This protects against recursive calls\n-            if (this.closeState()) {\n-                // We got the tie break now clean up\n-\n-                // Stop the timer\n-                logger.finer(\"Canceling the timer\");\n-                this.cancelTimer();\n-\n-                // Cancel all services\n-                // KK: this is a blocking call that doesn't fit 'abort'\n-                // this.unregisterAllServices();\n-                executePrivateParentMethod(\"disposeServiceCollectors\");\n-\n-// KK: another blocking call\n-//                if (logger.isLoggable(Level.FINER)) {\n-//                    logger.finer(\"Wait for JmDNS cancel: \" + this);\n-//                }\n-//                this.waitForCanceled(DNSConstants.CLOSE_TIMEOUT);\n-\n-                // Stop the canceler timer\n-                logger.finer(\"Canceling the state timer\");\n-                this.cancelStateTimer();\n-\n-                // Stop the executor\n-                shutdown();\n-\n-                // close socket\n-                executePrivateParentMethod(\"closeMulticastSocket\");\n-\n-                // remove the shutdown hook\n-                if (_shutdown != null) {\n-                    Runtime.getRuntime().removeShutdownHook(_shutdown);\n-                }\n-\n-                if (logger.isLoggable(Level.FINER)) {\n-                    logger.finer(\"JmDNS closed.\");\n-                }\n-            }\n-            advanceState(null);\n-        }\n-\n-        private void shutdown() throws IOException {\n-            try {\n-                Field executor = this.parent.getDeclaredField(\"_executor\");\n-                executor.setAccessible(true);\n-                ExecutorService _executor = (ExecutorService) executor.get(this);\n-                _executor.shutdown();\n-            } catch (NoSuchFieldException | IllegalAccessException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n-        }\n-\n-        private void executePrivateParentMethod(String method) throws IOException {\n-            try {\n-                Method m = this.parent.getDeclaredMethod(method);\n-                m.setAccessible(true);\n-                m.invoke(this);\n-            } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n-        }\n+    public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);", "originalCommit": "61d9c675de24d97d19b01e7a9963a0d8a51ca7d8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA0MDk0Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373040947", "bodyText": "Thanks. I had marked it as deprecated at one point but ended up losing that in the final submission.", "author": "jeffret-b", "createdAt": "2020-01-30T16:06:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAwNDM1Mg=="}], "type": "inlineReview"}, {"oid": "43096a915208f63c688c718cf309ae26183f1d9c", "url": "https://github.com/jenkinsci/jenkins/commit/43096a915208f63c688c718cf309ae26183f1d9c", "message": "Deprecate remaining class fragment.", "committedDate": "2020-01-30T16:05:22Z", "type": "commit"}, {"oid": "684fbbd359225bfc3e5712b77fb231a2bb553c92", "url": "https://github.com/jenkinsci/jenkins/commit/684fbbd359225bfc3e5712b77fb231a2bb553c92", "message": "Remove unneeded dependency.", "committedDate": "2020-01-30T16:22:26Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMjM2Mg==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373212362", "body": "You are deleting the original constructor so is there some reason you are even keeping this class around?", "bodyText": "You are deleting the original constructor so is there some reason you are even keeping this class around?", "bodyHTML": "<p dir=\"auto\">You are deleting the original constructor so is there some reason you are even keeping this class around?</p>", "author": "jglick", "createdAt": "2020-01-30T21:50:26Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,21 @@\n package hudson;\n \n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n import java.io.Closeable;\n import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n \n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated\n  */\n+@Deprecated\n public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {", "originalCommit": "684fbbd359225bfc3e5712b77fb231a2bb553c92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyNTU5NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373225595", "bodyText": "The Jenkins Test Harness references the disabled property. There could be other places. For now at least I left the class to not break the JTH, but it doesn't do anything because it is always disabled. I thought about tying this to a change in the JTH but wasn't sure we wanted to connect the versions like that. WDYT?", "author": "jeffret-b", "createdAt": "2020-01-30T22:21:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMjM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyNzcwOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373227708", "bodyText": "The Jenkins Test Harness references the disabled property.\n\nOK, this was the information I was missing.\n\nwasn't sure we wanted to connect the versions like that\n\nIndeed we do not.", "author": "jglick", "createdAt": "2020-01-30T22:26:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMjM2Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyODQzNQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373228435", "bodyText": "also https://github.com/jenkinsci/jenkinsfile-runner/blob/c267cbe255ed81668187e50378a0ea12407cb5aa/setup/src/main/java/io/jenkins/jenkinsfile/runner/JenkinsEmbedder.java#L682", "author": "jglick", "createdAt": "2020-01-30T22:28:47Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMjM2Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMzA5MA==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373213090", "body": "Still in use apparently:\r\n\r\nhttps://github.com/jenkinsci/swarm-plugin/blob/fbf7b55a665a1439f8bb9471336300381c097948/plugin/src/main/java/hudson/plugins/swarm/UDPFragmentImpl.java#L14\r\n\r\nIf `swarm` needs it, then this sounds like an argument for detaching to a plugin\u2026or moving to the `swarm` plugin.\r\n\r\n@basil?", "bodyText": "Still in use apparently:\nhttps://github.com/jenkinsci/swarm-plugin/blob/fbf7b55a665a1439f8bb9471336300381c097948/plugin/src/main/java/hudson/plugins/swarm/UDPFragmentImpl.java#L14\nIf swarm needs it, then this sounds like an argument for detaching to a plugin\u2026or moving to the swarm plugin.\n@basil?", "bodyHTML": "<p dir=\"auto\">Still in use apparently:</p>\n<p dir=\"auto\"><a href=\"https://github.com/jenkinsci/swarm-plugin/blob/fbf7b55a665a1439f8bb9471336300381c097948/plugin/src/main/java/hudson/plugins/swarm/UDPFragmentImpl.java#L14\">https://github.com/jenkinsci/swarm-plugin/blob/fbf7b55a665a1439f8bb9471336300381c097948/plugin/src/main/java/hudson/plugins/swarm/UDPFragmentImpl.java#L14</a></p>\n<p dir=\"auto\">If <code>swarm</code> needs it, then this sounds like an argument for detaching to a plugin\u2026or moving to the <code>swarm</code> plugin.</p>\n<p dir=\"auto\"><a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/basil/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/basil\">@basil</a>?</p>", "author": "jglick", "createdAt": "2020-01-30T21:52:07Z", "path": "core/src/main/java/hudson/UDPBroadcastFragment.java", "diffHunk": "@@ -1,58 +0,0 @@\n-/*\n- * The MIT License\n- *\n- * Copyright (c) 2004-2009, Sun Microsystems, Inc., Kohsuke Kawaguchi\n- *\n- * Permission is hereby granted, free of charge, to any person obtaining a copy\n- * of this software and associated documentation files (the \"Software\"), to deal\n- * in the Software without restriction, including without limitation the rights\n- * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n- * copies of the Software, and to permit persons to whom the Software is\n- * furnished to do so, subject to the following conditions:\n- *\n- * The above copyright notice and this permission notice shall be included in\n- * all copies or substantial portions of the Software.\n- *\n- * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n- * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n- * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n- * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n- * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n- * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n- * THE SOFTWARE.\n- */\n-package hudson;\n-\n-\n-import java.net.SocketAddress;\n-\n-/**\n- * Extension point that contributes an XML fragment to the UDP broadcast.\n- *\n- * <p>\n- * Put {@link Extension} on your implementation class to have it auto-discovered.\n- * \n- * @author Kohsuke Kawaguchi\n- * @since 1.304\n- * @see UDPBroadcastThread\n- */\n-public abstract class UDPBroadcastFragment implements ExtensionPoint {", "originalCommit": "684fbbd359225bfc3e5712b77fb231a2bb553c92", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyOTgzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373229838", "bodyText": "I had forgotten that I had seen a usage in the swarm plugin ages ago. That's one area that makes some sense. On the other hand, keep in mind that we announced a security vulnerability in these services yesterday. See SECURITY-1641 / CVE-2020-2100.\nIf swarm needs this service then it inherently provides this vulnerability. With the proper configuration and environment this may not be an issue, but this would need to be well documented.\nI'm open to helping transfer it to swarm or to a plugin but not to maintaining that. Anywhere it ends up needs to take responsibility for the security concern.\nSo, yes, @basil, what do you think? Or anyone else who has a need for this?", "author": "jeffret-b", "createdAt": "2020-01-30T22:32:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIxMzA5MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyODg5Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373228896", "body": "```suggestion\r\n * @deprecated No longer does anything.\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * @deprecated\n          \n          \n            \n             * @deprecated No longer does anything.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@deprecated</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"> <span class=\"pl-k\">*</span> <span class=\"pl-k\">@deprecated</span><span class=\"x x-first\"> </span><span class=\"pl-smi x\">No</span><span class=\"x x-last\"> longer does anything.</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jglick", "createdAt": "2020-01-30T22:30:01Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,21 @@\n package hudson;\n \n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n import java.io.Closeable;\n import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n \n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated", "originalCommit": "684fbbd359225bfc3e5712b77fb231a2bb553c92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzIyOTEzMQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373229131", "body": "```suggestion\r\n    /** retained for compatibility with {@code jenkins-test-harness} and {@code jenkinsfile-runner} */\r\n    public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);\n          \n          \n            \n                /** retained for compatibility with {@code jenkins-test-harness} and {@code jenkinsfile-runner} */\n          \n          \n            \n                public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"23\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">public</span><span class=\"x\"> </span><span class=\"pl-k x\">static</span><span class=\"x\"> </span><span class=\"pl-k x\">boolean</span><span class=\"x\"> disabled </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">SystemProperties</span><span class=\"pl-k x\">.</span><span class=\"x\">getBoolean(</span><span class=\"pl-smi x\">DNSMultiCast</span><span class=\"pl-k x\">.</span><span class=\"x\">class</span><span class=\"pl-k x\">.</span><span class=\"x\">getName()</span><span class=\"pl-k x\">+</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">.disabled</span><span class=\"pl-pds x\">\"</span></span><span class=\"x\">, </span><span class=\"pl-c1 x\">true</span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"23\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-c\"><span class=\"pl-c x x-first\">/*</span><span class=\"x\">* retained for compatibility with {@code jenkins-test-harness} and {@code jenkinsfile-runner} </span><span class=\"pl-c x x-last\">*/</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"24\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">public</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">boolean</span> disabled <span class=\"pl-k\">=</span> <span class=\"pl-smi\">SystemProperties</span><span class=\"pl-k\">.</span>getBoolean(<span class=\"pl-smi\">DNSMultiCast</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">.</span>getName()<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">\"</span>.disabled<span class=\"pl-pds\">\"</span></span>, <span class=\"pl-c1\">true</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jglick", "createdAt": "2020-01-30T22:30:38Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,21 @@\n package hudson;\n \n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n import java.io.Closeable;\n import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n \n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated\n  */\n+@Deprecated\n public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {\n-        if (disabled)   return; // escape hatch\n-        \n-        // the registerService call can be slow. run these asynchronously\n-        MasterComputer.threadPoolForRemoting.submit(new Callable<Object>() {\n-            public Object call() {\n-                try {\n-                    jmdns = new JenkinsJmDNS(null, null);\n-\n-                    Map<String,String> props = new HashMap<>();\n-                    String rootURL = jenkins.getRootUrl();\n-                    if (rootURL==null)  return null;\n-\n-                    props.put(\"url\", rootURL);\n-                    try {\n-                        props.put(\"version\",String.valueOf(Jenkins.getVersion()));\n-                    } catch (IllegalArgumentException e) {\n-                        // failed to parse the version number\n-                    }\n-\n-                    TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-                    if (tal!=null)\n-                        props.put(\"slave-port\",String.valueOf(tal.getPort()));\n-\n-                    props.put(\"server-id\", jenkins.getLegacyInstanceId());\n-\n-                    URL jenkins_url = new URL(rootURL);\n-                    int jenkins_port = jenkins_url.getPort();\n-                    if (jenkins_port == -1) {\n-                        jenkins_port = 80;\n-                    }\n-                    if (jenkins_url.getPath().length() > 0) {\n-                        props.put(\"path\", jenkins_url.getPath());\n-                    }\n-\n-                    jmdns.registerService(ServiceInfo.create(\"_hudson._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\t// for backward compatibility\n-                    jmdns.registerService(ServiceInfo.create(\"_jenkins._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\n-\n-                    // Make Jenkins appear in Safari's Bonjour bookmarks\n-                    jmdns.registerService(ServiceInfo.create(\"_http._tcp.local.\",\"Jenkins\",\n-                            jenkins_port,0,0,props));\n-                } catch (IOException e) {\n-                    LOGGER.log(Level.INFO, \"Cannot advertise service to DNS multi-cast, skipping: {0}\", e);\n-                    LOGGER.log(Level.FINE, null, e);\n-                }\n-                return null;\n-            }\n-        });\n-    }\n-\n-    public void close() {\n-        if (jmdns!=null) {\n-            try {\n-                jmdns.abort();\n-                jmdns = null;\n-            } catch (final IOException e) {\n-                LOGGER.log(Level.WARNING,\"Failed to close down JmDNS instance!\",e);\n-            }\n-        }\n-    }\n-\n-    private static final Logger LOGGER = Logger.getLogger(DNSMultiCast.class.getName());\n-\n-    /**\n-     * Class that extends {@link JmDNSImpl} to add an abort method. Since {@link javax.jmdns.JmDNS#close()} might\n-     * make the instance hang during the shutdown, the abort method terminate uncleanly, but rapidly and\n-     * without blocking.\n-     *\n-     * Initially it was part of the jenkinsci/jmdns forked library, but now this class is responsible for aborting,\n-     * allowing to have a direct and clean dependency to the original library.\n-     *\n-     * The abort() method is pretty similar to close() method. To access private methods and fields uses\n-     * reflection.\n-     *\n-     * @since 2.178\n-     *\n-     * See JENKINS-25369 for further details\n-     */\n-    private static class JenkinsJmDNS extends JmDNSImpl {\n-        private static Logger logger = Logger.getLogger(JmDNSImpl.class.getName());\n-        private final Class parent;\n-\n-        /**\n-         * Create an instance of JmDNS and bind it to a specific network interface given its IP-address.\n-         *\n-         * @param address IP address to bind to.\n-         * @param name    name of the newly created JmDNS\n-         * @throws IOException\n-         */\n-        public JenkinsJmDNS(InetAddress address, String name) throws IOException {\n-            super(address, name);\n-            this.parent = this.getClass().getSuperclass();\n-        }\n-\n-        /**\n-         * Works like {@link #close()} but terminate uncleanly, but rapidly and without blocking.\n-         */\n-        public void abort() throws IOException {\n-            if (this.isClosing()) {\n-                return;\n-            }\n-\n-           if (logger.isLoggable(Level.FINER)) {\n-                logger.finer(\"Aborting JmDNS: \" + this);\n-            }\n-            // Stop JmDNS\n-            // This protects against recursive calls\n-            if (this.closeState()) {\n-                // We got the tie break now clean up\n-\n-                // Stop the timer\n-                logger.finer(\"Canceling the timer\");\n-                this.cancelTimer();\n-\n-                // Cancel all services\n-                // KK: this is a blocking call that doesn't fit 'abort'\n-                // this.unregisterAllServices();\n-                executePrivateParentMethod(\"disposeServiceCollectors\");\n-\n-// KK: another blocking call\n-//                if (logger.isLoggable(Level.FINER)) {\n-//                    logger.finer(\"Wait for JmDNS cancel: \" + this);\n-//                }\n-//                this.waitForCanceled(DNSConstants.CLOSE_TIMEOUT);\n-\n-                // Stop the canceler timer\n-                logger.finer(\"Canceling the state timer\");\n-                this.cancelStateTimer();\n-\n-                // Stop the executor\n-                shutdown();\n-\n-                // close socket\n-                executePrivateParentMethod(\"closeMulticastSocket\");\n-\n-                // remove the shutdown hook\n-                if (_shutdown != null) {\n-                    Runtime.getRuntime().removeShutdownHook(_shutdown);\n-                }\n-\n-                if (logger.isLoggable(Level.FINER)) {\n-                    logger.finer(\"JmDNS closed.\");\n-                }\n-            }\n-            advanceState(null);\n-        }\n-\n-        private void shutdown() throws IOException {\n-            try {\n-                Field executor = this.parent.getDeclaredField(\"_executor\");\n-                executor.setAccessible(true);\n-                ExecutorService _executor = (ExecutorService) executor.get(this);\n-                _executor.shutdown();\n-            } catch (NoSuchFieldException | IllegalAccessException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n-        }\n-\n-        private void executePrivateParentMethod(String method) throws IOException {\n-            try {\n-                Method m = this.parent.getDeclaredMethod(method);\n-                m.setAccessible(true);\n-                m.invoke(this);\n-            } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n-        }\n+    public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);", "originalCommit": "684fbbd359225bfc3e5712b77fb231a2bb553c92", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c7afc8a982668fa39866ddb4fcefb841cbd3455d", "url": "https://github.com/jenkinsci/jenkins/commit/c7afc8a982668fa39866ddb4fcefb841cbd3455d", "message": "Improve code comments for external usages.\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>", "committedDate": "2020-01-30T22:33:56Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MzY1Mw==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r373763653", "body": "Add Restricted(DoNotUse) to fail builds?", "bodyText": "Add Restricted(DoNotUse) to fail builds?", "bodyHTML": "<p dir=\"auto\">Add Restricted(DoNotUse) to fail builds?</p>", "author": "oleg-nenashev", "createdAt": "2020-02-01T07:12:35Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,22 @@\n package hudson;\n \n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n import java.io.Closeable;\n import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n-import java.util.logging.Logger;\n \n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated No longer does anything.\n  */\n+@Deprecated", "originalCommit": "c7afc8a982668fa39866ddb4fcefb841cbd3455d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIxNzI4Ng==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r374217286", "bodyText": "I couldn't get it to work without failing the Jenkins build. We could use NoExternalUse, though.", "author": "jeffret-b", "createdAt": "2020-02-03T16:52:02Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MzY1Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMwNjk4NQ==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r374306985", "bodyText": "jenkinsci/lib-access-modifier#17", "author": "jglick", "createdAt": "2020-02-03T19:53:17Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2MzY1Mw=="}], "type": "inlineReview"}, {"oid": "4274291bf7de4b9951691467239ae3f0b534b580", "url": "https://github.com/jenkinsci/jenkins/commit/4274291bf7de4b9951691467239ae3f0b534b580", "message": "Remove multicast discovery services.", "committedDate": "2020-02-05T17:48:08Z", "type": "commit"}, {"oid": "746d004f66202f1623df1e667a40092fa824d090", "url": "https://github.com/jenkinsci/jenkins/commit/746d004f66202f1623df1e667a40092fa824d090", "message": "Refine clean up with DNSMultiCast.\n\nDoesn't need to be referenced in the other pom any more.\nWe need to keep the class and the property around for a while.\nJenkins Test Harness sets the property. Until we can get all\nversions aligned so it isn't needed, it's best to keep the property\ndoing nothing.", "committedDate": "2020-02-05T17:48:08Z", "type": "commit"}, {"oid": "d18c7b55cdba8e1d7fdd54190d3d7813156c6a7a", "url": "https://github.com/jenkinsci/jenkins/commit/d18c7b55cdba8e1d7fdd54190d3d7813156c6a7a", "message": "Deprecate remaining class fragment.", "committedDate": "2020-02-05T17:48:08Z", "type": "commit"}, {"oid": "5afcead9537e3cf9bfc1ffdf2ae4974e23df9b12", "url": "https://github.com/jenkinsci/jenkins/commit/5afcead9537e3cf9bfc1ffdf2ae4974e23df9b12", "message": "Remove unneeded dependency.", "committedDate": "2020-02-05T17:48:08Z", "type": "commit"}, {"oid": "8fec924c913644eccfdf85765771f1f82fbfa751", "url": "https://github.com/jenkinsci/jenkins/commit/8fec924c913644eccfdf85765771f1f82fbfa751", "message": "Add log warning messages.", "committedDate": "2020-02-05T18:13:49Z", "type": "commit"}, {"oid": "21bc110760afd10461a63aadbd949771bfe487a9", "url": "https://github.com/jenkinsci/jenkins/commit/21bc110760afd10461a63aadbd949771bfe487a9", "message": "Don't need to implement the interface anymore.", "committedDate": "2020-02-05T18:18:16Z", "type": "commit"}, {"oid": "8394ae15886b3fc67abedc1055ada8c45d816c76", "url": "https://github.com/jenkinsci/jenkins/commit/8394ae15886b3fc67abedc1055ada8c45d816c76", "message": "Merge remote-tracking branch 'origin/removeMulticast' into removeMulticast", "committedDate": "2020-02-05T18:24:17Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxMjYyNA==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r375512624", "body": "```suggestion\r\n    private static final Logger LOGGER = Logger.getLogger(DNSMultiCast.class.getName());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Logger logger = Logger.getLogger(DNSMultiCast.class.getName());\n          \n          \n            \n                private static final Logger LOGGER = Logger.getLogger(DNSMultiCast.class.getName());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Logger</span> <span class=\"x x-first x-last\">logger</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Logger</span><span class=\"pl-k\">.</span>getLogger(<span class=\"pl-smi\">DNSMultiCast</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">.</span>getName());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Logger</span> <span class=\"pl-c1 x x-first x-last\">LOGGER</span> <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Logger</span><span class=\"pl-k\">.</span>getLogger(<span class=\"pl-smi\">DNSMultiCast</span><span class=\"pl-k\">.</span>class<span class=\"pl-k\">.</span>getName());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daniel-beck", "createdAt": "2020-02-05T21:17:48Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,32 @@\n package hudson;\n \n+import hudson.init.Initializer;\n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import static hudson.init.InitMilestone.COMPLETED;\n+\n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated No longer does anything.\n  */\n-public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {\n-        if (disabled)   return; // escape hatch\n-        \n-        // the registerService call can be slow. run these asynchronously\n-        MasterComputer.threadPoolForRemoting.submit(new Callable<Object>() {\n-            public Object call() {\n-                try {\n-                    jmdns = new JenkinsJmDNS(null, null);\n-\n-                    Map<String,String> props = new HashMap<>();\n-                    String rootURL = jenkins.getRootUrl();\n-                    if (rootURL==null)  return null;\n-\n-                    props.put(\"url\", rootURL);\n-                    try {\n-                        props.put(\"version\",String.valueOf(Jenkins.getVersion()));\n-                    } catch (IllegalArgumentException e) {\n-                        // failed to parse the version number\n-                    }\n-\n-                    TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-                    if (tal!=null)\n-                        props.put(\"slave-port\",String.valueOf(tal.getPort()));\n-\n-                    props.put(\"server-id\", jenkins.getLegacyInstanceId());\n-\n-                    URL jenkins_url = new URL(rootURL);\n-                    int jenkins_port = jenkins_url.getPort();\n-                    if (jenkins_port == -1) {\n-                        jenkins_port = 80;\n-                    }\n-                    if (jenkins_url.getPath().length() > 0) {\n-                        props.put(\"path\", jenkins_url.getPath());\n-                    }\n-\n-                    jmdns.registerService(ServiceInfo.create(\"_hudson._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\t// for backward compatibility\n-                    jmdns.registerService(ServiceInfo.create(\"_jenkins._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\n+@Deprecated\n+@Restricted(NoExternalUse.class)\n+public class DNSMultiCast {\n+    private static final Logger logger = Logger.getLogger(DNSMultiCast.class.getName());", "originalCommit": "8394ae15886b3fc67abedc1055ada8c45d816c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUxMjcwMw==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r375512703", "body": "```suggestion\r\n            LOGGER.warning(\"DNS multicast capability has been removed from Jenkins.\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        logger.warning(\"DNS multicast capability has been removed from Jenkins.\");\n          \n          \n            \n                        LOGGER.warning(\"DNS multicast capability has been removed from Jenkins.\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"x x-first x-last\">logger</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DNS multicast capability has been removed from Jenkins.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1 x x-first x-last\">LOGGER</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DNS multicast capability has been removed from Jenkins.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daniel-beck", "createdAt": "2020-02-05T21:17:57Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,32 @@\n package hudson;\n \n+import hudson.init.Initializer;\n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import static hudson.init.InitMilestone.COMPLETED;\n+\n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated No longer does anything.\n  */\n-public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {\n-        if (disabled)   return; // escape hatch\n-        \n-        // the registerService call can be slow. run these asynchronously\n-        MasterComputer.threadPoolForRemoting.submit(new Callable<Object>() {\n-            public Object call() {\n-                try {\n-                    jmdns = new JenkinsJmDNS(null, null);\n-\n-                    Map<String,String> props = new HashMap<>();\n-                    String rootURL = jenkins.getRootUrl();\n-                    if (rootURL==null)  return null;\n-\n-                    props.put(\"url\", rootURL);\n-                    try {\n-                        props.put(\"version\",String.valueOf(Jenkins.getVersion()));\n-                    } catch (IllegalArgumentException e) {\n-                        // failed to parse the version number\n-                    }\n-\n-                    TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-                    if (tal!=null)\n-                        props.put(\"slave-port\",String.valueOf(tal.getPort()));\n-\n-                    props.put(\"server-id\", jenkins.getLegacyInstanceId());\n-\n-                    URL jenkins_url = new URL(rootURL);\n-                    int jenkins_port = jenkins_url.getPort();\n-                    if (jenkins_port == -1) {\n-                        jenkins_port = 80;\n-                    }\n-                    if (jenkins_url.getPath().length() > 0) {\n-                        props.put(\"path\", jenkins_url.getPath());\n-                    }\n-\n-                    jmdns.registerService(ServiceInfo.create(\"_hudson._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\t// for backward compatibility\n-                    jmdns.registerService(ServiceInfo.create(\"_jenkins._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\n+@Deprecated\n+@Restricted(NoExternalUse.class)\n+public class DNSMultiCast {\n+    private static final Logger logger = Logger.getLogger(DNSMultiCast.class.getName());\n \n-                    // Make Jenkins appear in Safari's Bonjour bookmarks\n-                    jmdns.registerService(ServiceInfo.create(\"_http._tcp.local.\",\"Jenkins\",\n-                            jenkins_port,0,0,props));\n-                } catch (IOException e) {\n-                    LOGGER.log(Level.INFO, \"Cannot advertise service to DNS multi-cast, skipping: {0}\", e);\n-                    LOGGER.log(Level.FINE, null, e);\n-                }\n-                return null;\n-            }\n-        });\n-    }\n+    public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);\n \n-    public void close() {\n-        if (jmdns!=null) {\n-            try {\n-                jmdns.abort();\n-                jmdns = null;\n-            } catch (final IOException e) {\n-                LOGGER.log(Level.WARNING,\"Failed to close down JmDNS instance!\",e);\n-            }\n+    @Initializer(before=COMPLETED)\n+    public void warn() {\n+        if (!disabled) {\n+            logger.warning(\"DNS multicast capability has been removed from Jenkins.\");", "originalCommit": "8394ae15886b3fc67abedc1055ada8c45d816c76", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6b118ce351cb3f62aebf737fe062efcac9cbdd9a", "url": "https://github.com/jenkinsci/jenkins/commit/6b118ce351cb3f62aebf737fe062efcac9cbdd9a", "message": "Fix initializer.\n\nChange capitalization for logger.", "committedDate": "2020-02-05T21:24:00Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwNjY3Nw==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r375806677", "body": "```suggestion\r\n            LOGGER.warning(\"DNS multicast capability has been removed from Jenkins. More information: https://jenkins.io/redirect/dns-multicast\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warning(\"DNS multicast capability has been removed from Jenkins.\");\n          \n          \n            \n                        LOGGER.warning(\"DNS multicast capability has been removed from Jenkins. More information: https://jenkins.io/redirect/dns-multicast\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DNS multicast capability has been removed from Jenkins.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>DNS multicast capability has been removed from Jenkins.<span class=\"x x-first x-last\"> More information: https://jenkins.io/redirect/dns-multicast</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daniel-beck", "createdAt": "2020-02-06T12:30:18Z", "path": "core/src/main/java/hudson/DNSMultiCast.java", "diffHunk": "@@ -1,205 +1,32 @@\n package hudson;\n \n+import hudson.init.Initializer;\n import jenkins.util.SystemProperties;\n-import jenkins.model.Jenkins;\n-import jenkins.model.Jenkins.MasterComputer;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n \n-import javax.jmdns.ServiceInfo;\n-import javax.jmdns.impl.JmDNSImpl;\n-import java.io.Closeable;\n-import java.io.IOException;\n-import java.lang.reflect.Field;\n-import java.lang.reflect.InvocationTargetException;\n-import java.lang.reflect.Method;\n-import java.net.InetAddress;\n-import java.net.URL;\n-import java.util.HashMap;\n-import java.util.Map;\n-import java.util.concurrent.Callable;\n-import java.util.concurrent.ExecutorService;\n-import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import static hudson.init.InitMilestone.COMPLETED;\n+\n /**\n  * Registers a DNS multi-cast service-discovery support.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated No longer does anything.\n  */\n-public class DNSMultiCast implements Closeable {\n-    private JenkinsJmDNS jmdns;\n-\n-    public DNSMultiCast(final Jenkins jenkins) {\n-        if (disabled)   return; // escape hatch\n-        \n-        // the registerService call can be slow. run these asynchronously\n-        MasterComputer.threadPoolForRemoting.submit(new Callable<Object>() {\n-            public Object call() {\n-                try {\n-                    jmdns = new JenkinsJmDNS(null, null);\n-\n-                    Map<String,String> props = new HashMap<>();\n-                    String rootURL = jenkins.getRootUrl();\n-                    if (rootURL==null)  return null;\n-\n-                    props.put(\"url\", rootURL);\n-                    try {\n-                        props.put(\"version\",String.valueOf(Jenkins.getVersion()));\n-                    } catch (IllegalArgumentException e) {\n-                        // failed to parse the version number\n-                    }\n-\n-                    TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-                    if (tal!=null)\n-                        props.put(\"slave-port\",String.valueOf(tal.getPort()));\n-\n-                    props.put(\"server-id\", jenkins.getLegacyInstanceId());\n-\n-                    URL jenkins_url = new URL(rootURL);\n-                    int jenkins_port = jenkins_url.getPort();\n-                    if (jenkins_port == -1) {\n-                        jenkins_port = 80;\n-                    }\n-                    if (jenkins_url.getPath().length() > 0) {\n-                        props.put(\"path\", jenkins_url.getPath());\n-                    }\n-\n-                    jmdns.registerService(ServiceInfo.create(\"_hudson._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\t// for backward compatibility\n-                    jmdns.registerService(ServiceInfo.create(\"_jenkins._tcp.local.\",\"jenkins\",\n-                            jenkins_port,0,0,props));\n-\n-                    // Make Jenkins appear in Safari's Bonjour bookmarks\n-                    jmdns.registerService(ServiceInfo.create(\"_http._tcp.local.\",\"Jenkins\",\n-                            jenkins_port,0,0,props));\n-                } catch (IOException e) {\n-                    LOGGER.log(Level.INFO, \"Cannot advertise service to DNS multi-cast, skipping: {0}\", e);\n-                    LOGGER.log(Level.FINE, null, e);\n-                }\n-                return null;\n-            }\n-        });\n-    }\n-\n-    public void close() {\n-        if (jmdns!=null) {\n-            try {\n-                jmdns.abort();\n-                jmdns = null;\n-            } catch (final IOException e) {\n-                LOGGER.log(Level.WARNING,\"Failed to close down JmDNS instance!\",e);\n-            }\n-        }\n-    }\n-\n+@Deprecated\n+@Restricted(NoExternalUse.class)\n+public class DNSMultiCast {\n     private static final Logger LOGGER = Logger.getLogger(DNSMultiCast.class.getName());\n \n-    /**\n-     * Class that extends {@link JmDNSImpl} to add an abort method. Since {@link javax.jmdns.JmDNS#close()} might\n-     * make the instance hang during the shutdown, the abort method terminate uncleanly, but rapidly and\n-     * without blocking.\n-     *\n-     * Initially it was part of the jenkinsci/jmdns forked library, but now this class is responsible for aborting,\n-     * allowing to have a direct and clean dependency to the original library.\n-     *\n-     * The abort() method is pretty similar to close() method. To access private methods and fields uses\n-     * reflection.\n-     *\n-     * @since 2.178\n-     *\n-     * See JENKINS-25369 for further details\n-     */\n-    private static class JenkinsJmDNS extends JmDNSImpl {\n-        private static Logger logger = Logger.getLogger(JmDNSImpl.class.getName());\n-        private final Class parent;\n-\n-        /**\n-         * Create an instance of JmDNS and bind it to a specific network interface given its IP-address.\n-         *\n-         * @param address IP address to bind to.\n-         * @param name    name of the newly created JmDNS\n-         * @throws IOException\n-         */\n-        public JenkinsJmDNS(InetAddress address, String name) throws IOException {\n-            super(address, name);\n-            this.parent = this.getClass().getSuperclass();\n-        }\n-\n-        /**\n-         * Works like {@link #close()} but terminate uncleanly, but rapidly and without blocking.\n-         */\n-        public void abort() throws IOException {\n-            if (this.isClosing()) {\n-                return;\n-            }\n-\n-           if (logger.isLoggable(Level.FINER)) {\n-                logger.finer(\"Aborting JmDNS: \" + this);\n-            }\n-            // Stop JmDNS\n-            // This protects against recursive calls\n-            if (this.closeState()) {\n-                // We got the tie break now clean up\n-\n-                // Stop the timer\n-                logger.finer(\"Canceling the timer\");\n-                this.cancelTimer();\n-\n-                // Cancel all services\n-                // KK: this is a blocking call that doesn't fit 'abort'\n-                // this.unregisterAllServices();\n-                executePrivateParentMethod(\"disposeServiceCollectors\");\n-\n-// KK: another blocking call\n-//                if (logger.isLoggable(Level.FINER)) {\n-//                    logger.finer(\"Wait for JmDNS cancel: \" + this);\n-//                }\n-//                this.waitForCanceled(DNSConstants.CLOSE_TIMEOUT);\n-\n-                // Stop the canceler timer\n-                logger.finer(\"Canceling the state timer\");\n-                this.cancelStateTimer();\n-\n-                // Stop the executor\n-                shutdown();\n-\n-                // close socket\n-                executePrivateParentMethod(\"closeMulticastSocket\");\n-\n-                // remove the shutdown hook\n-                if (_shutdown != null) {\n-                    Runtime.getRuntime().removeShutdownHook(_shutdown);\n-                }\n-\n-                if (logger.isLoggable(Level.FINER)) {\n-                    logger.finer(\"JmDNS closed.\");\n-                }\n-            }\n-            advanceState(null);\n-        }\n-\n-        private void shutdown() throws IOException {\n-            try {\n-                Field executor = this.parent.getDeclaredField(\"_executor\");\n-                executor.setAccessible(true);\n-                ExecutorService _executor = (ExecutorService) executor.get(this);\n-                _executor.shutdown();\n-            } catch (NoSuchFieldException | IllegalAccessException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n-        }\n+    public static boolean disabled = SystemProperties.getBoolean(DNSMultiCast.class.getName()+\".disabled\", true);\n \n-        private void executePrivateParentMethod(String method) throws IOException {\n-            try {\n-                Method m = this.parent.getDeclaredMethod(method);\n-                m.setAccessible(true);\n-                m.invoke(this);\n-            } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {\n-                logger.log(Level.SEVERE, \"Error trying to abort JmDNS\", e);\n-                throw new IOException(e);\n-            }\n+    @Initializer(before=COMPLETED)\n+    public static void warn() {\n+        if (!disabled) {\n+            LOGGER.warning(\"DNS multicast capability has been removed from Jenkins.\");", "originalCommit": "6b118ce351cb3f62aebf737fe062efcac9cbdd9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgwNjgzOA==", "url": "https://github.com/jenkinsci/jenkins/pull/4460#discussion_r375806838", "body": "```suggestion\r\n            LOGGER.warning(\"UDP broadcast capability has been removed from Jenkins. More information: https://jenkins.io/redirect/udp-broadcast\");\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warning(\"UDP broadcast capability has been removed from Jenkins.\");\n          \n          \n            \n                        LOGGER.warning(\"UDP broadcast capability has been removed from Jenkins. More information: https://jenkins.io/redirect/udp-broadcast\");", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UDP broadcast capability has been removed from Jenkins.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>warning(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>UDP broadcast capability has been removed from Jenkins.<span class=\"x x-first x-last\"> More information: https://jenkins.io/redirect/udp-broadcast</span><span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "daniel-beck", "createdAt": "2020-02-06T12:30:42Z", "path": "core/src/main/java/hudson/UDPBroadcastThread.java", "diffHunk": "@@ -23,129 +24,40 @@\n  */\n package hudson;\n \n-import jenkins.util.SystemProperties;\n-import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n-import hudson.model.Hudson;\n+import hudson.init.Initializer;\n import jenkins.model.Jenkins;\n-import hudson.util.OneShotEvent;\n+import jenkins.util.SystemProperties;\n+import org.kohsuke.accmod.Restricted;\n+import org.kohsuke.accmod.restrictions.NoExternalUse;\n \n import java.io.IOException;\n-import java.net.DatagramPacket;\n-import java.net.InetAddress;\n-import java.net.MulticastSocket;\n-import java.net.SocketAddress;\n-import java.net.SocketException;\n-import java.net.UnknownHostException;\n-import java.nio.channels.ClosedByInterruptException;\n-import java.nio.charset.StandardCharsets;\n-import java.util.logging.Level;\n import java.util.logging.Logger;\n \n+import static hudson.init.InitMilestone.COMPLETED;\n+\n /**\n  * Monitors a UDP multicast broadcast and respond with the location of the Hudson service.\n  *\n  * <p>\n  * Useful for auto-discovery of Hudson in the network.\n  *\n  * @author Kohsuke Kawaguchi\n+ * @deprecated No longer does anything.\n  */\n-public class UDPBroadcastThread extends Thread {\n-    private final Jenkins jenkins;\n-\n-    public final OneShotEvent ready = new OneShotEvent();\n-    private MulticastSocket mcs;\n-    private boolean shutdown;\n-    static boolean udpHandlingProblem; // for tests\n-\n-    /**\n-     * @deprecated as of 1.416\n-     *      Use {@link #UDPBroadcastThread(Jenkins)}\n-     */\n-    @Deprecated\n-    public UDPBroadcastThread(Hudson jenkins) throws IOException {\n-        this((Jenkins)jenkins);\n-    }\n-\n-    public UDPBroadcastThread(Jenkins jenkins) throws IOException {\n-        super(\"Jenkins UDP \"+PORT+\" monitoring thread\");\n-        this.jenkins = jenkins;\n-        mcs = new MulticastSocket(PORT);\n-    }\n-\n-    @SuppressFBWarnings(\"ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD\")\n-    @Override\n-    public void run() {\n-        try {\n-            mcs.joinGroup(MULTICAST);\n-            ready.signal();\n-\n-            //noinspection InfiniteLoopStatement\n-            while(true) {\n-                byte[] buf = new byte[2048];\n-                DatagramPacket p = new DatagramPacket(buf,buf.length);\n-                mcs.receive(p);\n-\n-                SocketAddress sender = p.getSocketAddress();\n-\n-                // prepare a response\n-                TcpSlaveAgentListener tal = jenkins.getTcpSlaveAgentListener();\n-\n-                StringBuilder rsp = new StringBuilder(\"<hudson>\");\n-                tag(rsp,\"version\", Jenkins.VERSION);\n-                tag(rsp,\"url\", jenkins.getRootUrl());\n-                tag(rsp,\"server-id\", jenkins.getLegacyInstanceId());\n-                tag(rsp,\"slave-port\",tal==null?null:tal.getPort());\n-\n-                for (UDPBroadcastFragment f : UDPBroadcastFragment.all())\n-                    f.buildFragment(rsp,sender);\n-\n-                rsp.append(\"</hudson>\");\n-\n-                byte[] response = rsp.toString().getBytes(StandardCharsets.UTF_8);\n-                mcs.send(new DatagramPacket(response,response.length,sender));\n-            }\n-        } catch (ClosedByInterruptException e) {\n-            // shut down\n-        } catch (SocketException e) {\n-            if (shutdown) { // forcibly closed\n-                return;\n-            }            // if we failed to listen to UDP, just silently abandon it, as a stack trace\n-            // makes people unnecessarily concerned, for a feature that currently does no good.\n-            LOGGER.log(Level.INFO, \"Cannot listen to UDP port {0}, skipping: {1}\", new Object[] {PORT, e});\n-            LOGGER.log(Level.FINE, null, e);\n-        } catch (IOException e) {\n-            if (shutdown)   return; // forcibly closed\n-            LOGGER.log(Level.WARNING, \"UDP handling problem\",e);\n-            udpHandlingProblem = true;\n-        }\n-    }\n-\n-    private void tag(StringBuilder buf, String tag, Object value) {\n-        if(value==null) return;\n-        buf.append('<').append(tag).append('>').append(value).append(\"</\").append(tag).append('>');\n-    }\n-\n-    public void shutdown() {\n-        shutdown = true;\n-        mcs.close();\n-        interrupt();\n-    }\n+@Deprecated\n+@Restricted(NoExternalUse.class)\n+public class UDPBroadcastThread {\n \n     // The previous default port was 33848, before the \"disabled by default\" change\n     public static final int PORT = SystemProperties.getInteger(\"hudson.udp\", -1);\n \n     private static final Logger LOGGER = Logger.getLogger(UDPBroadcastThread.class.getName());\n \n-    /**\n-     * Multicast socket address.\n-     */\n-    public static InetAddress MULTICAST;\n-\n-    static {\n-        try {\n-            MULTICAST = InetAddress.getByAddress(new byte[]{(byte)239, (byte)77, (byte)124, (byte)213});\n-        } catch (UnknownHostException e) {\n-            throw new Error(e);\n+    @Initializer(before=COMPLETED)\n+    public static void warn() {\n+        if (PORT > 0) {\n+            LOGGER.warning(\"UDP broadcast capability has been removed from Jenkins.\");", "originalCommit": "6b118ce351cb3f62aebf737fe062efcac9cbdd9a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b471a1de15f0e78ced27eb5fb25ed891e47ea06", "url": "https://github.com/jenkinsci/jenkins/commit/4b471a1de15f0e78ced27eb5fb25ed891e47ea06", "message": "Add URLs to log messages.\n\nCo-Authored-By: Daniel Beck <1831569+daniel-beck@users.noreply.github.com>", "committedDate": "2020-02-06T15:37:43Z", "type": "commit"}]}