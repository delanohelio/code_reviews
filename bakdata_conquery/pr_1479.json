{"pr_number": 1479, "pr_title": "rework date based aggregators to reference validity date", "pr_author": "awildturtok", "pr_createdAt": "2020-12-07T11:10:50Z", "pr_url": "https://github.com/bakdata/conquery/pull/1479", "timeline": [{"oid": "e6625b58d2341fcdd06113f813ece833ae6e026c", "url": "https://github.com/bakdata/conquery/commit/e6625b58d2341fcdd06113f813ece833ae6e026c", "message": "separate phases (QP and Execution) better", "committedDate": "2020-11-23T13:10:30Z", "type": "commit"}, {"oid": "3aef816f4adcefe877b0c0e25e2efcb6e9f1dac3", "url": "https://github.com/bakdata/conquery/commit/3aef816f4adcefe877b0c0e25e2efcb6e9f1dac3", "message": "separate phases (QP and Execution) better", "committedDate": "2020-11-23T13:59:34Z", "type": "commit"}, {"oid": "0ef621b661b5e02854a9f796b1e568e0e1fed020", "url": "https://github.com/bakdata/conquery/commit/0ef621b661b5e02854a9f796b1e568e0e1fed020", "message": "add excludeFromSecondaryIdQuery and activeSecondaryId fields, to exclude ConceptNodes that have a SecondaryId, but shouldn't", "committedDate": "2020-11-23T16:31:24Z", "type": "commit"}, {"oid": "baf68e64cc30e77000527b476e461ce6c0752cde", "url": "https://github.com/bakdata/conquery/commit/baf68e64cc30e77000527b476e461ce6c0752cde", "message": "automatic update to docs", "committedDate": "2020-11-23T16:33:58Z", "type": "commit"}, {"oid": "52c855e54ce15d758db92c362d1e4eb5598c17f3", "url": "https://github.com/bakdata/conquery/commit/52c855e54ce15d758db92c362d1e4eb5598c17f3", "message": "Fix bug where StringParser would crash with overlapping prefix/suffix", "committedDate": "2020-11-24T15:42:06Z", "type": "commit"}, {"oid": "ccd0c407d7e96cf87c32c7e3f942089f1fc90161", "url": "https://github.com/bakdata/conquery/commit/ccd0c407d7e96cf87c32c7e3f942089f1fc90161", "message": "Add test for excludeFromSecondaryIdQuery flag", "committedDate": "2020-11-24T15:42:06Z", "type": "commit"}, {"oid": "53a728b7fd2d812450d3f896ef325b92724ac806", "url": "https://github.com/bakdata/conquery/commit/53a728b7fd2d812450d3f896ef325b92724ac806", "message": "automatic update to docs", "committedDate": "2020-11-24T15:44:21Z", "type": "commit"}, {"oid": "db863c3ae9f96b610c3e77f5dd3a474d945c0893", "url": "https://github.com/bakdata/conquery/commit/db863c3ae9f96b610c3e77f5dd3a474d945c0893", "message": "remove usage of CQTable in ConceptNode", "committedDate": "2020-11-24T17:37:38Z", "type": "commit"}, {"oid": "8c89fb28e6334678feea3dee0fb51b12c0042a20", "url": "https://github.com/bakdata/conquery/commit/8c89fb28e6334678feea3dee0fb51b12c0042a20", "message": "Validate that SecondaryId is distinct per Table", "committedDate": "2020-11-24T17:37:38Z", "type": "commit"}, {"oid": "644033d22ae06f79165603156f6e5d969d7df224", "url": "https://github.com/bakdata/conquery/commit/644033d22ae06f79165603156f6e5d969d7df224", "message": "Fix missing check for incoming BitMapCDateSet in retainAll", "committedDate": "2020-11-24T17:37:38Z", "type": "commit"}, {"oid": "ed0ca92a62a4cf36d6f4145179de015b9b862ca3", "url": "https://github.com/bakdata/conquery/commit/ed0ca92a62a4cf36d6f4145179de015b9b862ca3", "message": "Generify checks for SecondaryIdQuery", "committedDate": "2020-11-24T17:37:38Z", "type": "commit"}, {"oid": "acd9cc3ed96bd66aa32ac2070eba89c4d9df8f31", "url": "https://github.com/bakdata/conquery/commit/acd9cc3ed96bd66aa32ac2070eba89c4d9df8f31", "message": "Cleanup code", "committedDate": "2020-11-25T11:18:43Z", "type": "commit"}, {"oid": "301b9619b2d9bfadf7ff9205e8ce8c3501207604", "url": "https://github.com/bakdata/conquery/commit/301b9619b2d9bfadf7ff9205e8ce8c3501207604", "message": "Merge branch 'develop' into feature/exclude-from-second-id", "committedDate": "2020-11-25T15:03:53Z", "type": "commit"}, {"oid": "b65b1abf836ebb0e5ce999b2f682a4e040b5fb8b", "url": "https://github.com/bakdata/conquery/commit/b65b1abf836ebb0e5ce999b2f682a4e040b5fb8b", "message": "automatic update to docs", "committedDate": "2020-11-25T15:06:17Z", "type": "commit"}, {"oid": "024c37ddb9076cd569600d854c53ebd5b23b4c4d", "url": "https://github.com/bakdata/conquery/commit/024c37ddb9076cd569600d854c53ebd5b23b4c4d", "message": "Merge remote-tracking branch 'origin/develop' into feature/exclude-from-second-id\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/common/BitMapCDateSet.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/DateRestrictingNode.java\n#\tdocs/REST API JSONs.md", "committedDate": "2020-12-07T08:45:23Z", "type": "commit"}, {"oid": "77f5b5ba34078aba9408a34ac1723cb7573b117f", "url": "https://github.com/bakdata/conquery/commit/77f5b5ba34078aba9408a34ac1723cb7573b117f", "message": "automatic update to docs", "committedDate": "2020-12-07T08:48:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MzM1MA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537473350", "body": "Das sieht etwas nach einer magic number aus. Kannst du hier nitte eine sprechende Konstante draus machen?", "bodyText": "Das sieht etwas nach einer magic number aus. Kannst du hier nitte eine sprechende Konstante draus machen?", "bodyHTML": "<p dir=\"auto\">Das sieht etwas nach einer magic number aus. Kannst du hier nitte eine sprechende Konstante draus machen?</p>", "author": "thoniTUB", "createdAt": "2020-12-07T12:37:27Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/filters/specific/DateDistanceFilter.java", "diffHunk": "@@ -25,30 +22,24 @@\n  */\n @Getter @Setter @Slf4j\n @CPSType(id=\"DATE_DISTANCE\", base=Filter.class)\n-public class DateDistanceFilter extends SingleColumnFilter<Range.LongRange> {\n+public class DateDistanceFilter extends Filter<Range.LongRange> {\n \n \t@NotNull\n \tprivate ChronoUnit timeUnit = ChronoUnit.YEARS;\n+\n \t\n \t@Override\n-\tpublic EnumSet<MajorTypeId> getAcceptedColumnTypes() {\n-\t\treturn EnumSet.of(MajorTypeId.DATE);\n+\tpublic void configureFrontend(FEFilter f) throws ConceptConfigurationException {\n+\t\tf.setType(FEFilterType.INTEGER_RANGE);\n \t}\n-\t\n+\n \t@Override\n-\tpublic void configureFrontend(FEFilter f) throws ConceptConfigurationException {\n-\t\tswitch (getColumn().getType()) {\n-\t\t\tcase DATE: {\n-\t\t\t\tf.setType(FEFilterType.INTEGER_RANGE);\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tdefault:\n-\t\t\t\tthrow new ConceptConfigurationException(getConnector(), \"DATE_DISTANCE filter is incompatible with columns of type \" + getColumn().getType());\n-\t\t}\n+\tpublic Column[] getRequiredColumns() {\n+\t\treturn new Column[0];", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MzkyOA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537473928", "body": "\ud83d\udc4d ", "bodyText": "\ud83d\udc4d", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"+1\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f44d.png\">\ud83d\udc4d</g-emoji></p>", "author": "thoniTUB", "createdAt": "2020-12-07T12:38:29Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/filters/specific/DurationSumFilter.java", "diffHunk": "@@ -31,20 +30,12 @@\n \n \t@Override\n \tpublic void configureFrontend(FEFilter f) throws ConceptConfigurationException {\n-\t\tswitch (getColumn().getType()) {\n-\t\t\tcase DATE:\n-\t\t\tcase DATE_RANGE: {\n-\t\t\t\tf.setType(FEFilterType.INTEGER_RANGE);\n-\t\t\t\tf.setMin(0);\n-\t\t\t\treturn;\n-\t\t\t}\n-\t\t\tdefault:\n-\t\t\t\tthrow new ConceptConfigurationException(getConnector(), \"DURATION_SUM filter is incompatible with columns of type \" + getColumn().getType());\n-\t\t}\n+\t\tf.setType(FEFilterType.INTEGER_RANGE);\n+\t\tf.setMin(0);", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3NjMxMA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537476310", "body": "Die Jsons in den Test enthalten noch diesen Member, weshalb die CI fehlschl\u00e4gt", "bodyText": "Die Jsons in den Test enthalten noch diesen Member, weshalb die CI fehlschl\u00e4gt", "bodyHTML": "<p dir=\"auto\">Die Jsons in den Test enthalten noch diesen Member, weshalb die CI fehlschl\u00e4gt</p>", "author": "thoniTUB", "createdAt": "2020-12-07T12:42:24Z", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/select/connector/specific/DurationSumSelect.java", "diffHunk": "@@ -1,30 +1,15 @@\n package com.bakdata.conquery.models.concepts.select.connector.specific;\n \n import com.bakdata.conquery.io.cps.CPSType;\n-import com.bakdata.conquery.io.jackson.serializer.NsIdRef;\n import com.bakdata.conquery.models.concepts.select.Select;\n-import com.bakdata.conquery.models.concepts.select.connector.SingleColumnSelect;\n-import com.bakdata.conquery.models.datasets.Column;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.aggregators.specific.DurationSumAggregator;\n-import com.fasterxml.jackson.annotation.JsonCreator;\n \n @CPSType(id = \"DURATION_SUM\", base = Select.class)\n-public class DurationSumSelect extends SingleColumnSelect {\n-\n-\t@JsonCreator\n-\tpublic DurationSumSelect(@NsIdRef Column column) {", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3ODcxOQ==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537478719", "body": "Just to be sure\r\n```suggestion\r\n\t\tif (table.getDateColumn() != null && table.getDateColumn().getValue() != null ) {\r\n```", "bodyText": "Just to be sure\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tif (table.getDateColumn() != null) {\n          \n          \n            \n            \t\tif (table.getDateColumn() != null && table.getDateColumn().getValue() != null ) {", "bodyHTML": "<p dir=\"auto\">Just to be sure</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"218\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">if</span> (table<span class=\"pl-k\">.</span>getDateColumn() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"218\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">if</span> (table<span class=\"pl-k\">.</span>getDateColumn() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span><span class=\"x x-first\"> </span><span class=\"pl-k x\">&amp;&amp;</span><span class=\"x\"> table</span><span class=\"pl-k x\">.</span><span class=\"x\">getDateColumn()</span><span class=\"pl-k x\">.</span><span class=\"x\">getValue() </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\"> </span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thoniTUB", "createdAt": "2020-12-07T12:46:08Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -193,17 +193,23 @@ protected QPNode conceptChild(Concept<?> concept, QueryPlanContext context, List\n \t}\n \n \tprivate Column selectValidityDateColumn(CQTable table) {\n+\t\tColumn validityDate = null;\n+\n \t\tif (table.getDateColumn() != null) {", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4MDI4Nw==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537480287", "body": "Sieht mir aus wie `this.column = this.column;`", "bodyText": "Sieht mir aus wie this.column = this.column;", "bodyHTML": "<p dir=\"auto\">Sieht mir aus wie <code>this.column = this.column;</code></p>", "author": "thoniTUB", "createdAt": "2020-12-07T12:48:22Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/filter/event/DateDistanceFilterNode.java", "diffHunk": "@@ -30,7 +30,7 @@\n \t@Setter\n \tprivate Column column;\n \n-\tpublic DateDistanceFilterNode(Column column, ChronoUnit unit, Range.LongRange filterValue) {\n+\tpublic DateDistanceFilterNode(ChronoUnit unit, Range.LongRange filterValue) {\n \t\tsuper(filterValue);\n \t\tthis.column = column;", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU5NDI3MA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537594270", "bodyText": "Warum richtet sich das jetzt nicht mehr nach der ValidityDateColumn?", "author": "thoniTUB", "createdAt": "2020-12-07T15:25:48Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4MDI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU5NjAwNA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537596004", "bodyText": "weil wir das f\u00fcr alter benutzen und das dann vermutlich zu verwirrung f\u00fchren w\u00fcrde", "author": "awildturtok", "createdAt": "2020-12-07T15:27:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4MDI4Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxMzk2OA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537613968", "bodyText": "Oki, stimmt", "author": "thoniTUB", "createdAt": "2020-12-07T15:50:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4MDI4Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4MDk2MQ==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r537480961", "body": "mmhmm", "bodyText": "mmhmm", "bodyHTML": "<p dir=\"auto\">mmhmm</p>", "author": "thoniTUB", "createdAt": "2020-12-07T12:49:27Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/filter/event/DateDistanceFilterNode.java", "diffHunk": "@@ -44,15 +44,22 @@ public void nextTable(QueryExecutionContext ctx, TableId currentTable) {\n \t\telse {\n \t\t\treference = CDate.toLocalDate(ctx.getDateRestriction().getMaxValue());\n \t\t}\n+\n+\t\tcolumn = ctx.getValidityDateColumn();\n \t}\n \n \t@Override\n \tpublic DateDistanceFilterNode doClone(CloneContext ctx) {\n-\t\treturn new DateDistanceFilterNode(getColumn(), unit, filterValue);\n+\t\treturn new DateDistanceFilterNode(unit, filterValue);\n \t}\n \n \t@Override\n \tpublic boolean checkEvent(Bucket bucket, int event) {\n+\t\tif(getColumn() == null){\n+\t\t\t// todo wat do?", "originalCommit": "33bbda35d573b43fee2fa1f00cd644a3679fd27e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "382314715707f4611ee87e54f20ff6c826759f9f", "url": "https://github.com/bakdata/conquery/commit/382314715707f4611ee87e54f20ff6c826759f9f", "message": "simplify secondaryId signalling in ConceptNode", "committedDate": "2020-12-07T13:39:24Z", "type": "commit"}, {"oid": "c8bdeb5fd49c9c75feaab32aee083f9e6f6e48dc", "url": "https://github.com/bakdata/conquery/commit/c8bdeb5fd49c9c75feaab32aee083f9e6f6e48dc", "message": "fix Validation", "committedDate": "2020-12-07T13:43:40Z", "type": "commit"}, {"oid": "1a901d58a6de05b7e6fb951e35cdaf860bf1f7fc", "url": "https://github.com/bakdata/conquery/commit/1a901d58a6de05b7e6fb951e35cdaf860bf1f7fc", "message": "Merge branch 'develop' into feature/exclude-from-second-id", "committedDate": "2020-12-07T14:00:42Z", "type": "commit"}, {"oid": "46d1e5d900e9dbdc5ac3d8f8662b1a28f720c8d9", "url": "https://github.com/bakdata/conquery/commit/46d1e5d900e9dbdc5ac3d8f8662b1a28f720c8d9", "message": "ignore ValidationMethod", "committedDate": "2020-12-07T14:57:20Z", "type": "commit"}, {"oid": "aceae9b78dce16f60003461078b94f00afdfab08", "url": "https://github.com/bakdata/conquery/commit/aceae9b78dce16f60003461078b94f00afdfab08", "message": "automatic update to docs", "committedDate": "2020-12-07T15:00:12Z", "type": "commit"}, {"oid": "eccbbe6f7f6c2867685159e57f50f264b165d565", "url": "https://github.com/bakdata/conquery/commit/eccbbe6f7f6c2867685159e57f50f264b165d565", "message": "Update backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "committedDate": "2020-12-07T15:47:20Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA4NjExOA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r540086118", "body": "Das sollte eigentlich schon in develop drinne sein? Wei\u00dft du warum das hier auftaucht?", "bodyText": "Das sollte eigentlich schon in develop drinne sein? Wei\u00dft du warum das hier auftaucht?", "bodyHTML": "<p dir=\"auto\">Das sollte eigentlich schon in develop drinne sein? Wei\u00dft du warum das hier auftaucht?</p>", "author": "thoniTUB", "createdAt": "2020-12-10T11:17:58Z", "path": "backend/src/main/java/com/bakdata/conquery/commands/ManagerNode.java", "diffHunk": "@@ -183,6 +184,7 @@ public void run(ConqueryConfig config, Environment environment) throws Interrupt\n \t\t\t\t\t\tConqueryConfig.getInstance().getQueries().getOldQueriesTime().getUnit().toChronoUnit()\n \t\t\t\t)));\n \t\tenvironment.admin().addTask(new ClearFilterSourceSearch());\n+\t\tenvironment.admin().addTask(new ReportConsistencyTask(datasetRegistry));", "originalCommit": "e5103f8eec082c6eac42b2dc63a2b663a77dbcfb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE3Nzc5MQ==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r540177791", "bodyText": "ich hab mal einen rebase gemacht", "author": "awildturtok", "createdAt": "2020-12-10T13:42:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDA4NjExOA=="}], "type": "inlineReview"}, {"oid": "8942a5d660a5ae8df88c8c33172991b177616371", "url": "https://github.com/bakdata/conquery/commit/8942a5d660a5ae8df88c8c33172991b177616371", "message": "fix test", "committedDate": "2020-12-10T13:41:59Z", "type": "forcePushed"}, {"oid": "178c3a6bfd263b07022d752f9d3efbe21afa9318", "url": "https://github.com/bakdata/conquery/commit/178c3a6bfd263b07022d752f9d3efbe21afa9318", "message": "fix test", "committedDate": "2020-12-14T15:49:43Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5MzcwOQ==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r542493709", "body": "```suggestion\r\n\tprivate static Column selectValidityDateColumn(CQTable table) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate Column selectValidityDateColumn(CQTable table) {\n          \n          \n            \n            \tprivate static Column selectValidityDateColumn(CQTable table) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t<span class=\"pl-k\">private</span> <span class=\"pl-smi\">Column</span> selectValidityDateColumn(<span class=\"pl-smi\">CQTable</span> table) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t<span class=\"pl-k\">private</span> <span class=\"pl-k x x-first\">static</span><span class=\"x x-last\"> </span><span class=\"pl-smi\">Column</span> selectValidityDateColumn(<span class=\"pl-smi\">CQTable</span> table) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thoniTUB", "createdAt": "2020-12-14T15:52:41Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -191,17 +191,22 @@ protected QPNode conceptChild(Concept<?> concept, QueryPlanContext context, List\n \t}\n \n \tprivate Column selectValidityDateColumn(CQTable table) {", "originalCommit": "178c3a6bfd263b07022d752f9d3efbe21afa9318", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NTc3Mw==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r542495773", "body": "K\u00f6nnte man noch einen ValidityDateAggregator als Abstraction einf\u00fchren, oder sind die Implementierung in den einzelnen Aggregatoren zu unterschiedlich?", "bodyText": "K\u00f6nnte man noch einen ValidityDateAggregator als Abstraction einf\u00fchren, oder sind die Implementierung in den einzelnen Aggregatoren zu unterschiedlich?", "bodyHTML": "<p dir=\"auto\">K\u00f6nnte man noch einen ValidityDateAggregator als Abstraction einf\u00fchren, oder sind die Implementierung in den einzelnen Aggregatoren zu unterschiedlich?</p>", "author": "thoniTUB", "createdAt": "2020-12-14T15:55:14Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/aggregators/specific/CountQuartersAggregator.java", "diffHunk": "@@ -13,43 +13,48 @@\n import com.bakdata.conquery.models.externalservice.ResultType;\n import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n-import com.bakdata.conquery.models.query.queryplan.aggregators.SingleColumnAggregator;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n import it.unimi.dsi.fastutil.ints.IntSet;\n+import lombok.Getter;\n \n /**\n  * Count the number of distinct quarters for all events. Implementation is specific for DateRanges\n  */\n-public class CountQuartersOfDateRangeAggregator extends SingleColumnAggregator<Long> {\n+public class CountQuartersAggregator implements Aggregator<Long> {", "originalCommit": "178c3a6bfd263b07022d752f9d3efbe21afa9318", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5Nzk3Mg==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r542497972", "bodyText": "Es sieht so aus als h\u00e4tten alle einen Member f\u00fcr die DateRestriction und der Validity date Column", "author": "thoniTUB", "createdAt": "2020-12-14T15:57:57Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUwMDk4OA==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r542500988", "bodyText": "Sie sollten identisch sein hier bietet es sich an", "author": "awildturtok", "createdAt": "2020-12-14T16:01:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NTc3Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUzOTY0Mg==", "url": "https://github.com/bakdata/conquery/pull/1479#discussion_r542539642", "bodyText": "aber ist mir gerade zu doof :/", "author": "awildturtok", "createdAt": "2020-12-14T16:50:42Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ5NTc3Mw=="}], "type": "inlineReview"}, {"oid": "eccbbe6f7f6c2867685159e57f50f264b165d565", "url": "https://github.com/bakdata/conquery/commit/eccbbe6f7f6c2867685159e57f50f264b165d565", "message": "Update backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "committedDate": "2020-12-07T15:47:20Z", "type": "forcePushed"}, {"oid": "89ebd7b8ced9cee3f7c064101899c906869a96fe", "url": "https://github.com/bakdata/conquery/commit/89ebd7b8ced9cee3f7c064101899c906869a96fe", "message": "Merge branch 'develop' into feature/date-based-to-validity-date", "committedDate": "2020-12-14T16:50:48Z", "type": "commit"}, {"oid": "f950e156f8499ac7a0ff45e4352d01a8791bd0fd", "url": "https://github.com/bakdata/conquery/commit/f950e156f8499ac7a0ff45e4352d01a8791bd0fd", "message": "Merge branch 'develop' into feature/date-based-to-validity-date", "committedDate": "2020-12-15T12:49:24Z", "type": "commit"}, {"oid": "a5d19b72c10d116700cd2a9dc8330646810e30ff", "url": "https://github.com/bakdata/conquery/commit/a5d19b72c10d116700cd2a9dc8330646810e30ff", "message": "cleanup", "committedDate": "2020-12-15T13:35:40Z", "type": "commit"}, {"oid": "244faae0f7f0567206239aca8e92c9dc373a9541", "url": "https://github.com/bakdata/conquery/commit/244faae0f7f0567206239aca8e92c9dc373a9541", "message": "automatic update to docs", "committedDate": "2020-12-15T13:38:19Z", "type": "commit"}]}