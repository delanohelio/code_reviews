{"pr_number": 1435, "pr_title": "use default validity date column if none provided", "pr_author": "awildturtok", "pr_createdAt": "2020-11-18T16:31:17Z", "pr_url": "https://github.com/bakdata/conquery/pull/1435", "timeline": [{"oid": "0a95ff58176263cead0815bcbb97794c8732357a", "url": "https://github.com/bakdata/conquery/commit/0a95ff58176263cead0815bcbb97794c8732357a", "message": "use default validity date column if none provided", "committedDate": "2020-11-18T16:30:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzc3MTE3Mg==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r527771172", "body": "Achtung ValidityDates kann leer sein!\r\nEs gibt Konzepte ohne ValidityDate", "bodyText": "Achtung ValidityDates kann leer sein!\nEs gibt Konzepte ohne ValidityDate", "bodyHTML": "<p dir=\"auto\">Achtung ValidityDates kann leer sein!<br>\nEs gibt Konzepte ohne ValidityDate</p>", "author": "thoniTUB", "createdAt": "2020-11-20T15:33:15Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java", "diffHunk": "@@ -69,13 +69,24 @@ public TableExportQueryPlan createQueryPlan(QueryPlanContext context) {\n \t\t\ttry {\n \t\t\t\tConcept<?> concept = context.getCentralRegistry().resolve(table.getId().getConcept());\n \t\t\t\tConnector connector = concept.getConnectorByName(table.getId().getConnector());\n-\t\t\t\tresolvedConnectors.add(\n-\t\t\t\t\t\tnew TableExportDescription(\n-\t\t\t\t\t\t\t\tconnector.getTable(),\n-\t\t\t\t\t\t\t\tconnector.getValidityDateColumn(table.getDateColumn().getValue()),\n-\t\t\t\t\t\t\t\ttotalColumns\n-\t\t\t\t\t\t)\n+\t\t\t\tfinal Column validityDateColumn;\n+\n+\t\t\t\t// if no dateColumn is provided, we use the default instead which is always the first one.\n+\t\t\t\tif (table.getDateColumn() != null) {\n+\t\t\t\t\tvalidityDateColumn = connector.getValidityDateColumn(table.getDateColumn().getValue());\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tvalidityDateColumn = connector.getValidityDates().get(0).getColumn();", "originalCommit": "0a95ff58176263cead0815bcbb97794c8732357a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "0a595f8d2cb69a9ff6c5ed3eb3a11bee623980ed", "url": "https://github.com/bakdata/conquery/commit/0a595f8d2cb69a9ff6c5ed3eb3a11bee623980ed", "message": "add handling of Connectors without Validity-Dates", "committedDate": "2020-11-23T10:09:31Z", "type": "commit"}, {"oid": "27ef88b590d531f96308278daf86ec0ac1be358d", "url": "https://github.com/bakdata/conquery/commit/27ef88b590d531f96308278daf86ec0ac1be358d", "message": "add documentaion", "committedDate": "2020-11-23T11:21:56Z", "type": "commit"}, {"oid": "6c34857f9ce72ec1fef86a8d4a5aac4ff8917217", "url": "https://github.com/bakdata/conquery/commit/6c34857f9ce72ec1fef86a8d4a5aac4ff8917217", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-11-23T16:31:36Z", "type": "commit"}, {"oid": "dfc83e20b63d098c4d343ef9c27df8461f96de70", "url": "https://github.com/bakdata/conquery/commit/dfc83e20b63d098c4d343ef9c27df8461f96de70", "message": "Merge branch 'feature/table-export-default-validity-dates' of https://github.com/bakdata/conquery into feature/table-export-default-validity-dates", "committedDate": "2020-12-01T09:47:43Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0NTU1MQ==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r533245551", "body": "```suggestion\r\n\t\t\t\t\tif (exportDescription.getValidityDateColumn() != null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\tif (exportDescription.getValidityDateColumn() == null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n          \n          \n            \n            \t\t\t\t\tif (exportDescription.getValidityDateColumn() != null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t\t<span class=\"pl-k\">if</span> (exportDescription<span class=\"pl-k\">.</span>getValidityDateColumn() <span class=\"pl-k\"><span class=\"x x-first x-last\">=</span>=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>bucket<span class=\"pl-k\">.</span>eventIsContainedIn(event, exportDescription<span class=\"pl-k\">.</span>getValidityDateColumn(), dateRange)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t\t<span class=\"pl-k\">if</span> (exportDescription<span class=\"pl-k\">.</span>getValidityDateColumn() <span class=\"pl-k\"><span class=\"x x-first x-last\">!</span>=</span> <span class=\"pl-c1\">null</span> <span class=\"pl-k\">&amp;&amp;</span> <span class=\"pl-k\">!</span>bucket<span class=\"pl-k\">.</span>eventIsContainedIn(event, exportDescription<span class=\"pl-k\">.</span>getValidityDateColumn(), dateRange)) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "awildturtok", "createdAt": "2020-12-01T09:50:06Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "diffHunk": "@@ -67,7 +69,8 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \n \t\t\t\tfor(int event = start; event < end ; event++) {\n \n-\t\t\t\t\tif (!bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {\n+\t\t\t\t\t// Export Full-table if it has no validity date.\n+\t\t\t\t\tif (exportDescription.getValidityDateColumn() == null && !bucket.eventIsContainedIn(event, exportDescription.getValidityDateColumn(), dateRange)) {", "originalCommit": "dfc83e20b63d098c4d343ef9c27df8461f96de70", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "ef779a5a22f3317691e884bd3a25bdb18fa063a1", "url": "https://github.com/bakdata/conquery/commit/ef779a5a22f3317691e884bd3a25bdb18fa063a1", "message": "Update backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "committedDate": "2020-12-01T09:51:08Z", "type": "commit"}, {"oid": "fffa2534935afaf65328959ef4488ae09738d032", "url": "https://github.com/bakdata/conquery/commit/fffa2534935afaf65328959ef4488ae09738d032", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-03T11:49:46Z", "type": "commit"}, {"oid": "b79f2ef608df14b64b49a1236500a7fa0aca0edb", "url": "https://github.com/bakdata/conquery/commit/b79f2ef608df14b64b49a1236500a7fa0aca0edb", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-04T10:44:57Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxODc0NA==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r536018744", "body": "Zieht das @NotNull bei abstrakten Methoden? Ich glaube nicht das Lombok klassen\u00fcbergreifend Code erzeugen kann", "bodyText": "Zieht das @NotNull bei abstrakten Methoden? Ich glaube nicht das Lombok klassen\u00fcbergreifend Code erzeugen kann", "bodyHTML": "<p dir=\"auto\">Zieht das <a class=\"user-mention\" data-hovercard-type=\"organization\" data-hovercard-url=\"/orgs/NotNull/hovercard\" href=\"https://github.com/NotNull\">@NotNull</a> bei abstrakten Methoden? Ich glaube nicht das Lombok klassen\u00fcbergreifend Code erzeugen kann</p>", "author": "thoniTUB", "createdAt": "2020-12-04T11:04:27Z", "path": "backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java", "diffHunk": "@@ -146,47 +146,47 @@ public void serialize(JsonGenerator gen, SerializerProvider serializers) throws\n \t}\n \n \n-\tpublic boolean has(int event, Column column) {\n+\tpublic boolean has(int event, @NotNull Column column) {\n \t\treturn has(event, column.getPosition());\n \t}\n \n \tpublic abstract boolean has(int event, int columnPosition);\n \n-\tpublic abstract int getString(int event, Column column);\n+\tpublic abstract int getString(int event, @NotNull Column column);", "originalCommit": "b79f2ef608df14b64b49a1236500a7fa0aca0edb", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAyMDIwNg==", "url": "https://github.com/bakdata/conquery/pull/1435#discussion_r536020206", "bodyText": "Leider nein :(", "author": "awildturtok", "createdAt": "2020-12-04T11:07:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjAxODc0NA=="}], "type": "inlineReview"}, {"oid": "c554835c7ada1bf0ceafa1d58cb91939aa10534d", "url": "https://github.com/bakdata/conquery/commit/c554835c7ada1bf0ceafa1d58cb91939aa10534d", "message": "Merge branch 'develop' into feature/table-export-default-validity-dates", "committedDate": "2020-12-07T08:45:56Z", "type": "commit"}]}