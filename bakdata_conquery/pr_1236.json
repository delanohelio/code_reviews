{"pr_number": 1236, "pr_title": "ExistsAggregator only return True when filters are true", "pr_author": "awildturtok", "pr_createdAt": "2020-06-24T11:54:17Z", "pr_url": "https://github.com/bakdata/conquery/pull/1236", "timeline": [{"oid": "e584c639a07a3f708c871244298cb11e3e1eef5e", "url": "https://github.com/bakdata/conquery/commit/e584c639a07a3f708c871244298cb11e3e1eef5e", "message": "rewrite logic of ExistsAggregator to only return True when the underlying Filters return return true: This was not always the case with the old implementation", "committedDate": "2020-06-24T11:51:10Z", "type": "commit"}, {"oid": "eace6c5f60e03ff755c8441b9780faedac7e088a", "url": "https://github.com/bakdata/conquery/commit/eace6c5f60e03ff755c8441b9780faedac7e088a", "message": "Merge e584c639a07a3f708c871244298cb11e3e1eef5e into ad24103976033e41914f8f953fa82dde4f2cd542", "committedDate": "2020-06-24T11:54:18Z", "type": "commit"}, {"oid": "eb7f744410a1d11846cb46d5baddda930a426850", "url": "https://github.com/bakdata/conquery/commit/eb7f744410a1d11846cb46d5baddda930a426850", "message": "automatic update to docs", "committedDate": "2020-06-24T11:56:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1MTUxMA==", "url": "https://github.com/bakdata/conquery/pull/1236#discussion_r444851510", "body": "```suggestion\r\n\t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\r\n\r\n\t\tfor (Select s : select) {\r\n\t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\r\n\r\n\t\t\tplan.addAggregator(agg.getAggregator());\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n          \n          \n            \n            \t\tList<ExistsAggregator> existsAggregators = new ArrayList<>();\n          \n          \n            \n            \n          \n          \n            \n            \t\tfor (Select s : select) {\n          \n          \n            \n            \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tif(agg.getAggregator() instanceof ExistsAggregator){\n          \n          \n            \n            \t\t\t\texistsAggregators.add(((ExistsAggregator) agg.getAggregator()));\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tplan.addAggregator(agg.getAggregator());\n          \n          \n            \n            \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n          \n          \n            \n            \n          \n          \n            \n            \t\tfor (Select s : select) {\n          \n          \n            \n            \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tplan.addAggregator(agg.getAggregator());", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">List&lt;<span class=\"pl-k\">AggregatorNode&lt;?&gt;</span>&gt;</span> nodes <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">List&lt;<span class=\"pl-smi\">ExistsAggregator</span>&gt;</span> existsAggregators <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Select</span> s <span class=\"pl-k\">:</span> select) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"169\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">AggregatorNode&lt;?&gt;</span> agg <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">AggregatorNode&lt;&gt;</span>(s<span class=\"pl-k\">.</span>createAggregator());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"170\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"171\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t<span class=\"pl-k\">if</span>(agg<span class=\"pl-k\">.</span>getAggregator() <span class=\"pl-k\">instanceof</span> <span class=\"pl-smi\">ExistsAggregator</span>){</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"172\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\texistsAggregators<span class=\"pl-k\">.</span>add(((<span class=\"pl-smi\">ExistsAggregator</span>) agg<span class=\"pl-k\">.</span>getAggregator()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"173\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t}</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"174\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"175\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\tplan<span class=\"pl-k\">.</span>addAggregator(agg<span class=\"pl-k\">.</span>getAggregator());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"165\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">List&lt;<span class=\"pl-k\">AggregatorNode&lt;?&gt;</span>&gt;</span> nodes <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">ArrayList&lt;&gt;</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"166\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"167\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t<span class=\"pl-k\">for</span> (<span class=\"pl-smi\">Select</span> s <span class=\"pl-k\">:</span> select) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"168\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t<span class=\"pl-k\">AggregatorNode&lt;?&gt;</span> agg <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-k\">AggregatorNode&lt;&gt;</span>(s<span class=\"pl-k\">.</span>createAggregator());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"169\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"170\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\tplan<span class=\"pl-k\">.</span>addAggregator(agg<span class=\"pl-k\">.</span>getAggregator());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "thoniTUB", "createdAt": "2020-06-24T12:17:47Z", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -149,17 +154,24 @@ private long calculateBitMask(ConceptElement<?>[] concepts) {\n \tprotected QPNode conceptChild(Concept<?> concept, QueryPlanContext context, List<FilterNode<?>> filters, List<AggregatorNode<?>> aggregators) {\n \t\tQPNode result = AndNode.of(aggregators);\n \t\tif(!filters.isEmpty()) {\n-\t\t\tresult = new FiltersNode(filters, result);\n+\t\t\treturn new FiltersNode(filters, result);\n \t\t}\n+\n \t\treturn result;\n \t}\n \n \tprivate static List<AggregatorNode<?>> createConceptAggregators(ConceptQueryPlan plan, List<Select> select) {\n \n \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n+\t\tList<ExistsAggregator> existsAggregators = new ArrayList<>();\n \n \t\tfor (Select s : select) {\n \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n+\n+\t\t\tif(agg.getAggregator() instanceof ExistsAggregator){\n+\t\t\t\texistsAggregators.add(((ExistsAggregator) agg.getAggregator()));\n+\t\t\t}\n+\n \t\t\tplan.addAggregator(agg.getAggregator());", "originalCommit": "e584c639a07a3f708c871244298cb11e3e1eef5e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "eb7f744410a1d11846cb46d5baddda930a426850", "url": "https://github.com/bakdata/conquery/commit/eb7f744410a1d11846cb46d5baddda930a426850", "message": "automatic update to docs", "committedDate": "2020-06-24T11:56:21Z", "type": "forcePushed"}, {"oid": "c9e15c5bf1bd5d33f08b37269f18b329da707755", "url": "https://github.com/bakdata/conquery/commit/c9e15c5bf1bd5d33f08b37269f18b329da707755", "message": "Merge branch 'develop' into feature/improved-exists", "committedDate": "2020-07-02T15:02:25Z", "type": "commit"}, {"oid": "7ad2d4a47fd78973fb1c9e79115cc5a98959735e", "url": "https://github.com/bakdata/conquery/commit/7ad2d4a47fd78973fb1c9e79115cc5a98959735e", "message": "Merge branch 'develop' into feature/improved-exists", "committedDate": "2020-07-15T09:45:43Z", "type": "commit"}]}