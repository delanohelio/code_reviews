{"pr_number": 1160, "pr_title": "fix concurrent modification exception on permission cleanup", "pr_author": "thoniTUB", "pr_createdAt": "2020-04-15T08:44:09Z", "pr_url": "https://github.com/bakdata/conquery/pull/1160", "timeline": [{"oid": "48c91fbd39979314ac896ac6db76bbb6d2e34d25", "url": "https://github.com/bakdata/conquery/commit/48c91fbd39979314ac896ac6db76bbb6d2e34d25", "message": "hands out a copy of the permissions", "committedDate": "2020-04-15T07:15:38Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4ODkxMA==", "url": "https://github.com/bakdata/conquery/pull/1160#discussion_r408688910", "body": "```suggestion\r\n\t\t\t\tif (!validRef.isEmpty()) {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (validRef.size() > 0) {\n          \n          \n            \n            \t\t\t\tif (!validRef.isEmpty()) {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">\t\t\t\t<span class=\"pl-k\">if</span> (validRef<span class=\"pl-k\">.</span><span class=\"x x-first\">size() </span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> </span><span class=\"pl-c1 x x-last\">0</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">\t\t\t\t<span class=\"pl-k\">if</span> (<span class=\"pl-k x x-first x-last\">!</span>validRef<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEmpty()</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "awildturtok", "createdAt": "2020-04-15T09:00:30Z", "path": "backend/src/main/java/com/bakdata/conquery/tasks/QueryCleanupTask.java", "diffHunk": "@@ -142,52 +142,46 @@ public static int deleteQueryPermissionsWithMissingRef(MasterMetaStorage storage\n \t\t// Do the loop-di-loop\n \t\tfor (PermissionOwner<?> owner : owners) {\n \t\t\tSet<Permission> permissions = owner.getPermissions();\n-\t\t\tsynchronized (permissions) {\n-\t\t\t\t/*\n-\t\t\t\t * Directly use an Iterator here because the iterator of an for(elem:collection)\n-\t\t\t\t * loop does not consider that the collections grows or in our case shrinks.\n-\t\t\t\t */\n-\t\t\t\tIterator<Permission> it = permissions.iterator();\n-\t\t\t\twhile (it.hasNext()) {\n-\t\t\t\t\tPermission permission = it.next();\n-\t\t\t\t\tif (!(permission instanceof WildcardPermission)) {\n-\t\t\t\t\t\tlog.warn(\n-\t\t\t\t\t\t\t\"Encountered the permission type {} that is not handled by this routine. Permission was: {}\",\n-\t\t\t\t\t\t\tpermission.getClass(),\n-\t\t\t\t\t\t\tpermission);\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n-\t\t\t\t\tWildcardPermission wpermission = (WildcardPermission) permission;\n-\t\t\t\t\tif (!wpermission.getDomains().contains(QueryPermission.DOMAIN)) {\n-\t\t\t\t\t\t// Skip Permissions that do not reference an Execution/Query\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n+\t\t\tIterator<Permission> it = permissions.iterator();\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tPermission permission = it.next();\n+\t\t\t\tif (!(permission instanceof WildcardPermission)) {\n+\t\t\t\t\tlog.warn(\n+\t\t\t\t\t\t\"Encountered the permission type {} that is not handled by this routine. Permission was: {}\",\n+\t\t\t\t\t\tpermission.getClass(),\n+\t\t\t\t\t\tpermission);\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tWildcardPermission wpermission = (WildcardPermission) permission;\n+\t\t\t\tif (!wpermission.getDomains().contains(QueryPermission.DOMAIN)) {\n+\t\t\t\t\t// Skip Permissions that do not reference an Execution/Query\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n \n-\t\t\t\t\t// Handle multiple references to instances\n-\t\t\t\t\tSet<String> validRef = new HashSet<>();\n-\t\t\t\t\tfor (String sId : wpermission.getInstances()) {\n-\t\t\t\t\t\tManagedExecutionId mId = ManagedExecutionId.Parser.INSTANCE.parse(sId);\n-\t\t\t\t\t\tif (storage.getExecution(mId) != null) {\n-\t\t\t\t\t\t\t// Execution exists -- it is a valid reference\n-\t\t\t\t\t\t\tvalidRef.add(mId.toString());\n-\t\t\t\t\t\t}\n+\t\t\t\t// Handle multiple references to instances\n+\t\t\t\tSet<String> validRef = new HashSet<>();\n+\t\t\t\tfor (String sId : wpermission.getInstances()) {\n+\t\t\t\t\tManagedExecutionId mId = ManagedExecutionId.Parser.INSTANCE.parse(sId);\n+\t\t\t\t\tif (storage.getExecution(mId) != null) {\n+\t\t\t\t\t\t// Execution exists -- it is a valid reference\n+\t\t\t\t\t\tvalidRef.add(mId.toString());\n \t\t\t\t\t}\n-\t\t\t\t\tif (validRef.size() > 0) {\n-\t\t\t\t\t\tif (wpermission.getInstances().size() == validRef.size()) {\n-\t\t\t\t\t\t\t// All are valid, nothing changed proceed with the next permission\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\t// Create a new Permission that only contains valid references\n-\t\t\t\t\t\tWildcardPermission reducedPermission = new WildcardPermission(\n-\t\t\t\t\t\t\tList.of(wpermission.getDomains(), wpermission.getAbilities(), validRef), wpermission.getCreationTime());\n-\t\t\t\t\t\towner.addPermission(storage, reducedPermission);\n+\t\t\t\t}\n+\t\t\t\tif (validRef.size() > 0) {", "originalCommit": "48c91fbd39979314ac896ac6db76bbb6d2e34d25", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1061ef8ba872b7a20cc1f865b4127cdf63342643", "url": "https://github.com/bakdata/conquery/commit/1061ef8ba872b7a20cc1f865b4127cdf63342643", "message": "review changes", "committedDate": "2020-04-15T10:33:53Z", "type": "commit"}]}