{"pr_number": 2001, "pr_title": "iss1980 a special close flag added to indicate that the writer is closed", "pr_author": "dmgcodevil", "pr_createdAt": "2020-12-29T01:08:17Z", "pr_url": "https://github.com/apache/iceberg/pull/2001", "timeline": [{"oid": "99b5d297dc331fd8bef660ae8aa6d4da270c4c0a", "url": "https://github.com/apache/iceberg/commit/99b5d297dc331fd8bef660ae8aa6d4da270c4c0a", "message": "iss6369 a special close flag added to indicate that the writer is closed", "committedDate": "2020-12-29T01:07:24Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MjcxNw==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r549792717", "body": "This should still use try-with-resources. You just have to keep a reference to the writer outside of it:\r\n\r\n```java\r\n  FileAppender<Record> writer = Parquet.write(...);\r\n  try (Closeable toClose = writer) {\r\n    writer.addAll(records);\r\n  }\r\n\r\n  writer.length();\r\n```", "bodyText": "This should still use try-with-resources. You just have to keep a reference to the writer outside of it:\n  FileAppender<Record> writer = Parquet.write(...);\n  try (Closeable toClose = writer) {\n    writer.addAll(records);\n  }\n\n  writer.length();", "bodyHTML": "<p dir=\"auto\">This should still use try-with-resources. You just have to keep a reference to the writer outside of it:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  FileAppender&lt;Record&gt; writer = Parquet.write(...);\n  try (Closeable toClose = writer) {\n    writer.addAll(records);\n  }\n\n  writer.length();\n\"><pre>  <span class=\"pl-k\">FileAppender&lt;<span class=\"pl-smi\">Record</span>&gt;</span> writer <span class=\"pl-k\">=</span> <span class=\"pl-smi\">Parquet</span><span class=\"pl-k\">.</span>write(<span class=\"pl-c1\">...</span>);\n  <span class=\"pl-k\">try</span> (<span class=\"pl-smi\">Closeable</span> toClose <span class=\"pl-k\">=</span> writer) {\n    writer<span class=\"pl-k\">.</span>addAll(records);\n  }\n\n  writer<span class=\"pl-k\">.</span>length();</pre></div>", "author": "rdblue", "createdAt": "2020-12-29T17:47:17Z", "path": "parquet/src/test/java/org/apache/iceberg/parquet/ParquetWritingTestUtils.java", "diffHunk": "@@ -53,20 +54,43 @@ static File writeRecords(TemporaryFolder temp, Schema schema,\n   }\n \n   static File writeRecords(\n-      TemporaryFolder temp,\n-      Schema schema, Map<String, String> properties,\n-      Function<MessageType, ParquetValueWriter<?>> createWriterFunc,\n-      GenericData.Record... records) throws IOException {\n+          TemporaryFolder temp,\n+          Schema schema, Map<String, String> properties,\n+          Function<MessageType, ParquetValueWriter<?>> createWriterFunc,\n+          GenericData.Record... records) throws IOException {\n+    File file = createTempFile(temp);\n+    write(file, schema, properties, createWriterFunc, records);\n+    return file;\n+  }\n+\n+  static long write(File file, Schema schema, Map<String, String> properties,\n+                    Function<MessageType, ParquetValueWriter<?>> createWriterFunc,\n+                    GenericData.Record... records) throws IOException {\n+    FileAppender<GenericData.Record> writer = Parquet.write(localOutput(file))", "originalCommit": "99b5d297dc331fd8bef660ae8aa6d4da270c4c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MjkxMQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r549792911", "body": "Looks like a typo.", "bodyText": "Looks like a typo.", "bodyHTML": "<p dir=\"auto\">Looks like a typo.</p>", "author": "rdblue", "createdAt": "2020-12-29T17:48:05Z", "path": "parquet/src/test/java/org/apache/iceberg/parquet/TestParquet.java", "diffHunk": "@@ -82,15 +114,17 @@ private File generateFileWithTwoRowGroups(Function<MessageType, ParquetValueWrit\n       records.add(record);\n     }\n \n-    // Force multiple row groups by making the byte size very small\n+    // Force multiple row groups by making the byte size vParquetWriteAdapterery small", "originalCommit": "99b5d297dc331fd8bef660ae8aa6d4da270c4c0a", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MzY5MQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r549793691", "body": "If this is going to track whether the writer is closed, then it should make the close idempotent by checking the flag:\r\n\r\n```java\r\n  if (!closed) {\r\n    this.closed = true;\r\n    flushRowGroup(true);\r\n    writeStore.close();\r\n    writer.end(metadata);\r\n  }\r\n```\r\n\r\nI would also add a precondition in `startRowGroup` that checks that `closed` is false.", "bodyText": "If this is going to track whether the writer is closed, then it should make the close idempotent by checking the flag:\n  if (!closed) {\n    this.closed = true;\n    flushRowGroup(true);\n    writeStore.close();\n    writer.end(metadata);\n  }\nI would also add a precondition in startRowGroup that checks that closed is false.", "bodyHTML": "<p dir=\"auto\">If this is going to track whether the writer is closed, then it should make the close idempotent by checking the flag:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  if (!closed) {\n    this.closed = true;\n    flushRowGroup(true);\n    writeStore.close();\n    writer.end(metadata);\n  }\n\"><pre>  <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>closed) {\n    <span class=\"pl-c1\">this</span><span class=\"pl-k\">.</span>closed <span class=\"pl-k\">=</span> <span class=\"pl-c1\">true</span>;\n    flushRowGroup(<span class=\"pl-c1\">true</span>);\n    writeStore<span class=\"pl-k\">.</span>close();\n    writer<span class=\"pl-k\">.</span>end(metadata);\n  }</pre></div>\n<p dir=\"auto\">I would also add a precondition in <code>startRowGroup</code> that checks that <code>closed</code> is false.</p>", "author": "rdblue", "createdAt": "2020-12-29T17:50:42Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -192,5 +203,6 @@ public void close() throws IOException {\n     flushRowGroup(true);\n     writeStore.close();\n     writer.end(metadata);\n+    this.closed = true;", "originalCommit": "99b5d297dc331fd8bef660ae8aa6d4da270c4c0a", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUyMTY5NQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551521695", "bodyText": "I'd also add :\nelse {\n  throw new IllegalStateException(\"writer is closed\");\n}\nbut note sure if it aligns with Iceberg's coding style", "author": "dmgcodevil", "createdAt": "2021-01-04T19:31:03Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTc5MzY5MQ=="}], "type": "inlineReview"}, {"oid": "739fee73dea04657ee38b922d5275b5061c4118e", "url": "https://github.com/apache/iceberg/commit/739fee73dea04657ee38b922d5275b5061c4118e", "message": "iss6369: check writer's close flag", "committedDate": "2021-01-04T19:17:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyMzM4Ng==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551623386", "body": "Error messages should begin with a capital letter.", "bodyText": "Error messages should begin with a capital letter.", "bodyHTML": "<p dir=\"auto\">Error messages should begin with a capital letter.</p>", "author": "rdblue", "createdAt": "2021-01-04T23:12:44Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -170,6 +181,9 @@ private void flushRowGroup(boolean finished) {\n   }\n \n   private void startRowGroup() {\n+    if (this.closed) {\n+      throw new IllegalStateException(\"writer is closed\");", "originalCommit": "739fee73dea04657ee38b922d5275b5061c4118e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyMzQ1Nw==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551623457", "body": "Can you add a blank line between control flow blocks?", "bodyText": "Can you add a blank line between control flow blocks?", "bodyHTML": "<p dir=\"auto\">Can you add a blank line between control flow blocks?</p>", "author": "rdblue", "createdAt": "2021-01-04T23:13:01Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -170,6 +181,9 @@ private void flushRowGroup(boolean finished) {\n   }\n \n   private void startRowGroup() {\n+    if (this.closed) {\n+      throw new IllegalStateException(\"writer is closed\");\n+    }\n     try {\n       this.nextRowGroupSize = Math.min(writer.getNextRowGroupSize(), targetRowGroupSize);\n     } catch (IOException e) {", "originalCommit": "739fee73dea04657ee38b922d5275b5061c4118e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyNDI3NA==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551624274", "body": "This isn't quite accurate. It is the number of bytes written only after the writer is closed. How about `@return length of the file produced by this writer, approximate until after closed`", "bodyText": "This isn't quite accurate. It is the number of bytes written only after the writer is closed. How about @return length of the file produced by this writer, approximate until after closed", "bodyHTML": "<p dir=\"auto\">This isn't quite accurate. It is the number of bytes written only after the writer is closed. How about <code>@return length of the file produced by this writer, approximate until after closed</code></p>", "author": "rdblue", "createdAt": "2021-01-04T23:15:17Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -124,10 +125,20 @@ public Metrics metrics() {\n     return ParquetUtil.footerMetrics(writer.getFooter(), model.metrics(), metricsConfig);\n   }\n \n+  /**\n+   * Returns the number of bytes written by this writer.\n+   * NOTE: call {@link ParquetWriter#close()})} prior this method to get the exact number of bytes.\n+   *\n+   * @return the number of bytes written by this writer.", "originalCommit": "739fee73dea04657ee38b922d5275b5061c4118e", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyNTE0MQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551625141", "body": "This is going to be wrapped into a single paragraph. Also, it is okay to describe the behavior without `NOTE`.\r\n\r\nHow about this?\r\n\r\n```java\r\n  /**\r\n   * Returns the approximate length of the output file produced by this writer.\r\n   * <p>\r\n   * Prior to calling {@link ParquetWriter#close}, the result is approximate. After calling close, the length is exact.\r\n   */\r\n```", "bodyText": "This is going to be wrapped into a single paragraph. Also, it is okay to describe the behavior without NOTE.\nHow about this?\n  /**\n   * Returns the approximate length of the output file produced by this writer.\n   * <p>\n   * Prior to calling {@link ParquetWriter#close}, the result is approximate. After calling close, the length is exact.\n   */", "bodyHTML": "<p dir=\"auto\">This is going to be wrapped into a single paragraph. Also, it is okay to describe the behavior without <code>NOTE</code>.</p>\n<p dir=\"auto\">How about this?</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  /**\n   * Returns the approximate length of the output file produced by this writer.\n   * &lt;p&gt;\n   * Prior to calling {@link ParquetWriter#close}, the result is approximate. After calling close, the length is exact.\n   */\n\"><pre>  <span class=\"pl-c\"><span class=\"pl-c\">/**</span></span>\n<span class=\"pl-c\">   * Returns the approximate length of the output file produced by this writer.</span>\n<span class=\"pl-c\">   * &lt;<span class=\"pl-ent\">p</span>&gt;</span>\n<span class=\"pl-c\">   * Prior to calling {<span class=\"pl-k\">@link</span> ParquetWriter#close}, the result is approximate. After calling close, the length is exact.</span>\n<span class=\"pl-c\">   <span class=\"pl-c\">*/</span></span></pre></div>", "author": "rdblue", "createdAt": "2021-01-04T23:17:50Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -124,10 +125,20 @@ public Metrics metrics() {\n     return ParquetUtil.footerMetrics(writer.getFooter(), model.metrics(), metricsConfig);\n   }\n \n+  /**\n+   * Returns the number of bytes written by this writer.\n+   * NOTE: call {@link ParquetWriter#close()})} prior this method to get the exact number of bytes.", "originalCommit": "739fee73dea04657ee38b922d5275b5061c4118e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYzMTEwOA==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r551631108", "bodyText": "sounds good", "author": "dmgcodevil", "createdAt": "2021-01-04T23:35:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTYyNTE0MQ=="}], "type": "inlineReview"}, {"oid": "7ea135f1a44f87bc6426af59a7621f08311665b6", "url": "https://github.com/apache/iceberg/commit/7ea135f1a44f87bc6426af59a7621f08311665b6", "message": "iss6369: improve docs", "committedDate": "2021-01-04T23:30:29Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNzU4MA==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r552117580", "body": "This needs a `@return` as well.", "bodyText": "This needs a @return as well.", "bodyHTML": "<p dir=\"auto\">This needs a <code>@return</code> as well.</p>", "author": "rdblue", "createdAt": "2021-01-05T18:34:07Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -124,10 +125,20 @@ public Metrics metrics() {\n     return ParquetUtil.footerMetrics(writer.getFooter(), model.metrics(), metricsConfig);\n   }\n \n+  /**\n+   * Returns the approximate length of the output file produced by this writer.\n+   * <p>\n+   * Prior to calling {@link ParquetWriter#close}, the result is approximate. After calling close, the length is\n+   * exact.", "originalCommit": "7ea135f1a44f87bc6426af59a7621f08311665b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNzc2OQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r552117769", "body": "Nit: no need to use `this.` unless setting an instance variable.", "bodyText": "Nit: no need to use this. unless setting an instance variable.", "bodyHTML": "<p dir=\"auto\">Nit: no need to use <code>this.</code> unless setting an instance variable.</p>", "author": "rdblue", "createdAt": "2021-01-05T18:34:31Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -124,10 +125,20 @@ public Metrics metrics() {\n     return ParquetUtil.footerMetrics(writer.getFooter(), model.metrics(), metricsConfig);\n   }\n \n+  /**\n+   * Returns the approximate length of the output file produced by this writer.\n+   * <p>\n+   * Prior to calling {@link ParquetWriter#close}, the result is approximate. After calling close, the length is\n+   * exact.\n+   */\n   @Override\n   public long length() {\n     try {\n-      return writer.getPos() + (writeStore.isColumnFlushNeeded() ? writeStore.getBufferedSize() : 0);\n+      if (this.closed) {", "originalCommit": "7ea135f1a44f87bc6426af59a7621f08311665b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjExNzk5NQ==", "url": "https://github.com/apache/iceberg/pull/2001#discussion_r552117995", "body": "We would normally use `Preconditions.checkState` for this, but this is minor.", "bodyText": "We would normally use Preconditions.checkState for this, but this is minor.", "bodyHTML": "<p dir=\"auto\">We would normally use <code>Preconditions.checkState</code> for this, but this is minor.</p>", "author": "rdblue", "createdAt": "2021-01-05T18:34:55Z", "path": "parquet/src/main/java/org/apache/iceberg/parquet/ParquetWriter.java", "diffHunk": "@@ -170,6 +181,10 @@ private void flushRowGroup(boolean finished) {\n   }\n \n   private void startRowGroup() {\n+    if (this.closed) {\n+      throw new IllegalStateException(\"Writer is closed\");\n+    }", "originalCommit": "7ea135f1a44f87bc6426af59a7621f08311665b6", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "49287d68165c668b989d47c9c9ff380d4d755d9e", "url": "https://github.com/apache/iceberg/commit/49287d68165c668b989d47c9c9ff380d4d755d9e", "message": "iss6369: code style", "committedDate": "2021-01-05T19:27:10Z", "type": "commit"}, {"oid": "c9fb1e248728cd7ee4a71993faece7cd874711b5", "url": "https://github.com/apache/iceberg/commit/c9fb1e248728cd7ee4a71993faece7cd874711b5", "message": "iss6369: code style", "committedDate": "2021-01-05T19:31:32Z", "type": "commit"}]}