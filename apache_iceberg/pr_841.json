{"pr_number": 841, "pr_title": "Upgrade Hive to 2.3.6 for Iceberg", "pr_author": "jerryshao", "pr_createdAt": "2020-03-13T02:51:52Z", "pr_url": "https://github.com/apache/iceberg/pull/841", "timeline": [{"oid": "9f57f0297b9c8d7661dedda5fd69a2290316e18d", "url": "https://github.com/apache/iceberg/commit/9f57f0297b9c8d7661dedda5fd69a2290316e18d", "message": "Upgrade Hive to 2.3.6 for Iceberg", "committedDate": "2020-03-13T02:48:42Z", "type": "commit"}, {"oid": "187a701399ff3f6e7445830965b84c2084a9b952", "url": "https://github.com/apache/iceberg/commit/187a701399ff3f6e7445830965b84c2084a9b952", "message": "Minor changes", "committedDate": "2020-03-13T03:52:44Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMzYwMA==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392023600", "body": "Use reflection to handle the API difference between Hive 1.2.1 and 2.3.6.", "bodyText": "Use reflection to handle the API difference between Hive 1.2.1 and 2.3.6.", "bodyHTML": "<p dir=\"auto\">Use reflection to handle the API difference between Hive 1.2.1 and 2.3.6.</p>", "author": "jerryshao", "createdAt": "2020-03-13T04:20:08Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -83,6 +86,18 @@ protected HiveTableOperations(Configuration conf, HiveClientPool metaClients, St\n     this.tableName = table;\n     this.lockAcquireTimeout =\n         conf.getLong(HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS, HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS_DEFAULT);\n+    try {\n+      this.alterTableMethod = HiveMetaStoreClient.class.getMethod(\"alter_table_with_environmentContext\",\n+          String.class, String.class, Table.class, EnvironmentContext.class);\n+    } catch (NoSuchMethodException e) {\n+      try {\n+        this.alterTableMethod = HiveMetaStoreClient.class.getMethod(\"alter_table\",\n+          String.class, String.class, Table.class, EnvironmentContext.class);\n+      } catch (NoSuchMethodException inner) {\n+        throw new RuntimeMetaException(inner, \"Fail to find method alter_table_with_environmentContext and \" +\n+            \"alter_table with right signature\");\n+      }", "originalCommit": "187a701399ff3f6e7445830965b84c2084a9b952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzMzAxMQ==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392333011", "bodyText": "Can you update this to use the reflection utilities from iceberg-common? Those handle exceptions and use a builder pattern so it's concise and easy to maintain across versions:\n  private static final DynMethods.UnboundMethod ALTER_TABLE = DynMethods\n      .builder(\"alter_table\")\n      .impl(HiveMetaStoreClient.class, \"alter_table_with_environmentContext\",\n          String.class, String.class, Table.class, EnvironmentContext.class)\n      .impl(HiveMetaStoreClient.class, \"alter_table\",\n          String.class, String.class, Table.class, EnvironmentContext.class)\n      .build();", "author": "rdblue", "createdAt": "2020-03-13T16:22:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjAyMzYwMA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMyNzQ2MQ==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392327461", "body": "Since the version of Hive is unlikely to change, can we make this a `static` field?", "bodyText": "Since the version of Hive is unlikely to change, can we make this a static field?", "bodyHTML": "<p dir=\"auto\">Since the version of Hive is unlikely to change, can we make this a <code>static</code> field?</p>", "author": "rdblue", "createdAt": "2020-03-13T16:13:35Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -75,6 +77,7 @@\n   private final long lockAcquireTimeout;\n \n   private FileIO fileIO;\n+  private Method alterTableMethod;", "originalCommit": "187a701399ff3f6e7445830965b84c2084a9b952", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzMzM3NA==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392333374", "body": "If you use `DynMethods` then you'd call the method like this:\r\n\r\n```java\r\n    try {\r\n      clients.run(client -> ALTER_TABLE.invoke(client, database, tableName, tbl, envContext));\r\n    } catch (TException e) {\r\n      throw new RuntimeMetaException(e, \"Failed to alter table\");\r\n    } catch (InterruptedException e) {\r\n      Thread.currentThread().interrupt();\r\n      throw new RuntimeException(\"Interrupted in call to alterTable\", e);\r\n    }\r\n```", "bodyText": "If you use DynMethods then you'd call the method like this:\n    try {\n      clients.run(client -> ALTER_TABLE.invoke(client, database, tableName, tbl, envContext));\n    } catch (TException e) {\n      throw new RuntimeMetaException(e, \"Failed to alter table\");\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(\"Interrupted in call to alterTable\", e);\n    }", "bodyHTML": "<p dir=\"auto\">If you use <code>DynMethods</code> then you'd call the method like this:</p>\n<div class=\"highlight highlight-source-java position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    try {\n      clients.run(client -&gt; ALTER_TABLE.invoke(client, database, tableName, tbl, envContext));\n    } catch (TException e) {\n      throw new RuntimeMetaException(e, &quot;Failed to alter table&quot;);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new RuntimeException(&quot;Interrupted in call to alterTable&quot;, e);\n    }\n\"><pre>    <span class=\"pl-k\">try</span> {\n      clients<span class=\"pl-k\">.</span>run(client <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">ALTER_TABLE</span><span class=\"pl-k\">.</span>invoke(client, database, tableName, tbl, envContext));\n    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">TException</span> e) {\n      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeMetaException</span>(e, <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Failed to alter table<span class=\"pl-pds\">\"</span></span>);\n    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> e) {\n      <span class=\"pl-smi\">Thread</span><span class=\"pl-k\">.</span>currentThread()<span class=\"pl-k\">.</span>interrupt();\n      <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Interrupted in call to alterTable<span class=\"pl-pds\">\"</span></span>, e);\n    }</pre></div>", "author": "rdblue", "createdAt": "2020-03-13T16:23:36Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -175,7 +190,12 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n           EnvironmentContext envContext = new EnvironmentContext(\n               ImmutableMap.of(StatsSetupConst.DO_NOT_UPDATE_STATS, StatsSetupConst.TRUE)\n           );\n-          client.alter_table(database, tableName, tbl, envContext);\n+\n+          try {\n+            alterTableMethod.invoke(client, database, tableName, tbl, envContext);\n+          } catch (Exception e) {\n+            throw new RuntimeMetaException(e, \"Failed to alter table for %s.%s\", database, tableName);\n+          }", "originalCommit": "187a701399ff3f6e7445830965b84c2084a9b952", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc2MzQ2OQ==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392763469", "bodyText": "With this Iceberg will complain about \"CyclomaticComplexity\" issue, I think it is probably fine to let the existing exceptional handler to handle the exceptions.", "author": "jerryshao", "createdAt": "2020-03-16T03:06:39Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzMzM3NA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjMzNDUxMw==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r392334513", "body": "Try to avoid catching `Exception` so that this doesn't swallow unexpected errors.", "bodyText": "Try to avoid catching Exception so that this doesn't swallow unexpected errors.", "bodyHTML": "<p dir=\"auto\">Try to avoid catching <code>Exception</code> so that this doesn't swallow unexpected errors.</p>", "author": "rdblue", "createdAt": "2020-03-13T16:25:38Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -175,7 +190,12 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n           EnvironmentContext envContext = new EnvironmentContext(\n               ImmutableMap.of(StatsSetupConst.DO_NOT_UPDATE_STATS, StatsSetupConst.TRUE)\n           );\n-          client.alter_table(database, tableName, tbl, envContext);\n+\n+          try {\n+            alterTableMethod.invoke(client, database, tableName, tbl, envContext);\n+          } catch (Exception e) {", "originalCommit": "187a701399ff3f6e7445830965b84c2084a9b952", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "4b17605d977a6ac197c2fed825778229fa0248dd", "url": "https://github.com/apache/iceberg/commit/4b17605d977a6ac197c2fed825778229fa0248dd", "message": "Refine the code", "committedDate": "2020-03-16T03:55:56Z", "type": "commit"}, {"oid": "136e68393e87f0f8dd31e200c291a0515c9766aa", "url": "https://github.com/apache/iceberg/commit/136e68393e87f0f8dd31e200c291a0515c9766aa", "message": "Refine the code", "committedDate": "2020-03-16T04:27:37Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE3NTEyOA==", "url": "https://github.com/apache/iceberg/pull/841#discussion_r393175128", "body": "Nit: this line didn't need to change.", "bodyText": "Nit: this line didn't need to change.", "bodyHTML": "<p dir=\"auto\">Nit: this line didn't need to change.</p>", "author": "rdblue", "createdAt": "2020-03-16T17:00:46Z", "path": "hive/src/main/java/org/apache/iceberg/hive/HiveTableOperations.java", "diffHunk": "@@ -173,9 +181,9 @@ protected void doCommit(TableMetadata base, TableMetadata metadata) {\n       if (base != null) {\n         metaClients.run(client -> {\n           EnvironmentContext envContext = new EnvironmentContext(\n-              ImmutableMap.of(StatsSetupConst.DO_NOT_UPDATE_STATS, StatsSetupConst.TRUE)\n-          );\n-          client.alter_table(database, tableName, tbl, envContext);\n+              ImmutableMap.of(StatsSetupConst.DO_NOT_UPDATE_STATS, StatsSetupConst.TRUE));", "originalCommit": "136e68393e87f0f8dd31e200c291a0515c9766aa", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c12543240ba68a87fb31871341671b1c2749b7e3", "url": "https://github.com/apache/iceberg/commit/c12543240ba68a87fb31871341671b1c2749b7e3", "message": "Exclude more dependencies", "committedDate": "2020-03-17T11:23:17Z", "type": "commit"}]}