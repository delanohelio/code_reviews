{"pr_number": 12309, "pr_title": "Updating the WIM SSL tests to use Unboundid instead of the embedded LDAP server", "pr_author": "agiridharan", "pr_createdAt": "2020-05-21T14:16:51Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/12309", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4MDU2Ng==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12309#discussion_r432580566", "body": "Do we use InMemoryADLDAPServer?\r\n\r\n```suggestion\r\n```", "bodyText": "Do we use InMemoryADLDAPServer?\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import com.ibm.ws.com.unboundid.InMemoryADLDAPServer;", "bodyHTML": "<p dir=\"auto\">Do we use InMemoryADLDAPServer?</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k x x-first\">import</span><span class=\"x\"> </span><span class=\"pl-smi x\">com.ibm.ws.com.unboundid.InMemoryADLDAPServer</span><span class=\"x x-last\">;</span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "jvanhill", "createdAt": "2020-05-29T15:55:22Z", "path": "dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/FATTestIDSwithSSLTrustOnly.java", "diffHunk": "@@ -26,7 +26,11 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n \n+import com.ibm.websphere.simplicity.config.ServerConfiguration;\n+import com.ibm.websphere.simplicity.config.wim.LdapRegistry;\n import com.ibm.websphere.simplicity.log.Log;\n+import com.ibm.ws.com.unboundid.InMemoryADLDAPServer;", "originalCommit": "bf76271f92e55d01d536f070c3503a40868e4f8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4MTQ5NQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12309#discussion_r432581495", "body": "add whitespace before comment", "bodyText": "add whitespace before comment", "bodyHTML": "<p dir=\"auto\">add whitespace before comment</p>", "author": "jvanhill", "createdAt": "2020-05-29T15:56:51Z", "path": "dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/FATTestIDSwithSSLTrustOnly.java", "diffHunk": "@@ -46,25 +50,76 @@\n     private static final Class<?> c = FATTestIDSwithSSLTrustOnly.class;\n     private static UserRegistryServletConnection servlet;\n     private final LeakedPasswordChecker passwordChecker = new LeakedPasswordChecker(server);\n+    private static InMemoryTDSLDAPServer ldapServer;\n \n     /**\n-     * Updates the sample, which is expected to be at the hard-coded path.\n-     * If this test is failing, check this path is correct.\n+     * Setup the test case.\n+     *\n+     * @throws Exception If the setup failed for some reason.\n      */\n     @BeforeClass\n-    public static void setUp() throws Exception {\n-        // Add LDAP variables to bootstrap properties file\n+    public static void setupClass() throws Exception {\n+        setupLdapServer();\n+        setupLibertyServer();\n+    }\n+\n+    /**\n+     * Tear down the test.\n+     */\n+    @AfterClass\n+    public static void teardownClass() throws Exception {\n+        try {\n+            if (server != null) {\n+                server.stopServer(\"CWIML4529E\", \"CWIML4537E\", \"CWPKI0041W\");\n+            }\n+        } finally {\n+            try {\n+                if (ldapServer != null) {\n+                    ldapServer.shutDown(true);\n+                }\n+            } catch (Exception e) {\n+                Log.error(c, \"teardown\", e, \"LDAP server threw error while shutting down. \" + e.getMessage());\n+            }\n+            server.deleteFileFromLibertyInstallRoot(\"lib/features/internalfeatures/securitylibertyinternals-1.0.mf\");\n+        }\n+    }\n+\n+    /**\n+     * Setup the Liberty server. This server will start with very basic configuration. The tests\n+     * will configure the server dynamically.\n+     *\n+     * @throws Exception If there was an issue setting up the Liberty server.\n+     */\n+    private static void setupLibertyServer() throws Exception {\n+        /*\n+         * Add LDAP variables to bootstrap properties file\n+         */\n         LDAPUtils.addLDAPVariables(server);\n         Log.info(c, \"setUp\", \"Starting the server... (will wait for userRegistry servlet to start)\");\n         server.copyFileToLibertyInstallRoot(\"lib/features\", \"internalfeatures/securitylibertyinternals-1.0.mf\");\n+        server.addInstalledAppForValidation(\"userRegistry\");\n+\n+        /*\n+         * Update LDAP configuration with In-Memory Server\n+         */\n+        ServerConfiguration serverConfig = server.getServerConfiguration();\n+        LdapRegistry ldap = serverConfig.getLdapRegistries().get(0);\n+        ldap.setHost(\"localhost\");\n+        ldap.setPort(String.valueOf(ldapServer.getLdapsPort()));\n+        ldap.setBindDN(InMemoryADLDAPServer.getBindDN());\n+        ldap.setBindPassword(InMemoryADLDAPServer.getBindPassword());\n+        server.updateServerConfiguration(serverConfig);\n+        /*", "originalCommit": "bf76271f92e55d01d536f070c3503a40868e4f8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU4MjMzNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/12309#discussion_r432582335", "body": "If all we are doing is newing up an LDAP server that is already configured, you might just want to do that directly instead of wrapping it in this method.", "bodyText": "If all we are doing is newing up an LDAP server that is already configured, you might just want to do that directly instead of wrapping it in this method.", "bodyHTML": "<p dir=\"auto\">If all we are doing is newing up an LDAP server that is already configured, you might just want to do that directly instead of wrapping it in this method.</p>", "author": "jvanhill", "createdAt": "2020-05-29T15:58:13Z", "path": "dev/com.ibm.ws.security.wim.adapter.ldap_fat/fat/src/com/ibm/ws/security/wim/adapter/ldap/fat/FATTestIDSwithSSLTrustOnly.java", "diffHunk": "@@ -75,14 +130,13 @@ public static void setUp() throws Exception {\n         }\n     }\n \n-    @AfterClass\n-    public static void tearDown() throws Exception {\n-        Log.info(c, \"tearDown\", \"Stopping the server...\");\n-        try {\n-            server.stopServer(\"CWIML4529E\", \"CWIMK0004E\", \"CWPKI0041W\");\n-        } finally {\n-            server.deleteFileFromLibertyInstallRoot(\"lib/features/internalfeatures/securitylibertyinternals-1.0.mf\");\n-        }\n+    /**\n+     * Configure the embedded LDAP server.\n+     *\n+     * @throws Exception If the server failed to start for some reason.\n+     */\n+    private static void setupLdapServer() throws Exception {\n+        ldapServer = new InMemoryTDSLDAPServer();", "originalCommit": "bf76271f92e55d01d536f070c3503a40868e4f8f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "fc49609edd0ebca151944caec30c74376983aac8", "url": "https://github.com/OpenLiberty/open-liberty/commit/fc49609edd0ebca151944caec30c74376983aac8", "message": "Updating the WIM SSL tests to use Unboundid instead of the embedded LDAP server", "committedDate": "2020-05-29T21:16:39Z", "type": "forcePushed"}, {"oid": "9b2b43e3e4f8e3bf2af3a1e51844919a40f519c6", "url": "https://github.com/OpenLiberty/open-liberty/commit/9b2b43e3e4f8e3bf2af3a1e51844919a40f519c6", "message": "Updating the WIM SSL tests to use Unboundid instead of the embedded LDAP server", "committedDate": "2020-06-01T20:07:33Z", "type": "forcePushed"}, {"oid": "f81bce7f350bd75488f7cc047dab4d350453e399", "url": "https://github.com/OpenLiberty/open-liberty/commit/f81bce7f350bd75488f7cc047dab4d350453e399", "message": "Updating the WIM SSL tests to use Unboundid instead of the embedded LDAP server", "committedDate": "2020-06-01T21:51:18Z", "type": "commit"}, {"oid": "f81bce7f350bd75488f7cc047dab4d350453e399", "url": "https://github.com/OpenLiberty/open-liberty/commit/f81bce7f350bd75488f7cc047dab4d350453e399", "message": "Updating the WIM SSL tests to use Unboundid instead of the embedded LDAP server", "committedDate": "2020-06-01T21:51:18Z", "type": "forcePushed"}]}