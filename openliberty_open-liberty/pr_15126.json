{"pr_number": 15126, "pr_title": "move away from shrinkwrapsharedserver", "pr_author": "benjamin-confino", "pr_createdAt": "2020-11-30T10:43:39Z", "pr_url": "https://github.com/OpenLiberty/open-liberty/pull/15126", "timeline": [{"oid": "ca297da3c641962bac9de88225e8b44cad8283e8", "url": "https://github.com/OpenLiberty/open-liberty/commit/ca297da3c641962bac9de88225e8b44cad8283e8", "message": "move away from shrinkwrapsharedserver", "committedDate": "2020-11-30T11:19:37Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMTc0NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532531744", "body": "You can take this line out and add `@Server` to the `LibertyServer` field instead.", "bodyText": "You can take this line out and add @Server to the LibertyServer field instead.", "bodyHTML": "<p dir=\"auto\">You can take this line out and add <code>@Server</code> to the <code>LibertyServer</code> field instead.</p>", "author": "Azquelt", "createdAt": "2020-11-30T11:35:25Z", "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -26,28 +27,34 @@\n import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n import org.jboss.shrinkwrap.api.spec.WebArchive;\n \n-import com.ibm.ws.fat.util.BuildShrinkWrap;\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+import com.ibm.websphere.simplicity.ShrinkHelper.DeployOptions;\n import com.ibm.ws.fat.util.LoggingTest;\n-import com.ibm.ws.fat.util.ShrinkWrapSharedServer;\n+import com.ibm.ws.fat.util.SharedServer;\n import com.ibm.ws.fat.util.browser.WebBrowser;\n+import com.ibm.ws.fat.util.browser.WebBrowserException;\n+import com.ibm.ws.fat.util.browser.WebBrowserFactory;\n+import com.ibm.ws.fat.util.browser.WebResponse;\n \n import componenttest.annotation.ExpectedFFDC;\n import componenttest.custom.junit.runner.Mode;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n \n public class BeanDiscoveryModeNoneTest extends LoggingTest {\n \n-    @ClassRule\n-    // Create the server.\n-    public static ShrinkWrapSharedServer SHARED_SERVER = new ShrinkWrapSharedServer(\"cdi12BeanDiscoveryModeNoneServer\");\n+    private static LibertyServer server;\n \n-    @BuildShrinkWrap\n-    public static Archive buildShrinkWrap() {\n-         \n-         return ShrinkWrap.create(WebArchive.class, \"beanDiscoveryModeNone.war\")\n+    @BeforeClass\n+    public static void setUp() throws Exception {\n+         server = LibertyServerFactory.getLibertyServer(\"cdi12BeanDiscoveryModeNoneServer\"); ", "originalCommit": "ca297da3c641962bac9de88225e8b44cad8283e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMTk2NA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532531964", "body": "I think you need `@RunWith(FATRunner.class)` here", "bodyText": "I think you need @RunWith(FATRunner.class) here", "bodyHTML": "<p dir=\"auto\">I think you need <code>@RunWith(FATRunner.class)</code> here</p>", "author": "Azquelt", "createdAt": "2020-11-30T11:35:49Z", "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -26,28 +27,34 @@\n import org.jboss.shrinkwrap.api.spec.ResourceAdapterArchive;\n import org.jboss.shrinkwrap.api.spec.WebArchive;\n \n-import com.ibm.ws.fat.util.BuildShrinkWrap;\n+import com.ibm.websphere.simplicity.ShrinkHelper;\n+import com.ibm.websphere.simplicity.ShrinkHelper.DeployOptions;\n import com.ibm.ws.fat.util.LoggingTest;\n-import com.ibm.ws.fat.util.ShrinkWrapSharedServer;\n+import com.ibm.ws.fat.util.SharedServer;\n import com.ibm.ws.fat.util.browser.WebBrowser;\n+import com.ibm.ws.fat.util.browser.WebBrowserException;\n+import com.ibm.ws.fat.util.browser.WebBrowserFactory;\n+import com.ibm.ws.fat.util.browser.WebResponse;\n \n import componenttest.annotation.ExpectedFFDC;\n import componenttest.custom.junit.runner.Mode;\n+import componenttest.topology.impl.LibertyServer;\n+import componenttest.topology.impl.LibertyServerFactory;\n \n public class BeanDiscoveryModeNoneTest extends LoggingTest {", "originalCommit": "ca297da3c641962bac9de88225e8b44cad8283e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzMzI0Mw==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532533243", "body": "If you're not using `getSharedServer()` then I guess you're not using any of the methods on `LoggingTest` either?\r\n\r\nIn that case you can probably stop extending `LoggingTest`.", "bodyText": "If you're not using getSharedServer() then I guess you're not using any of the methods on LoggingTest either?\nIn that case you can probably stop extending LoggingTest.", "bodyHTML": "<p dir=\"auto\">If you're not using <code>getSharedServer()</code> then I guess you're not using any of the methods on <code>LoggingTest</code> either?</p>\n<p dir=\"auto\">In that case you can probably stop extending <code>LoggingTest</code>.</p>", "author": "Azquelt", "createdAt": "2020-11-30T11:38:19Z", "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }", "originalCommit": "ca297da3c641962bac9de88225e8b44cad8283e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzNDUzNA==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532534534", "body": "I don't think you need this `if` block (`server` will never be `null` and if the server is not started then `stopServer()` will just print a message and return)", "bodyText": "I don't think you need this if block (server will never be null and if the server is not started then stopServer() will just print a message and return)", "bodyHTML": "<p dir=\"auto\">I don't think you need this <code>if</code> block (<code>server</code> will never be <code>null</code> and if the server is not started then <code>stopServer()</code> will just print a message and return)</p>", "author": "Azquelt", "createdAt": "2020-11-30T11:40:29Z", "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }\n \n     @Test\n     @ExpectedFFDC({ \"javax.servlet.UnavailableException\", \"com.ibm.wsspi.injectionengine.InjectionException\" })\n     public void testcorrectExceptionThrown() throws Exception {\n-        this.verifyStatusCode(\"/beanDiscoveryModeNone/TestServlet\", 404);\n+        WebBrowser webBrowser = WebBrowserFactory.getInstance().createWebBrowser((File) null);\n+        int statusCode = 404;\n+        int actualStatusCode = webBrowser.request(createURL(\"/beanDiscoveryModeNone/TestServlet\"), statusCode);\n+\n+        if (actualStatusCode != statusCode) {\n+            throw new WebBrowserException(\"The expected status code was not thrown.  Expected \" + statusCode + \", was \" + actualStatusCode);\n+        }\n     }\n \n     @AfterClass\n     public static void tearDown() throws Exception {\n-        if (SHARED_SERVER != null && SHARED_SERVER.getLibertyServer().isStarted()) {\n+        if (server != null && server.isStarted()) {", "originalCommit": "ca297da3c641962bac9de88225e8b44cad8283e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUzODcxNQ==", "url": "https://github.com/OpenLiberty/open-liberty/pull/15126#discussion_r532538715", "body": "We have a class `HttpRequest` which can create the URL for you and is a little simpler.\r\n\r\nI think you'd do\r\n```\r\nnew HttpRequest(server, \"/beanDiscoveryModeNone/TestServlet\").expectCode(404).run(String.class);\r\n```", "bodyText": "We have a class HttpRequest which can create the URL for you and is a little simpler.\nI think you'd do\nnew HttpRequest(server, \"/beanDiscoveryModeNone/TestServlet\").expectCode(404).run(String.class);", "bodyHTML": "<p dir=\"auto\">We have a class <code>HttpRequest</code> which can create the URL for you and is a little simpler.</p>\n<p dir=\"auto\">I think you'd do</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"new HttpRequest(server, &quot;/beanDiscoveryModeNone/TestServlet&quot;).expectCode(404).run(String.class);\"><pre><code>new HttpRequest(server, \"/beanDiscoveryModeNone/TestServlet\").expectCode(404).run(String.class);\n</code></pre></div>", "author": "Azquelt", "createdAt": "2020-11-30T11:48:07Z", "path": "dev/com.ibm.ws.cdi.beansxml_fat/fat/src/com/ibm/ws/cdi12/fat/tests/BeanDiscoveryModeNoneTest.java", "diffHunk": "@@ -56,19 +63,25 @@ public static Archive buildShrinkWrap() {\n      * @see com.ibm.ws.fat.LoggingTest#getSharedServer()\n      */\n     @Override\n-    protected ShrinkWrapSharedServer getSharedServer() {\n-        return SHARED_SERVER;\n+    protected SharedServer getSharedServer() {\n+        return null;\n     }\n \n     @Test\n     @ExpectedFFDC({ \"javax.servlet.UnavailableException\", \"com.ibm.wsspi.injectionengine.InjectionException\" })\n     public void testcorrectExceptionThrown() throws Exception {\n-        this.verifyStatusCode(\"/beanDiscoveryModeNone/TestServlet\", 404);\n+        WebBrowser webBrowser = WebBrowserFactory.getInstance().createWebBrowser((File) null);\n+        int statusCode = 404;\n+        int actualStatusCode = webBrowser.request(createURL(\"/beanDiscoveryModeNone/TestServlet\"), statusCode);\n+\n+        if (actualStatusCode != statusCode) {\n+            throw new WebBrowserException(\"The expected status code was not thrown.  Expected \" + statusCode + \", was \" + actualStatusCode);\n+        }", "originalCommit": "ca297da3c641962bac9de88225e8b44cad8283e8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "url": "https://github.com/OpenLiberty/open-liberty/commit/c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "message": "move away from shrinkwrapsharedserver", "committedDate": "2020-11-30T12:07:36Z", "type": "commit"}, {"oid": "c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "url": "https://github.com/OpenLiberty/open-liberty/commit/c223e1b6193b2a64b77b0eee4249f9c2b45a96aa", "message": "move away from shrinkwrapsharedserver", "committedDate": "2020-11-30T12:07:36Z", "type": "forcePushed"}]}