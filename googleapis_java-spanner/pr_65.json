{"pr_number": 65, "pr_title": "feat: add session timeout metric", "pr_author": "mayurkale22", "pr_createdAt": "2020-02-07T01:34:08Z", "pr_url": "https://github.com/googleapis/java-spanner/pull/65", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMDE0MQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r376310141", "body": "Suggestion: Call this `GET_SESSION_TIMEOUT`, as it is not a timeout on (a) session(s), but a timeout to get a session.", "bodyText": "Suggestion: Call this GET_SESSION_TIMEOUT, as it is not a timeout on (a) session(s), but a timeout to get a session.", "bodyHTML": "<p dir=\"auto\">Suggestion: Call this <code>GET_SESSION_TIMEOUT</code>, as it is not a timeout on (a) session(s), but a timeout to get a session.</p>", "author": "olavloite", "createdAt": "2020-02-07T10:07:36Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -45,9 +45,13 @@\n   static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n   static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n   static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String SESSIONS_TIMEOUT = \"cloud.google.com/java/spanner/sessions_timeout\";", "originalCommit": "2d8d25fee52ab92c4a2cc54c3aab86da3296ffbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNzM3NA==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r376607374", "bodyText": "Sure, done in 75af676", "author": "mayurkale22", "createdAt": "2020-02-07T21:06:05Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMDE0MQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxMDUzMQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r376310531", "body": "Suggestion: \"The number of get session timeouts due to pool exhaustion\"", "bodyText": "Suggestion: \"The number of get session timeouts due to pool exhaustion\"", "bodyHTML": "<p dir=\"auto\">Suggestion: \"The number of get session timeouts due to pool exhaustion\"</p>", "author": "olavloite", "createdAt": "2020-02-07T10:08:29Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -45,9 +45,13 @@\n   static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n   static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n   static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String SESSIONS_TIMEOUT = \"cloud.google.com/java/spanner/sessions_timeout\";\n+\n   static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n       \"The maximum number of sessions in use during the last 10 minute interval.\";\n   static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n       \"The maximum number of sessions allowed. Configurable by the user.\";\n   static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use.\";\n+  static final String SESSIONS_TIMEOUT_DESCRIPTION =\n+      \"The count of number of sessions timeout due to pool exhaustion\";", "originalCommit": "2d8d25fee52ab92c4a2cc54c3aab86da3296ffbe", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNDIxNA==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r376314214", "body": "I'm a little bit worried that this assert could turn out to be flaky. If I understand the test code correctly, the get session timeout will happen for the first time after 20ms. You poll the number of timeouts every 5ms and break the loop if you have at least 1 timeout. If the following lines of code happen to take more than 15ms to execute, you might have more than 1 timeouts in your metrics. Would it be possible to make this assert check that the number of timeouts is at least 1 (instead of equal to 1)?", "bodyText": "I'm a little bit worried that this assert could turn out to be flaky. If I understand the test code correctly, the get session timeout will happen for the first time after 20ms. You poll the number of timeouts every 5ms and break the loop if you have at least 1 timeout. If the following lines of code happen to take more than 15ms to execute, you might have more than 1 timeouts in your metrics. Would it be possible to make this assert check that the number of timeouts is at least 1 (instead of equal to 1)?", "bodyHTML": "<p dir=\"auto\">I'm a little bit worried that this assert could turn out to be flaky. If I understand the test code correctly, the get session timeout will happen for the first time after 20ms. You poll the number of timeouts every 5ms and break the loop if you have at least 1 timeout. If the following lines of code happen to take more than 15ms to execute, you might have more than 1 timeouts in your metrics. Would it be possible to make this assert check that the number of timeouts is at least 1 (instead of equal to 1)?</p>", "author": "olavloite", "createdAt": "2020-02-07T10:16:25Z", "path": "google-cloud-spanner/src/test/java/com/google/cloud/spanner/SessionPoolTest.java", "diffHunk": "@@ -1583,16 +1585,45 @@ public void testSessionMetrics() {\n     Session session2 = pool.getReadSession();\n \n     MetricsRecord record = metricRegistry.pollRecord();\n+    assertThat(record.getMetrics().size()).isEqualTo(4);\n     assertThat(record.getMetrics()).containsEntry(MetricRegistryConstants.IN_USE_SESSIONS, 2L);\n     assertThat(record.getMetrics()).containsEntry(MetricRegistryConstants.MAX_IN_USE_SESSIONS, 2L);\n+    assertThat(record.getMetrics()).containsEntry(MetricRegistryConstants.SESSIONS_TIMEOUT, 0L);\n     assertThat(record.getMetrics())\n         .containsEntry(\n             MetricRegistryConstants.MAX_ALLOWED_SESSIONS, (long) options.getMaxSessions());\n     assertThat(record.getLabels()).containsEntry(SPANNER_LABEL_KEYS, labelValues);\n \n+    final CountDownLatch latch = new CountDownLatch(1);\n+    // Try asynchronously to take another session. This attempt should time out.\n+    Future<Void> fut =\n+        executor.submit(\n+            new Callable<Void>() {\n+              @Override\n+              public Void call() {\n+                latch.countDown();\n+                Session session = pool.getReadSession();\n+                session.close();\n+                return null;\n+              }\n+            });\n+    // Wait until the background thread is actually waiting for a session.\n+    latch.await();\n+    // Wait until the request has timed out.\n+    int waitCount = 0;\n+    while (pool.getNumWaiterTimeouts() == 0L && waitCount < 1000) {\n+      Thread.sleep(5L);\n+      waitCount++;\n+    }\n+    // Return the checked out session to the pool so the async request will get a session and\n+    // finish.\n     session2.close();\n-    session1.close();\n+    // Verify that the async request also succeeds.\n+    fut.get(10L, TimeUnit.SECONDS);\n+    executor.shutdown();\n \n+    session1.close();\n+    assertThat(record.getMetrics()).containsEntry(MetricRegistryConstants.SESSIONS_TIMEOUT, 1L);", "originalCommit": "2d8d25fee52ab92c4a2cc54c3aab86da3296ffbe", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxNDU3NQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r376614575", "bodyText": "I was thinking about it, but tried multiple times locally didn't see the issue. Having said that, I understand your concern, made the change(d1c13d8) to the test. PTAL when you get a chance. Thanks :)", "author": "mayurkale22", "createdAt": "2020-02-07T21:25:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjMxNDIxNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNzc0OQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r377217749", "body": "not sure about the name `get_sessions_timeout`. Maybe `session_open_retries`? This would go well with other metrics `session_opened` and `sessions_closed` if those are implemented.", "bodyText": "not sure about the name get_sessions_timeout. Maybe session_open_retries? This would go well with other metrics session_opened and sessions_closed if those are implemented.", "bodyHTML": "<p dir=\"auto\">not sure about the name <code>get_sessions_timeout</code>. Maybe <code>session_open_retries</code>? This would go well with other metrics <code>session_opened</code> and <code>sessions_closed</code> if those are implemented.</p>", "author": "rghetia", "createdAt": "2020-02-10T17:47:45Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -45,9 +45,13 @@\n   static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n   static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n   static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String GET_SESSION_TIMEOUT = \"cloud.google.com/java/spanner/get_sessions_timeout\";", "originalCommit": "4184203d5485b9b29cf481882814d61da9e2db80", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMzI3Mw==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r377223273", "bodyText": "@skuruppu @olavloite any thoughts?", "author": "mayurkale22", "createdAt": "2020-02-10T17:58:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNzc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIyMzQwNw==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r377223407", "bodyText": "No, this retry is not for opening a session, but for getting (or acquiring) a session from the pool. The maximum number of sessions in the pool has already been reached, and the pool is therefore prohibited from opening any new sessions. Instead, the thread that requested the session is placed in a wait queue where it waits until a session is released into the pool by another thread. The waiter will wake up and increase this counter every now and then in order to be able to log information about the fact that it is still waiting.", "author": "olavloite", "createdAt": "2020-02-10T17:58:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNzc0OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM1NTAyNg==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r377355026", "bodyText": "get_session_timeout still doesn't feel right but I don't have any good suggestion. I think it should be  GET_SESSION_TIMEOUTS though ('s at the end).", "author": "rghetia", "createdAt": "2020-02-10T22:28:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNzc0OQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxODcyNg==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r377218726", "body": "Based on previous comment this could be changed to\r\n`The number of retries to open a session. Retries occur when session pool is exhausted.`", "bodyText": "Based on previous comment this could be changed to\nThe number of retries to open a session. Retries occur when session pool is exhausted.", "bodyHTML": "<p dir=\"auto\">Based on previous comment this could be changed to<br>\n<code>The number of retries to open a session. Retries occur when session pool is exhausted.</code></p>", "author": "rghetia", "createdAt": "2020-02-10T17:49:33Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -45,9 +45,13 @@\n   static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n   static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n   static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String GET_SESSION_TIMEOUT = \"cloud.google.com/java/spanner/get_sessions_timeout\";\n+\n   static final String MAX_IN_USE_SESSIONS_DESCRIPTION =\n       \"The maximum number of sessions in use during the last 10 minute interval.\";\n   static final String MAX_ALLOWED_SESSIONS_DESCRIPTION =\n       \"The maximum number of sessions allowed. Configurable by the user.\";\n   static final String IN_USE_SESSIONS_DESCRIPTION = \"The number of sessions currently in use.\";\n+  static final String SESSIONS_TIMEOUT_DESCRIPTION =\n+      \"The number of get session timeouts due to pool exhaustion\";", "originalCommit": "4184203d5485b9b29cf481882814d61da9e2db80", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NDQ3MQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r378644471", "body": "There's a discrepancy in the naming here.\r\n\r\n```suggestion\r\n  static final String GET_SESSIONS_TIMEOUTS = \"cloud.google.com/java/spanner/get_sessions_timeouts\";\r\n```", "bodyText": "There's a discrepancy in the naming here.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              static final String GET_SESSION_TIMEOUTS = \"cloud.google.com/java/spanner/get_sessions_timeouts\";\n          \n          \n            \n              static final String GET_SESSIONS_TIMEOUTS = \"cloud.google.com/java/spanner/get_sessions_timeouts\";", "bodyHTML": "<p dir=\"auto\">There's a discrepancy in the naming here.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">GET_SESSION_TIMEOUTS</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cloud.google.com/java/spanner/get_sessions_timeouts<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">static</span> <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> <span class=\"pl-c1 x x-first x-last\">GET_SESSIONS_TIMEOUTS</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>cloud.google.com/java/spanner/get_sessions_timeouts<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "skuruppu", "createdAt": "2020-02-13T04:22:27Z", "path": "google-cloud-spanner/src/main/java/com/google/cloud/spanner/MetricRegistryConstants.java", "diffHunk": "@@ -42,12 +42,16 @@\n   static final String COUNT = \"1\";\n \n   // The Metric name and description\n-  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_session\";\n+  static final String MAX_IN_USE_SESSIONS = \"cloud.google.com/java/spanner/max_in_use_sessions\";\n   static final String MAX_ALLOWED_SESSIONS = \"cloud.google.com/java/spanner/max_allowed_sessions\";\n   static final String IN_USE_SESSIONS = \"cloud.google.com/java/spanner/in_use_sessions\";\n+  static final String GET_SESSION_TIMEOUTS = \"cloud.google.com/java/spanner/get_sessions_timeouts\";", "originalCommit": "2ddb9c11f2ea16183f03881ede321a416218d639", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY2MTUxOQ==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r378661519", "bodyText": "I would change get_sessions_timeouts to get_session_timeouts instead.", "author": "rghetia", "createdAt": "2020-02-13T05:45:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NDQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY2NDEzMA==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r378664130", "bodyText": "I don't have strong preference, but sessions seems consistent across other metrics. @skuruppu thoughts?", "author": "mayurkale22", "createdAt": "2020-02-13T05:56:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NDQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyOTg3Mg==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r379229872", "bodyText": "I think it should be get_session_timeouts.", "author": "skuruppu", "createdAt": "2020-02-14T03:00:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NDQ3MQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIzNDUzNA==", "url": "https://github.com/googleapis/java-spanner/pull/65#discussion_r379234534", "bodyText": "done, ptal", "author": "mayurkale22", "createdAt": "2020-02-14T03:24:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODY0NDQ3MQ=="}], "type": "inlineReview"}, {"oid": "2dc65447405c0c11a40bc51aa5e230056194c527", "url": "https://github.com/googleapis/java-spanner/commit/2dc65447405c0c11a40bc51aa5e230056194c527", "message": "feat: add session timeout metric", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "d2a2e975c1fc25f4315f215b20e84dae96081703", "url": "https://github.com/googleapis/java-spanner/commit/d2a2e975c1fc25f4315f215b20e84dae96081703", "message": "minor patch", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "608004f78abad4f4968a1b9450fdcbd35b92147f", "url": "https://github.com/googleapis/java-spanner/commit/608004f78abad4f4968a1b9450fdcbd35b92147f", "message": "rename metric name and description", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "94e5a8878b8910d0c9000be294838ff011828be4", "url": "https://github.com/googleapis/java-spanner/commit/94e5a8878b8910d0c9000be294838ff011828be4", "message": "fix potential flaky test", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "581460117209c9bb0ec545e39d0bd09d8bf1b9f3", "url": "https://github.com/googleapis/java-spanner/commit/581460117209c9bb0ec545e39d0bd09d8bf1b9f3", "message": "fix code format", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "d2ffc9f28415055c1e37148b5408920fcf5c7e71", "url": "https://github.com/googleapis/java-spanner/commit/d2ffc9f28415055c1e37148b5408920fcf5c7e71", "message": "update metric name", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "e3dea395dd2b394e65934dcf8e0bb63754340d94", "url": "https://github.com/googleapis/java-spanner/commit/e3dea395dd2b394e65934dcf8e0bb63754340d94", "message": "minor nit", "committedDate": "2020-02-13T04:38:49Z", "type": "commit"}, {"oid": "f3799554dc9207771c4b664f55360330dcc5ff3f", "url": "https://github.com/googleapis/java-spanner/commit/f3799554dc9207771c4b664f55360330dcc5ff3f", "message": "fix review comment", "committedDate": "2020-02-13T04:42:08Z", "type": "commit"}, {"oid": "f3799554dc9207771c4b664f55360330dcc5ff3f", "url": "https://github.com/googleapis/java-spanner/commit/f3799554dc9207771c4b664f55360330dcc5ff3f", "message": "fix review comment", "committedDate": "2020-02-13T04:42:08Z", "type": "forcePushed"}, {"oid": "67058f13b1ef30db42cc1ecf6008aefb4783bf6d", "url": "https://github.com/googleapis/java-spanner/commit/67058f13b1ef30db42cc1ecf6008aefb4783bf6d", "message": "rename get_sessions_timeouts to get_session_timeouts", "committedDate": "2020-02-14T03:24:16Z", "type": "commit"}]}