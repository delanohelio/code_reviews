{"pr_number": 5979, "pr_title": "Fixes outdated topology when no new leader is assigned", "pr_author": "npepinpe", "pr_createdAt": "2020-12-07T20:04:09Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5979", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539073501", "body": "```suggestion\r\n            .filter(Predicate.not(PartitionInfo::isLeader))\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .filter(PartitionInfo::isLeader)\n          \n          \n            \n                        .filter(Predicate.not(PartitionInfo::isLeader))", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            .filter(<span class=\"pl-smi\">PartitionInfo</span><span class=\"pl-k\">::</span>isLeader)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"57\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .filter(<span class=\"pl-smi x x-first\">Predicate</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">not(</span><span class=\"pl-smi\">PartitionInfo</span><span class=\"pl-k\">::</span>isLeader<span class=\"x x-first x-last\">)</span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "deepthidevaki", "createdAt": "2020-12-09T07:38:15Z", "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -44,6 +47,25 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n           partitionCount, brokersWithUnexpectedPartitionCount);\n     }\n \n+    final Set<Integer> partitionsWithLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)\n+            .map(PartitionInfo::getPartitionId)\n+            .collect(Collectors.toUnmodifiableSet());\n+    final Set<Integer> partitionsWithoutLeader =\n+        brokers.stream()\n+            .flatMap(b -> b.getPartitions().stream())\n+            .filter(PartitionInfo::isLeader)", "originalCommit": "d7fcbce71211b6d7283b1335191cc35ed94e9b2c", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTExNTE4Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539115186", "bodyText": "\ud83d\ude48", "author": "npepinpe", "createdAt": "2020-12-09T08:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE3ODU0MQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539178541", "bodyText": "Actually the line had to be removed - what I want is set difference. Actually, now that I think about it, this is a very round about way of doing it. Let me check if I can't make it simpler.", "author": "npepinpe", "createdAt": "2020-12-09T10:14:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA3MzUwMQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI4MDQ1Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5979#discussion_r539280452", "body": "The javadoc from `failWithMessage` actually recommends using `throw failure` instead, as the compiler can now realize we're throwing an error (whereas with `failWithMessage` it thinks execution will continue).", "bodyText": "The javadoc from failWithMessage actually recommends using throw failure instead, as the compiler can now realize we're throwing an error (whereas with failWithMessage it thinks execution will continue).", "bodyHTML": "<p dir=\"auto\">The javadoc from <code>failWithMessage</code> actually recommends using <code>throw failure</code> instead, as the compiler can now realize we're throwing an error (whereas with <code>failWithMessage</code> it thinks execution will continue).</p>", "author": "npepinpe", "createdAt": "2020-12-09T12:51:28Z", "path": "test-util/src/main/java/io/zeebe/test/util/asserts/TopologyAssert.java", "diffHunk": "@@ -30,7 +32,7 @@ public final TopologyAssert isComplete(final int clusterSize, final int partitio\n     final List<BrokerInfo> brokers = actual.getBrokers();\n \n     if (brokers.size() != clusterSize) {\n-      failWithMessage(\"Expected broker count to be <%s> but was <%s>\", clusterSize, brokers.size());\n+      throw failure(\"Expected broker count to be <%s> but was <%s>\", clusterSize, brokers.size());", "originalCommit": "01dddc27c784d0ef163cdb0a1b8637665227ee1d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "11a295ac06530ae107caf4ba45564b55e4514276", "url": "https://github.com/camunda-cloud/zeebe/commit/11a295ac06530ae107caf4ba45564b55e4514276", "message": "chore(qa): add topology fault tolerance tests", "committedDate": "2020-12-09T16:09:50Z", "type": "forcePushed"}, {"oid": "23abda69e10fc9a506d3af722781b0c7926af0ba", "url": "https://github.com/camunda-cloud/zeebe/commit/23abda69e10fc9a506d3af722781b0c7926af0ba", "message": "fix(gateway): fix outdated leader when no other leader\n\n- fixes an issue in the gateway topology when the old leader becomes\n  follower, and no new node is elected leader yet, by removing the new\n  follower if it's still identified as the leader", "committedDate": "2020-12-14T12:53:47Z", "type": "commit"}, {"oid": "4285ff42c3d4e135e4bb563676992a8f3bd83828", "url": "https://github.com/camunda-cloud/zeebe/commit/4285ff42c3d4e135e4bb563676992a8f3bd83828", "message": "chore(test-util): update definition of complete topology\n\n- TopologyAssert#isComplete now also checks that all partitions have a\n  leader", "committedDate": "2020-12-14T12:53:47Z", "type": "commit"}, {"oid": "87cddba911bbb50328fa968d39b99ef70e54d2e2", "url": "https://github.com/camunda-cloud/zeebe/commit/87cddba911bbb50328fa968d39b99ef70e54d2e2", "message": "chore(qa): add topology fault tolerance tests", "committedDate": "2020-12-14T12:53:48Z", "type": "commit"}, {"oid": "87cddba911bbb50328fa968d39b99ef70e54d2e2", "url": "https://github.com/camunda-cloud/zeebe/commit/87cddba911bbb50328fa968d39b99ef70e54d2e2", "message": "chore(qa): add topology fault tolerance tests", "committedDate": "2020-12-14T12:53:48Z", "type": "forcePushed"}]}