{"pr_number": 5893, "pr_title": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client.", "pr_author": "aivinog1", "pr_createdAt": "2020-11-23T06:32:31Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5893", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNTExNw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528705117", "body": "```suggestion\r\n  private void validate() {\r\n```\r\nSonarLint will complain about this declaration since IllegalArgumentException is a RuntimeException and doesn't need to be declared", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private void validate() throws IllegalArgumentException {\n          \n          \n            \n              private void validate() {\n          \n      \n    \n    \n  \n\nSonarLint will complain about this declaration since IllegalArgumentException is a RuntimeException and doesn't need to be declared", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> validate() <span class=\"x x-first\">throws </span><span class=\"pl-smi x\">IllegalArgumentException</span><span class=\"x x-last\"> </span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">void</span> validate() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">SonarLint will complain about this declaration since IllegalArgumentException is a RuntimeException and doesn't need to be declared</p>", "author": "MiguelPires", "createdAt": "2020-11-23T13:32:48Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -146,9 +193,17 @@ private void applyDefaults() {\n     if (authorizationServerUrl == null) {\n       authorizationServerUrl = DEFAULT_AUTHZ_SERVER;\n     }\n+\n+    if (connectTimeout == null) {\n+      connectTimeout = DEFAULT_CONNECT_TIMEOUT;\n+    }\n+\n+    if (readTimeout == null) {\n+      readTimeout = DEFAULT_READ_TIMEOUT;\n+    }\n   }\n \n-  private void validate() {\n+  private void validate() throws IllegalArgumentException {", "originalCommit": "275241d9a027b64d58b1eec4ba781eca8ae42425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MTQ4OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529571488", "bodyText": "Done", "author": "aivinog1", "createdAt": "2020-11-24T14:08:10Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcwNTExNw=="}], "type": "inlineReview", "revised_code": {"commit": "64e22e43afb94256aa860037b29237bc0517cec5", "changed_code": [{"header": "diff --git a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\nindex c8f71c7ba8..ebf0592812 100644\n--- a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n+++ b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n", "chunk": "@@ -203,7 +201,7 @@ public final class OAuthCredentialsProviderBuilder {\n     }\n   }\n \n-  private void validate() throws IllegalArgumentException {\n+  private void validate() {\n     try {\n       Objects.requireNonNull(clientId, String.format(INVALID_ARGUMENT_MSG, \"client id\"));\n       Objects.requireNonNull(clientSecret, String.format(INVALID_ARGUMENT_MSG, \"client secret\"));\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528712140", "body": "Maybe we can call these arguments `replyDelay`, I think it'd be clearer", "bodyText": "Maybe we can call these arguments replyDelay, I think it'd be clearer", "bodyHTML": "<p dir=\"auto\">Maybe we can call these arguments <code>replyDelay</code>, I think it'd be clearer</p>", "author": "MiguelPires", "createdAt": "2020-11-23T13:44:09Z", "path": "clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java", "diffHunk": "@@ -442,7 +513,20 @@ private void mockCredentials(final String accessToken) {\n     mockCredentials(accessToken, AUDIENCE);\n   }\n \n+  private void mockCredentials(final Integer readDelay) {", "originalCommit": "275241d9a027b64d58b1eec4ba781eca8ae42425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MTUzNQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529571535", "bodyText": "Done", "author": "aivinog1", "createdAt": "2020-11-24T14:08:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxMjE0MA=="}], "type": "inlineReview", "revised_code": {"commit": "64e22e43afb94256aa860037b29237bc0517cec5", "changed_code": [{"header": "diff --git a/clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java b/clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java\nindex 892888d149..cbba0ee133 100644\n--- a/clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java\n+++ b/clients/java/src/test/java/io/zeebe/client/OAuthCredentialsProviderTest.java\n", "chunk": "@@ -513,12 +517,12 @@ public final class OAuthCredentialsProviderTest {\n     mockCredentials(accessToken, AUDIENCE);\n   }\n \n-  private void mockCredentials(final Integer readDelay) {\n-    mockCredentials(ACCESS_TOKEN, readDelay);\n+  private void mockCredentials(final Integer replyDelay) {\n+    mockCredentials(ACCESS_TOKEN, replyDelay);\n   }\n \n-  private void mockCredentials(final String accessToken, final Integer readDelay) {\n-    mockCredentials(accessToken, AUDIENCE, readDelay);\n+  private void mockCredentials(final String accessToken, final Integer replyDelay) {\n+    mockCredentials(accessToken, AUDIENCE, replyDelay);\n   }\n \n   private void mockCredentials(final String accessToken, final String audience) {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r528721479", "body": "SonarLint complains about the nested `try` here. We could fix that and also make this less repetitive by refactoring it to a `validateTimeout` method. If the validation fails, we can throw an exception stating what we expect. Something like \"Connect/read timeout is XYZ, expected timeout to be a positive number smaller than Integer.MAX_VALUE\". Wdyt?", "bodyText": "SonarLint complains about the nested try here. We could fix that and also make this less repetitive by refactoring it to a validateTimeout method. If the validation fails, we can throw an exception stating what we expect. Something like \"Connect/read timeout is XYZ, expected timeout to be a positive number smaller than Integer.MAX_VALUE\". Wdyt?", "bodyHTML": "<p dir=\"auto\">SonarLint complains about the nested <code>try</code> here. We could fix that and also make this less repetitive by refactoring it to a <code>validateTimeout</code> method. If the validation fails, we can throw an exception stating what we expect. Something like \"Connect/read timeout is XYZ, expected timeout to be a positive number smaller than Integer.MAX_VALUE\". Wdyt?</p>", "author": "MiguelPires", "createdAt": "2020-11-23T13:58:57Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,6 +218,24 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      try {", "originalCommit": "275241d9a027b64d58b1eec4ba781eca8ae42425", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1MzUxNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529253514", "bodyText": "Agree, that makes sense, I'll fix that :)", "author": "aivinog1", "createdAt": "2020-11-24T07:26:31Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MzI5Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r529573293", "bodyText": "Done. I've also made some refactoring to determine whether the\ntimeout value in milliseconds included in the Integer range :) I think, that now it looks prettier :)", "author": "aivinog1", "createdAt": "2020-11-24T14:10:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcyMTQ3OQ=="}], "type": "inlineReview", "revised_code": {"commit": "64e22e43afb94256aa860037b29237bc0517cec5", "changed_code": [{"header": "diff --git a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\nindex c8f71c7ba8..ebf0592812 100644\n--- a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n+++ b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n", "chunk": "@@ -218,26 +216,19 @@ public final class OAuthCredentialsProviderBuilder {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n-      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n-        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n-      }\n-      try {\n-        toIntExact(connectTimeout.toMillis());\n-      } catch (final ArithmeticException e) {\n-        throw new IllegalArgumentException(\n-            \"Expected connectTimeout to be in range of integer milliseconds.\", e);\n-      }\n-      if (readTimeout.isZero() || readTimeout.isNegative()) {\n-        throw new IllegalArgumentException(\"Expected readTimeout to be is more that 0.\");\n-      }\n-      try {\n-        toIntExact(readTimeout.toMillis());\n-      } catch (final ArithmeticException e) {\n-        throw new IllegalArgumentException(\n-            \"Expected readTimeout to be in range of integer milliseconds.\", e);\n-      }\n+      validateTimeout(connectTimeout, \"ConnectTimeout\");\n+      validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n       throw new IllegalArgumentException(e);\n     }\n   }\n+\n+  private void validateTimeout(final Duration timeout, final String timeoutName) {\n+    if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\n+      throw new IllegalArgumentException(\n+          String.format(\n+              \"%s timeout is %s milliseconds, expected timeout to be a positive number of milliseconds smaller than %s.\",\n+              timeoutName, timeout.toMillis(), Integer.MAX_VALUE));\n+    }\n+  }\n }\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5MzEzMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530793133", "body": "```suggestion\r\n```\r\nThis check is duplicated and can be removed.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n          \n          \n            \n                    throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n          \n          \n            \n                  }\n          \n      \n    \n    \n  \n\nThis check is duplicated and can be removed.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">if</span> (connectTimeout<span class=\"pl-k\">.</span>isZero() <span class=\"pl-k\">||</span> connectTimeout<span class=\"pl-k\">.</span>isNegative()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Expected connectTimeout to be is more that 0.<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This check is duplicated and can be removed.</p>", "author": "MiguelPires", "createdAt": "2020-11-26T06:12:20Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }", "originalCommit": "54136e9b767c32d111e05888e06ea076fe9ea0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1OTY2Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530859666", "bodyText": "Done", "author": "aivinog1", "createdAt": "2020-11-26T08:44:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5MzEzMw=="}], "type": "inlineReview", "revised_code": {"commit": "64e22e43afb94256aa860037b29237bc0517cec5", "changed_code": [{"header": "diff --git a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\nindex acf618049e..ebf0592812 100644\n--- a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n+++ b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n", "chunk": "@@ -216,9 +216,6 @@ public final class OAuthCredentialsProviderBuilder {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n-      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n-        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n-      }\n       validateTimeout(connectTimeout, \"ConnectTimeout\");\n       validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5NjQ3NA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530796474", "body": "```suggestion\r\n    if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\r\n```\r\nThe `> Integer.MIN_VALUE` is redundant at this point so we can check this more a bit more concisely", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final boolean valid;\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative()) {\n          \n          \n            \n                  valid = false;\n          \n          \n            \n                } else {\n          \n          \n            \n                  final long millis = timeout.toMillis();\n          \n          \n            \n                  valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n          \n          \n            \n                }\n          \n          \n            \n                if (!valid) {\n          \n          \n            \n                if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\n          \n      \n    \n    \n  \n\nThe > Integer.MIN_VALUE is redundant at this point so we can check this more a bit more concisely", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">boolean</span> valid;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (timeout<span class=\"pl-k\">.</span>isZero() <span class=\"pl-k\">||</span> timeout<span class=\"pl-k\">.</span>isNegative()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      valid <span class=\"pl-k\">=</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-k\">long</span> millis <span class=\"pl-k\">=</span> timeout<span class=\"pl-k\">.</span>toMillis();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      valid <span class=\"pl-k\">=</span> millis <span class=\"pl-k\">&lt;</span> <span class=\"pl-smi\">Integer</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MAX_VALUE</span> <span class=\"pl-k\">&amp;&amp;</span> millis <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Integer</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MIN_VALUE</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">if</span> (<span class=\"pl-k\">!</span>valid) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">if</span> (timeout<span class=\"pl-k\">.</span>isZero() <span class=\"pl-k\">||</span> timeout<span class=\"pl-k\">.</span>isNegative() <span class=\"pl-k\">||</span> timeout<span class=\"pl-k\">.</span>toMillis() <span class=\"pl-k\">&gt;</span> <span class=\"pl-smi\">Integer</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>MAX_VALUE</span>) {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">The <code>&gt; Integer.MIN_VALUE</code> is redundant at this point so we can check this more a bit more concisely</p>", "author": "MiguelPires", "createdAt": "2020-11-26T06:24:13Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java", "diffHunk": "@@ -163,8 +216,29 @@ private void validate() {\n         throw new IllegalArgumentException(\n             \"Expected specified credentials cache to be a file but found directory instead.\");\n       }\n+      if (connectTimeout.isZero() || connectTimeout.isNegative()) {\n+        throw new IllegalArgumentException(\"Expected connectTimeout to be is more that 0.\");\n+      }\n+      validateTimeout(connectTimeout, \"ConnectTimeout\");\n+      validateTimeout(readTimeout, \"ReadTimeout\");\n     } catch (final NullPointerException | IOException e) {\n       throw new IllegalArgumentException(e);\n     }\n   }\n+\n+  private void validateTimeout(final Duration timeout, final String timeoutName) {\n+    final boolean valid;\n+    if (timeout.isZero() || timeout.isNegative()) {\n+      valid = false;\n+    } else {\n+      final long millis = timeout.toMillis();\n+      valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n+    }\n+    if (!valid) {", "originalCommit": "54136e9b767c32d111e05888e06ea076fe9ea0ef", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg1OTcxNA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5893#discussion_r530859714", "bodyText": "Done", "author": "aivinog1", "createdAt": "2020-11-26T08:44:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDc5NjQ3NA=="}], "type": "inlineReview", "revised_code": {"commit": "64e22e43afb94256aa860037b29237bc0517cec5", "changed_code": [{"header": "diff --git a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\nindex acf618049e..ebf0592812 100644\n--- a/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n+++ b/clients/java/src/main/java/io/zeebe/client/impl/oauth/OAuthCredentialsProviderBuilder.java\n", "chunk": "@@ -227,14 +224,7 @@ public final class OAuthCredentialsProviderBuilder {\n   }\n \n   private void validateTimeout(final Duration timeout, final String timeoutName) {\n-    final boolean valid;\n-    if (timeout.isZero() || timeout.isNegative()) {\n-      valid = false;\n-    } else {\n-      final long millis = timeout.toMillis();\n-      valid = millis < Integer.MAX_VALUE && millis > Integer.MIN_VALUE;\n-    }\n-    if (!valid) {\n+    if (timeout.isZero() || timeout.isNegative() || timeout.toMillis() > Integer.MAX_VALUE) {\n       throw new IllegalArgumentException(\n           String.format(\n               \"%s timeout is %s milliseconds, expected timeout to be a positive number of milliseconds smaller than %s.\",\n", "next_change": null}]}}, {"oid": "64e22e43afb94256aa860037b29237bc0517cec5", "url": "https://github.com/camunda-cloud/zeebe/commit/64e22e43afb94256aa860037b29237bc0517cec5", "message": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client.", "committedDate": "2020-11-26T08:44:18Z", "type": "commit"}, {"oid": "64e22e43afb94256aa860037b29237bc0517cec5", "url": "https://github.com/camunda-cloud/zeebe/commit/64e22e43afb94256aa860037b29237bc0517cec5", "message": "feat(clients/java): Optional read and connect timeout for an OAuth2 credentials client.", "committedDate": "2020-11-26T08:44:18Z", "type": "forcePushed"}]}