{"pr_number": 4787, "pr_title": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "pr_author": "MiguelPires", "pr_createdAt": "2020-06-22T13:05:56Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/4787", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5MzE5OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4787#discussion_r443593198", "body": "We could add a comment here why we're filtering it out. I think it is not so obvious. ", "bodyText": "We could add a comment here why we're filtering it out. I think it is not so obvious.", "bodyHTML": "<p dir=\"auto\">We could add a comment here why we're filtering it out. I think it is not so obvious.</p>", "author": "saig0", "createdAt": "2020-06-22T14:20:23Z", "path": "exporters/elasticsearch-exporter/src/main/java/io/zeebe/exporter/ElasticsearchClient.java", "diffHunk": "@@ -118,7 +125,10 @@ public void bulk(final Map<String, Object> command, final Record<?> record) {\n           \"Failed to serialize bulk request command to JSON\", e);\n     }\n \n-    bulkRequest.add(serializedCommand + \"\\n\" + record.toJson());\n+    final String jsonCommand = serializedCommand + \"\\n\" + record.toJson();\n+    if (bulkRequest.isEmpty() || !bulkRequest.get(bulkRequest.size() - 1).equals(jsonCommand)) {", "originalCommit": "d04ef3425f04be022802f0bc583fb3fa273c0a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU5NTQ4OA==", "url": "https://github.com/camunda-cloud/zeebe/pull/4787#discussion_r443595488", "body": "A new-line could improve the reading flow.\r\n\r\n```suggestion\r\n    when(recordMock.toJson()).thenReturn(\"{}\");\r\n    \r\n    client.index(recordMock);\r\n```", "bodyText": "A new-line could improve the reading flow.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                when(recordMock.toJson()).thenReturn(\"{}\");\n          \n          \n            \n                client.index(recordMock);\n          \n          \n            \n                when(recordMock.toJson()).thenReturn(\"{}\");\n          \n          \n            \n                \n          \n          \n            \n                client.index(recordMock);", "bodyHTML": "<p dir=\"auto\">A new-line could improve the reading flow.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    when(recordMock<span class=\"pl-k\">.</span>toJson())<span class=\"pl-k\">.</span>thenReturn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{}<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    client<span class=\"pl-k\">.</span>index(recordMock);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"158\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    when(recordMock<span class=\"pl-k\">.</span>toJson())<span class=\"pl-k\">.</span>thenReturn(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>{}<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"159\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    </td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"160\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    client<span class=\"pl-k\">.</span>index(recordMock);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-06-22T14:23:02Z", "path": "exporters/elasticsearch-exporter/src/test/java/io/zeebe/exporter/ElasticsearchClientTest.java", "diffHunk": "@@ -143,4 +145,22 @@ public void shouldThrowExceptionIfFailToFlushBulk() {\n             \"mapper_parsing_exception\",\n             \"failed to parse\");\n   }\n+\n+  @Test\n+  public void shouldIgnoreRecordIfDuplicateOfLast() {\n+    // given\n+    final Record<VariableRecordValue> recordMock = mock(Record.class);\n+    when(recordMock.getPartitionId()).thenReturn(1);\n+    when(recordMock.getValueType()).thenReturn(ValueType.WORKFLOW_INSTANCE);\n+    when(recordMock.getKey()).thenReturn(RECORD_KEY + 1);\n+    when(recordMock.toJson()).thenReturn(\"{}\");\n+    client.index(recordMock);", "originalCommit": "d04ef3425f04be022802f0bc583fb3fa273c0a13", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "991653322e6d3b046eff4d8eb9c387eab38a6f8a", "url": "https://github.com/camunda-cloud/zeebe/commit/991653322e6d3b046eff4d8eb9c387eab38a6f8a", "message": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "committedDate": "2020-06-22T15:14:30Z", "type": "commit"}, {"oid": "991653322e6d3b046eff4d8eb9c387eab38a6f8a", "url": "https://github.com/camunda-cloud/zeebe/commit/991653322e6d3b046eff4d8eb9c387eab38a6f8a", "message": "fix(exporters/elasticsearch-exporter): avoid OOM when retrying", "committedDate": "2020-06-22T15:14:30Z", "type": "forcePushed"}]}