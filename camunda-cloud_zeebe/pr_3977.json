{"pr_number": 3977, "pr_title": "chore(broker): expose health status via http endpoint", "pr_author": "deepthidevaki", "pr_createdAt": "2020-03-04T13:13:04Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/3977", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTM2Nw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871367", "body": "```suggestion\r\n  private boolean isBrokerHealthy(final Broker broker) {\r\n    final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\r\n    final var host = monitoringApi.getHost();\r\n    final var port = monitoringApi.getPort();\r\n    final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\r\n    final var client = HttpClient.newHttpClient();\r\n    final var request = HttpRequest.newBuilder(uri).build();\r\n\r\n    try {\r\n      return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\r\n    } catch (InterruptedException | IOException e) {\r\n      LangUtil.rethrowUnchecked(e);\r\n      return false; // should not happen\r\n    }\r\n  }\r\n```\r\n\r\nJava 11 comes with a build in usable `HttpClient` (although still no `URIBuilder` :roll_eyes:) so we don't need the Apache Components dependency here. We can also reuse it for the other test above.", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final String baseUrl =\n          \n          \n            \n                    String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n          \n          \n            \n                final String url = baseUrl + \"/health\";\n          \n          \n            \n            \n          \n          \n            \n                try (final CloseableHttpClient client = HttpClients.createDefault()) {\n          \n          \n            \n                  final HttpGet request = new HttpGet(url);\n          \n          \n            \n                  try (final CloseableHttpResponse response = client.execute(request)) {\n          \n          \n            \n                    return response.getStatusLine().getStatusCode() != 503;\n          \n          \n            \n                  }\n          \n          \n            \n                } catch (final IOException e) {\n          \n          \n            \n                  e.printStackTrace();\n          \n          \n            \n                }\n          \n          \n            \n                return false;\n          \n          \n            \n              }\n          \n          \n            \n              private boolean isBrokerHealthy(final Broker broker) {\n          \n          \n            \n                final var monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n          \n          \n            \n                final var host = monitoringApi.getHost();\n          \n          \n            \n                final var port = monitoringApi.getPort();\n          \n          \n            \n                final var uri = URI.create(String.format(\"http://%s:%d/health\", host, port));\n          \n          \n            \n                final var client = HttpClient.newHttpClient();\n          \n          \n            \n                final var request = HttpRequest.newBuilder(uri).build();\n          \n          \n            \n            \n          \n          \n            \n                try {\n          \n          \n            \n                  return client.send(request, BodyHandlers.discarding()).statusCode() == 204;\n          \n          \n            \n                } catch (InterruptedException | IOException e) {\n          \n          \n            \n                  LangUtil.rethrowUnchecked(e);\n          \n          \n            \n                  return false; // should not happen\n          \n          \n            \n                }\n          \n          \n            \n              }\n          \n      \n    \n    \n  \n\nJava 11 comes with a build in usable HttpClient (although still no URIBuilder \ud83d\ude44) so we don't need the Apache Components dependency here. We can also reuse it for the other test above.", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> isBrokerHealthy(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Broker</span> broker) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">SocketBindingCfg</span> monitoringApi <span class=\"pl-k\">=</span> broker<span class=\"pl-k\">.</span>getConfig()<span class=\"pl-k\">.</span>getNetwork()<span class=\"pl-k\">.</span>getMonitoringApi();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"99\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> baseUrl <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"100\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://%s:%d<span class=\"pl-pds\">\"</span></span>, monitoringApi<span class=\"pl-k\">.</span>getHost(), monitoringApi<span class=\"pl-k\">.</span>getPort());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"101\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> url <span class=\"pl-k\">=</span> baseUrl <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/health<span class=\"pl-pds\">\"</span></span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"102\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">try</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">CloseableHttpClient</span> client <span class=\"pl-k\">=</span> <span class=\"pl-smi\">HttpClients</span><span class=\"pl-k\">.</span>createDefault()) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">final</span> <span class=\"pl-smi\">HttpGet</span> request <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">HttpGet</span>(url);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      <span class=\"pl-k\">try</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">CloseableHttpResponse</span> response <span class=\"pl-k\">=</span> client<span class=\"pl-k\">.</span>execute(request)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">return</span> response<span class=\"pl-k\">.</span>getStatusLine()<span class=\"pl-k\">.</span>getStatusCode() <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">503</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    } <span class=\"pl-k\">catch</span> (<span class=\"pl-k\">final</span> <span class=\"pl-smi\">IOException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"109\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">      e<span class=\"pl-k\">.</span>printStackTrace();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"111\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"112\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"97\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">private</span> <span class=\"pl-k\">boolean</span> isBrokerHealthy(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Broker</span> broker) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"98\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> monitoringApi <span class=\"pl-k\">=</span> broker<span class=\"pl-k\">.</span>getConfig()<span class=\"pl-k\">.</span>getNetwork()<span class=\"pl-k\">.</span>getMonitoringApi();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"99\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> host <span class=\"pl-k\">=</span> monitoringApi<span class=\"pl-k\">.</span>getHost();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"100\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> port <span class=\"pl-k\">=</span> monitoringApi<span class=\"pl-k\">.</span>getPort();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"101\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> uri <span class=\"pl-k\">=</span> <span class=\"pl-c1\">URI</span><span class=\"pl-k\">.</span>create(<span class=\"pl-smi\">String</span><span class=\"pl-k\">.</span>format(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>http://%s:%d/health<span class=\"pl-pds\">\"</span></span>, host, port));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"102\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> client <span class=\"pl-k\">=</span> <span class=\"pl-smi\">HttpClient</span><span class=\"pl-k\">.</span>newHttpClient();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"103\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> request <span class=\"pl-k\">=</span> <span class=\"pl-smi\">HttpRequest</span><span class=\"pl-k\">.</span>newBuilder(uri)<span class=\"pl-k\">.</span>build();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"104\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"105\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"106\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> client<span class=\"pl-k\">.</span>send(request, <span class=\"pl-smi\">BodyHandlers</span><span class=\"pl-k\">.</span>discarding())<span class=\"pl-k\">.</span>statusCode() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">204</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"107\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">InterruptedException</span> <span class=\"pl-k\">|</span> <span class=\"pl-smi\">IOException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"108\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-smi\">LangUtil</span><span class=\"pl-k\">.</span>rethrowUnchecked(e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"109\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">      <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>; <span class=\"pl-c\"><span class=\"pl-c\">//</span> should not happen</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"110\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"111\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">Java 11 comes with a build in usable <code>HttpClient</code> (although still no <code>URIBuilder</code> <g-emoji class=\"g-emoji\" alias=\"roll_eyes\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/1f644.png\">\ud83d\ude44</g-emoji>) so we don't need the Apache Components dependency here. We can also reuse it for the other test above.</p>", "author": "npepinpe", "createdAt": "2020-03-06T12:17:39Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());\n             });\n   }\n+\n+  private boolean isBrokerHealthy(final Broker broker) {\n+    final SocketBindingCfg monitoringApi = broker.getConfig().getNetwork().getMonitoringApi();\n+    final String baseUrl =\n+        String.format(\"http://%s:%d\", monitoringApi.getHost(), monitoringApi.getPort());\n+    final String url = baseUrl + \"/health\";\n+\n+    try (final CloseableHttpClient client = HttpClients.createDefault()) {\n+      final HttpGet request = new HttpGet(url);\n+      try (final CloseableHttpResponse response = client.execute(request)) {\n+        return response.getStatusLine().getStatusCode() != 503;\n+      }\n+    } catch (final IOException e) {\n+      e.printStackTrace();\n+    }\n+    return false;\n+  }", "originalCommit": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg5NTEwMQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388895101", "bodyText": "\ud83d\udc4d", "author": "deepthidevaki", "createdAt": "2020-03-06T13:14:49Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTM2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODg3MTg4Mw==", "url": "https://github.com/camunda-cloud/zeebe/pull/3977#discussion_r388871883", "body": "We should use the method reference syntax wherever possible\r\n\r\n```suggestion\r\n                  .forEach(File::delete);\r\n```", "bodyText": "We should use the method reference syntax wherever possible\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                              .forEach(file -> file.delete());\n          \n          \n            \n                              .forEach(File::delete);", "bodyHTML": "<p dir=\"auto\">We should use the method reference syntax wherever possible</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  .forEach(<span class=\"x x-first\">file </span><span class=\"pl-k x\">-</span><span class=\"pl-k x\">&gt;</span><span class=\"x\"> file</span><span class=\"pl-k x x-last\">.</span>delete<span class=\"x x-first x-last\">()</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  .forEach(<span class=\"pl-smi x x-first\">File</span><span class=\"pl-k x x-last\">::</span>delete);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "npepinpe", "createdAt": "2020-03-06T12:18:56Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/health/HealthMonitoringTest.java", "diffHunk": "@@ -77,4 +81,21 @@ private void corruptAllSnapshots(final Broker leader) {\n                   .forEach(file -> file.delete());", "originalCommit": "6c46a03d9c6ee85bb39d409ec08ebf83b6f049ff", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "a3624b9322281a9bd12981383d7631fb9a2d2673", "url": "https://github.com/camunda-cloud/zeebe/commit/a3624b9322281a9bd12981383d7631fb9a2d2673", "message": "chore(test): fix codestyle", "committedDate": "2020-03-06T13:11:35Z", "type": "forcePushed"}, {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "message": "chore(broker): expose health status via http endpoint", "committedDate": "2020-03-06T13:23:49Z", "type": "commit"}, {"oid": "5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "url": "https://github.com/camunda-cloud/zeebe/commit/5198a454acb4fb6a9dd5b119e16bf40f1fee6ca4", "message": "chore(broker): expose health status via http endpoint", "committedDate": "2020-03-06T13:23:49Z", "type": "forcePushed"}]}