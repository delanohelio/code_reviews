{"pr_number": 5991, "pr_title": "Don't write Job activated record", "pr_author": "Zelldon", "pr_createdAt": "2020-12-09T14:31:51Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5991", "timeline": [{"oid": "781f506c255796425c5ad3efc7a55736ec297e31", "url": "https://github.com/camunda-cloud/zeebe/commit/781f506c255796425c5ad3efc7a55736ec297e31", "message": "chore(engine): do not write job activate record\n\n * job activated record is no longer written to the log. It is already\n   present in JobBatchRecord\n * Job record is also not copied multiple times just wrapped without\n   variables for state updates", "committedDate": "2020-12-09T06:52:08Z", "type": "commit"}, {"oid": "6c333581ff5673505b0cfb51ce308809f202a896", "url": "https://github.com/camunda-cloud/zeebe/commit/6c333581ff5673505b0cfb51ce308809f202a896", "message": "chore(broker): fix metrics for job activation", "committedDate": "2020-12-09T20:09:49Z", "type": "commit"}, {"oid": "87cd9d1572882dcce08d13100ad216d7d6593770", "url": "https://github.com/camunda-cloud/zeebe/commit/87cd9d1572882dcce08d13100ad216d7d6593770", "message": "chore(engine): fix engine tests\n\n Based on not writting job activated record tests are adjusted", "committedDate": "2020-12-09T20:09:49Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0NDQxMw==", "url": "https://github.com/camunda-cloud/zeebe/pull/5991#discussion_r539844413", "body": "Verify the job types more strictly.\r\n\r\n```suggestion\r\n    assertThat(activatedJobBatch.getJobs()).extracting(JobRecordValue::getType).containsOnly(taskType);\r\n```", "bodyText": "Verify the job types more strictly.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                final var types =\n          \n          \n            \n                    activatedJobBatch.getJobs().stream().map(JobRecordValue::getType).distinct().count();\n          \n          \n            \n                assertThat(types).isEqualTo(1);\n          \n          \n            \n                assertThat(activatedJobBatch.getJobs()).extracting(JobRecordValue::getType).containsOnly(taskType);", "bodyHTML": "<p dir=\"auto\">Verify the job types more strictly.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">final</span> <span class=\"pl-k\">var</span> types <span class=\"pl-k\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        activatedJobBatch<span class=\"pl-k\">.</span>getJobs()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>map(<span class=\"pl-smi\">JobRecordValue</span><span class=\"pl-k\">::</span>getType)<span class=\"pl-k\">.</span>distinct()<span class=\"pl-k\">.</span>count();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(types)<span class=\"pl-k\">.</span>isEqualTo(<span class=\"pl-c1\">1</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(activatedJobBatch<span class=\"pl-k\">.</span>getJobs())<span class=\"pl-k\">.</span>extracting(<span class=\"pl-smi\">JobRecordValue</span><span class=\"pl-k\">::</span>getType)<span class=\"pl-k\">.</span>containsOnly(taskType);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-12-10T04:54:10Z", "path": "engine/src/test/java/io/zeebe/engine/processing/job/ActivateJobsTest.java", "diffHunk": "@@ -239,16 +238,14 @@ public void shouldOnlyReturnJobsOfCorrectType() {\n     final List<Long> jobs = activateJobs(taskType, 7);\n \n     // then\n-    assertThat(jobs).containsOnlyElementsOf(jobKeys);\n+    assertThat(jobs).containsExactly(jobKeys.toArray(new Long[0]));\n \n-    final List<Record<JobRecordValue>> records =\n-        jobRecords(JobIntent.ACTIVATED)\n-            .withType(taskType)\n-            .limit(jobKeys.size())\n-            .collect(Collectors.toList());\n+    final var activatedJobBatch = getActivatedJobBatch();\n+    assertThat(activatedJobBatch).hasJobKeys(jobKeys);\n \n-    assertThat(records).extracting(Record::getKey).containsOnlyElementsOf(jobKeys);\n-    assertThat(records).extracting(\"value.type\").containsOnly(taskType);\n+    final var types =\n+        activatedJobBatch.getJobs().stream().map(JobRecordValue::getType).distinct().count();\n+    assertThat(types).isEqualTo(1);", "originalCommit": "87cd9d1572882dcce08d13100ad216d7d6593770", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "e389e7773369bb68d6fa5f74044da1358a975dd9", "url": "https://github.com/camunda-cloud/zeebe/commit/e389e7773369bb68d6fa5f74044da1358a975dd9", "message": "chore(engine): fix engine tests\n\n Based on not writting job activated record tests are adjusted", "committedDate": "2020-12-10T07:10:02Z", "type": "commit"}, {"oid": "e389e7773369bb68d6fa5f74044da1358a975dd9", "url": "https://github.com/camunda-cloud/zeebe/commit/e389e7773369bb68d6fa5f74044da1358a975dd9", "message": "chore(engine): fix engine tests\n\n Based on not writting job activated record tests are adjusted", "committedDate": "2020-12-10T07:10:02Z", "type": "forcePushed"}]}