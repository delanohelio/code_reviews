{"pr_number": 5343, "pr_title": "feat(clients/go, clients/java): Add message key to the response of publish message", "pr_author": "aivinog1", "pr_createdAt": "2020-09-12T19:52:59Z", "pr_url": "https://github.com/camunda-cloud/zeebe/pull/5343", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NDY5Ng==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489974696", "body": "Please add some JavaDoc.\r\n\r\nFor example, `Returns the record key of the message that was published.`", "bodyText": "Please add some JavaDoc.\nFor example, Returns the record key of the message that was published.", "bodyHTML": "<p dir=\"auto\">Please add some JavaDoc.</p>\n<p dir=\"auto\">For example, <code>Returns the record key of the message that was published.</code></p>", "author": "saig0", "createdAt": "2020-09-17T05:12:30Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,7 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  long messageKey();", "originalCommit": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk3NjA2NQ==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r489976065", "body": "Let's make the class `final`.\r\n\r\n```suggestion\r\npublic final class PublishMessageResponseImpl implements PublishMessageResponse {\r\n```", "bodyText": "Let's make the class final.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PublishMessageResponseImpl implements PublishMessageResponse {\n          \n          \n            \n            public final class PublishMessageResponseImpl implements PublishMessageResponse {", "bodyHTML": "<p dir=\"auto\">Let's make the class <code>final</code>.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\"><span class=\"pl-k\">public</span> <span class=\"pl-k\">class</span> <span class=\"pl-en\">PublishMessageResponseImpl</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">PublishMessageResponse</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"><span class=\"pl-k\">public</span> <span class=\"pl-k x x-first\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">class</span> <span class=\"pl-en\">PublishMessageResponseImpl</span> <span class=\"pl-k\">implements</span> <span class=\"pl-e\">PublishMessageResponse</span> {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-09-17T05:17:30Z", "path": "clients/java/src/main/java/io/zeebe/client/impl/response/PublishMessageResponseImpl.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright \u00a9 2017 camunda services GmbH (info@camunda.com)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.zeebe.client.impl.response;\n+\n+import io.zeebe.client.api.response.PublishMessageResponse;\n+import io.zeebe.gateway.protocol.GatewayOuterClass;\n+\n+public class PublishMessageResponseImpl implements PublishMessageResponse {", "originalCommit": "c30f7eb1cb58d075d04d4966bf8ae1aa15fc500b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5ca8908ed1f126ef93a29db1eb62e09e10110573", "url": "https://github.com/camunda-cloud/zeebe/commit/5ca8908ed1f126ef93a29db1eb62e09e10110573", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-18T06:40:21Z", "type": "forcePushed"}, {"oid": "4486b2955c3285d6032b51665f66b3248ee60f9b", "url": "https://github.com/camunda-cloud/zeebe/commit/4486b2955c3285d6032b51665f66b3248ee60f9b", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-18T07:21:00Z", "type": "forcePushed"}, {"oid": "15356a755b1f99988a837a9897d4980877596964", "url": "https://github.com/camunda-cloud/zeebe/commit/15356a755b1f99988a837a9897d4980877596964", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-28T04:57:18Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3ODI0MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r495878240", "body": "Align the method name with the other responses. \r\n\r\n```suggestion\r\n  long getMessageKey();\r\n```", "bodyText": "Align the method name with the other responses.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              long messageKey();\n          \n          \n            \n              long getMessageKey();", "bodyHTML": "<p dir=\"auto\">Align the method name with the other responses.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">long</span> <span class=\"x x-first x-last\">messageKey</span>();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">long</span> <span class=\"x x-first x-last\">getMessageKey</span>();</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-09-28T11:46:10Z", "path": "clients/java/src/main/java/io/zeebe/client/api/response/PublishMessageResponse.java", "diffHunk": "@@ -15,4 +15,12 @@\n  */\n package io.zeebe.client.api.response;\n \n-public interface PublishMessageResponse {}\n+public interface PublishMessageResponse {\n+\n+  /**\n+   * Returns the record key of the message that was published.\n+   *\n+   * @return record key of the message.\n+   */\n+  long messageKey();", "originalCommit": "15356a755b1f99988a837a9897d4980877596964", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5af68ae406a023710049b900991785c31be5ccdf", "url": "https://github.com/camunda-cloud/zeebe/commit/5af68ae406a023710049b900991785c31be5ccdf", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T06:44:35Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0ODY1MA==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496648650", "body": "```suggestion\r\n  public void shouldReturnTheMessageKey() {\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              public void shouldReturnNonZeroMessageKey() {\n          \n          \n            \n              public void shouldReturnTheMessageKey() {", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReturnNonZeroMessageKey</span>() {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">  <span class=\"pl-k\">public</span> <span class=\"pl-k\">void</span> <span class=\"x x-first x-last\">shouldReturnTheMessageKey</span>() {</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-09-29T11:40:48Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NTA3Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496655072", "body": "We can compare the response key with the record key on the log stream. \r\n\r\n```suggestion\r\n    final var messagePublished =\r\n        RecordingExporter.messageRecords(MessageIntent.PUBLISHED).getFirst();\r\n\r\n    assertThat(response.getMessageKey()).isEqualTo(messagePublished.getKey());\r\n```", "bodyText": "We can compare the response key with the record key on the log stream.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isNotZero();\n          \n          \n            \n                final var messagePublished =\n          \n          \n            \n                    RecordingExporter.messageRecords(MessageIntent.PUBLISHED).getFirst();\n          \n          \n            \n            \n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messagePublished.getKey());", "bodyHTML": "<p dir=\"auto\">We can compare the response key with the record key on the log stream.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"x x-first\">assertThat(response</span><span class=\"pl-k x\">.</span><span class=\"x\">getMessageKey())</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">isNotZero();</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first\">final</span><span class=\"x\"> </span><span class=\"pl-k x\">var</span><span class=\"x\"> messagePublished </span><span class=\"pl-k x x-last\">=</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">RecordingExporter</span><span class=\"pl-k\">.</span>messageRecords(<span class=\"pl-smi\">MessageIntent</span><span class=\"pl-c1\"><span class=\"pl-k\">.</span>PUBLISHED</span>)<span class=\"pl-k\">.</span>getFirst();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(response<span class=\"pl-k\">.</span>getMessageKey())<span class=\"pl-k\">.</span>isEqualTo(messagePublished<span class=\"pl-k\">.</span>getKey());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "saig0", "createdAt": "2020-09-29T11:52:57Z", "path": "qa/integration-tests/src/test/java/io/zeebe/broker/it/client/command/MessageCorrelationTest.java", "diffHunk": "@@ -174,4 +174,20 @@ public void shouldRejectMessageWithSameId() {\n         .hasMessageContaining(\n             \"Expected to publish a new message with id 'foo', but a message with that id was already published\");\n   }\n+\n+  @Test\n+  public void shouldReturnNonZeroMessageKey() {\n+    // when\n+    final PublishMessageResponse response =\n+        CLIENT_RULE\n+            .getClient()\n+            .newPublishMessageCommand()\n+            .messageName(MESSAGE_NAME)\n+            .correlationKey(correlationValue)\n+            .send()\n+            .join();\n+\n+    // then\n+    assertThat(response.getMessageKey()).isNotZero();", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY4Mzg0Mg==", "url": "https://github.com/camunda-cloud/zeebe/pull/5343#discussion_r496683842", "body": "Let's check that we return the correct key. \r\n\r\nFirst, we need to instrument the gateway:\r\n```\r\n    // given\r\n    final long messageKey = 123L;\r\n    gatewayService.onPublishMessageRequest(messageKey);\r\n```\r\n\r\nWhen we can check the response:\r\n```suggestion\r\n    assertThat(response.getMessageKey()).isEqualTo(messageKey);\r\n```\r\n\r\nIn `io.zeebe.client.util.RecordingGatewayService`, we need to add the new method to control the response:\r\n\r\n```\r\n  public void onPublishMessageRequest(final long key) {\r\n    addRequestHandler(\r\n        PublishMessageRequest.class,\r\n        request -> PublishMessageResponse.newBuilder().setKey(key).build());\r\n  }\r\n```", "bodyText": "Let's check that we return the correct key.\nFirst, we need to instrument the gateway:\n    // given\n    final long messageKey = 123L;\n    gatewayService.onPublishMessageRequest(messageKey);\n\nWhen we can check the response:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                assertThat(response.getMessageKey()).isZero();\n          \n          \n            \n                assertThat(response.getMessageKey()).isEqualTo(messageKey);\n          \n      \n    \n    \n  \n\nIn io.zeebe.client.util.RecordingGatewayService, we need to add the new method to control the response:\n  public void onPublishMessageRequest(final long key) {\n    addRequestHandler(\n        PublishMessageRequest.class,\n        request -> PublishMessageResponse.newBuilder().setKey(key).build());\n  }", "bodyHTML": "<p dir=\"auto\">Let's check that we return the correct key.</p>\n<p dir=\"auto\">First, we need to instrument the gateway:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"    // given\n    final long messageKey = 123L;\n    gatewayService.onPublishMessageRequest(messageKey);\"><pre><code>    // given\n    final long messageKey = 123L;\n    gatewayService.onPublishMessageRequest(messageKey);\n</code></pre></div>\n<p dir=\"auto\">When we can check the response:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    assertThat(response<span class=\"pl-k\">.</span>getMessageKey())<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isZero(</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    assertThat(response<span class=\"pl-k\">.</span>getMessageKey())<span class=\"pl-k\">.</span><span class=\"x x-first x-last\">isEqualTo(messageKey</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">In <code>io.zeebe.client.util.RecordingGatewayService</code>, we need to add the new method to control the response:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"  public void onPublishMessageRequest(final long key) {\n    addRequestHandler(\n        PublishMessageRequest.class,\n        request -&gt; PublishMessageResponse.newBuilder().setKey(key).build());\n  }\"><pre><code>  public void onPublishMessageRequest(final long key) {\n    addRequestHandler(\n        PublishMessageRequest.class,\n        request -&gt; PublishMessageResponse.newBuilder().setKey(key).build());\n  }\n</code></pre></div>", "author": "saig0", "createdAt": "2020-09-29T12:41:32Z", "path": "clients/java/src/test/java/io/zeebe/client/workflow/PublishMessageTest.java", "diffHunk": "@@ -34,21 +35,23 @@\n   @Test\n   public void shouldPublishMessage() {\n     // when\n-    client\n-        .newPublishMessageCommand()\n-        .messageName(\"name\")\n-        .correlationKey(\"key\")\n-        .timeToLive(Duration.ofDays(1))\n-        .messageId(\"theId\")\n-        .send()\n-        .join();\n+    final PublishMessageResponse response =\n+        client\n+            .newPublishMessageCommand()\n+            .messageName(\"name\")\n+            .correlationKey(\"key\")\n+            .timeToLive(Duration.ofDays(1))\n+            .messageId(\"theId\")\n+            .send()\n+            .join();\n \n     // then\n     final PublishMessageRequest request = gatewayService.getLastRequest();\n     assertThat(request.getName()).isEqualTo(\"name\");\n     assertThat(request.getCorrelationKey()).isEqualTo(\"key\");\n     assertThat(request.getMessageId()).isEqualTo(\"theId\");\n     assertThat(request.getTimeToLive()).isEqualTo(Duration.ofDays(1).toMillis());\n+    assertThat(response.getMessageKey()).isZero();", "originalCommit": "5af68ae406a023710049b900991785c31be5ccdf", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "url": "https://github.com/camunda-cloud/zeebe/commit/b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T13:24:25Z", "type": "commit"}, {"oid": "b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "url": "https://github.com/camunda-cloud/zeebe/commit/b707c42bd0de7e9fc79b6f099eed3ebaad33066f", "message": "feat(clients/go, clients/java): Add message key to the response of publish message", "committedDate": "2020-09-29T13:24:25Z", "type": "forcePushed"}]}