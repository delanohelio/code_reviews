{"pr_number": 6968, "pr_title": "Structural variant fixes for 3.2.0", "pr_author": "khzhu", "pr_createdAt": "2020-01-02T21:56:28Z", "pr_url": "https://github.com/cBioPortal/cbioportal/pull/6968", "timeline": [{"oid": "138efede738cd56d8a4da9423e6ac83369b4afbc", "url": "https://github.com/cBioPortal/cbioportal/commit/138efede738cd56d8a4da9423e6ac83369b4afbc", "message": "populate structural variant profile after importing mutation and fusion data", "committedDate": "2020-01-02T21:42:13Z", "type": "commit"}, {"oid": "57babf99549b6c763ed4bf7b6eac957eccd79d68", "url": "https://github.com/cBioPortal/cbioportal/commit/57babf99549b6c763ed4bf7b6eac957eccd79d68", "message": "fixing CI build error and correcting genetic profile counts for fusions", "committedDate": "2020-01-02T23:08:25Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r362920285", "body": "there is a comment right above this:\r\n\r\n```\r\n// Is there a separate fusion profile? -> false\r\n```\r\nthe test is now changed to actually check if a separate fusion profile exists, so that comment should prolly be updated if this is indeed what we want", "bodyText": "there is a comment right above this:\n// Is there a separate fusion profile? -> false\n\nthe test is now changed to actually check if a separate fusion profile exists, so that comment should prolly be updated if this is indeed what we want", "bodyHTML": "<p dir=\"auto\">there is a comment right above this:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"// Is there a separate fusion profile? -&gt; false\"><pre><code>// Is there a separate fusion profile? -&gt; false\n</code></pre></div>\n<p dir=\"auto\">the test is now changed to actually check if a separate fusion profile exists, so that comment should prolly be updated if this is indeed what we want</p>", "author": "inodb", "createdAt": "2020-01-03T18:53:27Z", "path": "core/src/test/java/org/mskcc/cbio/portal/scripts/TestIntegrationTest.java", "diffHunk": "@@ -184,7 +184,7 @@ public void testLoadStudyEs0() throws Throwable {\n             geneticProfileStableIds.add(\"study_es_0_fusion\");", "originalCommit": "57babf99549b6c763ed4bf7b6eac957eccd79d68", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1ODQ5Nw==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363058497", "bodyText": "hi @inodb, thank you for the review. Let me see if I can explain well.\nSince fusions are currently stored in the mutation_event table, fusions have to use the mutation profile in order to get the data inserted into the database, which was okay during the time when we did not have the fusion gene table in the summary view. But now, since we added the fusion gene table in the summary view, it always shows up regardless if a study has fusion data or not, because the frontend uses genetic profiles to control the visibility of gene tables (please see issue reported by Tali). To fix the issue, we decided to give fusion data its own genetic profile, which is a STRUCTURAL_VARIANT genetic type profile with a _fusion stableId\nmysql> select distinct genetic_alteration_type from genetic_profile;\n+-------------------------+\n| genetic_alteration_type |\n+-------------------------+\n| COPY_NUMBER_ALTERATION  |\n| STRUCTURAL_VARIANT      |\n| MUTATION_EXTENDED       |\n| PROTEIN_LEVEL           |\n| METHYLATION             |\n| MRNA_EXPRESSION         |\n+-------------------------+\n6 rows in set (0.00 sec)\n\nmysql> select * from genetic_profile where stable_id like '%_fusion';\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n| GENETIC_PROFILE_ID | STABLE_ID              | CANCER_STUDY_ID | GENETIC_ALTERATION_TYPE | DATATYPE | NAME    | DESCRIPTION | SHOW_PROFILE_IN_ANALYSIS_TAB | PIVOT_THRESHOLD | SORT_ORDER | GENERIC_ASSAY_TYPE |\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n|                 45 | msk_impact_2017_fusion |              16 | STRUCTURAL_VARIANT      | FUSION   | Fusions | Fusions.    |                            1 |            NULL | NULL       | NULL               |\n|                122 | breast_msk_2018_fusion |              39 | STRUCTURAL_VARIANT      | FUSION   | Fusions | Fusions.    |                            1 |            NULL | NULL       | NULL               |\n+--------------------+------------------------+-----------------+-------------------------+----------+---------+-------------+------------------------------+-----------------+------------+--------------------+\n2 rows in set (0.00 sec)", "author": "khzhu", "createdAt": "2020-01-04T22:31:19Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzA1OTExNw==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363059117", "bodyText": "if you take a look at the migration script we used _structural_variants STABLE_ID for fusion data (we should use _fusion instead to be consistent). The STABLE_ID does not really matter, what is important is that we give fusion data a STRUCTURAL_VARIANT type genetic profile. I used _fusion and structural_variants STABLE_ID to distinguish old style fusion data and new structural variant data. For instance, if we query genetic profiles for msk-impact-2017, which is the only study that has both fusions and structural variants, we will get\nmysql> select cs.cancer_study_identifier, gp.stable_id, gp.genetic_alteration_type, gp.datatype, gp.name from genetic_profile gp join cancer_study cs on gp.CANCER_STUDY_ID = cs.CANCER_STUDY_ID where gp.CANCER_STUDY_ID = 16 and GENETIC_ALTERATION_TYPE = 'STRUCTURAL_VARIANT';\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n| cancer_study_identifier | stable_id                           | genetic_alteration_type | datatype | name                  |\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n| msk_impact_2017         | msk_impact_2017_structural_variants | STRUCTURAL_VARIANT      | SV       | mskimpact2017 SV Data |\n| msk_impact_2017         | msk_impact_2017_fusion              | STRUCTURAL_VARIANT      | FUSION   | Fusions               |\n+-------------------------+-------------------------------------+-------------------------+----------+-----------------------+\n2 rows in set (0.00 sec)", "author": "khzhu", "createdAt": "2020-01-04T22:51:06Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMTI4MQ==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363811281", "bodyText": "Thanks @khzhu - that explains a lot", "author": "inodb", "createdAt": "2020-01-07T15:44:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjkyMDI4NQ=="}], "type": "inlineReview"}, {"oid": "19c6402aad61f9a926f8a29ff8bbf2446af44c87", "url": "https://github.com/cBioPortal/cbioportal/commit/19c6402aad61f9a926f8a29ff8bbf2446af44c87", "message": "solve the fusion case list backfilling issue by using existing Sample service to mark samples profiled by Fusion and supports any studies with/without a _sv case list", "committedDate": "2020-01-04T21:59:22Z", "type": "commit"}, {"oid": "29990cb05e7a80f2fac52f3df0e2e09f574b206d", "url": "https://github.com/cBioPortal/cbioportal/commit/29990cb05e7a80f2fac52f3df0e2e09f574b206d", "message": "fixing CI build null point exception", "committedDate": "2020-01-05T00:05:40Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDc2MA==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363810760", "body": "I guess this relies on this part? https://github.com/cBioPortal/cbioportal/blob/7ae3828ac87d2f88703d8f9f3f60d5d756085a4b/core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java#L290-L301\r\n\r\nit's a little funky but I guess we can remove all the `FUSION` conditional once we remove `FUSION` data and only have `STRUCTURAL_VARIANT` GeneticAlterationType:\r\n\r\nhttps://github.com/cBioPortal/cbioportal/blob/master/core/src/main/java/org/mskcc/cbio/portal/model/GeneticAlterationType.java#L42-L43", "bodyText": "I guess this relies on this part? \n  \n    \n      cbioportal/core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java\n    \n    \n        Lines 290 to 301\n      in\n      7ae3828\n    \n    \n    \n    \n\n        \n          \n           // Workaround to import fusion data as mutation genetic profile. This way fusion meta file can contain 'stable_id: fusion'. \n        \n\n        \n          \n           // The validator will check for 'stable_id: fusion', and this section in the importer \n        \n\n        \n          \n           // will convert it to 'stable_id: mutations'. See https://github.com/cBioPortal/cbioportal/pull/2506 \n        \n\n        \n          \n           // TODO: This should be removed when other parts of cBioPortal have implemented support for a separate fusion profile\". \n        \n\n        \n          \n           if (stableId.equals(cancerStudyIdentifier + \"_fusion\")) { \n        \n\n        \n          \n               String newStableId = cancerStudyIdentifier + \"_mutations\"; \n        \n\n        \n          \n               GeneticProfile existingGeneticProfile = DaoGeneticProfile.getGeneticProfileByStableId(newStableId); \n        \n\n        \n          \n               if (existingGeneticProfile == null) { \n        \n\n        \n          \n                   throw new IllegalArgumentException(\"Wrong order: FUSION data should be loaded after MUTATION data\"); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               stableId = newStableId; \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nit's a little funky but I guess we can remove all the FUSION conditional once we remove FUSION data and only have STRUCTURAL_VARIANT GeneticAlterationType:\nhttps://github.com/cBioPortal/cbioportal/blob/master/core/src/main/java/org/mskcc/cbio/portal/model/GeneticAlterationType.java#L42-L43", "bodyHTML": "<p dir=\"auto\">I guess this relies on this part? <div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/cBioPortal/cbioportal/blob/7ae3828ac87d2f88703d8f9f3f60d5d756085a4b/core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java#L290-L301\">cbioportal/core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n        Lines 290 to 301\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/cBioPortal/cbioportal/commit/7ae3828ac87d2f88703d8f9f3f60d5d756085a4b\">7ae3828</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L290\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"290\"></td>\n          <td id=\"LC290\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> Workaround to import fusion data as mutation genetic profile. This way fusion meta file can contain 'stable_id: fusion'.</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L291\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"291\"></td>\n          <td id=\"LC291\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> The validator will check for 'stable_id: fusion', and this section in the importer</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L292\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"292\"></td>\n          <td id=\"LC292\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> will convert it to 'stable_id: mutations'. See https://github.com/cBioPortal/cbioportal/pull/2506</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L293\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"293\"></td>\n          <td id=\"LC293\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-c\"><span class=\"pl-c\">//</span> TODO: This should be removed when other parts of cBioPortal have implemented support for a separate fusion profile\".</span> </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L294\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"294\"></td>\n          <td id=\"LC294\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">if</span> (stableId<span class=\"pl-k\">.</span>equals(cancerStudyIdentifier <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_fusion<span class=\"pl-pds\">\"</span></span>)) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L295\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"295\"></td>\n          <td id=\"LC295\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">String</span> newStableId <span class=\"pl-k\">=</span> cancerStudyIdentifier <span class=\"pl-k\">+</span> <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>_mutations<span class=\"pl-pds\">\"</span></span>; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L296\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"296\"></td>\n          <td id=\"LC296\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-smi\">GeneticProfile</span> existingGeneticProfile <span class=\"pl-k\">=</span> <span class=\"pl-smi\">DaoGeneticProfile</span><span class=\"pl-k\">.</span>getGeneticProfileByStableId(newStableId); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L297\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"297\"></td>\n          <td id=\"LC297\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     <span class=\"pl-k\">if</span> (existingGeneticProfile <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>) { </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L298\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"298\"></td>\n          <td id=\"LC298\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">         <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">IllegalArgumentException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Wrong order: FUSION data should be loaded after MUTATION data<span class=\"pl-pds\">\"</span></span>); </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L299\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"299\"></td>\n          <td id=\"LC299\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     } </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L300\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"300\"></td>\n          <td id=\"LC300\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\">     stableId <span class=\"pl-k\">=</span> newStableId; </td>\n        </tr>\n\n        <tr class=\"border-0\">\n          <td id=\"L301\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"301\"></td>\n          <td id=\"LC301\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> } </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>\n<p dir=\"auto\">it's a little funky but I guess we can remove all the <code>FUSION</code> conditional once we remove <code>FUSION</code> data and only have <code>STRUCTURAL_VARIANT</code> GeneticAlterationType:</p>\n<p dir=\"auto\"><a href=\"https://github.com/cBioPortal/cbioportal/blob/master/core/src/main/java/org/mskcc/cbio/portal/model/GeneticAlterationType.java#L42-L43\">https://github.com/cBioPortal/cbioportal/blob/master/core/src/main/java/org/mskcc/cbio/portal/model/GeneticAlterationType.java#L42-L43</a></p>", "author": "inodb", "createdAt": "2020-01-07T15:43:36Z", "path": "core/src/main/java/org/mskcc/cbio/portal/util/GeneticProfileReader.java", "diffHunk": "@@ -82,6 +82,12 @@ public static GeneticProfile loadGeneticProfile(File file) throws IOException, D\n                throw new RuntimeException(\"Error: genetic_profile record found with same Stable ID as the one used in your data:  \"\n                        + existingGeneticProfile.getStableId() + \". Remove the existing genetic_profile record first.\");\n             } else if (geneticProfile.getDatatype().equals(\"FUSION\")) {\n+                // populate the structural variant genetic profile for fusions\n+                GeneticProfile gp = new GeneticProfile(geneticProfile);\n+                gp.setGeneticAlterationType(GeneticAlterationType.STRUCTURAL_VARIANT);\n+                gp.setStableId(gp.getStableId().replace(\"mutations\",\"fusion\"));", "originalCommit": "29990cb05e7a80f2fac52f3df0e2e09f574b206d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg1NzA1Ng==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363857056", "bodyText": "That is right, @inodb, till we completely deprecate the Fusion genetic type, it might take a while.", "author": "khzhu", "createdAt": "2020-01-07T17:17:41Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgxMDc2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823260", "body": "might be good to have a comment here. Something like:\r\n\r\n```\r\n/*\r\nTODO: Eventually all studies with STRUCTURAL_VARIANT data should have case lists, so there should always be an entry in `structuralVariantSampleIdsMap`. This case is to support old `FUSION` data in the mutations table that don't have case lists. In that case we assume any sample that has been sequenced to have been profiled for fusions as well\r\n*/\r\n```\r\nMakes sense?", "bodyText": "might be good to have a comment here. Something like:\n/*\nTODO: Eventually all studies with STRUCTURAL_VARIANT data should have case lists, so there should always be an entry in `structuralVariantSampleIdsMap`. This case is to support old `FUSION` data in the mutations table that don't have case lists. In that case we assume any sample that has been sequenced to have been profiled for fusions as well\n*/\n\nMakes sense?", "bodyHTML": "<p dir=\"auto\">might be good to have a comment here. Something like:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"/*\nTODO: Eventually all studies with STRUCTURAL_VARIANT data should have case lists, so there should always be an entry in `structuralVariantSampleIdsMap`. This case is to support old `FUSION` data in the mutations table that don't have case lists. In that case we assume any sample that has been sequenced to have been profiled for fusions as well\n*/\"><pre><code>/*\nTODO: Eventually all studies with STRUCTURAL_VARIANT data should have case lists, so there should always be an entry in `structuralVariantSampleIdsMap`. This case is to support old `FUSION` data in the mutations table that don't have case lists. In that case we assume any sample that has been sequenced to have been profiled for fusions as well\n*/\n</code></pre></div>\n<p dir=\"auto\">Makes sense?</p>", "author": "inodb", "createdAt": "2020-01-07T16:07:58Z", "path": "service/src/main/java/org/cbioportal/service/impl/SampleServiceImpl.java", "diffHunk": "@@ -193,13 +201,17 @@ private void processSamples(List<Sample> samples, String projection) {\n             \n             Set<Integer> samplesWithCopyNumberSegMap = new HashSet<>();\n             samplesWithCopyNumberSegMap.addAll(samplesWithCopyNumberSeg);\n-           \n+\n             samples.forEach(sample -> {\n                 sample.setSequenced(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier())\n                     .contains(sample.getStableId()));\n                 sample.setCopyNumberSegmentPresent(samplesWithCopyNumberSegMap.contains(sample.getInternalId()));\n-                if (!structuralVariantSampleIdsMap.isEmpty()) {\n-                    sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                if (studiesProfiledWithSVs.contains(sample.getCancerStudyIdentifier())) {\n+                    if (!structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).isEmpty()) {\n+                        sample.setProfiledForFusions(structuralVariantSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    } else {\n+                        sample.setProfiledForFusions(sequencedSampleIdsMap.get(sample.getCancerStudyIdentifier()).contains(sample.getStableId()));\n+                    }", "originalCommit": "29990cb05e7a80f2fac52f3df0e2e09f574b206d", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzgzNw==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823837", "bodyText": "It would be good to create an issue as well pointing to these various parts in the code where FUSION data should be cleaned up. I think by having FUSION specifically as a comment it will be easy to find for whoever tries to remove all FUSION related parts from the code.", "author": "inodb", "createdAt": "2020-01-07T16:09:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mzg3Mzc1Mg==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363873752", "bodyText": "good idea, @inodb!", "author": "khzhu", "createdAt": "2020-01-07T17:57:07Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzI2MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzgyMzk4NA==", "url": "https://github.com/cBioPortal/cbioportal/pull/6968#discussion_r363823984", "body": "nice test", "bodyText": "nice test", "bodyHTML": "<p dir=\"auto\">nice test</p>", "author": "inodb", "createdAt": "2020-01-07T16:09:31Z", "path": "service/src/test/java/org/cbioportal/service/impl/SampleServiceImplTest.java", "diffHunk": "@@ -259,6 +263,15 @@ public void fetchSamplesDetailed() throws Exception {\n             .thenReturn(new ArrayList<>());\n         Mockito.when(copyNumberSegmentRepository.fetchSamplesWithCopyNumberSegments(Mockito.anyListOf(String.class),\n             Mockito.anyListOf(String.class), Mockito.anyString())).thenReturn(expectedInternalIdList);\n+\n+        List<MolecularProfile> expectedMolecularProfileList = new ArrayList<>();\n+        MolecularProfile molecularProfile = new MolecularProfile();\n+        molecularProfile.setCancerStudyIdentifier(STUDY_ID);\n+        molecularProfile.setMolecularAlterationType(MolecularProfile.MolecularAlterationType.STRUCTURAL_VARIANT);\n+        expectedMolecularProfileList.add(molecularProfile);\n+\n+        Mockito.when(molecularProfileRepository.getMolecularProfilesInStudies(Arrays.asList(STUDY_ID), \"DETAILED\"))\n+            .thenReturn(expectedMolecularProfileList);", "originalCommit": "29990cb05e7a80f2fac52f3df0e2e09f574b206d", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "b32f063df995bba691aa529f24628431b25025cf", "url": "https://github.com/cBioPortal/cbioportal/commit/b32f063df995bba691aa529f24628431b25025cf", "message": "removing backfilling in case lists from migration code, as sample service has been updated to support studies with a case list", "committedDate": "2020-01-13T17:10:12Z", "type": "commit"}, {"oid": "3519f3575037a47329ea8631e772c660d6ac4a62", "url": "https://github.com/cBioPortal/cbioportal/commit/3519f3575037a47329ea8631e772c660d6ac4a62", "message": "add comment about missing sv case lists", "committedDate": "2020-01-13T19:02:32Z", "type": "commit"}]}