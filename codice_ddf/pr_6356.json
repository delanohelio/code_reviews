{"pr_number": 6356, "pr_title": "Address some miscellaneous SonarQube findings", "pr_author": "emmberk", "pr_createdAt": "2020-09-29T23:52:13Z", "pr_url": "https://github.com/codice/ddf/pull/6356", "timeline": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1NzE0Mg==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497157142", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXqAJo2FoAtkfmjZ&open=AVspKXqAJo2FoAtkfmjZ\r\n![image](https://user-images.githubusercontent.com/8041246/94628349-9f7a8200-0274-11eb-9e47-b9b108cb31f1.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXqAJo2FoAtkfmjZ&open=AVspKXqAJo2FoAtkfmjZ", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXqAJo2FoAtkfmjZ&amp;open=AVspKXqAJo2FoAtkfmjZ\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXqAJo2FoAtkfmjZ&amp;open=AVspKXqAJo2FoAtkfmjZ</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628349-9f7a8200-0274-11eb-9e47-b9b108cb31f1.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628349-9f7a8200-0274-11eb-9e47-b9b108cb31f1.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-29T23:55:57Z", "path": "catalog/core/catalog-core-camelcomponent/src/main/java/ddf/camel/component/catalog/CatalogEndpoint.java", "diffHunk": "@@ -204,4 +209,26 @@ public boolean isSingleton() {\n   public boolean isMultipleConsumersSupported() {\n     return true;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1NzcyNw==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497157727", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AWmvBXVx5QE9aC-CxDrF&open=AWmvBXVx5QE9aC-CxDrF\r\n![image](https://user-images.githubusercontent.com/8041246/94628407-c042d780-0274-11eb-8b65-f2ff3742e645.png)\r\n![image](https://user-images.githubusercontent.com/8041246/94628443-df416980-0274-11eb-9b6b-f947807e388b.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AWmvBXVx5QE9aC-CxDrF&open=AWmvBXVx5QE9aC-CxDrF", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AWmvBXVx5QE9aC-CxDrF&amp;open=AWmvBXVx5QE9aC-CxDrF\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AWmvBXVx5QE9aC-CxDrF&amp;open=AWmvBXVx5QE9aC-CxDrF</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628407-c042d780-0274-11eb-8b65-f2ff3742e645.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628407-c042d780-0274-11eb-8b65-f2ff3742e645.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628443-df416980-0274-11eb-9b6b-f947807e388b.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628443-df416980-0274-11eb-9b6b-f947807e388b.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-29T23:56:48Z", "path": "catalog/core/catalog-core-directorymonitor/src/main/java/org/codice/ddf/catalog/content/monitor/AsyncFileEntry.java", "diffHunk": "@@ -116,8 +117,10 @@ public boolean checkNetwork() {\n       return snapExist();\n     }\n \n-    while (rootParent.getParent().isPresent()) {\n-      rootParent = rootParent.getParent().get();\n+    Optional<AsyncFileEntry> nextParent = rootParent.getParent();\n+    while (nextParent.isPresent()) {\n+      rootParent = nextParent.get();\n+      nextParent = rootParent.getParent();", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1OTI0OA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497159248", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgG&open=AVspKXhRJo2FoAtkfmgG\r\n![image](https://user-images.githubusercontent.com/8041246/94628512-05ffa000-0275-11eb-92a2-9edd32c3c47a.png)\r\nhttps://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgF&open=AVspKXhRJo2FoAtkfmgF\r\n![image](https://user-images.githubusercontent.com/8041246/94628527-144dbc00-0275-11eb-9feb-647908c1ab9a.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgG&open=AVspKXhRJo2FoAtkfmgG\n\nhttps://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgF&open=AVspKXhRJo2FoAtkfmgF", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXhRJo2FoAtkfmgG&amp;open=AVspKXhRJo2FoAtkfmgG\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXhRJo2FoAtkfmgG&amp;open=AVspKXhRJo2FoAtkfmgG</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628512-05ffa000-0275-11eb-92a2-9edd32c3c47a.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628512-05ffa000-0275-11eb-92a2-9edd32c3c47a.png\" alt=\"image\" style=\"max-width: 100%;\"></a><br>\n<a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXhRJo2FoAtkfmgF&amp;open=AVspKXhRJo2FoAtkfmgF\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXhRJo2FoAtkfmgF&amp;open=AVspKXhRJo2FoAtkfmgF</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628527-144dbc00-0275-11eb-9feb-647908c1ab9a.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628527-144dbc00-0275-11eb-9feb-647908c1ab9a.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-29T23:59:10Z", "path": "catalog/core/catalog-core-validator/src/main/java/ddf/catalog/validation/impl/validator/RangeValidator.java", "diffHunk": "@@ -74,9 +74,9 @@ public RangeValidator(final BigDecimal min, final BigDecimal max, final BigDecim\n     Preconditions.checkArgument(max != null, \"The maximum cannot be null.\");\n     Preconditions.checkArgument(epsilon != null, \"The epsilon cannot be null.\");\n     Preconditions.checkArgument(\n-        min.compareTo(max) == -1, \"The maximum must be greater than the minimum.\");\n+        min.compareTo(max) < 0, \"The maximum must be greater than the minimum.\");\n     Preconditions.checkArgument(\n-        epsilon.compareTo(BigDecimal.ZERO) == 1, \"The epsilon must be greater than 0.\");\n+        epsilon.compareTo(BigDecimal.ZERO) > 0, \"The epsilon must be greater than 0.\");", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1OTc2Mg==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497159762", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKYj4Jo2FoAtkfm6O&open=AVspKYj4Jo2FoAtkfm6O\r\n![image](https://user-images.githubusercontent.com/8041246/94628580-30515d80-0275-11eb-8406-34b1a60a64b0.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKYj4Jo2FoAtkfm6O&open=AVspKYj4Jo2FoAtkfm6O", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKYj4Jo2FoAtkfm6O&amp;open=AVspKYj4Jo2FoAtkfm6O\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKYj4Jo2FoAtkfm6O&amp;open=AVspKYj4Jo2FoAtkfm6O</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628580-30515d80-0275-11eb-8406-34b1a60a64b0.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628580-30515d80-0275-11eb-8406-34b1a60a64b0.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-29T23:59:54Z", "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -390,4 +391,40 @@ public boolean isQueryable(String propertyName) {\n   public List<String> getTemporalProperties() {\n     return temporalProperties;\n   }\n+\n+  public Set<String> getNonQueryableProperties() {\n+    return Collections.unmodifiableSet(nonQueryableProperties);\n+  }\n+\n+  public String getGmlNamespace() {\n+    return gmlNamespace;\n+  }\n+\n+  public XmlSchema getSchema() {\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MDExNA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497160114", "body": "![image](https://user-images.githubusercontent.com/8041246/94628604-42cb9700-0275-11eb-9fc7-ccf16bcb2457.png)", "bodyText": "", "bodyHTML": "<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628604-42cb9700-0275-11eb-9fc7-ccf16bcb2457.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628604-42cb9700-0275-11eb-9fc7-ccf16bcb2457.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-30T00:00:25Z", "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -305,7 +306,7 @@ private void mapSchemaElement(final XmlSchemaElement element, final QName elemen\n     properties.add(elementName);\n   }\n \n-  private Boolean processGmlType(XmlSchemaElement xmlSchemaElement) {\n+  private boolean processGmlType(XmlSchemaElement xmlSchemaElement) {", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTY3NQ==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497161675", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AV2DU_Zhb85Ws0eWsPPC&open=AV2DU_Zhb85Ws0eWsPPC&types=SECURITY_HOTSPOT\r\n![image](https://user-images.githubusercontent.com/8041246/94628725-963de500-0275-11eb-9b37-9c46a902bf67.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AV2DU_Zhb85Ws0eWsPPC&open=AV2DU_Zhb85Ws0eWsPPC&types=SECURITY_HOTSPOT", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AV2DU_Zhb85Ws0eWsPPC&amp;open=AV2DU_Zhb85Ws0eWsPPC&amp;types=SECURITY_HOTSPOT\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AV2DU_Zhb85Ws0eWsPPC&amp;open=AV2DU_Zhb85Ws0eWsPPC&amp;types=SECURITY_HOTSPOT</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628725-963de500-0275-11eb-9b37-9c46a902bf67.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628725-963de500-0275-11eb-9b37-9c46a902bf67.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-30T00:02:49Z", "path": "platform/admin/core/admin-core-insecuredefaults/src/main/java/org/codice/ddf/admin/insecure/defaults/service/InsecureDefaultsCollector.java", "diffHunk": "@@ -27,6 +27,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@SuppressWarnings(\"java:S2068\" /* Intentially hard-coding insecure credentials */)", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjI0MA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497162240", "body": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXKRJo2FoAtkfmab&open=AVspKXKRJo2FoAtkfmab&types=SECURITY_HOTSPOT\r\n![image](https://user-images.githubusercontent.com/8041246/94628761-b53c7700-0275-11eb-9ffa-c015b07a9f48.png)", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXKRJo2FoAtkfmab&open=AVspKXKRJo2FoAtkfmab&types=SECURITY_HOTSPOT", "bodyHTML": "<p dir=\"auto\"><a href=\"https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXKRJo2FoAtkfmab&amp;open=AVspKXKRJo2FoAtkfmab&amp;types=SECURITY_HOTSPOT\" rel=\"nofollow\">https://sonarcloud.io/project/issues?id=ddf&amp;issues=AVspKXKRJo2FoAtkfmab&amp;open=AVspKXKRJo2FoAtkfmab&amp;types=SECURITY_HOTSPOT</a><br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/8041246/94628761-b53c7700-0275-11eb-9ffa-c015b07a9f48.png\"><img src=\"https://user-images.githubusercontent.com/8041246/94628761-b53c7700-0275-11eb-9ffa-c015b07a9f48.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>", "author": "emmberk", "createdAt": "2020-09-30T00:03:40Z", "path": "platform/admin/core/admin-core-insecuredefaults/src/main/java/org/codice/ddf/admin/insecure/defaults/service/KeystoreValidator.java", "diffHunk": "@@ -35,6 +35,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@SuppressWarnings(\"java:S2068\" /* Log message about a password */)", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MzkzNA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497163934", "body": "\u2753 Are these the right fields to include?", "bodyText": "\u2753 Are these the right fields to include?", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"question\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2753.png\">\u2753</g-emoji> Are these the right fields to include?</p>", "author": "emmberk", "createdAt": "2020-09-30T00:06:05Z", "path": "catalog/core/catalog-core-camelcomponent/src/main/java/ddf/camel/component/catalog/CatalogEndpoint.java", "diffHunk": "@@ -204,4 +209,26 @@ public boolean isSingleton() {\n   public boolean isMultipleConsumersSupported() {\n     return true;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof CatalogEndpoint)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    CatalogEndpoint that = (CatalogEndpoint) o;\n+    return transformerId.equals(that.getTransformerId())\n+        && contextPath.equals(that.getContextPath())\n+        && mimeType.equals(that.getMimeType());", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5MjI5MA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497692290", "bodyText": "That's what I would have done \ud83d\udc4d", "author": "bakejeyner", "createdAt": "2020-09-30T17:45:46Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MzkzNA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497164128", "body": "\u2753 Are these the right fields to include?", "bodyText": "\u2753 Are these the right fields to include?", "bodyHTML": "<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"question\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2753.png\">\u2753</g-emoji> Are these the right fields to include?</p>", "author": "emmberk", "createdAt": "2020-09-30T00:06:20Z", "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -390,4 +391,40 @@ public boolean isQueryable(String propertyName) {\n   public List<String> getTemporalProperties() {\n     return temporalProperties;\n   }\n+\n+  public Set<String> getNonQueryableProperties() {\n+    return Collections.unmodifiableSet(nonQueryableProperties);\n+  }\n+\n+  public String getGmlNamespace() {\n+    return gmlNamespace;\n+  }\n+\n+  public XmlSchema getSchema() {\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof FeatureMetacardType)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    FeatureMetacardType that = (FeatureMetacardType) o;\n+    return featureType.equals(that.getFeatureType())\n+        && nonQueryableProperties.equals(that.getNonQueryableProperties())\n+        && gmlNamespace.equals(that.getGmlNamespace())\n+        && schema.equals(that.getSchema());", "originalCommit": "941d91b2034d23d269fba4add75821f60fd21ce8", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5NjI3OQ==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497696279", "bodyText": "Personally I would have included all of the fields:\nproperties\ntextualProperties\ngmlProperties\ntemporalProperties\nfeatureType\nnonQueryableProperties\ngmlNamespace\nschema", "author": "bakejeyner", "createdAt": "2020-09-30T17:52:45Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc3Mzg1MA==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497773850", "bodyText": "Looks like we populate the properties, textualProperties, gmlProperties, and temporalProperties from the schema, so I think it makes to just check the schema so long as equality guarantees that the above also are equal. Do you know if that's guaranteed?", "author": "SmithJosh", "createdAt": "2020-09-30T20:15:23Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg1MjI5Mw==", "url": "https://github.com/codice/ddf/pull/6356#discussion_r508852293", "bodyText": "I don't know if it's guaranteed \ud83e\udd37\u200d\u2640\ufe0f I'm going to stick with this for now because it's low risk.", "author": "emmberk", "createdAt": "2020-10-20T21:31:04Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA=="}], "type": "inlineReview"}, {"oid": "23a95e3ed9bf0de1d6a167f13f6753f4db87e7ec", "url": "https://github.com/codice/ddf/commit/23a95e3ed9bf0de1d6a167f13f6753f4db87e7ec", "message": "Address some miscellaneous SonarQube findings", "committedDate": "2020-10-20T21:46:08Z", "type": "commit"}]}