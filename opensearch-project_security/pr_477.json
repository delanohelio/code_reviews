{"pr_number": 477, "pr_title": "Adding metadata_body to SAML config", "pr_author": "debjanibnrj", "pr_createdAt": "2020-05-28T21:46:09Z", "pr_url": "https://github.com/opensearch-project/security/pull/477", "timeline": [{"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "message": "Adding metadata_body to SAML config", "committedDate": "2020-05-28T22:40:05Z", "type": "commit"}, {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "message": "Adding metadata_body to SAML config", "committedDate": "2020-05-28T22:40:05Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5Njk4Ng==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432196986", "body": "Does this ID needs to be different every time it is initialized? ", "bodyText": "Does this ID needs to be different every time it is initialized?", "bodyHTML": "<p dir=\"auto\">Does this ID needs to be different every time it is initialized?</p>", "author": "palashhedau", "createdAt": "2020-05-29T00:37:44Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjU0ODI1Ng==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432548256", "bodyText": "Was following the format of https://github.com/opendistro-for-elasticsearch/security/blob/master/src/main/java/com/amazon/dlic/auth/http/saml/SamlHTTPMetadataResolver.java#L40", "author": "debjanibnrj", "createdAt": "2020-05-29T15:04:18Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5Njk4Ng=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyOTgyMA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432729820", "bodyText": "Consider moving common initialization to createMetadataResolver()", "author": "vrozov", "createdAt": "2020-05-29T20:53:21Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE5Njk4Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMDQ5Nw==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432200497", "body": "nit: indentation", "bodyText": "nit: indentation", "bodyHTML": "<p dir=\"auto\">nit: indentation</p>", "author": "palashhedau", "createdAt": "2020-05-29T00:51:27Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -104,11 +107,11 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n                 throw new Exception(\"kibana_url is unconfigured\");\n             }\n \n-            if (idpMetadataUrl == null && idpMetadataFile == null) {\n-                throw new Exception(\"idp.metadata_url and idp.metadata_file are unconfigured\");\n+            if (idpMetadataUrl == null && idpMetadataFile == null && idpMetadataBody == null) {\n+                throw new Exception(\"idp.metadata_url, idp.metadata_file and idpMetadataBody are unconfigured\");\n             }\n \n-            this.metadataResolver = createMetadataResolver(settings, configPath);\n+             this.metadataResolver = createMetadataResolver(settings, configPath);", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMDk5NA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432200994", "body": "twice \"e\" while logging?", "bodyText": "twice \"e\" while logging?", "bodyHTML": "<p dir=\"auto\">twice \"e\" while logging?</p>", "author": "palashhedau", "createdAt": "2020-05-29T00:53:25Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {\n+            log.error(\"Error while parsing SAML Metadata Body \"+ e, e);", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMTQwOA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432201408", "body": "not sure we are adding roles. Will have to confirm ", "bodyText": "not sure we are adding roles. Will have to confirm", "bodyHTML": "<p dir=\"auto\">not sure we are adding roles. Will have to confirm</p>", "author": "palashhedau", "createdAt": "2020-05-29T00:55:08Z", "path": "src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java", "diffHunk": "@@ -151,6 +152,63 @@ public void basicTest() throws Exception {\n         Assert.assertEquals(\"horst\", jwt.getClaim(\"sub\"));\n     }\n \n+    @Test\n+    public void testMetadataBody() throws Exception {\n+        mockSamlIdpServer.setSignResponses(true);\n+        mockSamlIdpServer.loadSigningKeys(\"saml/kirk-keystore.jks\", \"kirk\");\n+        mockSamlIdpServer.setAuthenticateUser(\"horst\");\n+        mockSamlIdpServer.setEndpointQueryString(null);\n+\n+        // Note: We need to replace endpoint with mockSamlIdpServer endpoint\n+        final String metadataBody = FileHelper.loadFile(\"saml/metadata.xml\")\n+                                        .replaceAll(\"http://localhost:33667/\", mockSamlIdpServer.getMetadataUri());\n+\n+        Settings settings = Settings.builder().put(\"idp.metadata_body\", metadataBody)\n+            .put(\"kibana_url\", \"http://wherever\")\n+            .put(\"idp.entity_id\", mockSamlIdpServer.getIdpEntityId())\n+            .put(\"exchange_key\", \"abc\").put(\"roles_key\", \"roles\").put(\"path.home\", \".\").build();", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4NDA2MQ==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432884061", "bodyText": "Was following the same Settings as other tests in this file -\nhttps://github.com/opendistro-for-elasticsearch/security/blob/master/src/test/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticatorTest.java#L125-L127", "author": "debjanibnrj", "createdAt": "2020-05-30T20:17:33Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjIwMTQwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDI4OA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432704288", "body": "avoid throwing `Exception`, it should be either checked or run-time (preferred) Exception.", "bodyText": "avoid throwing Exception, it should be either checked or run-time (preferred) Exception.", "bodyHTML": "<p dir=\"auto\">avoid throwing <code>Exception</code>, it should be either checked or run-time (preferred) Exception.</p>", "author": "vrozov", "createdAt": "2020-05-29T19:53:02Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -76,7 +78,7 @@\n     private HTTPJwtAuthenticator httpJwtAuthenticator;\n     private Settings jwtSettings;\n \n-    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n+    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) throws Exception {", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg4MzY4NA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432883684", "bodyText": "I would prefer some exception/error to be thrown if the XML entered by the user is invalid. If I make this a checked/runtime exception I don't want it to silently fail.", "author": "debjanibnrj", "createdAt": "2020-05-30T20:14:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNDI4OA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcwNjA3MA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432706070", "body": "Consider \"One of idp.metadata_url, idp.metadata_file or idp.metadata_body must be configured\".", "bodyText": "Consider \"One of idp.metadata_url, idp.metadata_file or idp.metadata_body must be configured\".", "bodyHTML": "<p dir=\"auto\">Consider \"One of idp.metadata_url, idp.metadata_file or idp.metadata_body must be configured\".</p>", "author": "vrozov", "createdAt": "2020-05-29T19:56:57Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -104,11 +107,11 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n                 throw new Exception(\"kibana_url is unconfigured\");\n             }\n \n-            if (idpMetadataUrl == null && idpMetadataFile == null) {\n-                throw new Exception(\"idp.metadata_url and idp.metadata_file are unconfigured\");\n+            if (idpMetadataUrl == null && idpMetadataFile == null && idpMetadataBody == null) {\n+                throw new Exception(\"idp.metadata_url, idp.metadata_file and idpMetadataBody are unconfigured\");", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcxOTk2OA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432719968", "body": "```suggestion\r\n        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\r\n        if (idpMetadataUrl != null) {\r\n            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (idpMetadataUrl != null) {\n          \n          \n            \n                    final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n          \n          \n            \n                    if (idpMetadataUrl != null) {\n          \n          \n            \n                        metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"292\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (idpMetadataUrl </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"292\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k x x-first\">final</span><span class=\"x\"> </span><span class=\"pl-smi x\">String</span><span class=\"x\"> idpMetadataBody </span><span class=\"pl-k x\">=</span><span class=\"x\"> settings</span><span class=\"pl-k x\">.</span><span class=\"x\">get(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\">idp.metadata_body</span><span class=\"pl-pds x\">\"</span></span><span class=\"x x-last\">);</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"293\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">if</span> (idpMetadataUrl <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"294\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            metadataResolver <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SamlHTTPMetadataResolver</span>(idpMetadataUrl, settings, configPath);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-29T20:29:20Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMDk0Nw==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432720947", "body": "Similar\r\n```suggestion\r\n        } else {\r\n            final String idpMetadataFile = settings.get(\"idp.metadata_file\");\r\n            if (idpMetadataFile != null) {\r\n                metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);\r\n```", "bodyText": "Similar\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (idpMetadataFile != null) {\n          \n          \n            \n                    } else {\n          \n          \n            \n                        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n          \n          \n            \n                        if (idpMetadataFile != null) {\n          \n          \n            \n                            metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);", "bodyHTML": "<p dir=\"auto\">Similar</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"294\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        } <span class=\"pl-k\">else</span> <span class=\"pl-k x x-first\">if</span><span class=\"x\"> (idpMetadataFile </span><span class=\"pl-k x\">!=</span><span class=\"x\"> </span><span class=\"pl-c1 x\">null</span><span class=\"x x-last\">) </span>{</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"294\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">else</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"295\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> idpMetadataFile <span class=\"pl-k\">=</span> settings<span class=\"pl-k\">.</span>get(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>idp.metadata_file<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"296\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (idpMetadataFile <span class=\"pl-k\">!=</span> <span class=\"pl-c1\">null</span>) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"297\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                metadataResolver <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">SamlFilesystemMetadataResolver</span>(idpMetadataFile, settings, configPath);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-29T20:31:43Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {\n             metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n-        } else {\n+        } else if (idpMetadataFile != null) {", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyMjEwOA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432722108", "body": "Move check here:\r\n```suggestion\r\n        } else {\r\n           throw new RuntimeException(\"One of 'idp.metadata_url', 'idp.metadata_file' or 'idp.metadata_body' must be configured\");        \r\n```", "bodyText": "Move check here:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    }\n          \n          \n            \n                    } else {\n          \n          \n            \n                       throw new RuntimeException(\"One of 'idp.metadata_url', 'idp.metadata_file' or 'idp.metadata_body' must be configured\");", "bodyHTML": "<p dir=\"auto\">Move check here:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"300\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"300\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }<span class=\"x x-first\"> </span><span class=\"pl-k x\">else</span><span class=\"x x-last\"> {</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"301\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">           <span class=\"pl-k\">throw</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi\">RuntimeException</span>(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>One of 'idp.metadata_url', 'idp.metadata_file' or 'idp.metadata_body' must be configured<span class=\"pl-pds\">\"</span></span>);        </td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-29T20:34:34Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +278,16 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n         if (idpMetadataUrl != null) {\n             metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n-        } else {\n+        } else if (idpMetadataFile != null) {\n             metadataResolver = new SamlFilesystemMetadataResolver(settings, configPath);\n+        } else {\n+            metadataResolver = new SamlDOMMetadataResolver(settings);\n         }", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyNTcyNQ==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432725725", "body": "remove unused imports", "bodyText": "remove unused imports", "bodyHTML": "<p dir=\"auto\">remove unused imports</p>", "author": "vrozov", "createdAt": "2020-05-29T20:43:13Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjcyNjMyNA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432726324", "body": "```suggestion\r\n    private static final Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n          \n          \n            \n                private static final Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k x x-first\">protected</span><span class=\"x\"> </span><span class=\"pl-k x\">final</span><span class=\"x x-last\"> </span><span class=\"pl-k\">static</span> <span class=\"pl-smi\">Logger</span> log <span class=\"pl-k\">=</span> <span class=\"pl-smi\">LogManager</span><span class=\"pl-k\">.</span>getLogger(<span class=\"pl-smi\">SamlDOMMetadataResolver</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k x x-first\">private</span><span class=\"x x-last\"> </span><span class=\"pl-k\">static</span><span class=\"x x-first\"> </span><span class=\"pl-k x x-last\">final</span> <span class=\"pl-smi\">Logger</span> log <span class=\"pl-k\">=</span> <span class=\"pl-smi\">LogManager</span><span class=\"pl-k\">.</span>getLogger(<span class=\"pl-smi\">SamlDOMMetadataResolver</span><span class=\"pl-k\">.</span>class);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-29T20:44:38Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDEyMw==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432730123", "body": "nit: no new line.", "bodyText": "nit: no new line.", "bodyHTML": "<p dir=\"auto\">nit: no new line.</p>", "author": "vrozov", "createdAt": "2020-05-29T20:54:06Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjczMDM0Ng==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432730346", "body": "Use smart logging.", "bodyText": "Use smart logging.", "bodyHTML": "<p dir=\"auto\">Use smart logging.</p>", "author": "vrozov", "createdAt": "2020-05-29T20:54:37Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.amazon.dlic.auth.http.saml;\n+\n+import net.shibboleth.utilities.java.support.component.ComponentInitializationException;\n+import net.shibboleth.utilities.java.support.xml.BasicParserPool;\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.common.settings.Settings;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.IOException;\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+import javax.xml.parsers.ParserConfigurationException;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+import org.xml.sax.SAXException;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    protected final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    private static int componentIdCounter = 0;\n+\n+    public SamlDOMMetadataResolver(Settings settings) throws Exception {\n+        super(getMetadataDOM(settings));\n+        setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++componentIdCounter));\n+        setRequireValidMetadata(true);\n+        setFailFastInitialization(false);\n+        BasicParserPool basicParserPool = new BasicParserPool();\n+        basicParserPool.initialize();\n+        setParserPool(basicParserPool);\n+    }\n+\n+    private static Element getMetadataDOM(Settings settings) throws Exception {\n+        String xmlString = settings.get(\"idp.metadata_body\", null);\n+\n+        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n+        factory.setNamespaceAware(true);\n+\n+        //API to obtain DOM Document instance\n+        DocumentBuilder builder = null;\n+        try\n+        {\n+            builder = factory.newDocumentBuilder();\n+            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n+            return doc.getDocumentElement();\n+        } catch (Exception e)\n+        {\n+            log.error(\"Error while parsing SAML Metadata Body \"+ e, e);", "originalCommit": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "url": "https://github.com/opensearch-project/security/commit/47ccdeb0f43eb6198e2f30d6ede03d598ac58ec1", "message": "Adding metadata_body to SAML config", "committedDate": "2020-05-28T22:40:05Z", "type": "forcePushed"}, {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080", "url": "https://github.com/opensearch-project/security/commit/5208805ab9960fd09a524284ef3c4c9c77257080", "message": "Addressing PR comments", "committedDate": "2020-05-31T02:56:50Z", "type": "commit"}, {"oid": "5208805ab9960fd09a524284ef3c4c9c77257080", "url": "https://github.com/opensearch-project/security/commit/5208805ab9960fd09a524284ef3c4c9c77257080", "message": "Addressing PR comments", "committedDate": "2020-05-31T02:56:50Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NjMwOQ==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432966309", "body": "nit: `RuntimeException` does not need to be declared", "bodyText": "nit: RuntimeException does not need to be declared", "bodyHTML": "<p dir=\"auto\">nit: <code>RuntimeException</code> does not need to be declared</p>", "author": "vrozov", "createdAt": "2020-05-31T17:15:20Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -75,16 +74,15 @@\n     private AuthTokenProcessorHandler authTokenProcessorHandler;\n     private HTTPJwtAuthenticator httpJwtAuthenticator;\n     private Settings jwtSettings;\n+    private static int resolverIdCounter = 0;\n \n-    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n+    public HTTPSamlAuthenticator(final Settings settings, final Path configPath) throws RuntimeException {", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTU1NQ==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969555", "body": "Note that, for example `AbstractHTTPJwtAuthenticator`, does not raise exception in case it is misconfigured similar to how `HTTPSamlAuthenticator` behaved. It will be good to revisit the behavior and make it consistent as part of a follow up PR.", "bodyText": "Note that, for example AbstractHTTPJwtAuthenticator, does not raise exception in case it is misconfigured similar to how HTTPSamlAuthenticator behaved. It will be good to revisit the behavior and make it consistent as part of a follow up PR.", "bodyHTML": "<p dir=\"auto\">Note that, for example <code>AbstractHTTPJwtAuthenticator</code>, does not raise exception in case it is misconfigured similar to how <code>HTTPSamlAuthenticator</code> behaved. It will be good to revisit the behavior and make it consistent as part of a follow up PR.</p>", "author": "vrozov", "createdAt": "2020-05-31T17:57:19Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -127,6 +121,7 @@ public HTTPSamlAuthenticator(final Settings settings, final Path configPath) {\n \n         } catch (Exception e) {\n             log.error(\"Error creating HTTPSamlAuthenticator: \" + e + \". SAML authentication will not work\", e);\n+            throw new RuntimeException(e);", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUwMTc5Ng==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r433501796", "bodyText": "That makes sense, created https://github.com/opendistro-for-elasticsearch/security/issues/482 to follow up", "author": "debjanibnrj", "createdAt": "2020-06-01T21:31:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTU1NQ=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTY3OA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969678", "body": "```suggestion\r\n    private MetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n          \n          \n            \n                private MetadataResolver createMetadataResolver(final Settings settings, final Path configPath)", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first x-last\">AbstractBatchMetadataResolver</span> createMetadataResolver(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Settings</span> settings, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Path</span> configPath)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-smi x x-first x-last\">MetadataResolver</span> createMetadataResolver(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">Settings</span> settings, <span class=\"pl-k\">final</span> <span class=\"pl-smi\">Path</span> configPath)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-31T17:59:00Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2OTcxNA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432969714", "body": "```suggestion\r\n        final AbstractMetadataResolver metadataResolver;\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final AbstractBatchMetadataResolver metadataResolver;\n          \n          \n            \n                    final AbstractMetadataResolver metadataResolver;", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi x x-first x-last\">AbstractBatchMetadataResolver</span> metadataResolver;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">final</span> <span class=\"pl-smi x x-first x-last\">AbstractMetadataResolver</span> metadataResolver;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-31T17:59:34Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDA3NQ==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970075", "body": "Use `DOMMetadataResolver`:\r\n```suggestion\r\n            metadataResolver = new DOMMetadataResolver(getMetadataDOM(idpMetadataBody));\r\n```", "bodyText": "Use DOMMetadataResolver:\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        metadataResolver = new SamlDOMMetadataResolver(idpMetadataBody);\n          \n          \n            \n                        metadataResolver = new DOMMetadataResolver(getMetadataDOM(idpMetadataBody));", "bodyHTML": "<p dir=\"auto\">Use <code>DOMMetadataResolver</code>:</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            metadataResolver <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first\">SamlDOMMetadataResolver</span><span class=\"x x-last\">(</span>idpMetadataBody);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            metadataResolver <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-smi x x-first\">DOMMetadataResolver</span><span class=\"x x-last\">(getMetadataDOM(</span>idpMetadataBody<span class=\"x x-first x-last\">)</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-31T18:04:39Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -275,14 +269,21 @@ public Void run() throws InitializationException {\n         }\n     }\n \n-    private AbstractReloadingMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n+    private AbstractBatchMetadataResolver createMetadataResolver(final Settings settings, final Path configPath)\n             throws Exception {\n-        final AbstractReloadingMetadataResolver metadataResolver;\n+        final AbstractBatchMetadataResolver metadataResolver;\n \n+        final String idpMetadataUrl = settings.get(\"idp.metadata_url\");\n+        final String idpMetadataFile = settings.get(\"idp.metadata_file\");\n+        final String idpMetadataBody = settings.get(\"idp.metadata_body\");\n         if (idpMetadataUrl != null) {\n-            metadataResolver = new SamlHTTPMetadataResolver(settings, configPath);\n+            metadataResolver = new SamlHTTPMetadataResolver(idpMetadataUrl, settings, configPath);\n+        } else if (idpMetadataFile != null) {\n+            metadataResolver = new SamlFilesystemMetadataResolver(idpMetadataFile, settings, configPath);\n+        } else if (idpMetadataBody != null) {\n+            metadataResolver = new SamlDOMMetadataResolver(idpMetadataBody);", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDI5Ng==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970296", "body": "Is it necessary to run this code with elevated privileges? Can it be limited to `metadataResolver.initialize();`?", "bodyText": "Is it necessary to run this code with elevated privileges? Can it be limited to metadataResolver.initialize();?", "bodyHTML": "<p dir=\"auto\">Is it necessary to run this code with elevated privileges? Can it be limited to <code>metadataResolver.initialize();</code>?</p>", "author": "vrozov", "createdAt": "2020-05-31T18:07:27Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/HTTPSamlAuthenticator.java", "diffHunk": "@@ -295,6 +296,12 @@ private AbstractReloadingMetadataResolver createMetadataResolver(final Settings\n             AccessController.doPrivileged(new PrivilegedExceptionAction<Void>() {\n                 @Override\n                 public Void run() throws ComponentInitializationException {\n+                    metadataResolver.setId(HTTPSamlAuthenticator.class.getName() + \"_\" + (++resolverIdCounter));", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDU4Mw==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432970583", "body": "Move this method to `HTTPSamlAuthenticator`, declare it to throw `ParserConfigurationException`, `SAXException`, `IOException` and delete `SamlDOMMetadataResolver` class.\r\n```suggestion\r\n    private static Element getMetadataDOM(final String xmlString) throws ParserConfigurationException, SAXException, IOException {\r\n        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\r\n        factory.setNamespaceAware(true);\r\n\r\n        DocumentBuilder builder = factory.newDocumentBuilder();\r\n        try {\r\n            Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\r\n            return doc.getDocumentElement();\r\n        } catch (SAXException e) {\r\n            log.error(\"Error while parsing SAML Metadata Body {}\", xmlString, e);\r\n            throw e;\r\n        }\r\n    }\r\n```", "bodyText": "Move this method to HTTPSamlAuthenticator, declare it to throw ParserConfigurationException, SAXException, IOException and delete SamlDOMMetadataResolver class.\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static Element getMetadataDOM(final String xmlString) throws Exception {\n          \n          \n            \n                private static Element getMetadataDOM(final String xmlString) throws ParserConfigurationException, SAXException, IOException {\n          \n          \n            \n                    DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n          \n          \n            \n                    factory.setNamespaceAware(true);\n          \n          \n            \n            \n          \n          \n            \n                    DocumentBuilder builder = factory.newDocumentBuilder();\n          \n          \n            \n                    try {\n          \n          \n            \n                        Document doc = builder.parse(new InputSource(new StringReader(xmlString)));\n          \n          \n            \n                        return doc.getDocumentElement();\n          \n          \n            \n                    } catch (SAXException e) {\n          \n          \n            \n                        log.error(\"Error while parsing SAML Metadata Body {}\", xmlString, e);\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }\n          \n          \n            \n                }", "bodyHTML": "<p dir=\"auto\">Move this method to <code>HTTPSamlAuthenticator</code>, declare it to throw <code>ParserConfigurationException</code>, <code>SAXException</code>, <code>IOException</code> and delete <code>SamlDOMMetadataResolver</code> class.</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Element</span> getMetadataDOM(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> xmlString) throws <span class=\"pl-smi x x-first x-last\">Exception</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    <span class=\"pl-k\">private</span> <span class=\"pl-k\">static</span> <span class=\"pl-smi\">Element</span> getMetadataDOM(<span class=\"pl-k\">final</span> <span class=\"pl-smi\">String</span> xmlString) throws <span class=\"pl-smi x x-first\">ParserConfigurationException</span><span class=\"x\">, </span><span class=\"pl-smi x\">SAXException</span><span class=\"x\">, </span><span class=\"pl-smi x x-last\">IOException</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">DocumentBuilderFactory</span> factory <span class=\"pl-k\">=</span> <span class=\"pl-smi\">DocumentBuilderFactory</span><span class=\"pl-k\">.</span>newInstance();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        factory<span class=\"pl-k\">.</span>setNamespaceAware(<span class=\"pl-c1\">true</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\"></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">DocumentBuilder</span> builder <span class=\"pl-k\">=</span> factory<span class=\"pl-k\">.</span>newDocumentBuilder();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">try</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-smi\">Document</span> doc <span class=\"pl-k\">=</span> builder<span class=\"pl-k\">.</span>parse(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">InputSource</span>(<span class=\"pl-k\">new</span> <span class=\"pl-smi\">StringReader</span>(xmlString)));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">return</span> doc<span class=\"pl-k\">.</span>getDocumentElement();</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        } <span class=\"pl-k\">catch</span> (<span class=\"pl-smi\">SAXException</span> e) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            log<span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>Error while parsing SAML Metadata Body {}<span class=\"pl-pds\">\"</span></span>, xmlString, e);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">throw</span> e;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">    }</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "vrozov", "createdAt": "2020-05-31T18:10:58Z", "path": "src/main/java/com/amazon/dlic/auth/http/saml/SamlDOMMetadataResolver.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *  You may not use this file except in compliance with the License.\n+ *  A copy of the License is located at\n+ *\n+ *  http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed\n+ *  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package com.amazon.dlic.auth.http.saml;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.opensaml.saml.metadata.resolver.impl.DOMMetadataResolver;\n+\n+import java.io.StringReader;\n+import javax.xml.parsers.DocumentBuilder;\n+import javax.xml.parsers.DocumentBuilderFactory;\n+\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.xml.sax.InputSource;\n+\n+public class SamlDOMMetadataResolver extends DOMMetadataResolver {\n+    private final static Logger log = LogManager.getLogger(SamlDOMMetadataResolver.class);\n+\n+    public SamlDOMMetadataResolver(final String idpMetadataBody) throws Exception {\n+        super(getMetadataDOM(idpMetadataBody));\n+    }\n+\n+    private static Element getMetadataDOM(final String xmlString) throws Exception {", "originalCommit": "5208805ab9960fd09a524284ef3c4c9c77257080", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3Mjk4MA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432972980", "bodyText": "Any advantage of adding the logic in HTTPSamlAuthenticator vs a class. Thought of using a class as it would be consistent with the other Resolvers", "author": "debjanibnrj", "createdAt": "2020-05-31T18:42:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDU4Mw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3NzU0OA==", "url": "https://github.com/opensearch-project/security/pull/477#discussion_r432977548", "bodyText": "There is no difference in functionality between SamlDOMMetadataResolver and its base class, so introduction of SamlDOMMetadataResolver is not necessary, compared to other MetadataResolver classes that implement fetchMetadata().", "author": "vrozov", "createdAt": "2020-05-31T19:41:08Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk3MDU4Mw=="}], "type": "inlineReview"}, {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c", "url": "https://github.com/opensearch-project/security/commit/21d0488499db45ae0a05efe6380f98ce20a7071c", "message": "Addressing review comments", "committedDate": "2020-06-02T01:36:08Z", "type": "commit"}, {"oid": "21d0488499db45ae0a05efe6380f98ce20a7071c", "url": "https://github.com/opensearch-project/security/commit/21d0488499db45ae0a05efe6380f98ce20a7071c", "message": "Addressing review comments", "committedDate": "2020-06-02T01:36:08Z", "type": "forcePushed"}]}