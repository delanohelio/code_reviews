{"pr_number": 4304, "pr_title": "[RW-4606][risk=no] Enable Concept flag for Physical Measurements in preprod", "pr_author": "dolbeew", "pr_createdAt": "2020-11-17T22:15:59Z", "pr_url": "https://github.com/all-of-us/workbench/pull/4304", "timeline": [{"oid": "fdf3da7ef3a356e4964e38625f2f4fd20be19ec7", "url": "https://github.com/all-of-us/workbench/commit/fdf3da7ef3a356e4964e38625f2f4fd20be19ec7", "message": "RW-4606 enable flag for PM in test, staging, stable and preprod", "committedDate": "2020-11-17T22:11:08Z", "type": "commit"}, {"oid": "84f9b4817f74f31d5dc5d906c6b43435d1309eb9", "url": "https://github.com/all-of-us/workbench/commit/84f9b4817f74f31d5dc5d906c6b43435d1309eb9", "message": "RW-4606 add condition for PM concept sets", "committedDate": "2020-11-17T22:11:08Z", "type": "commit"}, {"oid": "440b5a5fc0c91687794ae5a932f95fea7f6ed553", "url": "https://github.com/all-of-us/workbench/commit/440b5a5fc0c91687794ae5a932f95fea7f6ed553", "message": "PM Concept Set retrive concept infromation from Concept table", "committedDate": "2020-11-17T22:11:08Z", "type": "commit"}, {"oid": "afd648d6e32a29c184aee5d44856552f2781c3d2", "url": "https://github.com/all-of-us/workbench/commit/afd648d6e32a29c184aee5d44856552f2781c3d2", "message": "RW-4606 set domain as measurement for PM sets", "committedDate": "2020-11-17T22:11:08Z", "type": "commit"}, {"oid": "cadbd0959d59c9c639c0ab593d032df51e67c933", "url": "https://github.com/all-of-us/workbench/commit/cadbd0959d59c9c639c0ab593d032df51e67c933", "message": "RW-4606 make domain physical measurements for PM concept sets", "committedDate": "2020-11-17T22:11:08Z", "type": "commit"}, {"oid": "83eface594b899c4c9b36f2144f4adf967bca116", "url": "https://github.com/all-of-us/workbench/commit/83eface594b899c4c9b36f2144f4adf967bca116", "message": "Fix api test", "committedDate": "2020-11-18T16:06:42Z", "type": "commit"}, {"oid": "5214480c0e4a6e982c611e47eb343a0ce5454a4d", "url": "https://github.com/all-of-us/workbench/commit/5214480c0e4a6e982c611e47eb343a0ce5454a4d", "message": "Fix Api test", "committedDate": "2020-11-18T16:51:56Z", "type": "commit"}, {"oid": "ee87a8cf6b9e1aa8b795f272472aaa6d8138a29b", "url": "https://github.com/all-of-us/workbench/commit/ee87a8cf6b9e1aa8b795f272472aaa6d8138a29b", "message": "Fix workspaceControllerTest", "committedDate": "2020-11-18T17:56:54Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMyNTQwMQ==", "url": "https://github.com/all-of-us/workbench/pull/4304#discussion_r526325401", "body": "you could stream it\r\n```suggestion\r\n        criteriaList.addAll(\r\n        StreamSupport.stream(conceptDao.findAll(ImmutableList.of(1L)).spliterator(), false)\r\n            .map(\r\n                c -> {\r\n                  boolean isStandard = STANDARD_CONCEPTS.contains(c.getStandardConcept());\r\n                  return cohortBuilderMapper.dbModelToClient(\r\n                      c, isStandard, isStandard ? c.getCountValue() : c.getSourceCountValue());\r\n                })\r\n            .collect(Collectors.toList()));\r\n```", "bodyText": "you could stream it\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (DbConcept dbConcepts : conceptDao.findAll(conceptIds)) {\n          \n          \n            \n                      boolean isStandard = STANDARD_CONCEPTS.contains(dbConcepts.getStandardConcept());\n          \n          \n            \n                      criteriaList.add(\n          \n          \n            \n                          cohortBuilderMapper.dbModelToClient(\n          \n          \n            \n                              dbConcepts,\n          \n          \n            \n                              isStandard,\n          \n          \n            \n                              isStandard ? dbConcepts.getCountValue() : dbConcepts.getSourceCountValue()));\n          \n          \n            \n                    }\n          \n          \n            \n                    criteriaList.addAll(\n          \n          \n            \n                    StreamSupport.stream(conceptDao.findAll(ImmutableList.of(1L)).spliterator(), false)\n          \n          \n            \n                        .map(\n          \n          \n            \n                            c -> {\n          \n          \n            \n                              boolean isStandard = STANDARD_CONCEPTS.contains(c.getStandardConcept());\n          \n          \n            \n                              return cohortBuilderMapper.dbModelToClient(\n          \n          \n            \n                                  c, isStandard, isStandard ? c.getCountValue() : c.getSourceCountValue());\n          \n          \n            \n                            })\n          \n          \n            \n                        .collect(Collectors.toList()));", "bodyHTML": "<p dir=\"auto\">you could stream it</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-k\">for</span> (<span class=\"pl-smi\">DbConcept</span> dbConcepts <span class=\"pl-k\">:</span> conceptDao<span class=\"pl-k\">.</span>findAll(conceptIds)) {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          <span class=\"pl-k\">boolean</span> isStandard <span class=\"pl-k\">=</span> <span class=\"pl-c1\">STANDARD_CONCEPTS</span><span class=\"pl-k\">.</span>contains(dbConcepts<span class=\"pl-k\">.</span>getStandardConcept());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">          criteriaList<span class=\"pl-k\">.</span>add(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">              cohortBuilderMapper<span class=\"pl-k\">.</span>dbModelToClient(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  dbConcepts,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  isStandard,</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">                  isStandard <span class=\"pl-k\">?</span> dbConcepts<span class=\"pl-k\">.</span>getCountValue() <span class=\"pl-k\">:</span> dbConcepts<span class=\"pl-k\">.</span>getSourceCountValue()));</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        }</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        criteriaList<span class=\"pl-k\">.</span>addAll(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">StreamSupport</span><span class=\"pl-k\">.</span>stream(conceptDao<span class=\"pl-k\">.</span>findAll(<span class=\"pl-smi\">ImmutableList</span><span class=\"pl-k\">.</span>of(<span class=\"pl-c1\">1L</span>))<span class=\"pl-k\">.</span>spliterator(), <span class=\"pl-c1\">false</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .map(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                c <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  <span class=\"pl-k\">boolean</span> isStandard <span class=\"pl-k\">=</span> <span class=\"pl-c1\">STANDARD_CONCEPTS</span><span class=\"pl-k\">.</span>contains(c<span class=\"pl-k\">.</span>getStandardConcept());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                  <span class=\"pl-k\">return</span> cohortBuilderMapper<span class=\"pl-k\">.</span>dbModelToClient(</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                      c, isStandard, isStandard <span class=\"pl-k\">?</span> c<span class=\"pl-k\">.</span>getCountValue() <span class=\"pl-k\">:</span> c<span class=\"pl-k\">.</span>getSourceCountValue());</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                })</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            .collect(<span class=\"pl-smi\">Collectors</span><span class=\"pl-k\">.</span>toList()));</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "freemabd", "createdAt": "2020-11-18T18:28:29Z", "path": "api/src/main/java/org/pmiops/workbench/conceptset/ConceptSetService.java", "diffHunk": "@@ -238,10 +253,23 @@ public DbConceptSet cloneConceptSetAndConceptIds(\n   private ConceptSet toHydratedConcepts(ConceptSet conceptSet) {\n     Set<Long> conceptIds = conceptSetDao.findOne(conceptSet.getId()).getConceptIds();\n     if (configProvider.get().featureFlags.enableConceptSetSearchV2) {\n-      return conceptSet.criteriums(\n-          cohortBuilderService.findCriteriaByDomainIdAndConceptIds(\n-              conceptSet.getDomain().toString(),\n-              conceptIds.stream().map(String::valueOf).collect(Collectors.toList())));\n+      List<Criteria> criteriaList = new ArrayList<Criteria>();\n+      if (!conceptSet.getDomain().equals(Domain.PHYSICAL_MEASUREMENT)) {\n+        criteriaList =\n+            cohortBuilderService.findCriteriaByDomainIdAndConceptIds(\n+                conceptSet.getDomain().toString(),\n+                conceptIds.stream().map(String::valueOf).collect(Collectors.toList()));\n+      } else {\n+        for (DbConcept dbConcepts : conceptDao.findAll(conceptIds)) {\n+          boolean isStandard = STANDARD_CONCEPTS.contains(dbConcepts.getStandardConcept());\n+          criteriaList.add(\n+              cohortBuilderMapper.dbModelToClient(\n+                  dbConcepts,\n+                  isStandard,\n+                  isStandard ? dbConcepts.getCountValue() : dbConcepts.getSourceCountValue()));\n+        }", "originalCommit": "ee87a8cf6b9e1aa8b795f272472aaa6d8138a29b", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "6c781cf9ecbc5236e6962b9fed2a099594a464e5", "url": "https://github.com/all-of-us/workbench/commit/6c781cf9ecbc5236e6962b9fed2a099594a464e5", "message": "DstsSetMapper and workspacecontroller test fix", "committedDate": "2020-11-18T18:48:45Z", "type": "commit"}, {"oid": "bec03db687d7779a85880f9915ee672c46468311", "url": "https://github.com/all-of-us/workbench/commit/bec03db687d7779a85880f9915ee672c46468311", "message": "PR Comment use stream", "committedDate": "2020-11-18T19:36:24Z", "type": "commit"}]}