{"pr_number": 3101, "pr_title": "[no ticket][risk=no] use services instead of dao in ConceptSetsController", "pr_author": "freemabd", "pr_createdAt": "2020-02-07T18:05:17Z", "pr_url": "https://github.com/all-of-us/workbench/pull/3101", "timeline": [{"oid": "05dc8a1a4f85d87d580b014414ebcef32e215576", "url": "https://github.com/all-of-us/workbench/commit/05dc8a1a4f85d87d580b014414ebcef32e215576", "message": "move daos into service classes.", "committedDate": "2020-02-07T17:41:30Z", "type": "commit"}, {"oid": "1bb1c20ba7a395e83300028962c1f69695d3d551", "url": "https://github.com/all-of-us/workbench/commit/1bb1c20ba7a395e83300028962c1f69695d3d551", "message": "fix test cases.", "committedDate": "2020-02-07T17:42:11Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxMjkxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377212915", "body": "IYI, MapStruct may be able to help here. It generates the obvious fields and lets your specify the nontrivial stuff. ", "bodyText": "IYI, MapStruct may be able to help here. It generates the obvious fields and lets your specify the nontrivial stuff.", "bodyHTML": "<p dir=\"auto\">IYI, MapStruct may be able to help here. It generates the obvious fields and lets your specify the nontrivial stuff.</p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:38:54Z", "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -436,4 +363,65 @@ private DbConceptSet getDbConceptSet(\n     }\n     return conceptSet;\n   }\n+\n+  public static ConceptSet toClientConceptSet(DbConceptSet dbConceptSet) {", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxMzYxNA==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377213614", "body": "nit: You could do\r\n `Optional.ofNullable(dbConceptSet.getCreator())\r\n.map(Creator::getUsername).orElse(null)`", "bodyText": "nit: You could do\nOptional.ofNullable(dbConceptSet.getCreator()) .map(Creator::getUsername).orElse(null)", "bodyHTML": "<p dir=\"auto\">nit: You could do<br>\n<code>Optional.ofNullable(dbConceptSet.getCreator()) .map(Creator::getUsername).orElse(null)</code></p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:40:11Z", "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -436,4 +363,65 @@ private DbConceptSet getDbConceptSet(\n     }\n     return conceptSet;\n   }\n+\n+  public static ConceptSet toClientConceptSet(DbConceptSet dbConceptSet) {\n+    return new ConceptSet()\n+        .etag(Etags.fromVersion(dbConceptSet.getVersion()))\n+        .lastModifiedTime(dbConceptSet.getLastModifiedTime().getTime())\n+        .creationTime(dbConceptSet.getCreationTime().getTime())\n+        .description(dbConceptSet.getDescription())\n+        .id(dbConceptSet.getConceptSetId())\n+        .name(dbConceptSet.getName())\n+        .domain(dbConceptSet.getDomainEnum())\n+        .participantCount(dbConceptSet.getParticipantCount())\n+        .survey(dbConceptSet.getSurveysEnum())\n+        .creator(\n+            dbConceptSet.getCreator() != null ? dbConceptSet.getCreator().getUsername() : null);", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNDU1NQ==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377214555", "body": "Ideally the `DbConceptSet` should handle finding an empty collection and return an empty `Iterable`. It makes me a little bit nervous to see the call site have to do basic checks like this.", "bodyText": "Ideally the DbConceptSet should handle finding an empty collection and return an empty Iterable. It makes me a little bit nervous to see the call site have to do basic checks like this.", "bodyHTML": "<p dir=\"auto\">Ideally the <code>DbConceptSet</code> should handle finding an empty collection and return an empty <code>Iterable</code>. It makes me a little bit nervous to see the call site have to do basic checks like this.</p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:41:57Z", "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -436,4 +363,65 @@ private DbConceptSet getDbConceptSet(\n     }\n     return conceptSet;\n   }\n+\n+  public static ConceptSet toClientConceptSet(DbConceptSet dbConceptSet) {\n+    return new ConceptSet()\n+        .etag(Etags.fromVersion(dbConceptSet.getVersion()))\n+        .lastModifiedTime(dbConceptSet.getLastModifiedTime().getTime())\n+        .creationTime(dbConceptSet.getCreationTime().getTime())\n+        .description(dbConceptSet.getDescription())\n+        .id(dbConceptSet.getConceptSetId())\n+        .name(dbConceptSet.getName())\n+        .domain(dbConceptSet.getDomainEnum())\n+        .participantCount(dbConceptSet.getParticipantCount())\n+        .survey(dbConceptSet.getSurveysEnum())\n+        .creator(\n+            dbConceptSet.getCreator() != null ? dbConceptSet.getCreator().getUsername() : null);\n+  }\n+\n+  private ConceptSet toClientConceptSetWithConcepts(DbConceptSet dbConceptSet) {\n+    ConceptSet conceptSet = toClientConceptSet(dbConceptSet);\n+    if (!dbConceptSet.getConceptIds().isEmpty()) {\n+      Iterable<DbConcept> concepts = conceptService.findAll(dbConceptSet.getConceptIds());", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNTQ3Nw==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377215477", "body": "nit: `you can also do Optional.ofNullable().ifPresent(etag -> setEtagStuff(etag));`. ", "bodyText": "nit: you can also do Optional.ofNullable().ifPresent(etag -> setEtagStuff(etag));.", "bodyHTML": "<p dir=\"auto\">nit: <code>you can also do Optional.ofNullable().ifPresent(etag -&gt; setEtagStuff(etag));</code>.</p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:43:33Z", "path": "api/src/main/java/org/pmiops/workbench/api/ConceptSetsController.java", "diffHunk": "@@ -436,4 +363,65 @@ private DbConceptSet getDbConceptSet(\n     }\n     return conceptSet;\n   }\n+\n+  public static ConceptSet toClientConceptSet(DbConceptSet dbConceptSet) {\n+    return new ConceptSet()\n+        .etag(Etags.fromVersion(dbConceptSet.getVersion()))\n+        .lastModifiedTime(dbConceptSet.getLastModifiedTime().getTime())\n+        .creationTime(dbConceptSet.getCreationTime().getTime())\n+        .description(dbConceptSet.getDescription())\n+        .id(dbConceptSet.getConceptSetId())\n+        .name(dbConceptSet.getName())\n+        .domain(dbConceptSet.getDomainEnum())\n+        .participantCount(dbConceptSet.getParticipantCount())\n+        .survey(dbConceptSet.getSurveysEnum())\n+        .creator(\n+            dbConceptSet.getCreator() != null ? dbConceptSet.getCreator().getUsername() : null);\n+  }\n+\n+  private ConceptSet toClientConceptSetWithConcepts(DbConceptSet dbConceptSet) {\n+    ConceptSet conceptSet = toClientConceptSet(dbConceptSet);\n+    if (!dbConceptSet.getConceptIds().isEmpty()) {\n+      Iterable<DbConcept> concepts = conceptService.findAll(dbConceptSet.getConceptIds());\n+      conceptSet.setConcepts(\n+          Streams.stream(concepts)\n+              .map(ConceptsController::toClientConcept)\n+              .sorted(CONCEPT_NAME_ORDERING)\n+              .collect(Collectors.toList()));\n+    }\n+    return conceptSet;\n+  }\n+\n+  private DbConceptSet fromClientConceptSet(CreateConceptSetRequest request, long workspaceId) {\n+    ConceptSet conceptSet = request.getConceptSet();\n+    Timestamp now = new Timestamp(clock.instant().toEpochMilli());\n+    DbConceptSet dbConceptSet = new DbConceptSet();\n+    dbConceptSet.setDomainEnum(conceptSet.getDomain());\n+    if (conceptSet.getSurvey() != null) {\n+      dbConceptSet.setSurveysEnum(conceptSet.getSurvey());\n+    }\n+    if (dbConceptSet.getDomainEnum() == null) {\n+      throw new BadRequestException(\n+          \"Domain \" + conceptSet.getDomain() + \" is not allowed for concept sets\");\n+    }\n+    if (conceptSet.getEtag() != null) {", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNTgxNQ==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377215815", "body": "Yeah, just a little check for empty and return an empty collection.", "bodyText": "Yeah, just a little check for empty and return an empty collection.", "bodyHTML": "<p dir=\"auto\">Yeah, just a little check for empty and return an empty collection.</p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:44:12Z", "path": "api/src/main/java/org/pmiops/workbench/concept/ConceptService.java", "diffHunk": "@@ -119,6 +120,10 @@ private static String modifyMultipleMatchKeyword(String query) {\n     return query2.toString();\n   }\n \n+  public Iterable<DbConcept> findAll(Collection<Long> conceptIds) {", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIxNjcxMg==", "url": "https://github.com/all-of-us/workbench/pull/3101#discussion_r377216712", "body": "Why not return `Optional<DbConceptSet>` instead of throw when it's not found?", "bodyText": "Why not return Optional<DbConceptSet> instead of throw when it's not found?", "bodyHTML": "<p dir=\"auto\">Why not return <code>Optional&lt;DbConceptSet&gt;</code> instead of throw when it's not found?</p>", "author": "jaycarlton", "createdAt": "2020-02-10T17:45:55Z", "path": "api/src/main/java/org/pmiops/workbench/conceptset/ConceptSetService.java", "diffHunk": "@@ -23,6 +23,26 @@ public ConceptSetService(\n     this.conceptBigQueryService = conceptBigQueryService;\n   }\n \n+  public DbConceptSet save(DbConceptSet dbConceptSet) {\n+    return conceptSetDao.save(dbConceptSet);\n+  }\n+\n+  public void delete(Long conceptSetId) {\n+    conceptSetDao.delete(conceptSetId);\n+  }\n+\n+  public DbConceptSet findOne(Long conceptSetId) {", "originalCommit": "1bb1c20ba7a395e83300028962c1f69695d3d551", "replyToReviewId": null, "replies": null, "type": "inlineReview"}]}