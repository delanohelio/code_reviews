{"pr_number": 6868, "pr_title": "Fixes Shared Database: Changes filtering in CoarseChangeFilter to attribute property", "pr_author": "m-mauersberger", "pr_createdAt": "2020-09-04T08:24:38Z", "pr_url": "https://github.com/JabRef/jabref/pull/6868", "timeline": [{"oid": "5759e01a658687be795608c647dc45c535ab1293", "url": "https://github.com/JabRef/jabref/commit/5759e01a658687be795608c647dc45c535ab1293", "message": "Filtering collapsed to assigning an attribute of a BibDatabaseContextChangedEvent (filteredOut): true - event may be filtered out, false - event may not be filtered out\n\nBibDatabaseContextChangedEvent got a filteredOut attribute to account for general event filtering. Super class constructors are called within inheriting classes.\n\nLast FieldChangedEvents that has not been synchronized (due to filteredOut==true) are synchronized at any other event in DBMSSynchronizer or closing the database( DBMSSynchronizer.closeSharedDatabase).", "committedDate": "2020-09-04T07:39:43Z", "type": "commit"}, {"oid": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "url": "https://github.com/JabRef/jabref/commit/8ae59d7a66c9001fb880477ed73a28a441ec9841", "message": "Remove unused imports", "committedDate": "2020-09-04T08:28:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjAyNg==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702026", "body": "Minor: checkstyle: No empty line at method begin", "bodyText": "Minor: checkstyle: No empty line at method begin", "bodyHTML": "<p dir=\"auto\">Minor: checkstyle: No empty line at method begin</p>", "author": "koppor", "createdAt": "2020-09-20T15:25:28Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -17,34 +17,23 @@\n \n     private final BibDatabaseContext context;\n     private final EventBus eventBus = new EventBus();\n-    private final DelayTaskThrottler delayPost;\n \n     private Optional<Field> lastFieldChanged;\n     private int totalDelta;\n \n     public CoarseChangeFilter(BibDatabaseContext bibDatabaseContext) {\n         // Listen for change events\n-        bibDatabaseContext.getDatabase().registerListener(this);\n-        bibDatabaseContext.getMetaData().registerListener(this);\n         this.context = bibDatabaseContext;\n-        // Delay event post by 5 seconds\n-        this.delayPost = new DelayTaskThrottler(5000);\n+        context.getDatabase().registerListener(this);\n+        context.getMetaData().registerListener(this);\n         this.lastFieldChanged = Optional.empty();\n         this.totalDelta = 0;\n     }\n \n     @Subscribe\n     public synchronized void listen(BibDatabaseContextChangedEvent event) {\n-        Runnable eventPost = () -> {\n-            // Reset total change delta\n-            totalDelta = 0;\n-            // Post event\n-            eventBus.post(event);\n-        };\n-\n-        if (!(event instanceof FieldChangedEvent)) {\n-            eventPost.run();\n-        } else {\n+", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702057", "body": "Minor: checkstyle: `} else {`. Doesn't the IntelliJ auto formatter fix that automatically?", "bodyText": "Minor: checkstyle: } else {. Doesn't the IntelliJ auto formatter fix that automatically?", "bodyHTML": "<p dir=\"auto\">Minor: checkstyle: <code>} else {</code>. Doesn't the IntelliJ auto formatter fix that automatically?</p>", "author": "koppor", "createdAt": "2020-09-20T15:25:55Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDg0NjAyNA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r494846024", "bodyText": "I'm sorry for that... I just tried it all again with CheckStyle but could not get to proper else wrapping.\nEdit: Now it suddenly works.", "author": "m-mauersberger", "createdAt": "2020-09-25T08:54:58Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwNTE5NA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495105194", "bodyText": "Just put it on the same line: } else {", "author": "koppor", "createdAt": "2020-09-25T16:36:40Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA1Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA5Ng==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702096", "body": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "bodyText": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "bodyHTML": "<p dir=\"auto\">Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below</p>", "author": "koppor", "createdAt": "2020-09-20T15:26:27Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMTcxMA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495001710", "bodyText": "I removed the method eventPost because it has become obsolete.", "author": "m-mauersberger", "createdAt": "2020-09-25T13:50:54Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjA5Ng=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjEwOA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702108", "body": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "bodyText": "Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below", "bodyHTML": "<p dir=\"auto\">Do you have an idea why this happens? If not, you can delete the comment. It says the same as the statement below</p>", "author": "koppor", "createdAt": "2020-09-20T15:26:34Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta\n+        totalDelta = 0;\n+        // Reset last field that changed", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMTgwMA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495001800", "bodyText": "See above", "author": "m-mauersberger", "createdAt": "2020-09-25T13:51:01Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjEwOA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjE0Mg==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702142", "body": "This comment can be deleted, because it is just stating what happens in the next line", "bodyText": "This comment can be deleted, because it is just stating what happens in the next line", "bodyHTML": "<p dir=\"auto\">This comment can be deleted, because it is just stating what happens in the next line</p>", "author": "koppor", "createdAt": "2020-09-20T15:26:49Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)\n+            eventPost(fieldChange);\n             // Set new last field\n             lastFieldChanged = Optional.of(fieldChange.getField());\n+\n         }\n+        else {\n+            eventPost(event);\n+        }\n+    }\n+\n+    private void eventPost(BibDatabaseContextChangedEvent event) {\n+        // Reset total change delta\n+        totalDelta = 0;\n+        // Reset last field that changed\n+        lastFieldChanged = Optional.empty();\n+        // Post event", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjI2Nw==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702267", "body": "Can you state why the magic number 30 has been chosen?\r\n\r\n(Java by Comparison: \"Replace Comments with Constants\")", "bodyText": "Can you state why the magic number 30 has been chosen?\n(Java by Comparison: \"Replace Comments with Constants\")", "bodyHTML": "<p dir=\"auto\">Can you state why the magic number 30 has been chosen?</p>\n<p dir=\"auto\">(Java by Comparison: \"Replace Comments with Constants\")</p>", "author": "koppor", "createdAt": "2020-09-20T15:28:33Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAwMDg2NA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r495000864", "bodyText": "My idea was to collect changes when I manually typing in character by character. Then you only have delta = 1 for each event. Now I restored it to 1 (as it was before #6663): delta is greater than 1 if you paste or delete something. That was my wrong interpretation of a major change happening when delta > 1...", "author": "m-mauersberger", "createdAt": "2020-09-25T13:49:38Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjI2Nw=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTcwMjQ5OA==", "url": "https://github.com/JabRef/jabref/pull/6868#discussion_r491702498", "body": "```suggestion\r\n            // Post each FieldChangedEvent - even the ones being marked as \"filtered\"\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // Post every FieldChangedEvent, but some have been marked (filtered)\n          \n          \n            \n                        // Post each FieldChangedEvent - even the ones being marked as \"filtered\"", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Post <span class=\"x x-first x-last\">every</span> FieldChangedEvent<span class=\"x x-first x-last\">, but some have been </span>marked <span class=\"x x-first x-last\">(</span>filtered<span class=\"x x-first x-last\">)</span></span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c\"><span class=\"pl-c\">//</span> Post <span class=\"x x-first x-last\">each</span> FieldChangedEvent<span class=\"x x-first x-last\"> - even the ones being </span>marked <span class=\"x x-first x-last\">as \"</span>filtered<span class=\"x x-first x-last\">\"</span></span></td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "koppor", "createdAt": "2020-09-20T15:30:52Z", "path": "src/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "diffHunk": "@@ -53,19 +42,30 @@ public synchronized void listen(BibDatabaseContextChangedEvent event) {\n             // If editing is started\n             boolean isNewEdit = lastFieldChanged.isEmpty();\n             // If other field is edited\n-            boolean isEditOnOtherField = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n+            boolean isEditChanged = !isNewEdit && !lastFieldChanged.get().equals(fieldChange.getField());\n             // Only deltas of 1 registered by fieldChange, major change means editing much content\n-            boolean isMajorChange = totalDelta >= 100;\n-\n-            if ((isEditOnOtherField && !isNewEdit) || isMajorChange) {\n-                // Submit old changes immediately\n-                eventPost.run();\n-            } else {\n-                delayPost.schedule(eventPost);\n-            }\n+            boolean isMajorChange = totalDelta >= 30;\n+\n+            // Event is filtered out if neither the edited field has changed nor a major change has occurred\n+            fieldChange.setFilteredOut(!(isEditChanged || isMajorChange));\n+            // Post every FieldChangedEvent, but some have been marked (filtered)", "originalCommit": "8ae59d7a66c9001fb880477ed73a28a441ec9841", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "2e6c967750cbf7da464f9548cfc2ee01bf19beff", "url": "https://github.com/JabRef/jabref/commit/2e6c967750cbf7da464f9548cfc2ee01bf19beff", "message": "Update src/main/java/org/jabref/logic/util/CoarseChangeFilter.java\r\n\r\nWording\n\nCo-authored-by: Oliver Kopp <kopp.dev@gmail.com>", "committedDate": "2020-09-25T08:16:14Z", "type": "commit"}, {"oid": "7382ba60b2101e807d46b63c257100339c96c8ac", "url": "https://github.com/JabRef/jabref/commit/7382ba60b2101e807d46b63c257100339c96c8ac", "message": "Remove unused imports.\nCoarseChangeFilter: Remove totalDelta due to restriction to pasting and deleting more than one character. Handle changed field.\nDBMSSynchronizer: Pull remaining changes at every entry-related event.", "committedDate": "2020-09-25T13:37:42Z", "type": "commit"}, {"oid": "4015ab89b3fe6f62ed8170ed4ef4b884b45250df", "url": "https://github.com/JabRef/jabref/commit/4015ab89b3fe6f62ed8170ed4ef4b884b45250df", "message": "Remove unused imports.\nCoarseChangeFilter: Remove totalDelta due to restriction to pasting and deleting more than one character. Handle changed field.\nDBMSSynchronizer: Pull remaining changes at every entry-related event.", "committedDate": "2020-09-25T13:41:56Z", "type": "commit"}, {"oid": "c8168038aed9e8a7808c0a277c9627a13d568058", "url": "https://github.com/JabRef/jabref/commit/c8168038aed9e8a7808c0a277c9627a13d568058", "message": "Merge remote-tracking branch 'origin/socketTimeOut' into socketTimeOut\n\n# Conflicts:\n#\tsrc/main/java/org/jabref/logic/util/CoarseChangeFilter.java", "committedDate": "2020-09-25T13:43:21Z", "type": "commit"}]}