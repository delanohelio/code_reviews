{"pr_number": 7178, "pr_title": "Fix newly added entry not synced to db", "pr_author": "Siedlerchr", "pr_createdAt": "2020-12-11T18:39:15Z", "pr_url": "https://github.com/JabRef/jabref/pull/7178", "timeline": [{"oid": "c883e8da80caf46560a34254eb753bbb9bc03310", "url": "https://github.com/JabRef/jabref/commit/c883e8da80caf46560a34254eb753bbb9bc03310", "message": "Fix newly added entry not synced to db\n\n\nNewly added entries have empty fields; don't update the field table to prevent SQL Exception\nFix shared entry not found by id\nuse left outer join for this", "committedDate": "2020-12-11T18:38:56Z", "type": "commit"}, {"oid": "7317104c3f7a94890b33bdc720fff8ef722b66e3", "url": "https://github.com/JabRef/jabref/commit/7317104c3f7a94890b33bdc720fff8ef722b66e3", "message": "fix checkstyle", "committedDate": "2020-12-11T18:45:50Z", "type": "commit"}, {"oid": "ae37d4bf391295f07319b5dd84ca8071717b9062", "url": "https://github.com/JabRef/jabref/commit/ae37d4bf391295f07319b5dd84ca8071717b9062", "message": "fix wording", "committedDate": "2020-12-11T18:46:41Z", "type": "commit"}, {"oid": "c6d01b355cf919ac1c75339ae743a4d71be80747", "url": "https://github.com/JabRef/jabref/commit/c6d01b355cf919ac1c75339ae743a4d71be80747", "message": "Merge remote-tracking branch 'upstream/master' into sharedDbInsert\n\n* upstream/master:\n  Disable SLR in UI until #7126 is merged (#7179)", "committedDate": "2020-12-13T13:36:06Z", "type": "commit"}, {"oid": "503670a7193e0835ed9318fff53cbc252aa7661f", "url": "https://github.com/JabRef/jabref/commit/503670a7193e0835ed9318fff53cbc252aa7661f", "message": "add tests for fix", "committedDate": "2020-12-13T13:37:12Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNjM0MA==", "url": "https://github.com/JabRef/jabref/pull/7178#discussion_r542016340", "body": "Isn't this always an empty list (as expected entry is empty)?", "bodyText": "Isn't this always an empty list (as expected entry is empty)?", "bodyHTML": "<p dir=\"auto\">Isn't this always an empty list (as expected entry is empty)?</p>", "author": "tobiasdiez", "createdAt": "2020-12-13T22:07:38Z", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -95,6 +95,37 @@ void testInsertEntry() throws SQLException {\n         assertEquals(expectedFieldMap, actualFieldMap);\n     }\n \n+    @Test\n+    void testInsertEntryWithEmptyFields() throws SQLException {\n+        BibEntry expectedEntry = new BibEntry(StandardEntryType.Article);\n+\n+        dbmsProcessor.insertEntry(expectedEntry);\n+\n+        BibEntry emptyEntry = getBibEntryExample();\n+        emptyEntry.getSharedBibEntryData().setSharedID(1);\n+        dbmsProcessor.insertEntry(emptyEntry); // does not insert, due to same sharedID.\n+\n+        Map<String, String> actualFieldMap = new HashMap<>();\n+\n+        try (ResultSet entryResultSet = selectFrom(\"ENTRY\", dbmsConnection, dbmsProcessor)) {\n+            assertTrue(entryResultSet.next());\n+            assertEquals(1, entryResultSet.getInt(\"SHARED_ID\"));\n+            assertEquals(\"article\", entryResultSet.getString(\"TYPE\"));\n+            assertEquals(1, entryResultSet.getInt(\"VERSION\"));\n+            assertFalse(entryResultSet.next());\n+\n+            try (ResultSet fieldResultSet = selectFrom(\"FIELD\", dbmsConnection, dbmsProcessor)) {\n+                while (fieldResultSet.next()) {\n+                    actualFieldMap.put(fieldResultSet.getString(\"NAME\"), fieldResultSet.getString(\"VALUE\"));\n+                }\n+            }\n+        }\n+\n+        Map<String, String> expectedFieldMap = expectedEntry.getFieldMap().entrySet().stream().collect(Collectors.toMap((entry) -> entry.getKey().getName(), Map.Entry::getValue));", "originalCommit": "503670a7193e0835ed9318fff53cbc252aa7661f", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxODY5Mw==", "url": "https://github.com/JabRef/jabref/pull/7178#discussion_r542018693", "bodyText": "Hm, seems like I need to adapt the queries a bit. Didn't think about this,\nI should check for the shared entry id to be present.", "author": "Siedlerchr", "createdAt": "2020-12-13T22:20:52Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNjM0MA=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAyMDU2MQ==", "url": "https://github.com/JabRef/jabref/pull/7178#discussion_r542020561", "bodyText": "To be honest, I've no idea what the test is doing. You add an empty entry, then some other completely unrelated entry, and then compare against the empty entry again.", "author": "tobiasdiez", "createdAt": "2020-12-13T22:30:26Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNjM0MA=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjAxNjUwOA==", "url": "https://github.com/JabRef/jabref/pull/7178#discussion_r542016508", "body": "why is this then necessary?", "bodyText": "why is this then necessary?", "bodyHTML": "<p dir=\"auto\">why is this then necessary?</p>", "author": "tobiasdiez", "createdAt": "2020-12-13T22:08:40Z", "path": "src/test/java/org/jabref/logic/shared/DBMSProcessorTest.java", "diffHunk": "@@ -95,6 +95,37 @@ void testInsertEntry() throws SQLException {\n         assertEquals(expectedFieldMap, actualFieldMap);\n     }\n \n+    @Test\n+    void testInsertEntryWithEmptyFields() throws SQLException {\n+        BibEntry expectedEntry = new BibEntry(StandardEntryType.Article);\n+\n+        dbmsProcessor.insertEntry(expectedEntry);\n+\n+        BibEntry emptyEntry = getBibEntryExample();\n+        emptyEntry.getSharedBibEntryData().setSharedID(1);\n+        dbmsProcessor.insertEntry(emptyEntry); // does not insert, due to same sharedID.", "originalCommit": "503670a7193e0835ed9318fff53cbc252aa7661f", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "33f11a64c8aaf5248a334c9a61d4df49a92cf4e0", "url": "https://github.com/JabRef/jabref/commit/33f11a64c8aaf5248a334c9a61d4df49a92cf4e0", "message": "adjust test", "committedDate": "2020-12-14T18:23:21Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2Njg5OA==", "url": "https://github.com/JabRef/jabref/pull/7178#discussion_r542666898", "body": "```suggestion\r\n             // Handle special case if entry does not have any fields (yet)\r\n             .append(\" left outer join \")\r\n```", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                         .append(\" left outer join \")\n          \n          \n            \n                         // Handle special case if entry does not have any fields (yet)\n          \n          \n            \n                         .append(\" left outer join \")", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"503\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">             <span class=\"x x-first\">.append(</span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x\"> left outer join </span><span class=\"pl-pds x x-last\">\"</span></span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"503\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             <span class=\"pl-c\"><span class=\"pl-c x x-first\">//</span><span class=\"x x-last\"> Handle special case if entry does not have any fields (yet</span>)</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"504\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">             .append(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span> left outer join <span class=\"pl-pds\">\"</span></span>)</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "koppor", "createdAt": "2020-12-14T19:14:53Z", "path": "src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "diffHunk": "@@ -493,7 +499,7 @@ public void removeEntries(List<BibEntry> bibEntries) {\n              .append(\"F.\").append(escape(\"VALUE\"))\n              .append(\" FROM \")\n              .append(escape(\"ENTRY\"))\n-             .append(\" inner join \")\n+             .append(\" left outer join \")", "originalCommit": "33f11a64c8aaf5248a334c9a61d4df49a92cf4e0", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "3c3358406b14fefcacb1d67bcdd48ae264ceb541", "url": "https://github.com/JabRef/jabref/commit/3c3358406b14fefcacb1d67bcdd48ae264ceb541", "message": "Update src/main/java/org/jabref/logic/shared/DBMSProcessor.java", "committedDate": "2020-12-14T19:16:29Z", "type": "commit"}]}