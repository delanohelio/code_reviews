{"pr_number": 7036, "pr_title": "Added error msg when isbn entry was not found", "pr_author": "tmrd993", "pr_createdAt": "2020-10-22T13:01:49Z", "pr_url": "https://github.com/JabRef/jabref/pull/7036", "timeline": [{"oid": "f31a2d3abb14697427438e6b25944fd842884efd", "url": "https://github.com/JabRef/jabref/commit/f31a2d3abb14697427438e6b25944fd842884efd", "message": "add error msg when isbn entry not found", "committedDate": "2020-10-22T12:56:13Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2MTA4NA==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510261084", "body": "```suggestion\r\n            LOGGER.error(\"ISBN { } not found at ottobib\", identifier);\r\n```\r\nThis is the recommended way", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.error(\"ISBN \" + identifier + \" not found at ottobib\");\n          \n          \n            \n                        LOGGER.error(\"ISBN { } not found at ottobib\", identifier);\n          \n      \n    \n    \n  \n\nThis is the recommended way", "bodyHTML": "  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ISBN <span class=\"pl-pds x x-first\">\"</span></span><span class=\"x\"> </span><span class=\"pl-k x\">+</span><span class=\"x\"> identifier </span><span class=\"pl-k x\">+</span><span class=\"x\"> </span><span class=\"pl-s\"><span class=\"pl-pds x\">\"</span><span class=\"x x-last\"> </span>not found at ottobib<span class=\"pl-pds\">\"</span></span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-c1\">LOGGER</span><span class=\"pl-k\">.</span>error(<span class=\"pl-s\"><span class=\"pl-pds\">\"</span>ISBN <span class=\"x x-first x-last\">{ } </span>not found at ottobib<span class=\"pl-pds\">\"</span></span><span class=\"x x-first x-last\">, identifier</span>);</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n\n<p dir=\"auto\">This is the recommended way</p>", "author": "Siedlerchr", "createdAt": "2020-10-22T15:36:28Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java", "diffHunk": "@@ -58,6 +58,13 @@ public URL getUrlForIdentifier(String identifier) throws URISyntaxException, Mal\n             throw new FetcherException(\"Could not \", e);\n         }\n         Element textArea = html.select(\"textarea\").first();\n+\n+        // inspect the \"no results\" error message (if there is one)\n+        Element potentialErrorMessageDiv = html.select(\"div#flash-notice.notice.add-bottom\").first();\n+        if (potentialErrorMessageDiv.hasText() && potentialErrorMessageDiv.text().contains(\"No Results\")) {\n+            LOGGER.error(\"ISBN \" + identifier + \" not found at ottobib\");", "originalCommit": "f31a2d3abb14697427438e6b25944fd842884efd", "replyToReviewId": null, "replies": null, "type": "inlineReview", "revised_code": {"commit": "06ff6968d94eea78f6f406be657effe103c275b1", "changed_code": [{"header": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java b/src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java\nindex a44de470c..30e6f8513 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/IsbnViaOttoBibFetcher.java\n", "chunk": "@@ -60,9 +60,9 @@ public class IsbnViaOttoBibFetcher extends AbstractIsbnFetcher {\n         Element textArea = html.select(\"textarea\").first();\n \n         // inspect the \"no results\" error message (if there is one)\n-        Element potentialErrorMessageDiv = html.select(\"div#flash-notice.notice.add-bottom\").first();\n-        if (potentialErrorMessageDiv.hasText() && potentialErrorMessageDiv.text().contains(\"No Results\")) {\n-            LOGGER.error(\"ISBN \" + identifier + \" not found at ottobib\");\n+        Optional<Element> potentialErrorMessageDiv = Optional.ofNullable((html.select(\"div#flash-notice.notice.add-bottom\").first()));\n+        if (potentialErrorMessageDiv.isPresent() && potentialErrorMessageDiv.get().text().contains(\"No Results\")) {\n+            LOGGER.error(\"ISBN {} not found at ottobib\", identifier);\n         }\n \n         Optional<BibEntry> entry = Optional.empty();\n", "next_change": null}]}}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510265355", "body": "This is not the right place. You cannot put GUI code into logic/model classes.\r\nSee https://devdocs.jabref.org/getting-into-the-code/high-level-documentation\r\n\r\nThe right place to check if the results are empty would be here: Than you have it generic as well for all kind of fetchers\r\nhttps://github.com/JabRef/jabref/blob/7f4c36c03629498db8e56281906241a82846e1e3/src/main/java/org/jabref/gui/EntryTypeViewModel.java#L147", "bodyText": "This is not the right place. You cannot put GUI code into logic/model classes.\nSee https://devdocs.jabref.org/getting-into-the-code/high-level-documentation\nThe right place to check if the results are empty would be here: Than you have it generic as well for all kind of fetchers\n\n  \n    \n      jabref/src/main/java/org/jabref/gui/EntryTypeViewModel.java\n    \n    \n         Line 147\n      in\n      7f4c36c\n    \n    \n    \n    \n\n        \n          \n           Optional<BibEntry> result = fetcherWorker.getValue();", "bodyHTML": "<p dir=\"auto\">This is not the right place. You cannot put GUI code into logic/model classes.<br>\nSee <a href=\"https://devdocs.jabref.org/getting-into-the-code/high-level-documentation\" rel=\"nofollow\">https://devdocs.jabref.org/getting-into-the-code/high-level-documentation</a></p>\n<p dir=\"auto\">The right place to check if the results are empty would be here: Than you have it generic as well for all kind of fetchers<br>\n<div class=\"border rounded-1 my-2\">\n  <div class=\"f6 px-3 py-2 lh-condensed border-bottom color-bg-subtle\">\n    <p class=\"mb-0 text-bold\">\n      <a href=\"https://github.com/JabRef/jabref/blob/7f4c36c03629498db8e56281906241a82846e1e3/src/main/java/org/jabref/gui/EntryTypeViewModel.java#L147\">jabref/src/main/java/org/jabref/gui/EntryTypeViewModel.java</a>\n    </p>\n    <p class=\"mb-0 color-fg-muted\">\n         Line 147\n      in\n      <a data-pjax=\"true\" class=\"commit-tease-sha\" href=\"/JabRef/jabref/commit/7f4c36c03629498db8e56281906241a82846e1e3\">7f4c36c</a>\n    </p>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper blob-wrapper-embedded data\">\n    <table class=\"highlight tab-size mb-0 js-file-line-container\" data-tab-size=\"8\" data-paste-markdown-skip=\"\">\n\n        <tbody><tr class=\"border-0\">\n          <td id=\"L147\" class=\"blob-num border-0 px-3 py-0 color-bg-default js-line-number\" data-line-number=\"147\"></td>\n          <td id=\"LC147\" class=\"blob-code border-0 px-3 py-0 color-bg-default blob-code-inner js-file-line\"> <span class=\"pl-k\">Optional&lt;<span class=\"pl-smi\">BibEntry</span>&gt;</span> result <span class=\"pl-k\">=</span> fetcherWorker<span class=\"pl-k\">.</span>getValue(); </td>\n        </tr>\n    </tbody></table>\n  </div>\n</div>\n</p>", "author": "Siedlerchr", "createdAt": "2020-10-22T15:42:14Z", "path": "src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java", "diffHunk": "@@ -59,6 +62,13 @@ public String getName() {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n+        // nothing found at ebook.de and ottobib\n+        if (!bibEntry.isPresent()) {\n+            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);", "originalCommit": "f31a2d3abb14697427438e6b25944fd842884efd", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMwMjk0OQ==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510302949", "bodyText": "oops, my mistake. I'll fix it later today. I have another question about the ottobib fetcher though, should getting no results throw an exception? Ottobib seems like a special case since supplying an ISBN that leads to no entry doesn't give a 404 but instead leads to a special page with an error message.", "author": "tmrd993", "createdAt": "2020-10-22T16:35:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMDIzMA==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510310230", "bodyText": "I thought about throwing a fetcher exception as well. But on the other hand we have optional for those cases.\nSo I would not throw an exception.\n@tobiasdiez", "author": "Siedlerchr", "createdAt": "2020-10-22T16:46:34Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMxMzgyOA==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510313828", "bodyText": "Thanks for your work so far.\nExceptions are only for exceptional program states. An unkown ISBN is a possible case in Ottobib. Thats probably why Ottobib does not show 404, but a page saying: unkown ISBN.\nSee: https://github.com/HugoMatilla/Effective-JAVA-Summary#57-use-exceptions-only-for-exceptional-conditions", "author": "calixtus", "createdAt": "2020-10-22T16:52:16Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI2NTM1NQ=="}], "type": "inlineReview", "revised_code": {"commit": "06ff6968d94eea78f6f406be657effe103c275b1", "changed_code": [{"header": "diff --git a/src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java b/src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java\nindex 43a930023..626ae6a1e 100644\n--- a/src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java\n+++ b/src/main/java/org/jabref/logic/importer/fetcher/IsbnFetcher.java\n", "chunk": "@@ -62,13 +59,6 @@ public class IsbnFetcher implements EntryBasedFetcher, IdBasedFetcher {\n             bibEntry = isbnViaOttoBibFetcher.performSearchById(identifier);\n         }\n \n-        // nothing found at ebook.de and ottobib\n-        if (!bibEntry.isPresent()) {\n-            FXDialog noEntryFoundDialog = new FXDialog(AlertType.ERROR);\n-            noEntryFoundDialog.setContentText(\"No entry found for ISBN: \" + identifier + \".\");\n-            noEntryFoundDialog.show();\n-        }\n-\n         return bibEntry;\n     }\n \n", "next_change": null}]}}, {"oid": "06ff6968d94eea78f6f406be657effe103c275b1", "url": "https://github.com/JabRef/jabref/commit/06ff6968d94eea78f6f406be657effe103c275b1", "message": "move error dialog to EntryTypeViewModel, add changelog entry", "committedDate": "2020-10-22T19:50:05Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxODM2OQ==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510418369", "body": "Can I leave this error message or should it be unique?", "bodyText": "Can I leave this error message or should it be unique?", "bodyHTML": "<p dir=\"auto\">Can I leave this error message or should it be unique?</p>", "author": "tmrd993", "createdAt": "2020-10-22T19:53:27Z", "path": "src/main/java/org/jabref/gui/EntryTypeViewModel.java", "diffHunk": "@@ -176,6 +176,10 @@ public void runFetcherWorker() {\n                 searchSuccesfulProperty.set(true);\n             } else if (StringUtil.isBlank(idText.getValue())) {\n                 dialogService.showWarningDialogAndWait(Localization.lang(\"Empty search ID\"), Localization.lang(\"The given search ID was empty.\"));\n+            } else if (result.isEmpty()) {\n+                String fetcher = selectedItemProperty().getValue().getName();\n+                String searchId = idText.getValue();\n+                dialogService.showErrorDialogAndWait(Localization.lang(\"Fetcher '%0' did not find an entry for id '%1'.\", fetcher, searchId));", "originalCommit": "06ff6968d94eea78f6f406be657effe103c275b1", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ1OTI1NQ==", "url": "https://github.com/JabRef/jabref/pull/7036#discussion_r510459255", "bodyText": "Yes, looks good so far", "author": "Siedlerchr", "createdAt": "2020-10-22T21:10:20Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQxODM2OQ=="}], "type": "inlineReview", "revised_code": null}, {"oid": "a951fa012ff1096df1c75dba2848ed870e09f59a", "url": "https://github.com/JabRef/jabref/commit/a951fa012ff1096df1c75dba2848ed870e09f59a", "message": "Update CHANGELOG.md\n\nCo-authored-by: Christoph <siedlerkiller@gmail.com>", "committedDate": "2020-10-22T23:02:47Z", "type": "commit"}]}