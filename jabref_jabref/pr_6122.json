{"pr_number": 6122, "pr_title": "Fix action helper", "pr_author": "stefan-kolb", "pr_createdAt": "2020-03-14T14:43:12Z", "pr_url": "https://github.com/JabRef/jabref/pull/6122", "timeline": [{"oid": "383391df9c002664ac078012ede9e2185df0e511", "url": "https://github.com/JabRef/jabref/commit/383391df9c002664ac078012ede9e2185df0e511", "message": "fix: not every selected entry will have a file\n\nRelated #6085", "committedDate": "2020-03-14T14:29:33Z", "type": "commit"}, {"oid": "e6e27a9f623a8ac97a18a799e7676764a290e7b2", "url": "https://github.com/JabRef/jabref/commit/e6e27a9f623a8ac97a18a799e7676764a290e7b2", "message": "fix: this will probably fix missing selection information on Linux\n\nI is hard to test this, as normally a selection should be given when the method is triggered.\nFixes #6085", "committedDate": "2020-03-14T14:41:36Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5NjU3NA==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392596574", "body": "The binding shouldn't refer to the currently selected entry because this might change in the future and then the binding needs to be reevaluated. The following should work\r\n```suggestion\r\n        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\r\n        return Bindings.createBooleanBinding(() -> {\r\n            if (entry.get() == null)\r\n                return false;\r\n            else\r\n               return entry.get().getFields().stream().anyMatch(fields::contains);\r\n        }, entry, entry.getFieldsObserable());\r\n```", "bodyText": "The binding shouldn't refer to the currently selected entry because this might change in the future and then the binding needs to be reevaluated. The following should work\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    BibEntry entry = selectedEntries.get(0);\n          \n          \n            \n                    ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n          \n          \n            \n                    return Bindings.createBooleanBinding(() -> {\n          \n          \n            \n                        if (entry.get() == null)\n          \n          \n            \n                            return false;\n          \n          \n            \n                        else\n          \n          \n            \n                           return entry.get().getFields().stream().anyMatch(fields::contains);\n          \n          \n            \n                    }, entry, entry.getFieldsObserable());", "bodyHTML": "<p dir=\"auto\">The binding shouldn't refer to the currently selected entry because this might change in the future and then the binding needs to be reevaluated. The following should work</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">BibEntry</span> entry <span class=\"pl-k\">=</span> <span class=\"x x-first\">selectedEntries</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">get(</span><span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\"><span class=\"x x-first x-last\">ObjectBinding&lt;</span><span class=\"pl-smi\">BibEntry</span><span class=\"x x-first x-last\">&gt;</span></span> entry <span class=\"pl-k\">=</span> <span class=\"pl-smi x x-first\">Bindings</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">valueAt(selectedEntries, </span><span class=\"pl-c1\">0</span>);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-k\">return</span> <span class=\"pl-smi\">Bindings</span><span class=\"pl-k\">.</span>createBooleanBinding(() <span class=\"pl-k\">-</span><span class=\"pl-k\">&gt;</span> {</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">if</span> (entry<span class=\"pl-k\">.</span>get() <span class=\"pl-k\">==</span> <span class=\"pl-c1\">null</span>)</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">                <span class=\"pl-k\">return</span> <span class=\"pl-c1\">false</span>;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">            <span class=\"pl-k\">else</span></td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">               <span class=\"pl-k\">return</span> entry<span class=\"pl-k\">.</span>get()<span class=\"pl-k\">.</span>getFields()<span class=\"pl-k\">.</span>stream()<span class=\"pl-k\">.</span>anyMatch(fields<span class=\"pl-k\">::</span>contains);</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        }, entry, entry<span class=\"pl-k\">.</span>getFieldsObserable());</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tobiasdiez", "createdAt": "2020-03-14T15:30:29Z", "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +31,18 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        // binding should be recreated on every right click\n+        // not sure why selectedEntries might be empty, see https://github.com/JabRef/jabref/issues/6085\n+        if (selectedEntries.isEmpty()) {\n+            return Bindings.createBooleanBinding(() -> false, selectedEntries);\n+        }\n+\n+        BibEntry entry = selectedEntries.get(0);", "originalCommit": "e6e27a9f623a8ac97a18a799e7676764a290e7b2", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "1bd27706ba0ba58c516b200308b3a1eef3da7b7b", "url": "https://github.com/JabRef/jabref/commit/1bd27706ba0ba58c516b200308b3a1eef3da7b7b", "message": "Update src/main/java/org/jabref/gui/actions/ActionHelper.java\n\nCo-Authored-By: Tobias Diez <tobiasdiez@gmx.de>", "committedDate": "2020-03-14T15:53:19Z", "type": "commit"}, {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e", "url": "https://github.com/JabRef/jabref/commit/058c7259878b6f0bcb3b4edc3656379297cb8f6e", "message": "Update ActionHelper.java", "committedDate": "2020-03-14T16:06:14Z", "type": "commit"}, {"oid": "058c7259878b6f0bcb3b4edc3656379297cb8f6e", "url": "https://github.com/JabRef/jabref/commit/058c7259878b6f0bcb3b4edc3656379297cb8f6e", "message": "Update ActionHelper.java", "committedDate": "2020-03-14T16:06:14Z", "type": "forcePushed"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392599875", "body": "I'm missing `entry.getFieldsObserable()` here. Is this intended?", "bodyText": "I'm missing entry.getFieldsObserable() here. Is this intended?", "bodyHTML": "<p dir=\"auto\">I'm missing <code>entry.getFieldsObserable()</code> here. Is this intended?</p>", "author": "calixtus", "createdAt": "2020-03-14T16:18:00Z", "path": "src/main/java/org/jabref/gui/actions/ActionHelper.java", "diffHunk": "@@ -30,10 +32,15 @@ public static BooleanExpression isFieldSetForSelectedEntry(Field field, StateMan\n     }\n \n     public static BooleanExpression isAnyFieldSetForSelectedEntry(List<Field> fields, StateManager stateManager) {\n-        BibEntry entry = stateManager.getSelectedEntries().get(0);\n-        return Bindings.createBooleanBinding(\n-                () -> entry.getFields().stream().anyMatch(fields::contains),\n-                entry.getFieldsObservable(),\n-                stateManager.getSelectedEntries());\n+        ObservableList<BibEntry> selectedEntries = stateManager.getSelectedEntries();\n+\n+        ObjectBinding<BibEntry> entry = Bindings.valueAt(selectedEntries, 0);\n+        return Bindings.createBooleanBinding(() -> {\n+            if (entry.get() == null) {\n+                return false;\n+            } else {\n+                return entry.get().getFields().stream().anyMatch(fields::contains);\n+            }\n+        }, selectedEntries);", "originalCommit": "058c7259878b6f0bcb3b4edc3656379297cb8f6e", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwMDUxOA==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392600518", "bodyText": "Good catch. This is a problem - it might not be available (that's why I need the complex code above). I'm not sure what side effects this might have, I need you guys' expertise here.", "author": "stefan-kolb", "createdAt": "2020-03-14T16:27:13Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMzkyNA==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392613924", "bodyText": "Not sure but maybe the following works:\nEasyBind.monadic(entry)\n             .flatMap(BibEntry:getFieldsObservable)\n             .map(entryFields -> entryFields.anyMatch(...))", "author": "tobiasdiez", "createdAt": "2020-03-14T19:43:11Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjY5NzczMA==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392697730", "bodyText": "When does this situation occur? I.e. the fields of the entry change dynamically?", "author": "stefan-kolb", "createdAt": "2020-03-15T18:05:56Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjcxNjM0MA==", "url": "https://github.com/JabRef/jabref/pull/6122#discussion_r392716340", "bodyText": "This binding should update in the case when the selected entry changes as well as when the fields of the currently selected entry change", "author": "tobiasdiez", "createdAt": "2020-03-15T21:51:24Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU5OTg3NQ=="}], "type": "inlineReview"}, {"oid": "9f3cf81fc74c7a39587bbf58fdcd737ab9373fea", "url": "https://github.com/JabRef/jabref/commit/9f3cf81fc74c7a39587bbf58fdcd737ab9373fea", "message": "Merge branch 'master' into fix-action-helper", "committedDate": "2020-03-29T23:51:19Z", "type": "commit"}, {"oid": "a2aa16fff1aabfc347aa523f236c8e515e241fec", "url": "https://github.com/JabRef/jabref/commit/a2aa16fff1aabfc347aa523f236c8e515e241fec", "message": "Fix binding", "committedDate": "2020-05-03T11:39:38Z", "type": "commit"}, {"oid": "e032d9d860bbcce6a913540673f56c83b2e87621", "url": "https://github.com/JabRef/jabref/commit/e032d9d860bbcce6a913540673f56c83b2e87621", "message": "Add changelog entry", "committedDate": "2020-05-03T11:44:30Z", "type": "commit"}]}