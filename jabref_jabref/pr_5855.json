{"pr_number": 5855, "pr_title": "Fix opening pdf with okular in linux (#5253)", "pr_author": "t-morales", "pr_createdAt": "2020-01-20T21:00:00Z", "pr_url": "https://github.com/JabRef/jabref/pull/5855", "timeline": [{"oid": "98edbfb02ac313821e3f787a025a71d64830dafc", "url": "https://github.com/JabRef/jabref/commit/98edbfb02ac313821e3f787a025a71d64830dafc", "message": "Fix opening pdf with okular in linux (#5253)", "committedDate": "2020-01-20T20:37:47Z", "type": "commit"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjA5Mg==", "url": "https://github.com/JabRef/jabref/pull/5855#discussion_r370962092", "body": "As @calixtus said, it would be nice if you could add a logging statement here:\r\nAdd `private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);` at the top of the class and then here `LOGGER.debug(\"Received output: \" + line)`.", "bodyText": "As @calixtus said, it would be nice if you could add a logging statement here:\nAdd private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class); at the top of the class and then here LOGGER.debug(\"Received output: \" + line).", "bodyHTML": "<p dir=\"auto\">As <a class=\"user-mention\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/calixtus/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/calixtus\">@calixtus</a> said, it would be nice if you could add a logging statement here:<br>\nAdd <code>private static final Logger LOGGER = LoggerFactory.getLogger(Linux.class);</code> at the top of the class and then here <code>LOGGER.debug(\"Received output: \" + line)</code>.</p>", "author": "tobiasdiez", "createdAt": "2020-01-25T23:21:54Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -30,7 +30,11 @@ public void openFile(String filePath, String fileType) throws IOException {\n             viewer = \"xdg-open\";\n         }\n         String[] cmdArray = { viewer, filePath };\n-        Runtime.getRuntime().exec(cmdArray);\n+        Process p;\n+        p = Runtime.getRuntime().exec(cmdArray);\n+        BufferedReader in = new BufferedReader(new InputStreamReader(p.getErrorStream()));\n+        String line;\n+        line = in.readLine();", "originalCommit": "98edbfb02ac313821e3f787a025a71d64830dafc", "replyToReviewId": null, "replies": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxODM3OA==", "url": "https://github.com/JabRef/jabref/pull/5855#discussion_r371018378", "bodyText": "OK. I have done the modifications. I had to add also the lines\nimport org.slf4j.Logger; import org.slf4j.LoggerFactory;\nBut I am not sure how I shall proceed now? How do I modify the fix I sent? A new pull request?\nThank your for your help", "author": "t-morales", "createdAt": "2020-01-26T18:01:51Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxODk5MA==", "url": "https://github.com/JabRef/jabref/pull/5855#discussion_r371018990", "bodyText": "You just commit the changes on your branch and then push them to your fork.\nthe PR will be updated automatically", "author": "Siedlerchr", "createdAt": "2020-01-26T18:12:15Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjA5Mg=="}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTAxOTcxMQ==", "url": "https://github.com/JabRef/jabref/pull/5855#discussion_r371019711", "bodyText": "OK. That is done. Thank you for your help!", "author": "t-morales", "createdAt": "2020-01-26T18:23:35Z", "replyToReviewId": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjA5Mg=="}], "type": "inlineReview"}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk2MjE4OQ==", "url": "https://github.com/JabRef/jabref/pull/5855#discussion_r370962189", "body": "In java you don't need to declare and assign variables separately. So the following works (and is slightly preferred): \r\n```suggestion\r\n        Process p = Runtime.getRuntime().exec(cmdArray);\r\n```", "bodyText": "In java you don't need to declare and assign variables separately. So the following works (and is slightly preferred):\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Process p;\n          \n          \n            \n                    Process p = Runtime.getRuntime().exec(cmdArray);", "bodyHTML": "<p dir=\"auto\">In java you don't need to declare and assign variables separately. So the following works (and is slightly preferred):</p>\n  <div class=\"my-2 border rounded-1 js-suggested-changes-blob diff-view js-check-bidi\" id=\"\">\n    <div class=\"f6 p-2 lh-condensed border-bottom d-flex\">\n      <div class=\"flex-auto flex-items-center color-fg-muted\">\n        Suggested change\n        <span class=\"tooltipped tooltipped-multiline tooltipped-s\" aria-label=\"This code change can be committed by users with write permissions.\">\n          <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-info hide-sm\">\n    <path fill-rule=\"evenodd\" d=\"M8 1.5a6.5 6.5 0 100 13 6.5 6.5 0 000-13zM0 8a8 8 0 1116 0A8 8 0 010 8zm6.5-.25A.75.75 0 017.25 7h1a.75.75 0 01.75.75v2.75h.25a.75.75 0 010 1.5h-2a.75.75 0 010-1.5h.25v-2h-.25a.75.75 0 01-.75-.75zM8 6a1 1 0 100-2 1 1 0 000 2z\"></path>\n</svg>\n        </span>\n      </div>\n    </div>\n    <div itemprop=\"text\" class=\"blob-wrapper data file\" style=\"margin: 0; border: none; overflow-y: visible; overflow-x: auto;\">\n      <table class=\"d-table tab-size mb-0 width-full\" data-paste-markdown-skip=\"\">\n          <tbody><tr class=\"border-0\">\n            <td class=\"blob-num blob-num-deletion text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-deletion js-blob-code-deletion blob-code-marker-deletion\">        <span class=\"pl-smi\">Process</span> p;</td>\n          </tr>\n          <tr class=\"border-0\">\n            <td class=\"blob-num blob-num-addition text-right border-0 px-2 py-1 lh-default\" data-line-number=\"\"></td>\n            <td class=\"border-0 px-2 py-1 blob-code-inner blob-code-addition js-blob-code-addition blob-code-marker-addition\">        <span class=\"pl-smi\">Process</span> p<span class=\"x x-first\"> </span><span class=\"pl-k x\">=</span><span class=\"x\"> </span><span class=\"pl-smi x\">Runtime</span><span class=\"pl-k x\">.</span><span class=\"x\">getRuntime()</span><span class=\"pl-k x\">.</span><span class=\"x x-last\">exec(cmdArray)</span>;</td>\n          </tr>\n      </tbody></table>\n    </div>\n    <div class=\"js-apply-changes\"></div>\n  </div>\n", "author": "tobiasdiez", "createdAt": "2020-01-25T23:23:46Z", "path": "src/main/java/org/jabref/gui/desktop/os/Linux.java", "diffHunk": "@@ -30,7 +30,11 @@ public void openFile(String filePath, String fileType) throws IOException {\n             viewer = \"xdg-open\";\n         }\n         String[] cmdArray = { viewer, filePath };\n-        Runtime.getRuntime().exec(cmdArray);\n+        Process p;", "originalCommit": "98edbfb02ac313821e3f787a025a71d64830dafc", "replyToReviewId": null, "replies": null, "type": "inlineReview"}, {"oid": "5b4af780f42a1bda71b8fa1599609b54466b3b3d", "url": "https://github.com/JabRef/jabref/commit/5b4af780f42a1bda71b8fa1599609b54466b3b3d", "message": "Fix opening pdf with okular in linux (#5253) stream ouput to Logger", "committedDate": "2020-01-26T17:57:26Z", "type": "commit"}, {"oid": "ff6da3724f85a94b26d27cc4eeb9c4253d55de48", "url": "https://github.com/JabRef/jabref/commit/ff6da3724f85a94b26d27cc4eeb9c4253d55de48", "message": "Fix checkstyle", "committedDate": "2020-01-26T18:07:37Z", "type": "commit"}]}